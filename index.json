{
  "api/index.html": {
    "href": "api/index.html",
    "title": "FluentMigrator API | FluentMigrator documentation",
    "keywords": "FluentMigrator API The most important part of the API is the migration runner . Getting started The starting point for every beginner of FluentMigrator is the Quickstart tutorial ."
  },
  "api/v2.x/FluentMigrator.AutoNameContext.html": {
    "href": "api/v2.x/FluentMigrator.AutoNameContext.html",
    "title": "Enum AutoNameContext | FluentMigrator documentation",
    "keywords": "Enum AutoNameContext Sets the context for the automatic name generation Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum AutoNameContext Fields Name Description EmbeddedResource The automatic name generation is for an embedded resource"
  },
  "api/v2.x/FluentMigrator.AutoReversingMigration.html": {
    "href": "api/v2.x/FluentMigrator.AutoReversingMigration.html",
    "title": "Class AutoReversingMigration | FluentMigrator documentation",
    "keywords": "Class AutoReversingMigration Inheritance Object MigrationBase AutoReversingMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoReversingMigration : MigrationBase, IMigration Methods Down() Declaration public sealed override void Down() Overrides MigrationBase.Down() GetDownExpressions(IMigrationContext) Declaration public override void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context Overrides MigrationBase.GetDownExpressions(IMigrationContext) Implements IMigration"
  },
  "api/v2.x/FluentMigrator.AutoScriptMigration.html": {
    "href": "api/v2.x/FluentMigrator.AutoScriptMigration.html",
    "title": "Class AutoScriptMigration | FluentMigrator documentation",
    "keywords": "Class AutoScriptMigration Inheritance Object MigrationBase AutoScriptMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoScriptMigration : MigrationBase, IMigration Methods Down() Declaration public sealed override void Down() Overrides MigrationBase.Down() Up() Declaration public sealed override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.html",
    "title": "Namespace FluentMigrator.Builders.Alter.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter.Column Interfaces IAlterColumnAsTypeOrInSchemaSyntax IAlterColumnAsTypeSyntax IAlterColumnOnTableSyntax IAlterColumnOptionOrForeignKeyCascadeSyntax IAlterColumnOptionSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax.html",
    "title": "Interface IAlterColumnAsTypeOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnAsTypeOrInSchemaSyntax Inherited Members IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsByte() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDate() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnAsTypeOrInSchemaSyntax : IAlterColumnAsTypeSyntax, IColumnTypeSyntax<IAlterColumnOptionSyntax>, IFluentSyntax Methods InSchema(String) Declaration IAlterColumnAsTypeSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IAlterColumnAsTypeSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeSyntax.html",
    "title": "Interface IAlterColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnAsTypeSyntax Inherited Members IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsByte() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDate() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnAsTypeSyntax : IColumnTypeSyntax<IAlterColumnOptionSyntax>, IFluentSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax.html",
    "title": "Interface IAlterColumnOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOnTableSyntax Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration IAlterColumnAsTypeOrInSchemaSyntax OnTable(string name) Parameters Type Name Description String name Returns Type Description IAlterColumnAsTypeOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionOrForeignKeyCascadeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionOrForeignKeyCascadeSyntax.html",
    "title": "Interface IAlterColumnOptionOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOptionOrForeignKeyCascadeSyntax Inherited Members IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOptionOrForeignKeyCascadeSyntax : IAlterColumnOptionSyntax, IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionSyntax.html",
    "title": "Interface IAlterColumnOptionSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOptionSyntax Inherited Members IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOptionSyntax : IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.html",
    "title": "Namespace FluentMigrator.Builders.Alter | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter Interfaces IAlterExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.IAlterExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.IAlterExpressionRoot.html",
    "title": "Interface IAlterExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IAlterExpressionRoot Namespace : FluentMigrator.Builders.Alter Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterExpressionRoot : IFluentSyntax Methods Column(String) Declaration IAlterColumnOnTableSyntax Column(string columnName) Parameters Type Name Description String columnName Returns Type Description IAlterColumnOnTableSyntax Table(String) Declaration IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.html",
    "title": "Namespace FluentMigrator.Builders.Alter.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter.Table Interfaces IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax IAlterTableAddColumnOrAlterColumnOrSchemaSyntax IAlterTableAddColumnOrAlterColumnSyntax IAlterTableColumnAsTypeSyntax IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax Inherited Members IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.InSchema(String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax : IAlterTableAddColumnOrAlterColumnOrSchemaSyntax, IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods WithDescription(String) Declaration IAlterTableAddColumnOrAlterColumnOrSchemaSyntax WithDescription(string description) Parameters Type Name Description String description Returns Type Description IAlterTableAddColumnOrAlterColumnOrSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax Inherited Members IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax : IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration IAlterTableAddColumnOrAlterColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IAlterTableAddColumnOrAlterColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnSyntax Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnSyntax : IFluentSyntax Methods AddColumn(String) Declaration IAlterTableColumnAsTypeSyntax AddColumn(string name) Parameters Type Name Description String name Returns Type Description IAlterTableColumnAsTypeSyntax AlterColumn(String) Declaration IAlterTableColumnAsTypeSyntax AlterColumn(string name) Parameters Type Name Description String name Returns Type Description IAlterTableColumnAsTypeSyntax ToSchema(String) Declaration void ToSchema(string name) Parameters Type Name Description String name"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnAsTypeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnAsTypeSyntax.html",
    "title": "Interface IAlterTableColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnAsTypeSyntax Inherited Members IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBinary() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBoolean() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsByte() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsCurrency() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDate() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTime() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDecimal() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDouble() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsGuid() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFloat() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt16() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt32() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt64() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsTime() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsXml() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnAsTypeSyntax : IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>, IFluentSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax.html",
    "title": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax Inherited Members IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.SetExistingRowsTo(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax : IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IAlterTableAddColumnOrAlterColumnSyntax, IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.html",
    "title": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax Inherited Members IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax : IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods SetExistingRowsTo(Object) The value to set against existing rows for the new column. Only used for creating columns, not altering them. Declaration IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax SetExistingRowsTo(object value) Parameters Type Name Description Object value Returns Type Description IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.html",
    "title": "Namespace FluentMigrator.Builders.Create.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Column Interfaces ICreateColumnAsTypeOrInSchemaSyntax ICreateColumnAsTypeSyntax ICreateColumnOnTableSyntax ICreateColumnOptionOrForeignKeyCascadeSyntax ICreateColumnOptionSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax.html",
    "title": "Interface ICreateColumnAsTypeOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnAsTypeOrInSchemaSyntax Inherited Members IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsByte() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDate() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnAsTypeOrInSchemaSyntax : ICreateColumnAsTypeSyntax, IColumnTypeSyntax<ICreateColumnOptionSyntax>, IFluentSyntax Methods InSchema(String) Declaration ICreateColumnAsTypeSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateColumnAsTypeSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeSyntax.html",
    "title": "Interface ICreateColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnAsTypeSyntax Inherited Members IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsByte() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDate() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnAsTypeSyntax : IColumnTypeSyntax<ICreateColumnOptionSyntax>, IFluentSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax.html",
    "title": "Interface ICreateColumnOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOnTableSyntax Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration ICreateColumnAsTypeOrInSchemaSyntax OnTable(string name) Parameters Type Name Description String name Returns Type Description ICreateColumnAsTypeOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionOrForeignKeyCascadeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionOrForeignKeyCascadeSyntax.html",
    "title": "Interface ICreateColumnOptionOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOptionOrForeignKeyCascadeSyntax Inherited Members ICreateColumnOptionSyntax.SetExistingRowsTo(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOptionOrForeignKeyCascadeSyntax : ICreateColumnOptionSyntax, IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax.html",
    "title": "Interface ICreateColumnOptionSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOptionSyntax Inherited Members IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOptionSyntax : IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Methods SetExistingRowsTo(Object) The value to set against existing rows for the new column. Declaration ICreateColumnOptionSyntax SetExistingRowsTo(object value) Parameters Type Name Description Object value Returns Type Description ICreateColumnOptionSyntax Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Create.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Constraint Interfaces ICreateConstraintColumnsSyntax ICreateConstraintOnTableSyntax ICreateConstraintOptionsSyntax ICreateConstraintWithSchemaOrColumnSyntax ICreateConstraintWithSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.html",
    "title": "Interface ICreateConstraintColumnsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintColumnsSyntax Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintColumnsSyntax Methods Column(String) Declaration ICreateConstraintOptionsSyntax Column(string columnName) Parameters Type Name Description String columnName Returns Type Description ICreateConstraintOptionsSyntax Columns(String[]) Declaration ICreateConstraintOptionsSyntax Columns(params string[] columnNames) Parameters Type Name Description String [] columnNames Returns Type Description ICreateConstraintOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax.html",
    "title": "Interface ICreateConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintOnTableSyntax Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintOnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration ICreateConstraintWithSchemaOrColumnSyntax OnTable(string tableName) Parameters Type Name Description String tableName Returns Type Description ICreateConstraintWithSchemaOrColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax.html",
    "title": "Interface ICreateConstraintOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintOptionsSyntax Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintOptionsSyntax : IFluentSyntax Extension Methods SqlAnywhereExtensions.Clustered(ICreateConstraintOptionsSyntax) SqlAnywhereExtensions.NonClustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.Clustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.NonClustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.Online(ICreateConstraintOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaOrColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaOrColumnSyntax.html",
    "title": "Interface ICreateConstraintWithSchemaOrColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintWithSchemaOrColumnSyntax Inherited Members ICreateConstraintColumnsSyntax.Column(String) ICreateConstraintColumnsSyntax.Columns(String[]) ICreateConstraintWithSchemaSyntax.WithSchema(String) Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintWithSchemaOrColumnSyntax : ICreateConstraintColumnsSyntax, ICreateConstraintWithSchemaSyntax, IFluentSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax.html",
    "title": "Interface ICreateConstraintWithSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintWithSchemaSyntax Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintWithSchemaSyntax : IFluentSyntax Methods WithSchema(String) Declaration ICreateConstraintColumnsSyntax WithSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateConstraintColumnsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.html",
    "title": "Namespace FluentMigrator.Builders.Create.ForeignKey | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.ForeignKey Interfaces ICreateForeignKeyCascadeSyntax ICreateForeignKeyForeignColumnOrInSchemaSyntax ICreateForeignKeyForeignColumnSyntax ICreateForeignKeyFromTableSyntax ICreateForeignKeyPrimaryColumnOrInSchemaSyntax ICreateForeignKeyPrimaryColumnSyntax ICreateForeignKeyToTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.html",
    "title": "Interface ICreateForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyCascadeSyntax Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyCascadeSyntax : IFluentSyntax Methods OnDelete(Rule) Declaration ICreateForeignKeyCascadeSyntax OnDelete(Rule rule) Parameters Type Name Description Rule rule Returns Type Description ICreateForeignKeyCascadeSyntax OnDeleteOrUpdate(Rule) Declaration void OnDeleteOrUpdate(Rule rule) Parameters Type Name Description Rule rule OnUpdate(Rule) Declaration ICreateForeignKeyCascadeSyntax OnUpdate(Rule rule) Parameters Type Name Description Rule rule Returns Type Description ICreateForeignKeyCascadeSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateForeignKeyForeignColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyForeignColumnOrInSchemaSyntax Inherited Members ICreateForeignKeyForeignColumnSyntax.ForeignColumn(String) ICreateForeignKeyForeignColumnSyntax.ForeignColumns(String[]) Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyForeignColumnOrInSchemaSyntax : ICreateForeignKeyForeignColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration ICreateForeignKeyForeignColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateForeignKeyForeignColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.html",
    "title": "Interface ICreateForeignKeyForeignColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyForeignColumnSyntax Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyForeignColumnSyntax : IFluentSyntax Methods ForeignColumn(String) Declaration ICreateForeignKeyToTableSyntax ForeignColumn(string column) Parameters Type Name Description String column Returns Type Description ICreateForeignKeyToTableSyntax ForeignColumns(String[]) Declaration ICreateForeignKeyToTableSyntax ForeignColumns(params string[] columns) Parameters Type Name Description String [] columns Returns Type Description ICreateForeignKeyToTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax.html",
    "title": "Interface ICreateForeignKeyFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyFromTableSyntax Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyFromTableSyntax : IFluentSyntax Methods FromTable(String) Declaration ICreateForeignKeyForeignColumnOrInSchemaSyntax FromTable(string table) Parameters Type Name Description String table Returns Type Description ICreateForeignKeyForeignColumnOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax Inherited Members ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumn(String) ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumns(String[]) Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax : ICreateForeignKeyPrimaryColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration ICreateForeignKeyPrimaryColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateForeignKeyPrimaryColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.html",
    "title": "Interface ICreateForeignKeyPrimaryColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyPrimaryColumnSyntax Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyPrimaryColumnSyntax : IFluentSyntax Methods PrimaryColumn(String) Declaration ICreateForeignKeyCascadeSyntax PrimaryColumn(string column) Parameters Type Name Description String column Returns Type Description ICreateForeignKeyCascadeSyntax PrimaryColumns(String[]) Declaration ICreateForeignKeyCascadeSyntax PrimaryColumns(params string[] columns) Parameters Type Name Description String [] columns Returns Type Description ICreateForeignKeyCascadeSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax.html",
    "title": "Interface ICreateForeignKeyToTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyToTableSyntax Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyToTableSyntax : IFluentSyntax Methods ToTable(String) Declaration ICreateForeignKeyPrimaryColumnOrInSchemaSyntax ToTable(string table) Parameters Type Name Description String table Returns Type Description ICreateForeignKeyPrimaryColumnOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.html",
    "title": "Namespace FluentMigrator.Builders.Create | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create Interfaces ICreateExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Create.ICreateExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.ICreateExpressionRoot.html",
    "title": "Interface ICreateExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface ICreateExpressionRoot Namespace : FluentMigrator.Builders.Create Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateExpressionRoot : IFluentSyntax Methods Column(String) Declaration ICreateColumnOnTableSyntax Column(string columnName) Parameters Type Name Description String columnName Returns Type Description ICreateColumnOnTableSyntax ForeignKey() Declaration ICreateForeignKeyFromTableSyntax ForeignKey() Returns Type Description ICreateForeignKeyFromTableSyntax ForeignKey(String) Declaration ICreateForeignKeyFromTableSyntax ForeignKey(string foreignKeyName) Parameters Type Name Description String foreignKeyName Returns Type Description ICreateForeignKeyFromTableSyntax Index() Declaration ICreateIndexForTableSyntax Index() Returns Type Description ICreateIndexForTableSyntax Index(String) Declaration ICreateIndexForTableSyntax Index(string indexName) Parameters Type Name Description String indexName Returns Type Description ICreateIndexForTableSyntax PrimaryKey() Declaration ICreateConstraintOnTableSyntax PrimaryKey() Returns Type Description ICreateConstraintOnTableSyntax PrimaryKey(String) Declaration ICreateConstraintOnTableSyntax PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName Returns Type Description ICreateConstraintOnTableSyntax Schema(String) Declaration ICreateSchemaOptionsSyntax Schema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateSchemaOptionsSyntax Sequence(String) Declaration ICreateSequenceInSchemaSyntax Sequence(string sequenceName) Parameters Type Name Description String sequenceName Returns Type Description ICreateSequenceInSchemaSyntax Table(String) Declaration ICreateTableWithColumnOrSchemaOrDescriptionSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description ICreateTableWithColumnOrSchemaOrDescriptionSyntax UniqueConstraint() Declaration ICreateConstraintOnTableSyntax UniqueConstraint() Returns Type Description ICreateConstraintOnTableSyntax UniqueConstraint(String) Declaration ICreateConstraintOnTableSyntax UniqueConstraint(string constraintName) Parameters Type Name Description String constraintName Returns Type Description ICreateConstraintOnTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.html",
    "title": "Namespace FluentMigrator.Builders.Create.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Index Interfaces ICreateIndexColumnOptionsSyntax ICreateIndexColumnUniqueOptionsSyntax ICreateIndexForTableSyntax ICreateIndexMoreColumnOptionsSyntax ICreateIndexNonKeyColumnSyntax ICreateIndexOnColumnOrInSchemaSyntax ICreateIndexOnColumnSyntax ICreateIndexOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.html",
    "title": "Interface ICreateIndexColumnOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexColumnOptionsSyntax Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexColumnOptionsSyntax : IFluentSyntax Methods Ascending() Declaration ICreateIndexMoreColumnOptionsSyntax Ascending() Returns Type Description ICreateIndexMoreColumnOptionsSyntax Descending() Declaration ICreateIndexMoreColumnOptionsSyntax Descending() Returns Type Description ICreateIndexMoreColumnOptionsSyntax Unique() Declaration ICreateIndexColumnUniqueOptionsSyntax Unique() Returns Type Description ICreateIndexColumnUniqueOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax.html",
    "title": "Interface ICreateIndexColumnUniqueOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexColumnUniqueOptionsSyntax Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexColumnUniqueOptionsSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Properties CurrentColumn Declaration IndexColumnDefinition CurrentColumn { get; } Property Value Type Description IndexColumnDefinition Extension Methods SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax) SqlServerExtensions.NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax.html",
    "title": "Interface ICreateIndexForTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexForTableSyntax Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexForTableSyntax : IFluentSyntax Methods OnTable(String) Declaration ICreateIndexOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName Returns Type Description ICreateIndexOnColumnOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax.html",
    "title": "Interface ICreateIndexMoreColumnOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexMoreColumnOptionsSyntax Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexMoreColumnOptionsSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Properties CurrentColumn Declaration IndexColumnDefinition CurrentColumn { get; } Property Value Type Description IndexColumnDefinition Extension Methods SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax) SqlServerExtensions.NullsDistinct(ICreateIndexMoreColumnOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax.html",
    "title": "Interface ICreateIndexNonKeyColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexNonKeyColumnSyntax Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public interface ICreateIndexNonKeyColumnSyntax Methods Include(String) Declaration ICreateIndexNonKeyColumnSyntax Include(string columnName) Parameters Type Name Description String columnName Returns Type Description ICreateIndexNonKeyColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateIndexOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOnColumnOrInSchemaSyntax Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOnColumnOrInSchemaSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration ICreateIndexOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateIndexOnColumnSyntax Extension Methods SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.html",
    "title": "Interface ICreateIndexOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOnColumnSyntax Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOnColumnSyntax : IFluentSyntax Methods OnColumn(String) Declaration ICreateIndexColumnOptionsSyntax OnColumn(string columnName) Parameters Type Name Description String columnName Returns Type Description ICreateIndexColumnOptionsSyntax WithOptions() Declaration ICreateIndexOptionsSyntax WithOptions() Returns Type Description ICreateIndexOptionsSyntax Extension Methods SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.html",
    "title": "Interface ICreateIndexOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOptionsSyntax Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOptionsSyntax : IFluentSyntax Methods Clustered() Declaration ICreateIndexOnColumnSyntax Clustered() Returns Type Description ICreateIndexOnColumnSyntax NonClustered() Declaration ICreateIndexOnColumnSyntax NonClustered() Returns Type Description ICreateIndexOnColumnSyntax Unique() Declaration ICreateIndexOnColumnSyntax Unique() Returns Type Description ICreateIndexOnColumnSyntax Extension Methods SqlAnywhereExtensions.UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) SqlAnywhereExtensions.UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) SqlServerExtensions.Include(ICreateIndexOptionsSyntax, String) SqlServerExtensions.UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) SqlServerExtensions.UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) SqlServerExtensions.Online(ICreateIndexOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Schema.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Create.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Schema Interfaces ICreateSchemaOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax.html",
    "title": "Interface ICreateSchemaOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSchemaOptionsSyntax Namespace : FluentMigrator.Builders.Create.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSchemaOptionsSyntax : IFluentSyntax Extension Methods SqlAnywhereExtensions.Password(ICreateSchemaOptionsSyntax, String)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Sequence.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Sequence.html",
    "title": "Namespace FluentMigrator.Builders.Create.Sequence | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Sequence Interfaces ICreateSequenceInSchemaSyntax ICreateSequenceSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax.html",
    "title": "Interface ICreateSequenceInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSequenceInSchemaSyntax Inherited Members ICreateSequenceSyntax.IncrementBy(Int64) ICreateSequenceSyntax.MinValue(Int64) ICreateSequenceSyntax.MaxValue(Int64) ICreateSequenceSyntax.StartWith(Int64) ICreateSequenceSyntax.Cache(Int64) ICreateSequenceSyntax.Cycle() Namespace : FluentMigrator.Builders.Create.Sequence Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSequenceInSchemaSyntax : ICreateSequenceSyntax, IFluentSyntax Methods InSchema(String) Declaration ICreateSequenceSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateSequenceSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.html",
    "title": "Interface ICreateSequenceSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSequenceSyntax Namespace : FluentMigrator.Builders.Create.Sequence Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSequenceSyntax : IFluentSyntax Methods Cache(Int64) Declaration ICreateSequenceSyntax Cache(long value) Parameters Type Name Description Int64 value Returns Type Description ICreateSequenceSyntax Cycle() Declaration ICreateSequenceSyntax Cycle() Returns Type Description ICreateSequenceSyntax IncrementBy(Int64) Declaration ICreateSequenceSyntax IncrementBy(long increment) Parameters Type Name Description Int64 increment Returns Type Description ICreateSequenceSyntax MaxValue(Int64) Declaration ICreateSequenceSyntax MaxValue(long maxValue) Parameters Type Name Description Int64 maxValue Returns Type Description ICreateSequenceSyntax MinValue(Int64) Declaration ICreateSequenceSyntax MinValue(long minValue) Parameters Type Name Description Int64 minValue Returns Type Description ICreateSequenceSyntax StartWith(Int64) Declaration ICreateSequenceSyntax StartWith(long startwith) Parameters Type Name Description Int64 startwith Returns Type Description ICreateSequenceSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.html",
    "title": "Namespace FluentMigrator.Builders.Create.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Table Interfaces ICreateTableColumnAsTypeSyntax ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax ICreateTableColumnOptionOrWithColumnSyntax ICreateTableWithColumnOrSchemaOrDescriptionSyntax ICreateTableWithColumnOrSchemaSyntax ICreateTableWithColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnAsTypeSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnAsTypeSyntax.html",
    "title": "Interface ICreateTableColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnAsTypeSyntax Inherited Members IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBinary() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBoolean() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsByte() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsCurrency() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDate() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTime() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDecimal() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDouble() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsGuid() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFloat() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt16() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt32() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt64() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsTime() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsXml() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnAsTypeSyntax : IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>, IFluentSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax.html",
    "title": "Interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax Inherited Members IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Identity() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Nullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.NotNullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String, String) ICreateTableWithColumnSyntax.WithColumn(String) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax : ICreateTableColumnOptionOrWithColumnSyntax, IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, ICreateTableWithColumnSyntax, IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, IFluentSyntax Extension Methods SqlServerExtensions.RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax.html",
    "title": "Interface ICreateTableColumnOptionOrWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnOptionOrWithColumnSyntax Inherited Members IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Identity() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Nullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.NotNullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String, String) ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnOptionOrWithColumnSyntax : IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, ICreateTableWithColumnSyntax, IFluentSyntax Extension Methods SqlServerExtensions.RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax.html",
    "title": "Interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax Inherited Members ICreateTableWithColumnOrSchemaSyntax.InSchema(String) ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax : ICreateTableWithColumnOrSchemaSyntax, ICreateTableWithColumnSyntax, IFluentSyntax Methods WithDescription(String) Declaration ICreateTableWithColumnOrSchemaSyntax WithDescription(string description) Parameters Type Name Description String description Returns Type Description ICreateTableWithColumnOrSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax.html",
    "title": "Interface ICreateTableWithColumnOrSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnOrSchemaSyntax Inherited Members ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnOrSchemaSyntax : ICreateTableWithColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration ICreateTableWithColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ICreateTableWithColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax.html",
    "title": "Interface ICreateTableWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnSyntax Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnSyntax : IFluentSyntax Methods WithColumn(String) Declaration ICreateTableColumnAsTypeSyntax WithColumn(string name) Parameters Type Name Description String name Returns Type Description ICreateTableColumnAsTypeSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Column.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Column.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Column Interfaces IDeleteColumnFromTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.html",
    "title": "Interface IDeleteColumnFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteColumnFromTableSyntax Namespace : FluentMigrator.Builders.Delete.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteColumnFromTableSyntax : IFluentSyntax Methods Column(String) Declaration IDeleteColumnFromTableSyntax Column(string columnName) Parameters Type Name Description String columnName Returns Type Description IDeleteColumnFromTableSyntax FromTable(String) Declaration IInSchemaSyntax FromTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Constraint.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Constraint Interfaces IDeleteConstraintColumnSyntax IDeleteConstraintInSchemaOptionsSyntax IDeleteConstraintOnTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.html",
    "title": "Interface IDeleteConstraintColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintColumnSyntax Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintColumnSyntax : IFluentSyntax Methods Column(String) Declaration void Column(string columnName) Parameters Type Name Description String columnName Columns(String[]) Declaration void Columns(params string[] columnNames) Parameters Type Name Description String [] columnNames"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax.html",
    "title": "Interface IDeleteConstraintInSchemaOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintInSchemaOptionsSyntax Inherited Members IDeleteConstraintColumnSyntax.Column(String) IDeleteConstraintColumnSyntax.Columns(String[]) Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintInSchemaOptionsSyntax : IDeleteConstraintColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration IDeleteConstraintInSchemaOptionsSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IDeleteConstraintInSchemaOptionsSyntax Extension Methods SqlServerExtensions.Online(IDeleteConstraintInSchemaOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax.html",
    "title": "Interface IDeleteConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintOnTableSyntax Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintOnTableSyntax : IFluentSyntax Methods FromTable(String) Declaration IDeleteConstraintInSchemaOptionsSyntax FromTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IDeleteConstraintInSchemaOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.html",
    "title": "Namespace FluentMigrator.Builders.Delete.DefaultConstraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.DefaultConstraint Interfaces IDeleteDefaultConstraintOnColumnOrInSchemaSyntax IDeleteDefaultConstraintOnColumnSyntax IDeleteDefaultConstraintOnTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax Inherited Members IDeleteDefaultConstraintOnColumnSyntax.OnColumn(String) Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax : IDeleteDefaultConstraintOnColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration IDeleteDefaultConstraintOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IDeleteDefaultConstraintOnColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnColumnSyntax Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnColumnSyntax : IFluentSyntax Methods OnColumn(String) Declaration void OnColumn(string columnName) Parameters Type Name Description String columnName"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnTableSyntax Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration IDeleteDefaultConstraintOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IDeleteDefaultConstraintOnColumnOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.html",
    "title": "Namespace FluentMigrator.Builders.Delete.ForeignKey | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.ForeignKey Interfaces IDeleteForeignKeyForeignColumnOrInSchemaSyntax IDeleteForeignKeyForeignColumnSyntax IDeleteForeignKeyFromTableSyntax IDeleteForeignKeyOnTableSyntax IDeleteForeignKeyPrimaryColumnSyntax IDeleteForeignKeyToTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax Inherited Members IDeleteForeignKeyForeignColumnSyntax.ForeignColumn(String) IDeleteForeignKeyForeignColumnSyntax.ForeignColumns(String[]) Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax : IDeleteForeignKeyForeignColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration IDeleteForeignKeyForeignColumnSyntax InSchema(string foreignSchemaName) Parameters Type Name Description String foreignSchemaName Returns Type Description IDeleteForeignKeyForeignColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.html",
    "title": "Interface IDeleteForeignKeyForeignColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyForeignColumnSyntax Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyForeignColumnSyntax : IFluentSyntax Methods ForeignColumn(String) Declaration IDeleteForeignKeyToTableSyntax ForeignColumn(string column) Parameters Type Name Description String column Returns Type Description IDeleteForeignKeyToTableSyntax ForeignColumns(String[]) Declaration IDeleteForeignKeyToTableSyntax ForeignColumns(params string[] columns) Parameters Type Name Description String [] columns Returns Type Description IDeleteForeignKeyToTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax.html",
    "title": "Interface IDeleteForeignKeyFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyFromTableSyntax Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyFromTableSyntax : IFluentSyntax Methods FromTable(String) Declaration IDeleteForeignKeyForeignColumnOrInSchemaSyntax FromTable(string foreignTableName) Parameters Type Name Description String foreignTableName Returns Type Description IDeleteForeignKeyForeignColumnOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax.html",
    "title": "Interface IDeleteForeignKeyOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyOnTableSyntax Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyOnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration IInSchemaSyntax OnTable(string foreignTableName) Parameters Type Name Description String foreignTableName Returns Type Description IInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.html",
    "title": "Interface IDeleteForeignKeyPrimaryColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyPrimaryColumnSyntax Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyPrimaryColumnSyntax : IFluentSyntax Methods PrimaryColumn(String) Declaration void PrimaryColumn(string column) Parameters Type Name Description String column PrimaryColumns(String[]) Declaration void PrimaryColumns(params string[] columns) Parameters Type Name Description String [] columns"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax.html",
    "title": "Interface IDeleteForeignKeyToTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyToTableSyntax Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyToTableSyntax : IFluentSyntax Methods ToTable(String) Declaration IDeleteForeignKeyPrimaryColumnSyntax ToTable(string table) Parameters Type Name Description String table Returns Type Description IDeleteForeignKeyPrimaryColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.html",
    "title": "Namespace FluentMigrator.Builders.Delete | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete Interfaces IDeleteDataOrInSchemaSyntax IDeleteDataSyntax IDeleteExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax.html",
    "title": "Interface IDeleteDataOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDataOrInSchemaSyntax Inherited Members IDeleteDataSyntax.Row(Object) IDeleteDataSyntax.AllRows() IDeleteDataSyntax.IsNull(String) Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDataOrInSchemaSyntax : IDeleteDataSyntax, IFluentSyntax Methods InSchema(String) Declaration IDeleteDataSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IDeleteDataSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.IDeleteDataSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.IDeleteDataSyntax.html",
    "title": "Interface IDeleteDataSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDataSyntax Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDataSyntax : IFluentSyntax Methods AllRows() Declaration void AllRows() IsNull(String) Declaration void IsNull(string columnName) Parameters Type Name Description String columnName Row(Object) Declaration IDeleteDataSyntax Row(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType Returns Type Description IDeleteDataSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.IDeleteExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.IDeleteExpressionRoot.html",
    "title": "Interface IDeleteExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IDeleteExpressionRoot Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteExpressionRoot : IFluentSyntax Methods Column(String) Declaration IDeleteColumnFromTableSyntax Column(string columnName) Parameters Type Name Description String columnName Returns Type Description IDeleteColumnFromTableSyntax DefaultConstraint() Deletes a default constraint from a column Declaration IDeleteDefaultConstraintOnTableSyntax DefaultConstraint() Returns Type Description IDeleteDefaultConstraintOnTableSyntax ForeignKey() Declaration IDeleteForeignKeyFromTableSyntax ForeignKey() Returns Type Description IDeleteForeignKeyFromTableSyntax ForeignKey(String) Declaration IDeleteForeignKeyOnTableSyntax ForeignKey(string foreignKeyName) Parameters Type Name Description String foreignKeyName Returns Type Description IDeleteForeignKeyOnTableSyntax FromTable(String) Declaration IDeleteDataOrInSchemaSyntax FromTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IDeleteDataOrInSchemaSyntax Index() Deletes an index, based on the naming convention in effect Declaration IDeleteIndexForTableSyntax Index() Returns Type Description IDeleteIndexForTableSyntax Index(String) Deletes an index Declaration IDeleteIndexForTableSyntax Index(string indexName) Parameters Type Name Description String indexName the name of the index Returns Type Description IDeleteIndexForTableSyntax PrimaryKey(String) Deletes a named Primary Key from a table Declaration IDeleteConstraintOnTableSyntax PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName Returns Type Description IDeleteConstraintOnTableSyntax Schema(String) Declaration void Schema(string schemaName) Parameters Type Name Description String schemaName Sequence(String) Declaration IInSchemaSyntax Sequence(string sequenceName) Parameters Type Name Description String sequenceName Returns Type Description IInSchemaSyntax Table(String) Declaration IInSchemaSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description IInSchemaSyntax UniqueConstraint() Deletes a named Unique Constraint from a table based on the naming convention in effect Declaration IDeleteConstraintOnTableSyntax UniqueConstraint() Returns Type Description IDeleteConstraintOnTableSyntax UniqueConstraint(String) Deletes a named Unique Constraint From a table Declaration IDeleteConstraintOnTableSyntax UniqueConstraint(string constraintName) Parameters Type Name Description String constraintName Returns Type Description IDeleteConstraintOnTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Index.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Index.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Index Interfaces IDeleteIndexForTableSyntax IDeleteIndexOnColumnOrInSchemaSyntax IDeleteIndexOnColumnSyntax IDeleteIndexOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.html",
    "title": "Interface IDeleteIndexForTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexForTableSyntax Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexForTableSyntax : IFluentSyntax Methods OnTable(String) Declaration IDeleteIndexOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IDeleteIndexOnColumnOrInSchemaSyntax WithOptions() Declaration IDeleteIndexOptionsSyntax WithOptions() Returns Type Description IDeleteIndexOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteIndexOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOnColumnOrInSchemaSyntax Inherited Members IDeleteIndexOnColumnSyntax.OnColumn(String) IDeleteIndexOnColumnSyntax.OnColumns(String[]) IDeleteIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOnColumnOrInSchemaSyntax : IDeleteIndexOnColumnSyntax, IFluentSyntax Methods InSchema(String) Declaration IDeleteIndexOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IDeleteIndexOnColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.html",
    "title": "Interface IDeleteIndexOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOnColumnSyntax Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOnColumnSyntax : IFluentSyntax Methods OnColumn(String) Declaration IDeleteIndexOptionsSyntax OnColumn(string columnName) Parameters Type Name Description String columnName Returns Type Description IDeleteIndexOptionsSyntax OnColumns(String[]) Declaration IDeleteIndexOptionsSyntax OnColumns(params string[] columnNames) Parameters Type Name Description String [] columnNames Returns Type Description IDeleteIndexOptionsSyntax WithOptions() Declaration IDeleteIndexOptionsSyntax WithOptions() Returns Type Description IDeleteIndexOptionsSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax.html",
    "title": "Interface IDeleteIndexOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOptionsSyntax Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOptionsSyntax : IFluentSyntax Extension Methods SqlServerExtensions.Online(IDeleteIndexOptionsSyntax, Boolean)"
  },
  "api/v2.x/FluentMigrator.Builders.Execute.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Execute.html",
    "title": "Namespace FluentMigrator.Builders.Execute | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Execute Interfaces IExecuteExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Execute.IExecuteExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Execute.IExecuteExpressionRoot.html",
    "title": "Interface IExecuteExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IExecuteExpressionRoot Namespace : FluentMigrator.Builders.Execute Assembly : FluentMigrator.Abstractions.dll Syntax public interface IExecuteExpressionRoot : IFluentSyntax Methods EmbeddedScript(String) Declaration void EmbeddedScript(string embeddedSqlScriptName) Parameters Type Name Description String embeddedSqlScriptName EmbeddedScript(String, IDictionary<String, String>) Declaration void EmbeddedScript(string embeddedSqlScriptName, IDictionary<string, string> parameters) Parameters Type Name Description String embeddedSqlScriptName IDictionary < String , String > parameters Script(String) Declaration void Script(string pathToSqlScript) Parameters Type Name Description String pathToSqlScript Script(String, IDictionary<String, String>) Declaration void Script(string pathToSqlScript, IDictionary<string, string> parameters) Parameters Type Name Description String pathToSqlScript IDictionary < String , String > parameters Sql(String) Declaration void Sql(string sqlStatement) Parameters Type Name Description String sqlStatement WithConnection(Action<IDbConnection, IDbTransaction>) Declaration void WithConnection(Action<IDbConnection, IDbTransaction> operation) Parameters Type Name Description Action < IDbConnection , IDbTransaction > operation"
  },
  "api/v2.x/FluentMigrator.Builders.html": {
    "href": "api/v2.x/FluentMigrator.Builders.html",
    "title": "Namespace FluentMigrator.Builders | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders Interfaces IColumnExpressionBuilder Describes common attributes for expression builders which have a current table/column. IColumnOptionSyntax<TNext, TNextFk> IColumnTypeSyntax<TNext> IForeignKeyCascadeSyntax<TNext, TNextFk> IInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.IColumnExpressionBuilder.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IColumnExpressionBuilder.html",
    "title": "Interface IColumnExpressionBuilder | FluentMigrator documentation",
    "keywords": "Interface IColumnExpressionBuilder Describes common attributes for expression builders which have a current table/column. Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnExpressionBuilder : IFluentSyntax Properties Column Declaration ColumnDefinition Column { get; } Property Value Type Description ColumnDefinition SchemaName Declaration string SchemaName { get; } Property Value Type Description String TableName Declaration string TableName { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Builders.IColumnOptionSyntax-2.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IColumnOptionSyntax-2.html",
    "title": "Interface IColumnOptionSyntax<TNext, TNextFk> | FluentMigrator documentation",
    "keywords": "Interface IColumnOptionSyntax<TNext, TNextFk> Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnOptionSyntax<TNext, TNextFk> : IFluentSyntax where TNext : IFluentSyntax where TNextFk : IFluentSyntax Type Parameters Name Description TNext TNextFk Methods ForeignKey() Declaration TNextFk ForeignKey() Returns Type Description TNextFk ForeignKey(String, String) Declaration TNextFk ForeignKey(string primaryTableName, string primaryColumnName) Parameters Type Name Description String primaryTableName String primaryColumnName Returns Type Description TNextFk ForeignKey(String, String, String) Declaration TNextFk ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName) Parameters Type Name Description String foreignKeyName String primaryTableName String primaryColumnName Returns Type Description TNextFk ForeignKey(String, String, String, String) Declaration TNextFk ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName) Parameters Type Name Description String foreignKeyName String primaryTableSchema String primaryTableName String primaryColumnName Returns Type Description TNextFk Identity() Declaration TNext Identity() Returns Type Description TNext Indexed() Declaration TNext Indexed() Returns Type Description TNext Indexed(String) Declaration TNext Indexed(string indexName) Parameters Type Name Description String indexName Returns Type Description TNext NotNullable() Declaration TNext NotNullable() Returns Type Description TNext Nullable() Declaration TNext Nullable() Returns Type Description TNext PrimaryKey() Declaration TNext PrimaryKey() Returns Type Description TNext PrimaryKey(String) Declaration TNext PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName Returns Type Description TNext ReferencedBy(String, String) Declaration TNextFk ReferencedBy(string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignTableName String foreignColumnName Returns Type Description TNextFk ReferencedBy(String, String, String) Declaration TNextFk ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignKeyName String foreignTableName String foreignColumnName Returns Type Description TNextFk ReferencedBy(String, String, String, String) Declaration TNextFk ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignKeyName String foreignTableSchema String foreignTableName String foreignColumnName Returns Type Description TNextFk Unique() Declaration TNext Unique() Returns Type Description TNext Unique(String) Declaration TNext Unique(string indexName) Parameters Type Name Description String indexName Returns Type Description TNext WithColumnDescription(String) Declaration TNext WithColumnDescription(string description) Parameters Type Name Description String description Returns Type Description TNext WithDefault(SystemMethods) Declaration TNext WithDefault(SystemMethods method) Parameters Type Name Description SystemMethods method Returns Type Description TNext WithDefaultValue(Object) Declaration TNext WithDefaultValue(object value) Parameters Type Name Description Object value Returns Type Description TNext Extension Methods SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v2.x/FluentMigrator.Builders.IColumnTypeSyntax-1.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IColumnTypeSyntax-1.html",
    "title": "Interface IColumnTypeSyntax<TNext> | FluentMigrator documentation",
    "keywords": "Interface IColumnTypeSyntax<TNext> Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnTypeSyntax<TNext> : IFluentSyntax where TNext : IFluentSyntax Type Parameters Name Description TNext Methods AsAnsiString() Declaration TNext AsAnsiString() Returns Type Description TNext AsAnsiString(Int32) Declaration TNext AsAnsiString(int size) Parameters Type Name Description Int32 size Returns Type Description TNext AsAnsiString(Int32, String) Declaration TNext AsAnsiString(int size, string collationName) Parameters Type Name Description Int32 size String collationName Returns Type Description TNext AsAnsiString(String) Declaration TNext AsAnsiString(string collationName) Parameters Type Name Description String collationName Returns Type Description TNext AsBinary() Declaration TNext AsBinary() Returns Type Description TNext AsBinary(Int32) Declaration TNext AsBinary(int size) Parameters Type Name Description Int32 size Returns Type Description TNext AsBoolean() Declaration TNext AsBoolean() Returns Type Description TNext AsByte() Declaration TNext AsByte() Returns Type Description TNext AsCurrency() Declaration TNext AsCurrency() Returns Type Description TNext AsCustom(String) Declaration TNext AsCustom(string customType) Parameters Type Name Description String customType Returns Type Description TNext AsDate() Declaration TNext AsDate() Returns Type Description TNext AsDateTime() Declaration TNext AsDateTime() Returns Type Description TNext AsDateTime2() Declaration TNext AsDateTime2() Returns Type Description TNext AsDateTimeOffset() Declaration TNext AsDateTimeOffset() Returns Type Description TNext AsDecimal() Declaration TNext AsDecimal() Returns Type Description TNext AsDecimal(Int32, Int32) Declaration TNext AsDecimal(int size, int precision) Parameters Type Name Description Int32 size Int32 precision Returns Type Description TNext AsDouble() Declaration TNext AsDouble() Returns Type Description TNext AsFixedLengthAnsiString(Int32) Declaration TNext AsFixedLengthAnsiString(int size) Parameters Type Name Description Int32 size Returns Type Description TNext AsFixedLengthAnsiString(Int32, String) Declaration TNext AsFixedLengthAnsiString(int size, string collationName) Parameters Type Name Description Int32 size String collationName Returns Type Description TNext AsFixedLengthString(Int32) Declaration TNext AsFixedLengthString(int size) Parameters Type Name Description Int32 size Returns Type Description TNext AsFixedLengthString(Int32, String) Declaration TNext AsFixedLengthString(int size, string collationName) Parameters Type Name Description Int32 size String collationName Returns Type Description TNext AsFloat() Declaration TNext AsFloat() Returns Type Description TNext AsGuid() Declaration TNext AsGuid() Returns Type Description TNext AsInt16() Declaration TNext AsInt16() Returns Type Description TNext AsInt32() Declaration TNext AsInt32() Returns Type Description TNext AsInt64() Declaration TNext AsInt64() Returns Type Description TNext AsString() Declaration TNext AsString() Returns Type Description TNext AsString(Int32) Declaration TNext AsString(int size) Parameters Type Name Description Int32 size Returns Type Description TNext AsString(Int32, String) Declaration TNext AsString(int size, string collationName) Parameters Type Name Description Int32 size String collationName Returns Type Description TNext AsString(String) Declaration TNext AsString(string collationName) Parameters Type Name Description String collationName Returns Type Description TNext AsTime() Declaration TNext AsTime() Returns Type Description TNext AsXml() Declaration TNext AsXml() Returns Type Description TNext AsXml(Int32) Declaration TNext AsXml(int size) Parameters Type Name Description Int32 size Returns Type Description TNext"
  },
  "api/v2.x/FluentMigrator.Builders.IfDatabase.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IfDatabase.html",
    "title": "Namespace FluentMigrator.Builders.IfDatabase | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.IfDatabase Interfaces IIfDatabaseExpressionRoot Defines fluent expressions that can be conditionally executed"
  },
  "api/v2.x/FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.html",
    "title": "Interface IIfDatabaseExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IIfDatabaseExpressionRoot Defines fluent expressions that can be conditionally executed Namespace : FluentMigrator.Builders.IfDatabase Assembly : FluentMigrator.Abstractions.dll Syntax public interface IIfDatabaseExpressionRoot Properties Alter Declaration IAlterExpressionRoot Alter { get; } Property Value Type Description IAlterExpressionRoot Create Declaration ICreateExpressionRoot Create { get; } Property Value Type Description ICreateExpressionRoot Delete Declaration IDeleteExpressionRoot Delete { get; } Property Value Type Description IDeleteExpressionRoot Execute Declaration IExecuteExpressionRoot Execute { get; } Property Value Type Description IExecuteExpressionRoot Insert Declaration IInsertExpressionRoot Insert { get; } Property Value Type Description IInsertExpressionRoot Rename Declaration IRenameExpressionRoot Rename { get; } Property Value Type Description IRenameExpressionRoot Schema Declaration ISchemaExpressionRoot Schema { get; } Property Value Type Description ISchemaExpressionRoot Update Declaration IUpdateExpressionRoot Update { get; } Property Value Type Description IUpdateExpressionRoot Methods Delegate(Action) Declaration void Delegate(Action delegation) Parameters Type Name Description Action delegation"
  },
  "api/v2.x/FluentMigrator.Builders.IForeignKeyCascadeSyntax-2.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IForeignKeyCascadeSyntax-2.html",
    "title": "Interface IForeignKeyCascadeSyntax<TNext, TNextFk> | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyCascadeSyntax<TNext, TNextFk> Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IForeignKeyCascadeSyntax<TNext, TNextFk> : IFluentSyntax where TNext : IFluentSyntax where TNextFk : IFluentSyntax Type Parameters Name Description TNext TNextFk Methods OnDelete(Rule) Declaration TNextFk OnDelete(Rule rule) Parameters Type Name Description Rule rule Returns Type Description TNextFk OnDeleteOrUpdate(Rule) Declaration TNext OnDeleteOrUpdate(Rule rule) Parameters Type Name Description Rule rule Returns Type Description TNext OnUpdate(Rule) Declaration TNextFk OnUpdate(Rule rule) Parameters Type Name Description Rule rule Returns Type Description TNextFk"
  },
  "api/v2.x/FluentMigrator.Builders.IInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.IInSchemaSyntax.html",
    "title": "Interface IInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IInSchemaSyntax Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInSchemaSyntax : IFluentSyntax Methods InSchema(String) Declaration void InSchema(string schemaName) Parameters Type Name Description String schemaName"
  },
  "api/v2.x/FluentMigrator.Builders.Insert.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Insert.html",
    "title": "Namespace FluentMigrator.Builders.Insert | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Insert Interfaces IInsertDataOrInSchemaSyntax IInsertDataSyntax IInsertExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax.html",
    "title": "Interface IInsertDataOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IInsertDataOrInSchemaSyntax Inherited Members IInsertDataSyntax.Row(Object) IInsertDataSyntax.Row(IDictionary<String, Object>) Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertDataOrInSchemaSyntax : IInsertDataSyntax, IFluentSyntax Methods InSchema(String) Declaration IInsertDataSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IInsertDataSyntax Extension Methods SqlServerExtensions.WithIdentityInsert(IInsertDataSyntax)"
  },
  "api/v2.x/FluentMigrator.Builders.Insert.IInsertDataSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Insert.IInsertDataSyntax.html",
    "title": "Interface IInsertDataSyntax | FluentMigrator documentation",
    "keywords": "Interface IInsertDataSyntax Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertDataSyntax : IFluentSyntax Methods Row(IDictionary<String, Object>) Declaration IInsertDataSyntax Row(IDictionary<string, object> data) Parameters Type Name Description IDictionary < String , Object > data Returns Type Description IInsertDataSyntax Row(Object) Declaration IInsertDataSyntax Row(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType Returns Type Description IInsertDataSyntax Extension Methods SqlServerExtensions.WithIdentityInsert(IInsertDataSyntax)"
  },
  "api/v2.x/FluentMigrator.Builders.Insert.IInsertExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Insert.IInsertExpressionRoot.html",
    "title": "Interface IInsertExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IInsertExpressionRoot Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertExpressionRoot : IFluentSyntax Methods IntoTable(String) Declaration IInsertDataOrInSchemaSyntax IntoTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IInsertDataOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Column.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Column.html",
    "title": "Namespace FluentMigrator.Builders.Rename.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename.Column Interfaces IRenameColumnToOrInSchemaSyntax IRenameColumnToSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax.html",
    "title": "Interface IRenameColumnToOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnToOrInSchemaSyntax Inherited Members IRenameColumnToSyntax.To(String) Namespace : FluentMigrator.Builders.Rename.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnToOrInSchemaSyntax : IRenameColumnToSyntax, IFluentSyntax Methods InSchema(String) Declaration IRenameColumnToSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IRenameColumnToSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax.html",
    "title": "Interface IRenameColumnToSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnToSyntax Namespace : FluentMigrator.Builders.Rename.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnToSyntax : IFluentSyntax Methods To(String) Declaration void To(string name) Parameters Type Name Description String name"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.html",
    "title": "Namespace FluentMigrator.Builders.Rename | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename Interfaces IRenameColumnTableSyntax IRenameExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.IRenameColumnTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.IRenameColumnTableSyntax.html",
    "title": "Interface IRenameColumnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnTableSyntax Namespace : FluentMigrator.Builders.Rename Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnTableSyntax : IFluentSyntax Methods OnTable(String) Declaration IRenameColumnToOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName Returns Type Description IRenameColumnToOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.IRenameExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.IRenameExpressionRoot.html",
    "title": "Interface IRenameExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IRenameExpressionRoot Namespace : FluentMigrator.Builders.Rename Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameExpressionRoot : IFluentSyntax Methods Column(String) Declaration IRenameColumnTableSyntax Column(string oldName) Parameters Type Name Description String oldName Returns Type Description IRenameColumnTableSyntax Table(String) Declaration IRenameTableToOrInSchemaSyntax Table(string oldName) Parameters Type Name Description String oldName Returns Type Description IRenameTableToOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Table.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Table.html",
    "title": "Namespace FluentMigrator.Builders.Rename.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename.Table Interfaces IRenameTableToOrInSchemaSyntax IRenameTableToSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax.html",
    "title": "Interface IRenameTableToOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameTableToOrInSchemaSyntax Inherited Members IRenameTableToSyntax.To(String) Namespace : FluentMigrator.Builders.Rename.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameTableToOrInSchemaSyntax : IRenameTableToSyntax, IFluentSyntax Methods InSchema(String) Declaration IRenameTableToSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IRenameTableToSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax.html",
    "title": "Interface IRenameTableToSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameTableToSyntax Namespace : FluentMigrator.Builders.Rename.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameTableToSyntax : IFluentSyntax Methods To(String) Declaration IInSchemaSyntax To(string name) Parameters Type Name Description String name Returns Type Description IInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Column.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Column.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Column Interfaces ISchemaColumnSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax.html",
    "title": "Interface ISchemaColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaColumnSyntax Namespace : FluentMigrator.Builders.Schema.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaColumnSyntax : IFluentSyntax Methods Exists() Declaration bool Exists() Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Constraint.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Constraint Interfaces ISchemaConstraintSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax.html",
    "title": "Interface ISchemaConstraintSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaConstraintSyntax Namespace : FluentMigrator.Builders.Schema.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaConstraintSyntax : IFluentSyntax Methods Exists() Declaration bool Exists() Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema Interfaces ISchemaExpressionRoot"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Index.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Index.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Index Interfaces ISchemaIndexSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax.html",
    "title": "Interface ISchemaIndexSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaIndexSyntax Namespace : FluentMigrator.Builders.Schema.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaIndexSyntax : IFluentSyntax Methods Exists() Declaration bool Exists() Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.ISchemaExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.ISchemaExpressionRoot.html",
    "title": "Interface ISchemaExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface ISchemaExpressionRoot Namespace : FluentMigrator.Builders.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaExpressionRoot : IFluentSyntax Methods Schema(String) Declaration ISchemaSchemaSyntax Schema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description ISchemaSchemaSyntax Table(String) Declaration ISchemaTableSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description ISchemaTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Schema.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Schema Interfaces ISchemaSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.html",
    "title": "Interface ISchemaSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaSchemaSyntax Namespace : FluentMigrator.Builders.Schema.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaSchemaSyntax : IFluentSyntax Methods Exists() Declaration bool Exists() Returns Type Description Boolean Table(String) Declaration ISchemaTableSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description ISchemaTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Table.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Table.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Table Interfaces ISchemaTableSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.html",
    "title": "Interface ISchemaTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaTableSyntax Namespace : FluentMigrator.Builders.Schema.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaTableSyntax Methods Column(String) Declaration ISchemaColumnSyntax Column(string column) Parameters Type Name Description String column Returns Type Description ISchemaColumnSyntax Constraint(String) Declaration ISchemaConstraintSyntax Constraint(string constraintName) Parameters Type Name Description String constraintName Returns Type Description ISchemaConstraintSyntax Exists() Declaration bool Exists() Returns Type Description Boolean Index(String) Declaration ISchemaIndexSyntax Index(string indexName) Parameters Type Name Description String indexName Returns Type Description ISchemaIndexSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Update.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Update.html",
    "title": "Namespace FluentMigrator.Builders.Update | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Update Interfaces IUpdateExpressionRoot IUpdateSetOrInSchemaSyntax IUpdateSetSyntax IUpdateWhereSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Update.IUpdateExpressionRoot.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Update.IUpdateExpressionRoot.html",
    "title": "Interface IUpdateExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IUpdateExpressionRoot Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateExpressionRoot : IFluentSyntax Methods Table(String) Declaration IUpdateSetOrInSchemaSyntax Table(string tableName) Parameters Type Name Description String tableName Returns Type Description IUpdateSetOrInSchemaSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax.html",
    "title": "Interface IUpdateSetOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateSetOrInSchemaSyntax Inherited Members IUpdateSetSyntax.Set(Object) Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateSetOrInSchemaSyntax : IUpdateSetSyntax, IFluentSyntax Methods InSchema(String) Declaration IUpdateSetSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName Returns Type Description IUpdateSetSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Update.IUpdateSetSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Update.IUpdateSetSyntax.html",
    "title": "Interface IUpdateSetSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateSetSyntax Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateSetSyntax : IFluentSyntax Methods Set(Object) Declaration IUpdateWhereSyntax Set(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType Returns Type Description IUpdateWhereSyntax"
  },
  "api/v2.x/FluentMigrator.Builders.Update.IUpdateWhereSyntax.html": {
    "href": "api/v2.x/FluentMigrator.Builders.Update.IUpdateWhereSyntax.html",
    "title": "Interface IUpdateWhereSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateWhereSyntax Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateWhereSyntax : IFluentSyntax Methods AllRows() Declaration void AllRows() Where(Object) Declaration void Where(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType"
  },
  "api/v2.x/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html",
    "title": "Class DatabaseOperationNotSupportedException | FluentMigrator documentation",
    "keywords": "Class DatabaseOperationNotSupportedException Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DatabaseOperationNotSupportedException : FluentMigratorException, _Exception, ISerializable Constructors DatabaseOperationNotSupportedException() Declaration public DatabaseOperationNotSupportedException() DatabaseOperationNotSupportedException(SerializationInfo, StreamingContext) Declaration public DatabaseOperationNotSupportedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DatabaseOperationNotSupportedException(String) Declaration public DatabaseOperationNotSupportedException(string message) Parameters Type Name Description String message DatabaseOperationNotSupportedException(String, Exception) Declaration public DatabaseOperationNotSupportedException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v2.x/FluentMigrator.Exceptions.DuplicateMigrationException.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.DuplicateMigrationException.html",
    "title": "Class DuplicateMigrationException | FluentMigrator documentation",
    "keywords": "Class DuplicateMigrationException Inheritance Object Exception FluentMigratorException DuplicateMigrationException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DuplicateMigrationException : FluentMigratorException, _Exception, ISerializable Constructors DuplicateMigrationException() Declaration public DuplicateMigrationException() DuplicateMigrationException(SerializationInfo, StreamingContext) Declaration public DuplicateMigrationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DuplicateMigrationException(String) Declaration public DuplicateMigrationException(string message) Parameters Type Name Description String message DuplicateMigrationException(String, Exception) Declaration public DuplicateMigrationException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v2.x/FluentMigrator.Exceptions.FluentMigratorException.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.FluentMigratorException.html",
    "title": "Class FluentMigratorException | FluentMigrator documentation",
    "keywords": "Class FluentMigratorException Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException DuplicateMigrationException ProcessorFactoryNotFoundException UndeterminableConnectionException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public abstract class FluentMigratorException : Exception, _Exception, ISerializable Constructors FluentMigratorException() Declaration protected FluentMigratorException() FluentMigratorException(SerializationInfo, StreamingContext) Declaration protected FluentMigratorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context FluentMigratorException(String) Declaration protected FluentMigratorException(string message) Parameters Type Name Description String message FluentMigratorException(String, Exception) Declaration protected FluentMigratorException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v2.x/FluentMigrator.Exceptions.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.html",
    "title": "Namespace FluentMigrator.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Exceptions Classes DatabaseOperationNotSupportedException DuplicateMigrationException FluentMigratorException ProcessorFactoryNotFoundException UndeterminableConnectionException"
  },
  "api/v2.x/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html",
    "title": "Class ProcessorFactoryNotFoundException | FluentMigrator documentation",
    "keywords": "Class ProcessorFactoryNotFoundException Inheritance Object Exception FluentMigratorException ProcessorFactoryNotFoundException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class ProcessorFactoryNotFoundException : FluentMigratorException, _Exception, ISerializable Constructors ProcessorFactoryNotFoundException() Declaration public ProcessorFactoryNotFoundException() ProcessorFactoryNotFoundException(SerializationInfo, StreamingContext) Declaration public ProcessorFactoryNotFoundException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context ProcessorFactoryNotFoundException(String) Declaration public ProcessorFactoryNotFoundException(string message) Parameters Type Name Description String message ProcessorFactoryNotFoundException(String, Exception) Declaration public ProcessorFactoryNotFoundException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v2.x/FluentMigrator.Exceptions.UndeterminableConnectionException.html": {
    "href": "api/v2.x/FluentMigrator.Exceptions.UndeterminableConnectionException.html",
    "title": "Class UndeterminableConnectionException | FluentMigrator documentation",
    "keywords": "Class UndeterminableConnectionException Inheritance Object Exception FluentMigratorException UndeterminableConnectionException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class UndeterminableConnectionException : FluentMigratorException, _Exception, ISerializable Constructors UndeterminableConnectionException() Declaration public UndeterminableConnectionException() UndeterminableConnectionException(SerializationInfo, StreamingContext) Declaration public UndeterminableConnectionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context UndeterminableConnectionException(String) Declaration public UndeterminableConnectionException(string message) Parameters Type Name Description String message UndeterminableConnectionException(String, Exception) Declaration public UndeterminableConnectionException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v2.x/FluentMigrator.ExplicitUnicodeString.html": {
    "href": "api/v2.x/FluentMigrator.ExplicitUnicodeString.html",
    "title": "Class ExplicitUnicodeString | FluentMigrator documentation",
    "keywords": "Class ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Inheritance Object ExplicitUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete(\"Use normal CLR strings instead, as they will be formatted to SQL Server Unicode strings\")] public class ExplicitUnicodeString Constructors ExplicitUnicodeString(String) Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Declaration public ExplicitUnicodeString(string text) Parameters Type Name Description String text Unicode string Properties Text Gets the text of the unicode string literal Declaration public string Text { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/v2.x/FluentMigrator.Expressions.AlterColumnExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.AlterColumnExpression.html",
    "title": "Class AlterColumnExpression | FluentMigrator documentation",
    "keywords": "Class AlterColumnExpression Inheritance Object MigrationExpressionBase AlterColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Constructors AlterColumnExpression() Declaration public AlterColumnExpression() Properties Column Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html",
    "title": "Class AlterDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class AlterDefaultConstraintExpression Inheritance Object MigrationExpressionBase AlterDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties ColumnName Declaration public virtual string ColumnName { get; set; } Property Value Type Description String DefaultValue Declaration public virtual object DefaultValue { get; set; } Property Value Type Description Object SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.AlterSchemaExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.AlterSchemaExpression.html",
    "title": "Class AlterSchemaExpression | FluentMigrator documentation",
    "keywords": "Class AlterSchemaExpression Inheritance Object MigrationExpressionBase AlterSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties DestinationSchemaName Declaration public virtual string DestinationSchemaName { get; set; } Property Value Type Description String SourceSchemaName Declaration public virtual string SourceSchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.AlterTableExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.AlterTableExpression.html",
    "title": "Class AlterTableExpression | FluentMigrator documentation",
    "keywords": "Class AlterTableExpression Inheritance Object MigrationExpressionBase AlterTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableDescription Declaration public virtual string TableDescription { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateColumnExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateColumnExpression.html",
    "title": "Class CreateColumnExpression | FluentMigrator documentation",
    "keywords": "Class CreateColumnExpression Inheritance Object MigrationExpressionBase CreateColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression Properties Column Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations IColumnsExpression.Columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateConstraintExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateConstraintExpression.html",
    "title": "Class CreateConstraintExpression | FluentMigrator documentation",
    "keywords": "Class CreateConstraintExpression Inheritance Object MigrationExpressionBase CreateConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression Constructors CreateConstraintExpression(ConstraintType) Initializes a new instance of the CreateConstraintExpression class. Declaration public CreateConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Constraint Declaration public virtual ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateForeignKeyExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateForeignKeyExpression.html",
    "title": "Class CreateForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class CreateForeignKeyExpression Inheritance Object MigrationExpressionBase CreateForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression Properties ForeignKey Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated IForeignKeyExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateIndexExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateIndexExpression.html",
    "title": "Class CreateIndexExpression | FluentMigrator documentation",
    "keywords": "Class CreateIndexExpression Inheritance Object MigrationExpressionBase CreateIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Index Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateSchemaExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateSchemaExpression.html",
    "title": "Class CreateSchemaExpression | FluentMigrator documentation",
    "keywords": "Class CreateSchemaExpression Inheritance Object MigrationExpressionBase CreateSchemaExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateSequenceExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateSequenceExpression.html",
    "title": "Class CreateSequenceExpression | FluentMigrator documentation",
    "keywords": "Class CreateSequenceExpression Inheritance Object MigrationExpressionBase CreateSequenceExpression Implements IMigrationExpression ICanBeValidated ISequenceExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISequenceExpression Properties Sequence Declaration public virtual SequenceDefinition Sequence { get; set; } Property Value Type Description SequenceDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISequenceExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.CreateTableExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.CreateTableExpression.html",
    "title": "Class CreateTableExpression | FluentMigrator documentation",
    "keywords": "Class CreateTableExpression Inheritance Object MigrationExpressionBase CreateTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression Properties Columns Declaration public virtual IList<ColumnDefinition> Columns { get; set; } Property Value Type Description IList < ColumnDefinition > SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableDescription Declaration public virtual string TableDescription { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations IColumnsExpression.Columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteColumnExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteColumnExpression.html",
    "title": "Class DeleteColumnExpression | FluentMigrator documentation",
    "keywords": "Class DeleteColumnExpression Inheritance Object MigrationExpressionBase DeleteColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Constructors DeleteColumnExpression() Declaration public DeleteColumnExpression() Properties ColumnNames Declaration public ICollection<string> ColumnNames { get; set; } Property Value Type Description ICollection < String > SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteConstraintExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteConstraintExpression.html",
    "title": "Class DeleteConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteConstraintExpression Inheritance Object MigrationExpressionBase DeleteConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression Constructors DeleteConstraintExpression(ConstraintType) Initializes a new instance of the DeleteConstraintExpression class. Declaration public DeleteConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Constraint Declaration public ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteDataExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteDataExpression.html",
    "title": "Class DeleteDataExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDataExpression Inheritance Object DeleteDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDataExpression : IMigrationExpression, ICanBeValidated, ISchemaExpression Properties IsAllRows Declaration public virtual bool IsAllRows { get; set; } Property Value Type Description Boolean Rows Declaration public List<DeletionDataDefinition> Rows { get; } Property Value Type Description List < DeletionDataDefinition > SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors ExecuteWith(IMigrationProcessor) Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Reverse() Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html",
    "title": "Class DeleteDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDefaultConstraintExpression Inheritance Object MigrationExpressionBase DeleteDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties ColumnName Declaration public virtual string ColumnName { get; set; } Property Value Type Description String SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteForeignKeyExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteForeignKeyExpression.html",
    "title": "Class DeleteForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class DeleteForeignKeyExpression Inheritance Object MigrationExpressionBase DeleteForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression Properties ForeignKey Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated IForeignKeyExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteIndexExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteIndexExpression.html",
    "title": "Class DeleteIndexExpression | FluentMigrator documentation",
    "keywords": "Class DeleteIndexExpression Inheritance Object MigrationExpressionBase DeleteIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Index Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteSchemaExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteSchemaExpression.html",
    "title": "Class DeleteSchemaExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSchemaExpression Inheritance Object MigrationExpressionBase DeleteSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteSequenceExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteSequenceExpression.html",
    "title": "Class DeleteSequenceExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSequenceExpression Inheritance Object MigrationExpressionBase DeleteSequenceExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String SequenceName Declaration public virtual string SequenceName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.DeleteTableExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.DeleteTableExpression.html",
    "title": "Class DeleteTableExpression | FluentMigrator documentation",
    "keywords": "Class DeleteTableExpression Inheritance Object MigrationExpressionBase DeleteTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html",
    "title": "Class ExecuteEmbeddedSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteEmbeddedSqlScriptExpression Inheritance Object MigrationExpressionBase ExecuteEmbeddedSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteEmbeddedSqlScriptExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties MigrationAssemblies Declaration public IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection Parameters Gets or sets parameters to be replaced before script execution Declaration public IDictionary<string, string> Parameters { get; set; } Property Value Type Description IDictionary < String , String > SqlScript Declaration public string SqlScript { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) FindResourceName(String) Declaration protected virtual ManifestResourceNameWithAssembly[] FindResourceName(string sqlScript) Parameters Type Name Description String sqlScript Returns Type Description ManifestResourceNameWithAssembly [] GetQualifiedResourcePath() Declaration protected virtual ManifestResourceNameWithAssembly GetQualifiedResourcePath() Returns Type Description ManifestResourceNameWithAssembly NewNotFoundException(String) Declaration protected Exception NewNotFoundException(string sqlScript) Parameters Type Name Description String sqlScript Returns Type Description Exception NewNoUniqueResourceException(String, IEnumerable<ManifestResourceNameWithAssembly>) Declaration protected Exception NewNoUniqueResourceException(string sqlScript, IEnumerable<ManifestResourceNameWithAssembly> foundResources) Parameters Type Name Description String sqlScript IEnumerable < ManifestResourceNameWithAssembly > foundResources Returns Type Description Exception ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html",
    "title": "Class ExecuteSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlScriptExpression Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpression Implements IMigrationExpression ICanBeValidated IFileSystemExpression Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlScriptExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IFileSystemExpression Properties Parameters Gets or sets parameters to be replaced before script execution Declaration public IDictionary<string, string> Parameters { get; set; } Property Value Type Description IDictionary < String , String > RootPath Declaration public string RootPath { get; set; } Property Value Type Description String SqlScript Declaration public string SqlScript { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated IFileSystemExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html",
    "title": "Class ExecuteSqlStatementExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlStatementExpression Inheritance Object MigrationExpressionBase ExecuteSqlStatementExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlStatementExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties SqlStatement Declaration public virtual string SqlStatement { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.html",
    "title": "Namespace FluentMigrator.Expressions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Expressions Classes AlterColumnExpression AlterDefaultConstraintExpression AlterSchemaExpression AlterTableExpression CreateColumnExpression CreateConstraintExpression CreateForeignKeyExpression CreateIndexExpression CreateSchemaExpression CreateSequenceExpression CreateTableExpression DeleteColumnExpression DeleteConstraintExpression DeleteDataExpression DeleteDefaultConstraintExpression DeleteForeignKeyExpression DeleteIndexExpression DeleteSchemaExpression DeleteSequenceExpression DeleteTableExpression ExecuteEmbeddedSqlScriptExpression ExecuteSqlScriptExpression ExecuteSqlStatementExpression InsertDataExpression MigrationExpressionBase PerformDBOperationExpression RenameColumnExpression RenameTableExpression UpdateDataExpression Interfaces IAutoNameExpression The expression requires an automatically generated name IColumnsExpression Opt-in into columns conventions IConstraintExpression Opt-in into constraint expression conventions IFileSystemExpression Opt-in into the file system convention IForeignKeyExpression Opt-in into the foreign key expressions conventions IIndexExpression Opt-in into the index expression conventions IMigrationExpression ISchemaExpression Opt-in into the schema expression convention ISequenceExpression Opt-in into the sequence expression conventions"
  },
  "api/v2.x/FluentMigrator.Expressions.IAutoNameExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IAutoNameExpression.html",
    "title": "Interface IAutoNameExpression | FluentMigrator documentation",
    "keywords": "Interface IAutoNameExpression The expression requires an automatically generated name Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAutoNameExpression Properties AutoNameContext Gets or sets the context in which the automatically generated name gets used Declaration AutoNameContext AutoNameContext { get; } Property Value Type Description AutoNameContext AutoNames Gets or sets the automatically generated names Declaration IList<string> AutoNames { get; set; } Property Value Type Description IList < String > DatabaseNames Gets the database names Declaration IList<string> DatabaseNames { get; } Property Value Type Description IList < String > Direction Gets the direction of the migration Declaration MigrationDirection Direction { get; } Property Value Type Description MigrationDirection MigrationType Gets the type of the migration object Declaration Type MigrationType { get; } Property Value Type Description Type"
  },
  "api/v2.x/FluentMigrator.Expressions.IColumnsExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IColumnsExpression.html",
    "title": "Interface IColumnsExpression | FluentMigrator documentation",
    "keywords": "Interface IColumnsExpression Opt-in into columns conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnsExpression Properties Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> Columns { get; } Property Value Type Description IEnumerable < ColumnDefinition > TableName Gets the table name Declaration string TableName { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Expressions.IConstraintExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IConstraintExpression.html",
    "title": "Interface IConstraintExpression | FluentMigrator documentation",
    "keywords": "Interface IConstraintExpression Opt-in into constraint expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IConstraintExpression Properties Constraint Gets the constraint definition Declaration ConstraintDefinition Constraint { get; } Property Value Type Description ConstraintDefinition"
  },
  "api/v2.x/FluentMigrator.Expressions.IFileSystemExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IFileSystemExpression.html",
    "title": "Interface IFileSystemExpression | FluentMigrator documentation",
    "keywords": "Interface IFileSystemExpression Opt-in into the file system convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IFileSystemExpression Properties RootPath Gets or sets the root path (working directory) Declaration string RootPath { get; set; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Expressions.IForeignKeyExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IForeignKeyExpression.html",
    "title": "Interface IForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyExpression Opt-in into the foreign key expressions conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IForeignKeyExpression Properties ForeignKey Gets the foreign key defintion Declaration ForeignKeyDefinition ForeignKey { get; } Property Value Type Description ForeignKeyDefinition"
  },
  "api/v2.x/FluentMigrator.Expressions.IIndexExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IIndexExpression.html",
    "title": "Interface IIndexExpression | FluentMigrator documentation",
    "keywords": "Interface IIndexExpression Opt-in into the index expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IIndexExpression Properties Index Gets the index definition Declaration IndexDefinition Index { get; } Property Value Type Description IndexDefinition"
  },
  "api/v2.x/FluentMigrator.Expressions.IMigrationExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.IMigrationExpression.html",
    "title": "Interface IMigrationExpression | FluentMigrator documentation",
    "keywords": "Interface IMigrationExpression Inherited Members ICanBeValidated.CollectValidationErrors(ICollection<String>) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationExpression : ICanBeValidated Methods ExecuteWith(IMigrationProcessor) Declaration void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Reverse() Declaration IMigrationExpression Reverse() Returns Type Description IMigrationExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.InsertDataExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.InsertDataExpression.html",
    "title": "Class InsertDataExpression | FluentMigrator documentation",
    "keywords": "Class InsertDataExpression Inheritance Object InsertDataExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertDataExpression : IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, ISchemaExpression Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Rows Declaration public List<InsertionDataDefinition> Rows { get; } Property Value Type Description List < InsertionDataDefinition > SchemaName Declaration public string SchemaName { get; set; } Property Value Type Description String TableName Declaration public string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors ExecuteWith(IMigrationProcessor) Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Reverse() Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.ISchemaExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.ISchemaExpression.html",
    "title": "Interface ISchemaExpression | FluentMigrator documentation",
    "keywords": "Interface ISchemaExpression Opt-in into the schema expression convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaExpression Properties SchemaName Gets or sets the schema name Declaration string SchemaName { get; set; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Expressions.ISequenceExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.ISequenceExpression.html",
    "title": "Interface ISequenceExpression | FluentMigrator documentation",
    "keywords": "Interface ISequenceExpression Opt-in into the sequence expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISequenceExpression Properties Sequence Gets the sequence definition Declaration SequenceDefinition Sequence { get; } Property Value Type Description SequenceDefinition"
  },
  "api/v2.x/FluentMigrator.Expressions.MigrationExpressionBase.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.MigrationExpressionBase.html",
    "title": "Class MigrationExpressionBase | FluentMigrator documentation",
    "keywords": "Class MigrationExpressionBase Inheritance Object MigrationExpressionBase AlterColumnExpression AlterDefaultConstraintExpression AlterSchemaExpression AlterTableExpression CreateColumnExpression CreateConstraintExpression CreateForeignKeyExpression CreateIndexExpression CreateSchemaExpression CreateSequenceExpression CreateTableExpression DeleteColumnExpression DeleteConstraintExpression DeleteDefaultConstraintExpression DeleteForeignKeyExpression DeleteIndexExpression DeleteSchemaExpression DeleteSequenceExpression DeleteTableExpression ExecuteEmbeddedSqlScriptExpression ExecuteSqlScriptExpression ExecuteSqlStatementExpression PerformDBOperationExpression RenameColumnExpression RenameTableExpression UpdateDataExpression Implements IMigrationExpression ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class MigrationExpressionBase : IMigrationExpression, ICanBeValidated Methods CollectValidationErrors(ICollection<String>) Declaration public abstract void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors ExecuteWith(IMigrationProcessor) Declaration public abstract void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Reverse() Declaration public virtual IMigrationExpression Reverse() Returns Type Description IMigrationExpression ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.PerformDBOperationExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.PerformDBOperationExpression.html",
    "title": "Class PerformDBOperationExpression | FluentMigrator documentation",
    "keywords": "Class PerformDBOperationExpression Inheritance Object MigrationExpressionBase PerformDBOperationExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class PerformDBOperationExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties Operation Declaration public Action<IDbConnection, IDbTransaction> Operation { get; set; } Property Value Type Description Action < IDbConnection , IDbTransaction > Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.RenameColumnExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.RenameColumnExpression.html",
    "title": "Class RenameColumnExpression | FluentMigrator documentation",
    "keywords": "Class RenameColumnExpression Inheritance Object MigrationExpressionBase RenameColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties NewName Declaration public virtual string NewName { get; set; } Property Value Type Description String OldName Declaration public virtual string OldName { get; set; } Property Value Type Description String SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.RenameTableExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.RenameTableExpression.html",
    "title": "Class RenameTableExpression | FluentMigrator documentation",
    "keywords": "Class RenameTableExpression Inheritance Object MigrationExpressionBase RenameTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties NewName Declaration public virtual string NewName { get; set; } Property Value Type Description String OldName Declaration public virtual string OldName { get; set; } Property Value Type Description String SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Reverse() Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression Overrides MigrationExpressionBase.Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.Expressions.UpdateDataExpression.html": {
    "href": "api/v2.x/FluentMigrator.Expressions.UpdateDataExpression.html",
    "title": "Class UpdateDataExpression | FluentMigrator documentation",
    "keywords": "Class UpdateDataExpression Inheritance Object MigrationExpressionBase UpdateDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class UpdateDataExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties IsAllRows Declaration public bool IsAllRows { get; set; } Property Value Type Description Boolean SchemaName Declaration public string SchemaName { get; set; } Property Value Type Description String Set Declaration public List<KeyValuePair<string, object>> Set { get; set; } Property Value Type Description List < KeyValuePair < String , Object >> TableName Declaration public string TableName { get; set; } Property Value Type Description String Where Declaration public List<KeyValuePair<string, object>> Where { get; set; } Property Value Type Description List < KeyValuePair < String , Object >> Methods CollectValidationErrors(ICollection<String>) Declaration public override void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Overrides MigrationExpressionBase.CollectValidationErrors(ICollection<String>) ExecuteWith(IMigrationProcessor) Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet)"
  },
  "api/v2.x/FluentMigrator.ForwardOnlyMigration.html": {
    "href": "api/v2.x/FluentMigrator.ForwardOnlyMigration.html",
    "title": "Class ForwardOnlyMigration | FluentMigrator documentation",
    "keywords": "Class ForwardOnlyMigration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class ForwardOnlyMigration : Migration, IMigration Methods Down() Declaration public sealed override void Down() Overrides MigrationBase.Down() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.html": {
    "href": "api/v2.x/FluentMigrator.html",
    "title": "Namespace FluentMigrator | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator Classes AutoReversingMigration AutoScriptMigration ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N ForwardOnlyMigration MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Migration MigrationAttribute MigrationBase MigrationTraitAttribute NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) ProfileAttribute RawSql SqlScriptTokenReplacer TagsAttribute Used to filter which migrations are run. TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Interfaces IMigration IMigrationGenerator IMigrationProcessor IMigrationProcessorOptions IQuerySchema Enums AutoNameContext Sets the context for the automatic name generation MigrationDirection The direction of the migration MigrationStage Represents a stage in the migration run. SqlAnywhereConstraintType SqlServerConstraintType SystemMethods TagBehavior TransactionBehavior"
  },
  "api/v2.x/FluentMigrator.IMigration.html": {
    "href": "api/v2.x/FluentMigrator.IMigration.html",
    "title": "Interface IMigration | FluentMigrator documentation",
    "keywords": "Interface IMigration Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigration Properties ApplicationContext The arbitrary application context passed to the task runner. Declaration object ApplicationContext { get; } Property Value Type Description Object ConnectionString Declaration string ConnectionString { get; } Property Value Type Description String Methods GetDownExpressions(IMigrationContext) Declaration void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context GetUpExpressions(IMigrationContext) Declaration void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context"
  },
  "api/v2.x/FluentMigrator.IMigrationGenerator.html": {
    "href": "api/v2.x/FluentMigrator.IMigrationGenerator.html",
    "title": "Interface IMigrationGenerator | FluentMigrator documentation",
    "keywords": "Interface IMigrationGenerator Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationGenerator Methods Generate(AlterColumnExpression) Declaration string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.IMigrationProcessor.html": {
    "href": "api/v2.x/FluentMigrator.IMigrationProcessor.html",
    "title": "Interface IMigrationProcessor | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessor Inherited Members IQuerySchema.SchemaExists(String) IQuerySchema.TableExists(String, String) IQuerySchema.ColumnExists(String, String, String) IQuerySchema.ConstraintExists(String, String, String) IQuerySchema.IndexExists(String, String, String) IQuerySchema.SequenceExists(String, String) IQuerySchema.DefaultValueExists(String, String, String, Object) IQuerySchema.DatabaseType IQuerySchema.DatabaseTypeAliases IDisposable.Dispose() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationProcessor : IQuerySchema, IDisposable Properties ConnectionString Declaration string ConnectionString { get; } Property Value Type Description String Options Declaration IMigrationProcessorOptions Options { get; } Property Value Type Description IMigrationProcessorOptions Methods BeginTransaction() Declaration void BeginTransaction() CommitTransaction() Declaration void CommitTransaction() Execute(String, Object[]) Declaration void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Exists(String, Object[]) Declaration bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Process(AlterColumnExpression) Declaration void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Process(AlterDefaultConstraintExpression) Declaration void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Process(AlterSchemaExpression) Declaration void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Process(AlterTableExpression) Declaration void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Process(CreateColumnExpression) Declaration void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Process(CreateConstraintExpression) Declaration void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Process(CreateForeignKeyExpression) Declaration void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Process(CreateIndexExpression) Declaration void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Process(CreateSchemaExpression) Declaration void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Process(CreateSequenceExpression) Declaration void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Process(CreateTableExpression) Declaration void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Process(DeleteColumnExpression) Declaration void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Process(DeleteConstraintExpression) Declaration void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Process(DeleteDataExpression) Declaration void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Process(DeleteDefaultConstraintExpression) Declaration void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Process(DeleteForeignKeyExpression) Declaration void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Process(DeleteIndexExpression) Declaration void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Process(DeleteSchemaExpression) Declaration void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Process(DeleteSequenceExpression) Declaration void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Process(DeleteTableExpression) Declaration void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Process(InsertDataExpression) Declaration void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Process(PerformDBOperationExpression) Declaration void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(RenameColumnExpression) Declaration void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Process(RenameTableExpression) Declaration void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Process(UpdateDataExpression) Declaration void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Read(String, Object[]) Declaration DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet ReadTableData(String, String) Declaration DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet RollbackTransaction() Declaration void RollbackTransaction()"
  },
  "api/v2.x/FluentMigrator.IMigrationProcessorOptions.html": {
    "href": "api/v2.x/FluentMigrator.IMigrationProcessorOptions.html",
    "title": "Interface IMigrationProcessorOptions | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorOptions Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationProcessorOptions Properties PreviewOnly Declaration bool PreviewOnly { get; } Property Value Type Description Boolean ProviderSwitches Declaration string ProviderSwitches { get; } Property Value Type Description String Timeout Declaration int? Timeout { get; } Property Value Type Description Nullable < Int32 >"
  },
  "api/v2.x/FluentMigrator.Infrastructure.AssemblyCollection.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.AssemblyCollection.html",
    "title": "Class AssemblyCollection | FluentMigrator documentation",
    "keywords": "Class AssemblyCollection Inheritance Object AssemblyCollection Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class AssemblyCollection : IAssemblyCollection Constructors AssemblyCollection(IEnumerable<Assembly>) Declaration public AssemblyCollection(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies Properties Assemblies Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods GetExportedTypes() Declaration public Type[] GetExportedTypes() Returns Type Description Type [] GetManifestResourceNames() Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] Implements IAssemblyCollection"
  },
  "api/v2.x/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html",
    "title": "Class AdditionalFeaturesExtensions | FluentMigrator documentation",
    "keywords": "Class AdditionalFeaturesExtensions Inheritance Object AdditionalFeaturesExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class AdditionalFeaturesExtensions Methods GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T defaultValue = null) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures String key T defaultValue Returns Type Description T Type Parameters Name Description T GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, Func<T> createDefaultValue) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures String key Func <T> createDefaultValue Returns Type Description T Type Parameters Name Description T SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Declaration public static void SetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T value) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures String key T value Type Parameters Name Description T"
  },
  "api/v2.x/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html",
    "title": "Class CloneExtensions | FluentMigrator documentation",
    "keywords": "Class CloneExtensions Inheritance Object CloneExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class CloneExtensions Methods Clone(IEnumerable<KeyValuePair<String, Object>>) Declaration public static Dictionary<string, object> Clone(this IEnumerable<KeyValuePair<string, object>> dict) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> dict Returns Type Description Dictionary < String , Object > CloneAll<T>(IEnumerable<T>) Declaration public static IEnumerable<T> CloneAll<T>(this IEnumerable<T> items) where T : ICloneable Parameters Type Name Description IEnumerable <T> items Returns Type Description IEnumerable <T> Type Parameters Name Description T CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>) Declaration public static void CloneTo(this IEnumerable<KeyValuePair<string, object>> dict, IDictionary<string, object> target) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> dict IDictionary < String , Object > target"
  },
  "api/v2.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html",
    "title": "Class ExtensionsForICustomAttributeProvider | FluentMigrator documentation",
    "keywords": "Class ExtensionsForICustomAttributeProvider Inheritance Object ExtensionsForICustomAttributeProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForICustomAttributeProvider Methods GetAllAttributes<T>(ICustomAttributeProvider) Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Returns Type Description T[] Type Parameters Name Description T GetAllAttributes<T>(ICustomAttributeProvider, Boolean) Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Boolean inherit Returns Type Description T[] Type Parameters Name Description T GetOneAttribute<T>(ICustomAttributeProvider) Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Returns Type Description T Type Parameters Name Description T GetOneAttribute<T>(ICustomAttributeProvider, Boolean) Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Boolean inherit Returns Type Description T Type Parameters Name Description T HasAttribute<T>(ICustomAttributeProvider) Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Returns Type Description Boolean Type Parameters Name Description T HasAttribute<T>(ICustomAttributeProvider, Boolean) Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member Boolean inherit Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/v2.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html",
    "title": "Class ExtensionsForIMigrationInfo | FluentMigrator documentation",
    "keywords": "Class ExtensionsForIMigrationInfo Inheritance Object ExtensionsForIMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForIMigrationInfo Methods IsAttributed(IMigrationInfo) Declaration public static bool IsAttributed(this IMigrationInfo migrationInfo) Parameters Type Name Description IMigrationInfo migrationInfo Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Infrastructure.Extensions.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.Extensions.html",
    "title": "Namespace FluentMigrator.Infrastructure.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure.Extensions Classes AdditionalFeaturesExtensions CloneExtensions ExtensionsForICustomAttributeProvider ExtensionsForIMigrationInfo"
  },
  "api/v2.x/FluentMigrator.Infrastructure.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.html",
    "title": "Namespace FluentMigrator.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure Classes AssemblyCollection ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to MigrationContext MigrationInfo NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo. SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Interfaces IAssemblyCollection A bundle of one or more Assembly instances ICanBeValidated IMigrationContext IMigrationInfo ISupportAdditionalFeatures"
  },
  "api/v2.x/FluentMigrator.Infrastructure.IAssemblyCollection.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.IAssemblyCollection.html",
    "title": "Interface IAssemblyCollection | FluentMigrator documentation",
    "keywords": "Interface IAssemblyCollection A bundle of one or more Assembly instances Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAssemblyCollection Properties Assemblies The Assemblies contained in this collection Declaration Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration Type[] GetExportedTypes() Returns Type Description Type [] GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly."
  },
  "api/v2.x/FluentMigrator.Infrastructure.ICanBeValidated.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.ICanBeValidated.html",
    "title": "Interface ICanBeValidated | FluentMigrator documentation",
    "keywords": "Interface ICanBeValidated Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICanBeValidated Methods CollectValidationErrors(ICollection<String>) Declaration void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors"
  },
  "api/v2.x/FluentMigrator.Infrastructure.IMigrationContext.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.IMigrationContext.html",
    "title": "Interface IMigrationContext | FluentMigrator documentation",
    "keywords": "Interface IMigrationContext Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationContext Properties ApplicationContext The arbitrary application context passed to the task runner. Declaration object ApplicationContext { get; set; } Property Value Type Description Object Connection Declaration string Connection { get; set; } Property Value Type Description String Expressions Declaration ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > MigrationAssemblies Declaration IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection QuerySchema Declaration IQuerySchema QuerySchema { get; } Property Value Type Description IQuerySchema"
  },
  "api/v2.x/FluentMigrator.Infrastructure.IMigrationInfo.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.IMigrationInfo.html",
    "title": "Interface IMigrationInfo | FluentMigrator documentation",
    "keywords": "Interface IMigrationInfo Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationInfo Properties Description Declaration string Description { get; } Property Value Type Description String IsBreakingChange Declaration bool IsBreakingChange { get; } Property Value Type Description Boolean Migration Declaration IMigration Migration { get; } Property Value Type Description IMigration TransactionBehavior Declaration TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Version Declaration long Version { get; } Property Value Type Description Int64 Methods GetName() Declaration string GetName() Returns Type Description String HasTrait(String) Declaration bool HasTrait(string name) Parameters Type Name Description String name Returns Type Description Boolean Trait(String) Declaration object Trait(string name) Parameters Type Name Description String name Returns Type Description Object Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v2.x/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html",
    "title": "Interface ISupportAdditionalFeatures | FluentMigrator documentation",
    "keywords": "Interface ISupportAdditionalFeatures Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISupportAdditionalFeatures Properties AdditionalFeatures Declaration IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v2.x/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html",
    "title": "Class ManifestResourceNameWithAssembly | FluentMigrator documentation",
    "keywords": "Class ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to Inheritance Object ManifestResourceNameWithAssembly Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class ManifestResourceNameWithAssembly Constructors ManifestResourceNameWithAssembly(String, Assembly) Declaration public ManifestResourceNameWithAssembly(string name, Assembly assembly) Parameters Type Name Description String name Assembly assembly Properties Assembly Declaration public Assembly Assembly { get; set; } Property Value Type Description Assembly Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Infrastructure.MigrationContext.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.MigrationContext.html",
    "title": "Class MigrationContext | FluentMigrator documentation",
    "keywords": "Class MigrationContext Inheritance Object MigrationContext Implements IMigrationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class MigrationContext : IMigrationContext Constructors MigrationContext(IQuerySchema, IAssemblyCollection, Object, String) Declaration public MigrationContext(IQuerySchema querySchema, IAssemblyCollection migrationAssemblies, object context, string connection) Parameters Type Name Description IQuerySchema querySchema IAssemblyCollection migrationAssemblies Object context String connection Properties ApplicationContext The arbitrary application context passed to the task runner. Declaration public virtual object ApplicationContext { get; set; } Property Value Type Description Object Connection Connection String from the runner. Declaration public string Connection { get; set; } Property Value Type Description String Expressions Declaration public virtual ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > MigrationAssemblies Declaration public virtual IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection QuerySchema Declaration public virtual IQuerySchema QuerySchema { get; set; } Property Value Type Description IQuerySchema Implements IMigrationContext"
  },
  "api/v2.x/FluentMigrator.Infrastructure.MigrationInfo.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.MigrationInfo.html",
    "title": "Class MigrationInfo | FluentMigrator documentation",
    "keywords": "Class MigrationInfo Inheritance Object MigrationInfo Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class MigrationInfo : IMigrationInfo Constructors MigrationInfo(Int64, TransactionBehavior, IMigration) Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, IMigration migration) Parameters Type Name Description Int64 version TransactionBehavior transactionBehavior IMigration migration MigrationInfo(Int64, TransactionBehavior, Boolean, IMigration) Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, bool isBreakingChange, IMigration migration) Parameters Type Name Description Int64 version TransactionBehavior transactionBehavior Boolean isBreakingChange IMigration migration MigrationInfo(Int64, String, TransactionBehavior, Boolean, Func<IMigration>) Declaration public MigrationInfo(long version, string description, TransactionBehavior transactionBehavior, bool isBreakingChange, Func<IMigration> migrationFunc) Parameters Type Name Description Int64 version String description TransactionBehavior transactionBehavior Boolean isBreakingChange Func < IMigration > migrationFunc Properties Description Declaration public string Description { get; } Property Value Type Description String IsBreakingChange Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean Migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration TransactionBehavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Version Declaration public long Version { get; } Property Value Type Description Int64 Methods AddTrait(String, Object) Declaration public void AddTrait(string name, object value) Parameters Type Name Description String name Object value GetName() Declaration public string GetName() Returns Type Description String HasTrait(String) Declaration public bool HasTrait(string name) Parameters Type Name Description String name Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Trait(String) Declaration public object Trait(string name) Parameters Type Name Description String name Returns Type Description Object Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v2.x/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html",
    "title": "Class NonAttributedMigrationToMigrationInfoAdapter | FluentMigrator documentation",
    "keywords": "Class NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo. Inheritance Object NonAttributedMigrationToMigrationInfoAdapter Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class NonAttributedMigrationToMigrationInfoAdapter : IMigrationInfo Constructors NonAttributedMigrationToMigrationInfoAdapter(IMigration) Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration) Parameters Type Name Description IMigration migration NonAttributedMigrationToMigrationInfoAdapter(IMigration, TransactionBehavior) Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration, TransactionBehavior transactionBehavior) Parameters Type Name Description IMigration migration TransactionBehavior transactionBehavior Properties Description Declaration public string Description { get; } Property Value Type Description String IsBreakingChange Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean Migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration TransactionBehavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Version Declaration public long Version { get; } Property Value Type Description Int64 Methods GetName() Declaration public string GetName() Returns Type Description String HasTrait(String) Declaration public bool HasTrait(string name) Parameters Type Name Description String name Returns Type Description Boolean Trait(String) Declaration public object Trait(string name) Parameters Type Name Description String name Returns Type Description Object Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v2.x/FluentMigrator.Infrastructure.SingleAssembly.html": {
    "href": "api/v2.x/FluentMigrator.Infrastructure.SingleAssembly.html",
    "title": "Class SingleAssembly | FluentMigrator documentation",
    "keywords": "Class SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Inheritance Object SingleAssembly Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class SingleAssembly : IAssemblyCollection Constructors SingleAssembly(Assembly) Declaration public SingleAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Properties Assemblies Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods GetExportedTypes() Declaration public Type[] GetExportedTypes() Returns Type Description Type [] GetManifestResourceNames() Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] Implements IAssemblyCollection"
  },
  "api/v2.x/FluentMigrator.IQuerySchema.html": {
    "href": "api/v2.x/FluentMigrator.IQuerySchema.html",
    "title": "Interface IQuerySchema | FluentMigrator documentation",
    "keywords": "Interface IQuerySchema Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IQuerySchema Properties DatabaseType Declaration string DatabaseType { get; } Property Value Type Description String DatabaseTypeAliases Declaration IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Methods ColumnExists(String, String, String) Declaration bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean ConstraintExists(String, String, String) Declaration bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean DefaultValueExists(String, String, String, Object) Declaration bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean IndexExists(String, String, String) Declaration bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean SchemaExists(String) Declaration bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean SequenceExists(String, String) Declaration bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean TableExists(String, String) Declaration bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.MaintenanceAttribute.html": {
    "href": "api/v2.x/FluentMigrator.MaintenanceAttribute.html",
    "title": "Class MaintenanceAttribute | FluentMigrator documentation",
    "keywords": "Class MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Inheritance Object Attribute MaintenanceAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class MaintenanceAttribute : Attribute, _Attribute Remarks Migration annotated with MaintenanceAttribute will be always executed when migrating the database to the latest version. The execution stage in which it would be executed is defined by Stage . The transaction behavior can also be defined with the TransactionBehavior , which if not specified defaults to the default transaction behavior. Constructors MaintenanceAttribute(MigrationStage) Declaration public MaintenanceAttribute(MigrationStage stage) Parameters Type Name Description MigrationStage stage MaintenanceAttribute(MigrationStage, TransactionBehavior) Declaration public MaintenanceAttribute(MigrationStage stage, TransactionBehavior transactionBehavior) Parameters Type Name Description MigrationStage stage TransactionBehavior transactionBehavior Properties Stage Declaration public MigrationStage Stage { get; } Property Value Type Description MigrationStage TransactionBehavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.Migration.html": {
    "href": "api/v2.x/FluentMigrator.Migration.html",
    "title": "Class Migration | FluentMigrator documentation",
    "keywords": "Class Migration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionDescriptionMigration VersionMigration VersionSchemaMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.Down() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class Migration : MigrationBase, IMigration Properties Delete Declaration public IDeleteExpressionRoot Delete { get; } Property Value Type Description IDeleteExpressionRoot Execute Declaration public IExecuteExpressionRoot Execute { get; } Property Value Type Description IExecuteExpressionRoot Update Declaration public IUpdateExpressionRoot Update { get; } Property Value Type Description IUpdateExpressionRoot Implements IMigration"
  },
  "api/v2.x/FluentMigrator.MigrationAttribute.html": {
    "href": "api/v2.x/FluentMigrator.MigrationAttribute.html",
    "title": "Class MigrationAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationAttribute Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class MigrationAttribute : Attribute, _Attribute Constructors MigrationAttribute(Int64, TransactionBehavior, String) Declaration public MigrationAttribute(long version, TransactionBehavior transactionBehavior = TransactionBehavior.Default, string description = null) Parameters Type Name Description Int64 version TransactionBehavior transactionBehavior String description MigrationAttribute(Int64, String) Declaration public MigrationAttribute(long version, string description) Parameters Type Name Description Int64 version String description Properties BreakingChange Declaration public bool BreakingChange { get; set; } Property Value Type Description Boolean Description Declaration public string Description { get; } Property Value Type Description String TransactionBehavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Version Declaration public long Version { get; } Property Value Type Description Int64 Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.MigrationBase.html": {
    "href": "api/v2.x/FluentMigrator.MigrationBase.html",
    "title": "Class MigrationBase | FluentMigrator documentation",
    "keywords": "Class MigrationBase Inheritance Object MigrationBase AutoReversingMigration AutoScriptMigration Migration Implements IMigration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class MigrationBase : IMigration Properties Alter Declaration public IAlterExpressionRoot Alter { get; } Property Value Type Description IAlterExpressionRoot ApplicationContext The arbitrary application context passed to the task runner. Declaration public object ApplicationContext { get; protected set; } Property Value Type Description Object ConnectionString Connection String that is used to execute migrations. Declaration public string ConnectionString { get; protected set; } Property Value Type Description String Create Declaration public ICreateExpressionRoot Create { get; } Property Value Type Description ICreateExpressionRoot Insert Declaration public IInsertExpressionRoot Insert { get; } Property Value Type Description IInsertExpressionRoot Rename Declaration public IRenameExpressionRoot Rename { get; } Property Value Type Description IRenameExpressionRoot Schema Declaration public ISchemaExpressionRoot Schema { get; } Property Value Type Description ISchemaExpressionRoot Methods Down() Declaration public abstract void Down() GetDownExpressions(IMigrationContext) Declaration public virtual void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context GetUpExpressions(IMigrationContext) Declaration public virtual void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context IfDatabase(Predicate<String>) Declaration public IIfDatabaseExpressionRoot IfDatabase(Predicate<string> databaseTypeFunc) Parameters Type Name Description Predicate < String > databaseTypeFunc Returns Type Description IIfDatabaseExpressionRoot IfDatabase(String[]) Declaration public IIfDatabaseExpressionRoot IfDatabase(params string[] databaseType) Parameters Type Name Description String [] databaseType Returns Type Description IIfDatabaseExpressionRoot Up() Declaration public abstract void Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.MigrationDirection.html": {
    "href": "api/v2.x/FluentMigrator.MigrationDirection.html",
    "title": "Enum MigrationDirection | FluentMigrator documentation",
    "keywords": "Enum MigrationDirection The direction of the migration Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationDirection Fields Name Description Down Reverts the migration Up Applies the migration"
  },
  "api/v2.x/FluentMigrator.MigrationStage.html": {
    "href": "api/v2.x/FluentMigrator.MigrationStage.html",
    "title": "Enum MigrationStage | FluentMigrator documentation",
    "keywords": "Enum MigrationStage Represents a stage in the migration run. Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationStage Fields Name Description AfterAll Migration will be run after all standard migrations and profiles. AfterEach Migration will be run after each standard migration. BeforeAll Migration will be run before all standard migrations. BeforeEach Migration will be run before each standard migration. BeforeProfiles Migration will be run after all standard migrations, but before profiles."
  },
  "api/v2.x/FluentMigrator.MigrationTraitAttribute.html": {
    "href": "api/v2.x/FluentMigrator.MigrationTraitAttribute.html",
    "title": "Class MigrationTraitAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationTraitAttribute Inheritance Object Attribute MigrationTraitAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class MigrationTraitAttribute : Attribute, _Attribute Constructors MigrationTraitAttribute(String) Declaration public MigrationTraitAttribute(string name) Parameters Type Name Description String name MigrationTraitAttribute(String, Object) Declaration public MigrationTraitAttribute(string name, object value) Parameters Type Name Description String name Object value Properties Name Declaration public string Name { get; } Property Value Type Description String Value Declaration public object Value { get; } Property Value Type Description Object Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.Model.ColumnDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.ColumnDefinition.html",
    "title": "Class ColumnDefinition | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition Inheritance Object ColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Constructors ColumnDefinition() Declaration public ColumnDefinition() Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > CollationName Declaration public virtual string CollationName { get; set; } Property Value Type Description String ColumnDescription Declaration public virtual string ColumnDescription { get; set; } Property Value Type Description String CustomType Declaration public virtual string CustomType { get; set; } Property Value Type Description String DefaultValue Declaration public virtual object DefaultValue { get; set; } Property Value Type Description Object ForeignKey Gets or sets the foreign key definition Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Remarks A column might be marked as IsForeignKey , but ForeignKey might still be null . This happens when ForeignKey() without arguments gets called on a column. IsForeignKey Declaration public virtual bool IsForeignKey { get; set; } Property Value Type Description Boolean IsIdentity Declaration public virtual bool IsIdentity { get; set; } Property Value Type Description Boolean IsIndexed Declaration public virtual bool IsIndexed { get; set; } Property Value Type Description Boolean IsNullable Declaration public virtual bool? IsNullable { get; set; } Property Value Type Description Nullable < Boolean > IsPrimaryKey Declaration public virtual bool IsPrimaryKey { get; set; } Property Value Type Description Boolean IsUnique Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean ModificationType Declaration public virtual ColumnModificationType ModificationType { get; set; } Property Value Type Description ColumnModificationType Name Declaration public virtual string Name { get; set; } Property Value Type Description String Precision Declaration public virtual int Precision { get; set; } Property Value Type Description Int32 PrimaryKeyName Declaration public virtual string PrimaryKeyName { get; set; } Property Value Type Description String Size Declaration public virtual int Size { get; set; } Property Value Type Description Int32 TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Type Declaration public virtual DbType? Type { get; set; } Property Value Type Description Nullable < DbType > Methods Clone() Declaration public virtual object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v2.x/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html": {
    "href": "api/v2.x/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html",
    "title": "Class ColumnDefinition.UndefinedDefaultValue | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition.UndefinedDefaultValue Inheritance Object ColumnDefinition.UndefinedDefaultValue Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class UndefinedDefaultValue"
  },
  "api/v2.x/FluentMigrator.Model.ColumnModificationType.html": {
    "href": "api/v2.x/FluentMigrator.Model.ColumnModificationType.html",
    "title": "Enum ColumnModificationType | FluentMigrator documentation",
    "keywords": "Enum ColumnModificationType Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ColumnModificationType Fields Name Description Alter Create"
  },
  "api/v2.x/FluentMigrator.Model.ConstraintDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.ConstraintDefinition.html",
    "title": "Class ConstraintDefinition | FluentMigrator documentation",
    "keywords": "Class ConstraintDefinition Inheritance Object ConstraintDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ConstraintDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Constructors ConstraintDefinition(ConstraintType) Initializes a new instance of the ConstraintDefinition class. Declaration public ConstraintDefinition(ConstraintType type) Parameters Type Name Description ConstraintType type Properties AdditionalFeatures Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Columns Declaration public virtual ICollection<string> Columns { get; set; } Property Value Type Description ICollection < String > ConstraintName Declaration public virtual string ConstraintName { get; set; } Property Value Type Description String IsPrimaryKeyConstraint Declaration public bool IsPrimaryKeyConstraint { get; } Property Value Type Description Boolean IsUniqueConstraint Declaration public bool IsUniqueConstraint { get; } Property Value Type Description Boolean SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v2.x/FluentMigrator.Model.ConstraintType.html": {
    "href": "api/v2.x/FluentMigrator.Model.ConstraintType.html",
    "title": "Enum ConstraintType | FluentMigrator documentation",
    "keywords": "Enum ConstraintType Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ConstraintType Fields Name Description PrimaryKey Unique"
  },
  "api/v2.x/FluentMigrator.Model.DeletionDataDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.DeletionDataDefinition.html",
    "title": "Class DeletionDataDefinition | FluentMigrator documentation",
    "keywords": "Class DeletionDataDefinition Inheritance Object List < KeyValuePair < String , Object >> DeletionDataDefinition Implements IList < KeyValuePair < String , Object >> ICollection < KeyValuePair < String , Object >> IReadOnlyList < KeyValuePair < String , Object >> IReadOnlyCollection < KeyValuePair < String , Object >> IEnumerable < KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class DeletionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/v2.x/FluentMigrator.Model.Direction.html": {
    "href": "api/v2.x/FluentMigrator.Model.Direction.html",
    "title": "Enum Direction | FluentMigrator documentation",
    "keywords": "Enum Direction Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum Direction Fields Name Description Ascending Descending"
  },
  "api/v2.x/FluentMigrator.Model.ForeignKeyDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.ForeignKeyDefinition.html",
    "title": "Class ForeignKeyDefinition | FluentMigrator documentation",
    "keywords": "Class ForeignKeyDefinition Inheritance Object ForeignKeyDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ForeignKeyDefinition : ICloneable, ICanBeValidated Properties ForeignColumns Declaration public virtual ICollection<string> ForeignColumns { get; set; } Property Value Type Description ICollection < String > ForeignTable Declaration public virtual string ForeignTable { get; set; } Property Value Type Description String ForeignTableSchema Declaration public virtual string ForeignTableSchema { get; set; } Property Value Type Description String Name Declaration public virtual string Name { get; set; } Property Value Type Description String OnDelete Declaration public virtual Rule OnDelete { get; set; } Property Value Type Description Rule OnUpdate Declaration public virtual Rule OnUpdate { get; set; } Property Value Type Description Rule PrimaryColumns Declaration public virtual ICollection<string> PrimaryColumns { get; set; } Property Value Type Description ICollection < String > PrimaryTable Declaration public virtual string PrimaryTable { get; set; } Property Value Type Description String PrimaryTableSchema Declaration public virtual string PrimaryTableSchema { get; set; } Property Value Type Description String Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors HasForeignAndPrimaryColumnsDefined() Declaration public bool HasForeignAndPrimaryColumnsDefined() Returns Type Description Boolean Implements System.ICloneable ICanBeValidated"
  },
  "api/v2.x/FluentMigrator.Model.html": {
    "href": "api/v2.x/FluentMigrator.Model.html",
    "title": "Namespace FluentMigrator.Model | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Model Classes ColumnDefinition ColumnDefinition.UndefinedDefaultValue ConstraintDefinition DeletionDataDefinition ForeignKeyDefinition IndexColumnDefinition IndexDefinition IndexIncludeDefinition InsertionDataDefinition SequenceDefinition Enums ColumnModificationType ConstraintType Direction"
  },
  "api/v2.x/FluentMigrator.Model.IndexColumnDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.IndexColumnDefinition.html",
    "title": "Class IndexColumnDefinition | FluentMigrator documentation",
    "keywords": "Class IndexColumnDefinition Inheritance Object IndexColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Properties AdditionalFeatures Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Direction Declaration public virtual Direction Direction { get; set; } Property Value Type Description Direction Name Declaration public virtual string Name { get; set; } Property Value Type Description String Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v2.x/FluentMigrator.Model.IndexDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.IndexDefinition.html",
    "title": "Class IndexDefinition | FluentMigrator documentation",
    "keywords": "Class IndexDefinition Inheritance Object IndexDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Constructors IndexDefinition() Declaration public IndexDefinition() Properties AdditionalFeatures Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Columns Declaration public virtual ICollection<IndexColumnDefinition> Columns { get; set; } Property Value Type Description ICollection < IndexColumnDefinition > IsClustered Declaration public bool IsClustered { get; set; } Property Value Type Description Boolean IsUnique Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean Name Declaration public virtual string Name { get; set; } Property Value Type Description String SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v2.x/FluentMigrator.Model.IndexIncludeDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.IndexIncludeDefinition.html",
    "title": "Class IndexIncludeDefinition | FluentMigrator documentation",
    "keywords": "Class IndexIncludeDefinition Inheritance Object IndexIncludeDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public class IndexIncludeDefinition : ICloneable, ICanBeValidated Properties Name Declaration public virtual string Name { get; set; } Property Value Type Description String Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v2.x/FluentMigrator.Model.InsertionDataDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.InsertionDataDefinition.html",
    "title": "Class InsertionDataDefinition | FluentMigrator documentation",
    "keywords": "Class InsertionDataDefinition Inheritance Object List < KeyValuePair < String , Object >> InsertionDataDefinition Implements IList < KeyValuePair < String , Object >> ICollection < KeyValuePair < String , Object >> IReadOnlyList < KeyValuePair < String , Object >> IReadOnlyCollection < KeyValuePair < String , Object >> IEnumerable < KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/v2.x/FluentMigrator.Model.SequenceDefinition.html": {
    "href": "api/v2.x/FluentMigrator.Model.SequenceDefinition.html",
    "title": "Class SequenceDefinition | FluentMigrator documentation",
    "keywords": "Class SequenceDefinition Inheritance Object SequenceDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class SequenceDefinition : ICloneable, ICanBeValidated Properties Cache Declaration public virtual long? Cache { get; set; } Property Value Type Description Nullable < Int64 > Cycle Declaration public virtual bool Cycle { get; set; } Property Value Type Description Boolean Increment Declaration public virtual long? Increment { get; set; } Property Value Type Description Nullable < Int64 > MaxValue Declaration public virtual long? MaxValue { get; set; } Property Value Type Description Nullable < Int64 > MinValue Declaration public virtual long? MinValue { get; set; } Property Value Type Description Nullable < Int64 > Name Declaration public virtual string Name { get; set; } Property Value Type Description String SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String StartWith Declaration public virtual long? StartWith { get; set; } Property Value Type Description Nullable < Int64 > Methods Clone() Declaration public object Clone() Returns Type Description Object CollectValidationErrors(ICollection<String>) Declaration public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v2.x/FluentMigrator.NonUnicodeString.html": {
    "href": "api/v2.x/FluentMigrator.NonUnicodeString.html",
    "title": "Class NonUnicodeString | FluentMigrator documentation",
    "keywords": "Class NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) Inheritance Object NonUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class NonUnicodeString Constructors NonUnicodeString(String) Used for explicitly creating a non-Unicode string literal in Transact SQL Declaration public NonUnicodeString(string value) Parameters Type Name Description String value The value of the non-Unicode string literal Properties Value Gets the value of the non-Unicode string literal Declaration public string Value { get; } Property Value Type Description String Methods ToString() Overrides ToString() to return the value. Declaration public override string ToString() Returns Type Description String The value of the non-Unicode string literal. Overrides Object.ToString()"
  },
  "api/v2.x/FluentMigrator.ProfileAttribute.html": {
    "href": "api/v2.x/FluentMigrator.ProfileAttribute.html",
    "title": "Class ProfileAttribute | FluentMigrator documentation",
    "keywords": "Class ProfileAttribute Inheritance Object Attribute ProfileAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class ProfileAttribute : Attribute, _Attribute Constructors ProfileAttribute(String) Declaration public ProfileAttribute(string profileName) Parameters Type Name Description String profileName Properties ProfileName Declaration public string ProfileName { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.RawSql.html": {
    "href": "api/v2.x/FluentMigrator.RawSql.html",
    "title": "Class RawSql | FluentMigrator documentation",
    "keywords": "Class RawSql Inheritance Object RawSql Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class RawSql Properties Value Declaration public string Value { get; } Property Value Type Description String Methods Insert(String) Declaration public static RawSql Insert(string sqlToRun) Parameters Type Name Description String sqlToRun Returns Type Description RawSql"
  },
  "api/v2.x/FluentMigrator.Runner.AnnouncerExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.AnnouncerExtensions.html",
    "title": "Class AnnouncerExtensions | FluentMigrator documentation",
    "keywords": "Class AnnouncerExtensions Inheritance Object AnnouncerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class AnnouncerExtensions Methods Error(IAnnouncer, String, Object[]) Declaration public static void Error(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer String message Object [] args Heading(IAnnouncer, String, Object[]) Declaration public static void Heading(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer String message Object [] args Say(IAnnouncer, String, Object[]) Declaration public static void Say(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer String message Object [] args"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.Announcer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.Announcer.html",
    "title": "Class Announcer | FluentMigrator documentation",
    "keywords": "Class Announcer Inheritance Object Announcer ConsoleAnnouncer NullAnnouncer TextWriterAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public abstract class Announcer : IAnnouncer Properties ShowElapsedTime Declaration public virtual bool ShowElapsedTime { get; set; } Property Value Type Description Boolean ShowSql Declaration public virtual bool ShowSql { get; set; } Property Value Type Description Boolean Methods ElapsedTime(TimeSpan) Declaration public virtual void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Emphasize(String) Declaration public virtual void Emphasize(string message) Parameters Type Name Description String message Error(Exception) Declaration public virtual void Error(Exception exception) Parameters Type Name Description Exception exception Error(String) Declaration public virtual void Error(string message) Parameters Type Name Description String message Heading(String) Declaration public virtual void Heading(string message) Parameters Type Name Description String message Say(String) Declaration public virtual void Say(string message) Parameters Type Name Description String message Sql(String) Declaration public virtual void Sql(string sql) Parameters Type Name Description String sql Write(String, Boolean) Declaration public abstract void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html",
    "title": "Class CompositeAnnouncer | FluentMigrator documentation",
    "keywords": "Class CompositeAnnouncer Inheritance Object CompositeAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public class CompositeAnnouncer : IAnnouncer Constructors CompositeAnnouncer(IAnnouncer[]) Declaration public CompositeAnnouncer(params IAnnouncer[] announcers) Parameters Type Name Description IAnnouncer [] announcers Properties Announcers Declaration public IEnumerable<IAnnouncer> Announcers { get; } Property Value Type Description IEnumerable < IAnnouncer > Methods ElapsedTime(TimeSpan) Declaration public void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Emphasize(String) Declaration public void Emphasize(string message) Parameters Type Name Description String message Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception Error(String) Declaration public void Error(string message) Parameters Type Name Description String message Heading(String) Declaration public void Heading(string message) Parameters Type Name Description String message Say(String) Declaration public void Say(string message) Parameters Type Name Description String message Sql(String) Declaration public void Sql(string sql) Parameters Type Name Description String sql Write(String, Boolean) Declaration [Obsolete] public void Write(string message, bool isNotSql) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html",
    "title": "Class ConsoleAnnouncer | FluentMigrator documentation",
    "keywords": "Class ConsoleAnnouncer Inheritance Object Announcer ConsoleAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Sql(String) Announcer.Error(Exception) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public class ConsoleAnnouncer : Announcer, IAnnouncer Methods ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) Emphasize(String) Declaration public override void Emphasize(string message) Parameters Type Name Description String message Overrides Announcer.Emphasize(String) Error(String) Declaration public override void Error(string message) Parameters Type Name Description String message Overrides Announcer.Error(String) Header() Declaration public void Header() Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) HorizontalRule() Declaration public void HorizontalRule() Say(String) Declaration public override void Say(string message) Parameters Type Name Description String message Overrides Announcer.Say(String) Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.html",
    "title": "Namespace FluentMigrator.Runner.Announcers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Announcers Classes Announcer CompositeAnnouncer ConsoleAnnouncer NullAnnouncer TextWriterAnnouncer TextWriterWithGoAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.NullAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.NullAnnouncer.html",
    "title": "Class NullAnnouncer | FluentMigrator documentation",
    "keywords": "Class NullAnnouncer Inheritance Object Announcer NullAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Heading(String) Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.ElapsedTime(TimeSpan) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public class NullAnnouncer : Announcer, IAnnouncer Methods Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html",
    "title": "Class TextWriterAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public class TextWriterAnnouncer : Announcer, IAnnouncer Constructors TextWriterAnnouncer(Action<String>) Declaration public TextWriterAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write TextWriterAnnouncer(TextWriter) Declaration public TextWriterAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html",
    "title": "Class TextWriterWithGoAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterWithGoAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members TextWriterAnnouncer.Heading(String) TextWriterAnnouncer.ElapsedTime(TimeSpan) TextWriterAnnouncer.Write(String, Boolean) Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax public class TextWriterWithGoAnnouncer : TextWriterAnnouncer, IAnnouncer Constructors TextWriterWithGoAnnouncer(Action<String>) Declaration public TextWriterWithGoAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write TextWriterWithGoAnnouncer(TextWriter) Declaration public TextWriterWithGoAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods Sql(String) Declaration public override void Sql(string sql) Parameters Type Name Description String sql Overrides Announcer.Sql(String) Implements IAnnouncer"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html",
    "title": "Class EndCodeSearchResult | FluentMigrator documentation",
    "keywords": "Class EndCodeSearchResult The result of a FindEndCode(ILineReader) operation Inheritance Object EndCodeSearchResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class EndCodeSearchResult Constructors EndCodeSearchResult(Int32) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader where the end code was found EndCodeSearchResult(Int32, IRangeSearcher) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index, IRangeSearcher nestedRangeSearcher) Parameters Type Name Description Int32 index The index into the ILineReader where the nested start code was found IRangeSearcher nestedRangeSearcher The searcher to be used to find the end of the nested range Properties Index Gets the index into the previously tested ILineReader of the end code or nested start code Declaration public int Index { get; } Property Value Type Description Int32 IsNestedStart Gets a value indicating whether this is a nested range Declaration public bool IsNestedStart { get; } Property Value Type Description Boolean NestedRangeSearcher Gets the searcher to be used to find the end of the nested range Declaration public IRangeSearcher NestedRangeSearcher { get; } Property Value Type Description IRangeSearcher Operators Implicit(Int32 to EndCodeSearchResult) Operator to convert an index of the end code into a EndCodeSearchResult Declaration public static implicit operator EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader of the end code Returns Type Description EndCodeSearchResult"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser Classes EndCodeSearchResult The result of a FindEndCode(ILineReader) operation SpecialTokenEventArgs Event arguments for a special token SpecialTokenInfo Provides special information about the found token SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlBatchParser This is the base implementation of the SQL batch parser SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Interfaces ILineReader Read content from a line and advance the internal index IRangeSearcher Interface to search for content with a given start- and end code ISpecialTokenSearcher Searches for special tokens (e.g. GO ) ITextSource An interface to create a reader that is used to read the SQL script lines"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.ILineReader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.ILineReader.html",
    "title": "Interface ILineReader | FluentMigrator documentation",
    "keywords": "Interface ILineReader Read content from a line and advance the internal index Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ILineReader Properties Index Gets the current index into the line Declaration int Index { get; } Property Value Type Description Int32 Length Gets the remaining length Declaration int Length { get; } Property Value Type Description Int32 Line Gets the current line Declaration string Line { get; } Property Value Type Description String Methods Advance(Int32) Creates a new ILineReader while moving the internal Index by the given length Declaration ILineReader Advance(int length) Parameters Type Name Description Int32 length The number of characters to move the internal Index Returns Type Description ILineReader A new line reader with the new index ReadString(Int32) Reads a string with the given length from the Line Declaration string ReadString(int length) Parameters Type Name Description Int32 length The length of the string to read from the Line Returns Type Description String The read string"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.IRangeSearcher.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.IRangeSearcher.html",
    "title": "Interface IRangeSearcher | FluentMigrator documentation",
    "keywords": "Interface IRangeSearcher Interface to search for content with a given start- and end code Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRangeSearcher Properties EndCodeLength Gets the length of the end code Declaration int EndCodeLength { get; } Property Value Type Description Int32 IsComment Is this range a comment? Declaration bool IsComment { get; } Property Value Type Description Boolean StartCodeLength Gets the length of the start code Declaration int StartCodeLength { get; } Property Value Type Description Int32 Methods FindEndCode(ILineReader) Search for an end code Declaration EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html",
    "title": "Interface ISpecialTokenSearcher | FluentMigrator documentation",
    "keywords": "Interface ISpecialTokenSearcher Searches for special tokens (e.g. GO ) Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISpecialTokenSearcher Methods Find(ILineReader) Search for the special token in the given reader Declaration SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.ITextSource.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.ITextSource.html",
    "title": "Interface ITextSource | FluentMigrator documentation",
    "keywords": "Interface ITextSource An interface to create a reader that is used to read the SQL script lines Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITextSource Methods CreateReader() Creates a reader Declaration ILineReader CreateReader() Returns Type Description ILineReader null when no content was available"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html",
    "title": "Class AnsiSqlIdentifier | FluentMigrator documentation",
    "keywords": "Class AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers Inheritance Object StringWithNoEscape AnsiSqlIdentifier Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class AnsiSqlIdentifier : StringWithNoEscape, IRangeSearcher Constructors AnsiSqlIdentifier() Initializes a new instance of the AnsiSqlIdentifier class. Declaration public AnsiSqlIdentifier() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html",
    "title": "Class CharWithEscapeByDuplication | FluentMigrator documentation",
    "keywords": "Class CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. Inheritance Object CharWithEscapeByDuplication MySqlIdentifier SqlServerIdentifier SqlString Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class CharWithEscapeByDuplication : IRangeSearcher Constructors CharWithEscapeByDuplication(Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startAndEndChar, bool isComment = false) Parameters Type Name Description Char startAndEndChar The character used for start and end Boolean isComment Is this a comment CharWithEscapeByDuplication(Char, Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startChar, char endChar, bool isComment = false) Parameters Type Name Description Char startChar The start character Char endChar The end character Boolean isComment Is this a comment Properties EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html",
    "title": "Class DoubleDashSingleLineComment | FluentMigrator documentation",
    "keywords": "Class DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) Inheritance Object SingleLineComment DoubleDashSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DoubleDashSingleLineComment : SingleLineComment, IRangeSearcher Constructors DoubleDashSingleLineComment() Initializes a new instance of the DoubleDashSingleLineComment class. Declaration public DoubleDashSingleLineComment() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers Classes AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) MultiLineComment The default multi-line comment ( /* comment */ ) MySqlIdentifier The MySQL identifier quotes using backticks NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) SingleLineComment A single line comment starting with the specified start code SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) SqlString A ANSI SQL string ( 'string' ) StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ )"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html",
    "title": "Class MultiLineComment | FluentMigrator documentation",
    "keywords": "Class MultiLineComment The default multi-line comment ( /* comment */ ) Inheritance Object StringWithNoEscape MultiLineComment Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MultiLineComment : StringWithNoEscape, IRangeSearcher Constructors MultiLineComment() Initializes a new instance of the MultiLineComment class. Declaration public MultiLineComment() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html",
    "title": "Class MySqlIdentifier | FluentMigrator documentation",
    "keywords": "Class MySqlIdentifier The MySQL identifier quotes using backticks Inheritance Object CharWithEscapeByDuplication MySqlIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MySqlIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors MySqlIdentifier() Initializes a new instance of the MySqlIdentifier class. Declaration public MySqlIdentifier() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html",
    "title": "Class NestingMultiLineComment | FluentMigrator documentation",
    "keywords": "Class NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) Inheritance Object NestingMultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class NestingMultiLineComment : IRangeSearcher Constructors NestingMultiLineComment() Initializes a new instance of the NestingMultiLineComment class. Declaration public NestingMultiLineComment() Properties EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html",
    "title": "Class PoundSignSingleLineComment | FluentMigrator documentation",
    "keywords": "Class PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) Inheritance Object SingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class PoundSignSingleLineComment : SingleLineComment, IRangeSearcher Constructors PoundSignSingleLineComment() Initializes a new instance of the PoundSignSingleLineComment class. Declaration public PoundSignSingleLineComment() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html",
    "title": "Class SingleLineComment | FluentMigrator documentation",
    "keywords": "Class SingleLineComment A single line comment starting with the specified start code Inheritance Object SingleLineComment DoubleDashSingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SingleLineComment : IRangeSearcher Constructors SingleLineComment(String) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode) Parameters Type Name Description String startCode The start code for the single line comment SingleLineComment(String, Boolean) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode, bool onlyAtBeginningOfLine) Parameters Type Name Description String startCode The start code for the single line comment Boolean onlyAtBeginningOfLine Find the start code only at the beginning of the line Properties EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html",
    "title": "Class SqlServerIdentifier | FluentMigrator documentation",
    "keywords": "Class SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) Inheritance Object CharWithEscapeByDuplication SqlServerIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlServerIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors SqlServerIdentifier() Initializes a new instance of the SqlServerIdentifier class. Declaration public SqlServerIdentifier() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html",
    "title": "Class SqlString | FluentMigrator documentation",
    "keywords": "Class SqlString A ANSI SQL string ( 'string' ) Inheritance Object CharWithEscapeByDuplication SqlString Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlString : CharWithEscapeByDuplication, IRangeSearcher Constructors SqlString() Initializes a new instance of the SqlString class. Declaration public SqlString() Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html",
    "title": "Class StringWithNoEscape | FluentMigrator documentation",
    "keywords": "Class StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ ) Inheritance Object StringWithNoEscape AnsiSqlIdentifier MultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class StringWithNoEscape : IRangeSearcher Remarks Escaping is not supported. Constructors StringWithNoEscape(String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startAndEndCode, bool isComment = false) Parameters Type Name Description String startAndEndCode The start- and end code string Boolean isComment Is this range a comment? StringWithNoEscape(String, String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startCode, string endCode, bool isComment = false) Parameters Type Name Description String startCode The start code String endCode The end code Boolean isComment Is this range a comment? Properties EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.Sources | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.Sources Classes LinesSource A ITextSource implementation that uses lines as input TextReaderSource A ITextSource implementation that uses a TextReader as source."
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html",
    "title": "Class LinesSource | FluentMigrator documentation",
    "keywords": "Class LinesSource A ITextSource implementation that uses lines as input Inheritance Object LinesSource Implements ITextSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class LinesSource : ITextSource Constructors LinesSource(IEnumerable<String>) Initializes a new instance of the LinesSource class. Declaration public LinesSource(IEnumerable<string> batchSource) Parameters Type Name Description IEnumerable < String > batchSource The collection of lines to be used as source Methods CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available Implements ITextSource"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html",
    "title": "Class TextReaderSource | FluentMigrator documentation",
    "keywords": "Class TextReaderSource A ITextSource implementation that uses a TextReader as source. Inheritance Object TextReaderSource Implements ITextSource IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class TextReaderSource : ITextSource, IDisposable Constructors TextReaderSource(TextReader) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource(TextReader reader) Parameters Type Name Description TextReader reader The text reader to use Remarks This function doesn't take ownership of the reader . TextReaderSource(TextReader, Boolean) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource(TextReader reader, bool takeOwnership) Parameters Type Name Description TextReader reader The text reader to use Boolean takeOwnership true when the TextReaderSource should become the owner of the reader Methods CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available Dispose() Declaration public void Dispose() Implements ITextSource System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html",
    "title": "Class SpecialTokenEventArgs | FluentMigrator documentation",
    "keywords": "Class SpecialTokenEventArgs Event arguments for a special token Inheritance Object EventArgs SpecialTokenEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenEventArgs : EventArgs Constructors SpecialTokenEventArgs(String, Object) Initializes a new instance of the SpecialTokenEventArgs class. Declaration public SpecialTokenEventArgs(string token, object opaque) Parameters Type Name Description String token The found token Object opaque An opaque (token specific) value Properties Opaque Gets an opaque (token specific) value Declaration public object Opaque { get; } Property Value Type Description Object Token Gets the found token Declaration public string Token { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html",
    "title": "Class SpecialTokenInfo | FluentMigrator documentation",
    "keywords": "Class SpecialTokenInfo Provides special information about the found token Inheritance Object SpecialTokenInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenInfo Constructors SpecialTokenInfo(Int32, Int32, String, Object) Initializes a new instance of the SpecialTokenInfo class. Declaration public SpecialTokenInfo(int index, int length, string token, object opaque = null) Parameters Type Name Description Int32 index The index to the first character that is assigned to the token Int32 length The content length that is assigned to the token String token The found token Object opaque An opaque (token specific) value Remarks The index may not point to the real token text and the length might be longer than the token itself. This is usually the case when the token should be the only text on the line, but is instead surrounded by whitespace. Properties Index Gets the index to the first character that is assigned to the Token Declaration public int Index { get; } Property Value Type Description Int32 Length Gets the content length that is assigned to the Token Declaration public int Length { get; } Property Value Type Description Int32 Opaque Gets an opaque (token specific) value Declaration public object Opaque { get; } Property Value Type Description Object Token Gets the found token Declaration public string Token { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html",
    "title": "Class GoSearcher.GoSearcherParameters | FluentMigrator documentation",
    "keywords": "Class GoSearcher.GoSearcherParameters Additional values for the GO token Inheritance Object GoSearcher.GoSearcherParameters Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcherParameters Properties Count Gets the number of times the batch should be executed Declaration public int Count { get; } Property Value Type Description Int32"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html",
    "title": "Class GoSearcher | FluentMigrator documentation",
    "keywords": "Class GoSearcher Searches for a \"GO n\" or \"GO\" token Inheritance Object GoSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcher : ISpecialTokenSearcher Methods Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found GetGoCount(String) Declaration public static int? GetGoCount(string sql) Parameters Type Name Description String sql Returns Type Description Nullable < Int32 > Implements ISpecialTokenSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Classes GoSearcher Searches for a \"GO n\" or \"GO\" token GoSearcher.GoSearcherParameters Additional values for the GO token SemicolonSearcher Searches for a semicolon"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html",
    "title": "Class SemicolonSearcher | FluentMigrator documentation",
    "keywords": "Class SemicolonSearcher Searches for a semicolon Inheritance Object SemicolonSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SemicolonSearcher : ISpecialTokenSearcher Remarks This special token searcher might be used to separate SQL statements in a batch. Methods Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found Implements ISpecialTokenSearcher"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html",
    "title": "Class SqlAnywhereBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlAnywhereBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors SqlAnywhereBatchParser(String) Initializes a new instance of the SqlAnywhereBatchParser class. Declaration public SqlAnywhereBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SqlBatchParser.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SqlBatchParser.html",
    "title": "Class SqlBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlBatchParser This is the base implementation of the SQL batch parser Inheritance Object SqlBatchParser SqlAnywhereBatchParser SQLiteBatchParser SqlServerBatchParser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlBatchParser Constructors SqlBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlBatchParser class. Declaration public SqlBatchParser(IEnumerable<IRangeSearcher> rangeSearchers, IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output Methods OnSpecialToken(SpecialTokenEventArgs) Invokes the SpecialToken event Declaration protected virtual void OnSpecialToken(SpecialTokenEventArgs e) Parameters Type Name Description SpecialTokenEventArgs e The event arguments OnSqlText(SqlTextEventArgs) Invokes the SqlText event Declaration protected virtual void OnSqlText(SqlTextEventArgs e) Parameters Type Name Description SqlTextEventArgs e The event arguments Process(ITextSource, Boolean) Process the source Declaration public void Process(ITextSource source, bool stripComments = false) Parameters Type Name Description ITextSource source The source to process/parse for SQL statement batches Boolean stripComments true when the comments should be stripped Events SpecialToken An event handler that is called when a special token was found Declaration public event EventHandler<SpecialTokenEventArgs> SpecialToken Event Type Type Description EventHandler < SpecialTokenEventArgs > SqlText An event handler that is called when an SQL text was collected and is considered complete Declaration public event EventHandler<SqlTextEventArgs> SqlText Event Type Type Description EventHandler < SqlTextEventArgs >"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html",
    "title": "Class SQLiteBatchParser | FluentMigrator documentation",
    "keywords": "Class SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SQLiteBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors SQLiteBatchParser(String) Initializes a new instance of the SQLiteBatchParser class. Declaration public SQLiteBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html",
    "title": "Class SqlServerBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlServerBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , SqlServerIdentifier , SqlString and the following token searchers: GoSearcher . Constructors SqlServerBatchParser(String) Initializes a new instance of the SqlServerBatchParser class. Declaration public SqlServerBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v2.x/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html": {
    "href": "api/v2.x/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html",
    "title": "Class SqlTextEventArgs | FluentMigrator documentation",
    "keywords": "Class SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Inheritance Object EventArgs SqlTextEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlTextEventArgs : EventArgs Constructors SqlTextEventArgs(String) Initializes a new instance of the SqlTextEventArgs class. Declaration public SqlTextEventArgs(string sqlText) Parameters Type Name Description String sqlText The collected SQL text Properties SqlText Gets the collected SQL text Declaration public string SqlText { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.CompatabilityMode.html": {
    "href": "api/v2.x/FluentMigrator.Runner.CompatabilityMode.html",
    "title": "Enum CompatabilityMode | FluentMigrator documentation",
    "keywords": "Enum CompatabilityMode Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public enum CompatabilityMode Fields Name Description LOOSE STRICT Extension Methods CompatabilityModeExtension.HandleCompatabilty(String)"
  },
  "api/v2.x/FluentMigrator.Runner.ConnectionlessVersionLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.ConnectionlessVersionLoader.html",
    "title": "Class ConnectionlessVersionLoader | FluentMigrator documentation",
    "keywords": "Class ConnectionlessVersionLoader Inheritance Object ConnectionlessVersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ConnectionlessVersionLoader : IVersionLoader Constructors ConnectionlessVersionLoader(IMigrationRunner, IAssemblyCollection, IConventionSet, IMigrationRunnerConventions, Int64, Int64, IVersionTableMetaData) Declaration public ConnectionlessVersionLoader(IMigrationRunner runner, IAssemblyCollection assemblies, IConventionSet conventionSet, IMigrationRunnerConventions conventions, long startVersion, long targetVersion, IVersionTableMetaData versionTableMetaData = null) Parameters Type Name Description IMigrationRunner runner IAssemblyCollection assemblies IConventionSet conventionSet IMigrationRunnerConventions conventions Int64 startVersion Int64 targetVersion IVersionTableMetaData versionTableMetaData Properties AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean Assemblies Declaration protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection Conventions Declaration public IMigrationRunnerConventions Conventions { get; set; } Property Value Type Description IMigrationRunnerConventions Runner Declaration public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 TargetVersion Declaration public long TargetVersion { get; set; } Property Value Type Description Int64 VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; set; } Property Value Type Description IVersionTableMetaData VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version GetVersionTableMetaData() Declaration public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData LoadVersionInfo() Declaration public void LoadVersionInfo() RemoveVersionTable() Declaration public void RemoveVersionTable() UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.ConventionSet.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.ConventionSet.html",
    "title": "Class ConventionSet | FluentMigrator documentation",
    "keywords": "Class ConventionSet A convenience (empty) implementation of IConventionSet Inheritance Object ConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConventionSet : IConventionSet Properties AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > RootPathConvention Gets or sets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; set; } Property Value Type Description IRootPathConvention SchemaConvention Gets or sets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; set; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html",
    "title": "Class DefaultAutoNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultAutoNameConvention Inheritance Object DefaultAutoNameConvention Implements IAutoNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultAutoNameConvention : IAutoNameConvention Methods Apply(IAutoNameExpression) Declaration public IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression Returns Type Description IAutoNameExpression Implements IAutoNameConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html",
    "title": "Class DefaultConstraintNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultConstraintNameConvention The default implementation of a IConstraintConvention Inheritance Object DefaultConstraintNameConvention Implements IConstraintConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultConstraintNameConvention : IConstraintConvention Remarks It sets the default name of a constraint. Methods Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. Implements IConstraintConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html",
    "title": "Class DefaultForeignKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention Inheritance Object DefaultForeignKeyNameConvention Implements IForeignKeyConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultForeignKeyNameConvention : IForeignKeyConvention Remarks It sets the default name of a foreign key. Methods Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html",
    "title": "Class DefaultIndexNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultIndexNameConvention The default implementation of a IIndexConvention Inheritance Object DefaultIndexNameConvention Implements IIndexConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultIndexNameConvention : IIndexConvention Remarks It sets the default name of an index. Methods Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. Implements IIndexConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html",
    "title": "Class DefaultPrimaryKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention Inheritance Object DefaultPrimaryKeyNameConvention Implements IColumnsConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultPrimaryKeyNameConvention : IColumnsConvention Remarks It sets the default constraint name of a primary key column. Methods Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration public IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same. Implements IColumnsConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html",
    "title": "Class DefaultRootPathConvention | FluentMigrator documentation",
    "keywords": "Class DefaultRootPathConvention The default implementation of a IRootPathConvention Inheritance Object DefaultRootPathConvention Implements IRootPathConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultRootPathConvention : IRootPathConvention Remarks It sets the working directory, which is either the path given in the constructor or - when the given path is null - the current directory. Constructors DefaultRootPathConvention(String) Initializes a new instance of the DefaultRootPathConvention class. Declaration public DefaultRootPathConvention(string rootPath) Parameters Type Name Description String rootPath The root path for expressions requiring file system access. Remarks When rootPath is null, then the current directory is returned Methods Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration public IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same. Implements IRootPathConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html",
    "title": "Class DefaultSchemaConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaConvention The class handling the default schema name Inheritance Object DefaultSchemaConvention Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DefaultSchemaConvention : IForeignKeyConvention, IConstraintConvention, IIndexConvention, ISequenceConvention Remarks This class handles all ISchemaExpression and additionally implements other conventions that give access to schema names (e.g. IForeignKeyConvention ). Constructors DefaultSchemaConvention() Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention() DefaultSchemaConvention(IDefaultSchemaNameConvention) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(IDefaultSchemaNameConvention defaultSchemaNameConvention) Parameters Type Name Description IDefaultSchemaNameConvention defaultSchemaNameConvention The convention used to return the default schema name for a given original schema name. DefaultSchemaConvention(String) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name Methods Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. Apply(ISchemaExpression) Applies a convention to a ISchemaExpression Declaration public ISchemaExpression Apply(ISchemaExpression expression) Parameters Type Name Description ISchemaExpression expression The expression this convention should be applied to Returns Type Description ISchemaExpression The same or a new expression. The underlying type must stay the same. Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration public ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html",
    "title": "Class DefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Inheritance Object DefaultSchemaNameConvention Implements IDefaultSchemaNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultSchemaNameConvention : IDefaultSchemaNameConvention Constructors DefaultSchemaNameConvention(String) Initializes a new instance of the IDefaultSchemaNameConvention class. Declaration public DefaultSchemaNameConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name (can be null or empty) Methods GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration public string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty Implements IDefaultSchemaNameConvention"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.html",
    "title": "Namespace FluentMigrator.Runner.Conventions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Conventions Classes ConventionSet A convenience (empty) implementation of IConventionSet DefaultAutoNameConvention DefaultConstraintNameConvention The default implementation of a IConstraintConvention DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention DefaultIndexNameConvention The default implementation of a IIndexConvention DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention DefaultRootPathConvention The default implementation of a IRootPathConvention DefaultSchemaConvention The class handling the default schema name DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Interfaces IAutoNameConvention A convention working on IAutoNameExpression implementations IColumnsConvention A convention working on IColumnsExpression implementations IConstraintConvention A convention working on IConstraintExpression implementations IConventionSet A set of conventions to be applied to expressions IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name IForeignKeyConvention A convention working on IForeignKeyExpression implementations IIndexConvention A convention working on IIndexExpression implementations IRootPathConvention A convention working on IFileSystemExpression implementations ISequenceConvention A convention working on ISequenceExpression implementations"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IAutoNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IAutoNameConvention.html",
    "title": "Interface IAutoNameConvention | FluentMigrator documentation",
    "keywords": "Interface IAutoNameConvention A convention working on IAutoNameExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAutoNameConvention Methods Apply(IAutoNameExpression) Applies a convention to a IAutoNameExpression Declaration IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression The expression this convention should be applied to Returns Type Description IAutoNameExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IColumnsConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IColumnsConvention.html",
    "title": "Interface IColumnsConvention | FluentMigrator documentation",
    "keywords": "Interface IColumnsConvention A convention working on IColumnsExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumnsConvention Methods Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IConstraintConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IConstraintConvention.html",
    "title": "Interface IConstraintConvention | FluentMigrator documentation",
    "keywords": "Interface IConstraintConvention A convention working on IConstraintExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConstraintConvention Methods Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IConventionSet.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IConventionSet.html",
    "title": "Interface IConventionSet | FluentMigrator documentation",
    "keywords": "Interface IConventionSet A set of conventions to be applied to expressions Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConventionSet Properties AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention >"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html",
    "title": "Interface IDefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Interface IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDefaultSchemaNameConvention Methods GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty"
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html",
    "title": "Interface IForeignKeyConvention | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyConvention A convention working on IForeignKeyExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IForeignKeyConvention Methods Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IIndexConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IIndexConvention.html",
    "title": "Interface IIndexConvention | FluentMigrator documentation",
    "keywords": "Interface IIndexConvention A convention working on IIndexExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IIndexConvention Methods Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.IRootPathConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.IRootPathConvention.html",
    "title": "Interface IRootPathConvention | FluentMigrator documentation",
    "keywords": "Interface IRootPathConvention A convention working on IFileSystemExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRootPathConvention Methods Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.Conventions.ISequenceConvention.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Conventions.ISequenceConvention.html",
    "title": "Interface ISequenceConvention | FluentMigrator documentation",
    "keywords": "Interface ISequenceConvention A convention working on ISequenceExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISequenceConvention Methods Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v2.x/FluentMigrator.Runner.ConventionSetExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.ConventionSetExtensions.html",
    "title": "Class ConventionSetExtensions | FluentMigrator documentation",
    "keywords": "Class ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. Inheritance Object ConventionSetExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class ConventionSetExtensions Methods Apply(IEnumerable<IMigrationExpression>, IConventionSet) Applies all conventions in a conventionSet to the given expressions . Declaration public static IEnumerable<IMigrationExpression> Apply(this IEnumerable<IMigrationExpression> expressions, IConventionSet conventionSet) Parameters Type Name Description IEnumerable < IMigrationExpression > expressions The expression to apply the convention set to IConventionSet conventionSet The convention set to apply to the expressions Returns Type Description IEnumerable < IMigrationExpression > A sequence of expressions where the conventions have been applied to Apply<T>(T, IConventionSet) Apply all conventions in a conventionSet to the given expression . Declaration public static T Apply<T>(this T expression, IConventionSet conventionSet) where T : IMigrationExpression Parameters Type Name Description T expression The expression to apply the conventionSet to IConventionSet conventionSet The convention set to apply to the expression Returns Type Description T The same or a new instance of the expression. The underlying type of the expression must not be changed. Type Parameters Name Description T The expression type, derived from IMigrationExpression"
  },
  "api/v2.x/FluentMigrator.Runner.DefaultConventionSet.html": {
    "href": "api/v2.x/FluentMigrator.Runner.DefaultConventionSet.html",
    "title": "Class DefaultConventionSet | FluentMigrator documentation",
    "keywords": "Class DefaultConventionSet Inheritance Object DefaultConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultConventionSet : IConventionSet Constructors DefaultConventionSet(IRunnerContext) Declaration public DefaultConventionSet(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext Properties AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/v2.x/FluentMigrator.Runner.DefaultMigrationInformationLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.DefaultMigrationInformationLoader.html",
    "title": "Class DefaultMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationInformationLoader Inheritance Object DefaultMigrationInformationLoader Implements IMigrationInformationLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultMigrationInformationLoader : IMigrationInformationLoader Constructors DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, Boolean, IEnumerable<String>) Declaration public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, IEnumerable<String>) Declaration public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace IEnumerable < String > tagsToMatch DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, Boolean, IEnumerable<String>) Declaration public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, IEnumerable<String>) Declaration public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace IEnumerable < String > tagsToMatch Properties Assemblies Declaration public IAssemblyCollection Assemblies { get; } Property Value Type Description IAssemblyCollection Conventions Declaration public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions LoadNestedNamespaces Declaration public bool LoadNestedNamespaces { get; } Property Value Type Description Boolean Namespace Declaration public string Namespace { get; } Property Value Type Description String TagsToMatch Declaration public IEnumerable<string> TagsToMatch { get; } Property Value Type Description IEnumerable < String > Methods LoadMigrations() Declaration public SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo > Implements IMigrationInformationLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Exceptions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Exceptions.html",
    "title": "Namespace FluentMigrator.Runner.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Exceptions Classes InvalidMigrationException MissingMigrationsException RunnerException VersionOrderInvalidException"
  },
  "api/v2.x/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html",
    "title": "Class InvalidMigrationException | FluentMigrator documentation",
    "keywords": "Class InvalidMigrationException Inheritance Object RunnerException InvalidMigrationException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class InvalidMigrationException : RunnerException Constructors InvalidMigrationException(IMigration, String) Declaration public InvalidMigrationException(IMigration migration, string errors) Parameters Type Name Description IMigration migration String errors Properties Message Declaration public override string Message { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html",
    "title": "Class MissingMigrationsException | FluentMigrator documentation",
    "keywords": "Class MissingMigrationsException Inheritance Object RunnerException MissingMigrationsException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class MissingMigrationsException : RunnerException Constructors MissingMigrationsException() Declaration public MissingMigrationsException() MissingMigrationsException(SerializationInfo, StreamingContext) Declaration public MissingMigrationsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context MissingMigrationsException(String) Declaration public MissingMigrationsException(string message) Parameters Type Name Description String message MissingMigrationsException(String, Exception) Declaration public MissingMigrationsException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/v2.x/FluentMigrator.Runner.Exceptions.RunnerException.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Exceptions.RunnerException.html",
    "title": "Class RunnerException | FluentMigrator documentation",
    "keywords": "Class RunnerException Inheritance Object RunnerException InvalidMigrationException MissingMigrationsException VersionOrderInvalidException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class RunnerException : FluentMigratorException Constructors RunnerException() Declaration protected RunnerException() RunnerException(SerializationInfo, StreamingContext) Declaration protected RunnerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context RunnerException(String) Declaration protected RunnerException(string message) Parameters Type Name Description String message RunnerException(String, Exception) Declaration protected RunnerException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/v2.x/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html",
    "title": "Class VersionOrderInvalidException | FluentMigrator documentation",
    "keywords": "Class VersionOrderInvalidException Inheritance Object RunnerException VersionOrderInvalidException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class VersionOrderInvalidException : RunnerException Constructors VersionOrderInvalidException(IEnumerable<KeyValuePair<Int64, IMigrationInfo>>) Declaration public VersionOrderInvalidException(IEnumerable<KeyValuePair<long, IMigrationInfo>> invalidMigrations) Parameters Type Name Description IEnumerable < KeyValuePair < Int64 , IMigrationInfo >> invalidMigrations Properties InvalidMigrations Declaration public IEnumerable<KeyValuePair<long, IMigrationInfo>> InvalidMigrations { get; set; } Property Value Type Description IEnumerable < KeyValuePair < Int64 , IMigrationInfo >> InvalidVersions Declaration public IEnumerable<long> InvalidVersions { get; } Property Value Type Description IEnumerable < Int64 > Message Declaration public override string Message { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Extensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Extensions.html",
    "title": "Namespace FluentMigrator.Runner.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Extensions Classes TagsExtensions TypeExtensions"
  },
  "api/v2.x/FluentMigrator.Runner.Extensions.TagsExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Extensions.TagsExtensions.html",
    "title": "Class TagsExtensions | FluentMigrator documentation",
    "keywords": "Class TagsExtensions Inheritance Object TagsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TagsExtensions Methods ToTags(String) Declaration public static List<string> ToTags(this string tags) Parameters Type Name Description String tags Returns Type Description List < String >"
  },
  "api/v2.x/FluentMigrator.Runner.Extensions.TypeExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | FluentMigrator documentation",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TypeExtensions Methods Is<T>(Type) Declaration public static bool Is<T>(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean Type Parameters Name Description T IsConcrete(Type) Declaration public static bool IsConcrete(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Base.ColumnBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Base.ColumnBase.html",
    "title": "Class ColumnBase | FluentMigrator documentation",
    "keywords": "Class ColumnBase Inheritance Object ColumnBase Implements IColumn Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ColumnBase : IColumn Constructors ColumnBase(ITypeMap, IQuoter) Declaration public ColumnBase(ITypeMap typeMap, IQuoter quoter) Parameters Type Name Description ITypeMap typeMap IQuoter quoter Properties ClauseOrder Declaration protected IList<Func<ColumnDefinition, string>> ClauseOrder { get; set; } Property Value Type Description IList < Func < ColumnDefinition , String >> ForeignKeyConstraint Declaration public virtual string ForeignKeyConstraint { get; } Property Value Type Description String Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods AddPrimaryKeyConstraint(String, IEnumerable<ColumnDefinition>) Declaration public virtual string AddPrimaryKeyConstraint(string tableName, IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description String tableName IEnumerable < ColumnDefinition > primaryKeyColumns Returns Type Description String FormatCascade(String, Rule) Declaration public virtual string FormatCascade(string onWhat, Rule rule) Parameters Type Name Description String onWhat Rule rule Returns Type Description String FormatCollation(ColumnDefinition) Declaration protected virtual string FormatCollation(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatDefaultValue(ColumnDefinition) Declaration protected virtual string FormatDefaultValue(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Declaration public virtual string FormatForeignKey(ForeignKeyDefinition foreignKey, Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey Func < ForeignKeyDefinition , String > fkNameGeneration Returns Type Description String FormatIdentity(ColumnDefinition) Declaration protected abstract string FormatIdentity(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatNullable(ColumnDefinition) Declaration protected virtual string FormatNullable(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatPrimaryKey(ColumnDefinition) Declaration protected virtual string FormatPrimaryKey(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatString(ColumnDefinition) Declaration public virtual string FormatString(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String FormatType(ColumnDefinition) Declaration protected virtual string FormatType(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String Generate(ColumnDefinition) Declaration public virtual string Generate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String Generate(IEnumerable<ColumnDefinition>, String) Declaration public virtual string Generate(IEnumerable<ColumnDefinition> columns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns String tableName Returns Type Description String GenerateForeignKeyName(ForeignKeyDefinition) Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition>, String) Gets the name of the primary key constraint. Some Generators may need to override if the constraint name is limited Declaration protected virtual string GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition> primaryKeyColumns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns String tableName Returns Type Description String GetTypeMap(DbType, Int32, Int32) Declaration protected string GetTypeMap(DbType value, int size, int precision) Parameters Type Name Description DbType value Int32 size Int32 precision Returns Type Description String ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition>) Declaration public virtual bool ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns Returns Type Description Boolean Implements IColumn"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Base.GeneratorBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Base.GeneratorBase.html",
    "title": "Class GeneratorBase | FluentMigrator documentation",
    "keywords": "Class GeneratorBase Inheritance Object GeneratorBase GenericGenerator Implements IMigrationGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GeneratorBase : IMigrationGenerator Constructors GeneratorBase(IColumn, IQuoter, IDescriptionGenerator) Declaration public GeneratorBase(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties Column Declaration protected IColumn Column { get; } Property Value Type Description IColumn DescriptionGenerator Declaration protected IDescriptionGenerator DescriptionGenerator { get; } Property Value Type Description IDescriptionGenerator Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods Generate(AlterColumnExpression) Declaration public abstract string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public abstract string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public abstract string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public virtual string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public abstract string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public abstract string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public abstract string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public abstract string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public abstract string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public abstract string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public abstract string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public abstract string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public abstract string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration public abstract string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public abstract string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public abstract string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public abstract string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public abstract string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public abstract string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public abstract string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public abstract string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public abstract string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public abstract string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration public abstract string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String IsAdditionalFeatureSupported(String) Declaration public virtual bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Base.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Base.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Base | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Base Classes ColumnBase GeneratorBase TypeMapBase"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Base.TypeMapBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Base.TypeMapBase.html",
    "title": "Class TypeMapBase | FluentMigrator documentation",
    "keywords": "Class TypeMapBase Inheritance Object TypeMapBase OracleTypeMap SqlAnywhere16TypeMap SqlServer2000TypeMap Implements ITypeMap Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class TypeMapBase : ITypeMap Constructors TypeMapBase() Declaration public TypeMapBase() Fields PrecisionPlaceholder Declaration protected const string PrecisionPlaceholder = \"$precision\" Field Value Type Description String Methods GetTypeMap(DbType, Int32, Int32) Declaration public virtual string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type Int32 size Int32 precision Returns Type Description String SetTypeMap(DbType, String) Declaration protected void SetTypeMap(DbType type, string template) Parameters Type Name Description DbType type String template SetTypeMap(DbType, String, Int32) Declaration protected void SetTypeMap(DbType type, string template, int maxSize) Parameters Type Name Description DbType type String template Int32 maxSize SetupTypeMaps() Declaration protected abstract void SetupTypeMaps() Implements ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html",
    "title": "Class CompatabilityModeExtension | FluentMigrator documentation",
    "keywords": "Class CompatabilityModeExtension Inheritance Object CompatabilityModeExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public static class CompatabilityModeExtension Methods HandleCompatabilty(CompatabilityMode, String) Declaration public static string HandleCompatabilty(this CompatabilityMode mode, string message) Parameters Type Name Description CompatabilityMode mode String message Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.Db2Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.Db2Generator.html",
    "title": "Class Db2Generator | FluentMigrator documentation",
    "keywords": "Class Db2Generator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Generator : GenericGenerator Constructors Db2Generator() Declaration public Db2Generator() Db2Generator(IQuoter) Declaration public Db2Generator(IQuoter quoter) Parameters Type Name Description IQuoter quoter Methods Generate(Expressions.AlterColumnExpression) Declaration public override string Generate(Expressions.AlterColumnExpression expression) Parameters Type Name Description Expressions.AlterColumnExpression expression Returns Type Description String Generate(Expressions.AlterDefaultConstraintExpression) Declaration public override string Generate(Expressions.AlterDefaultConstraintExpression expression) Parameters Type Name Description Expressions.AlterDefaultConstraintExpression expression Returns Type Description String Generate(Expressions.AlterSchemaExpression) Declaration public override string Generate(Expressions.AlterSchemaExpression expression) Parameters Type Name Description Expressions.AlterSchemaExpression expression Returns Type Description String Generate(Expressions.CreateColumnExpression) Declaration public override string Generate(Expressions.CreateColumnExpression expression) Parameters Type Name Description Expressions.CreateColumnExpression expression Returns Type Description String Generate(Expressions.CreateConstraintExpression) Declaration public override string Generate(Expressions.CreateConstraintExpression expression) Parameters Type Name Description Expressions.CreateConstraintExpression expression Returns Type Description String Generate(Expressions.CreateForeignKeyExpression) Declaration public override string Generate(Expressions.CreateForeignKeyExpression expression) Parameters Type Name Description Expressions.CreateForeignKeyExpression expression Returns Type Description String Generate(Expressions.CreateIndexExpression) Declaration public override string Generate(Expressions.CreateIndexExpression expression) Parameters Type Name Description Expressions.CreateIndexExpression expression Returns Type Description String Generate(Expressions.CreateSchemaExpression) Declaration public override string Generate(Expressions.CreateSchemaExpression expression) Parameters Type Name Description Expressions.CreateSchemaExpression expression Returns Type Description String Generate(Expressions.CreateTableExpression) Declaration public override string Generate(Expressions.CreateTableExpression expression) Parameters Type Name Description Expressions.CreateTableExpression expression Returns Type Description String Generate(Expressions.DeleteColumnExpression) Declaration public override string Generate(Expressions.DeleteColumnExpression expression) Parameters Type Name Description Expressions.DeleteColumnExpression expression Returns Type Description String Generate(Expressions.DeleteConstraintExpression) Declaration public override string Generate(Expressions.DeleteConstraintExpression expression) Parameters Type Name Description Expressions.DeleteConstraintExpression expression Returns Type Description String Generate(Expressions.DeleteDataExpression) Declaration public override string Generate(Expressions.DeleteDataExpression expression) Parameters Type Name Description Expressions.DeleteDataExpression expression Returns Type Description String Generate(Expressions.DeleteDefaultConstraintExpression) Declaration public override string Generate(Expressions.DeleteDefaultConstraintExpression expression) Parameters Type Name Description Expressions.DeleteDefaultConstraintExpression expression Returns Type Description String Generate(Expressions.DeleteForeignKeyExpression) Declaration public override string Generate(Expressions.DeleteForeignKeyExpression expression) Parameters Type Name Description Expressions.DeleteForeignKeyExpression expression Returns Type Description String Generate(Expressions.DeleteIndexExpression) Declaration public override string Generate(Expressions.DeleteIndexExpression expression) Parameters Type Name Description Expressions.DeleteIndexExpression expression Returns Type Description String Generate(Expressions.DeleteSchemaExpression) Declaration public override string Generate(Expressions.DeleteSchemaExpression expression) Parameters Type Name Description Expressions.DeleteSchemaExpression expression Returns Type Description String Generate(Expressions.DeleteTableExpression) Declaration public override string Generate(Expressions.DeleteTableExpression expression) Parameters Type Name Description Expressions.DeleteTableExpression expression Returns Type Description String Generate(Expressions.InsertDataExpression) Declaration public override string Generate(Expressions.InsertDataExpression expression) Parameters Type Name Description Expressions.InsertDataExpression expression Returns Type Description String Generate(Expressions.RenameColumnExpression) Declaration public override string Generate(Expressions.RenameColumnExpression expression) Parameters Type Name Description Expressions.RenameColumnExpression expression Returns Type Description String Generate(Expressions.RenameTableExpression) Declaration public override string Generate(Expressions.RenameTableExpression expression) Parameters Type Name Description Expressions.RenameTableExpression expression Returns Type Description String Generate(Expressions.UpdateDataExpression) Declaration public override string Generate(Expressions.UpdateDataExpression expression) Parameters Type Name Description Expressions.UpdateDataExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html",
    "title": "Class Db2Quoter | FluentMigrator documentation",
    "keywords": "Class Db2Quoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Quoter : GenericQuoter, IQuoter Fields SpecialChars Declaration public readonly char[] SpecialChars Field Value Type Description Char [] Methods FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2 Classes Db2Generator Db2Quoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html",
    "title": "Class Db2ISeriesGenerator | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members Db2Generator.Generate(Expressions.AlterDefaultConstraintExpression) Db2Generator.Generate(Expressions.DeleteDefaultConstraintExpression) Db2Generator.Generate(Expressions.RenameTableExpression) Db2Generator.Generate(Expressions.DeleteColumnExpression) Db2Generator.Generate(Expressions.CreateColumnExpression) Db2Generator.Generate(Expressions.CreateForeignKeyExpression) Db2Generator.Generate(Expressions.CreateConstraintExpression) Db2Generator.Generate(Expressions.CreateIndexExpression) Db2Generator.Generate(Expressions.CreateSchemaExpression) Db2Generator.Generate(Expressions.DeleteTableExpression) Db2Generator.Generate(Expressions.DeleteIndexExpression) Db2Generator.Generate(Expressions.DeleteSchemaExpression) Db2Generator.Generate(Expressions.DeleteConstraintExpression) Db2Generator.Generate(Expressions.DeleteForeignKeyExpression) Db2Generator.Generate(Expressions.DeleteDataExpression) Db2Generator.Generate(Expressions.RenameColumnExpression) Db2Generator.Generate(Expressions.InsertDataExpression) Db2Generator.Generate(Expressions.UpdateDataExpression) Db2Generator.Generate(Expressions.CreateTableExpression) Db2Generator.Generate(Expressions.AlterColumnExpression) Db2Generator.Generate(Expressions.AlterSchemaExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesGenerator : Db2Generator Constructors Db2ISeriesGenerator() Declaration public Db2ISeriesGenerator() Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html",
    "title": "Class Db2ISeriesQuoter | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesQuoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Implements IQuoter Inherited Members Db2Quoter.SpecialChars Db2Quoter.FormatDateTime(DateTime) Db2Quoter.ShouldQuote(String) Db2Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesQuoter : Db2Quoter, IQuoter Methods QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides Db2Quoter.QuoteIndexName(String, String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries Classes Db2ISeriesGenerator Db2ISeriesQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html",
    "title": "Class EmptyDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class EmptyDescriptionGenerator Inheritance Object EmptyDescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class EmptyDescriptionGenerator : IDescriptionGenerator Methods GenerateDescriptionStatement(AlterColumnExpression) Declaration public string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String GenerateDescriptionStatement(AlterTableExpression) Declaration public string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String GenerateDescriptionStatement(CreateColumnExpression) Declaration public string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String GenerateDescriptionStatements(CreateTableExpression) Declaration public IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html",
    "title": "Class FirebirdGenerator | FluentMigrator documentation",
    "keywords": "Class FirebirdGenerator Inheritance Object GeneratorBase GenericGenerator FirebirdGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdGenerator : GenericGenerator Constructors FirebirdGenerator() Declaration public FirebirdGenerator() FirebirdGenerator(FirebirdOptions) Declaration public FirebirdGenerator(FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions Fields truncator Declaration protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn AlterColumnSetNullable3 ALTER TABLE table_name ALTER column_name { DROP | SET } [NOT] NULL Declaration public string AlterColumnSetNullable3 { get; } Property Value Type Description String AlterColumnSetNullablePre3 Declaration public string AlterColumnSetNullablePre3 { get; } Property Value Type Description String AlterColumnSetType Declaration public string AlterColumnSetType { get; } Property Value Type Description String DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn FBOptions Declaration protected FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn Methods ColumnTypesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool ColumnTypesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean DefaultValuesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool DefaultValuesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String GenerateAlterSequence(SequenceDefinition) Declaration public string GenerateAlterSequence(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence Returns Type Description String GenerateForeignKeyName(ForeignKeyDefinition) Declaration public override string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String GenerateSetNull3(String, ColumnDefinition) Declaration public virtual string GenerateSetNull3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String GenerateSetNullPre3(String, ColumnDefinition) Declaration public virtual string GenerateSetNullPre3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String GenerateSetType(String, ColumnDefinition) Declaration public virtual string GenerateSetType(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html",
    "title": "Class FirebirdQuoter | FluentMigrator documentation",
    "keywords": "Class FirebirdQuoter Inheritance Object GenericQuoter FirebirdQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdQuoter : GenericQuoter, IQuoter Constructors FirebirdQuoter(Boolean) Declaration public FirebirdQuoter(bool forceQuote) Parameters Type Name Description Boolean forceQuote Methods FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) ToFbObjectName(String) Declaration public string ToFbObjectName(string objName) Parameters Type Name Description String objName Returns Type Description String Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html",
    "title": "Class FirebirdTruncator | FluentMigrator documentation",
    "keywords": "Class FirebirdTruncator Inheritance Object FirebirdTruncator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdTruncator Constructors FirebirdTruncator(Boolean, Boolean) Declaration public FirebirdTruncator(bool enabled, bool packKeyNames) Parameters Type Name Description Boolean enabled Boolean packKeyNames Methods Pack(String) Declaration public string Pack(string name) Parameters Type Name Description String name Returns Type Description String Truncate(AlterColumnExpression) Declaration public void Truncate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Truncate(AlterDefaultConstraintExpression) Declaration public void Truncate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Truncate(AlterSchemaExpression) Declaration public void Truncate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Truncate(AlterTableExpression) Declaration public void Truncate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Truncate(ColumnDefinition) Declaration public void Truncate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Truncate(ConstraintDefinition) Declaration public void Truncate(ConstraintDefinition constraint) Parameters Type Name Description ConstraintDefinition constraint Truncate(CreateColumnExpression) Declaration public void Truncate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Truncate(CreateConstraintExpression) Declaration public void Truncate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Truncate(CreateForeignKeyExpression) Declaration public void Truncate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Truncate(CreateIndexExpression) Declaration public void Truncate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Truncate(CreateSchemaExpression) Declaration public void Truncate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Truncate(CreateSequenceExpression) Declaration public void Truncate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Truncate(CreateTableExpression) Declaration public void Truncate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Truncate(DeleteColumnExpression) Declaration public void Truncate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Truncate(DeleteConstraintExpression) Declaration public void Truncate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Truncate(DeleteDataExpression) Declaration public void Truncate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Truncate(DeleteDefaultConstraintExpression) Declaration public void Truncate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Truncate(DeleteForeignKeyExpression) Declaration public void Truncate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Truncate(DeleteIndexExpression) Declaration public void Truncate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Truncate(DeleteSchemaExpression) Declaration public void Truncate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Truncate(DeleteSequenceExpression) Declaration public void Truncate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Truncate(DeleteTableExpression) Declaration public void Truncate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Truncate(ForeignKeyDefinition) Declaration public void Truncate(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Truncate(IndexDefinition) Declaration public void Truncate(IndexDefinition index) Parameters Type Name Description IndexDefinition index Truncate(InsertDataExpression) Declaration public void Truncate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Truncate(RenameColumnExpression) Declaration public void Truncate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Truncate(RenameTableExpression) Declaration public void Truncate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Truncate(SequenceDefinition) Declaration public void Truncate(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence Truncate(String) Declaration public string Truncate(string name) Parameters Type Name Description String name Returns Type Description String Truncate(UpdateDataExpression) Declaration public void Truncate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression TruncateColumns(ICollection<ColumnDefinition>) Declaration public void TruncateColumns(ICollection<ColumnDefinition> columns) Parameters Type Name Description ICollection < ColumnDefinition > columns TruncateNames(ICollection<String>) Declaration public ICollection<string> TruncateNames(ICollection<string> names) Parameters Type Name Description ICollection < String > names Returns Type Description ICollection < String >"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Firebird.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Firebird Classes FirebirdGenerator FirebirdQuoter FirebirdTruncator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html",
    "title": "Class GenericDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class GenericDescriptionGenerator Base class to generate descriptions for tables/classes Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator OracleDescriptionGenerator PostgresDescriptionGenerator RedshiftDescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericDescriptionGenerator : IDescriptionGenerator Methods GenerateColumnDescription(String, String, String, String) Declaration protected abstract string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String GenerateDescriptionStatement(AlterColumnExpression) Declaration public virtual string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String GenerateDescriptionStatement(AlterTableExpression) Declaration public virtual string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String GenerateDescriptionStatement(CreateColumnExpression) Declaration public virtual string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String GenerateDescriptionStatements(CreateTableExpression) Declaration public virtual IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > GenerateTableDescription(String, String, String) Declaration protected abstract string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html",
    "title": "Class GenericGenerator | FluentMigrator documentation",
    "keywords": "Class GenericGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator FirebirdGenerator HanaGenerator JetGenerator MySql4Generator OracleGenerator PostgresGenerator RedshiftGenerator SqlAnywhere16Generator SQLiteGenerator SqlServer2000Generator Implements IMigrationGenerator Inherited Members GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericGenerator : GeneratorBase, IMigrationGenerator Constructors GenericGenerator(IColumn, IQuoter, IDescriptionGenerator) Declaration public GenericGenerator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Fields compatabilityMode Declaration public CompatabilityMode compatabilityMode Field Value Type Description CompatabilityMode Properties AddColumn Declaration public virtual string AddColumn { get; } Property Value Type Description String AlterColumn Declaration public virtual string AlterColumn { get; } Property Value Type Description String AlterSchema Declaration public virtual string AlterSchema { get; } Property Value Type Description String CreateConstraint Declaration public virtual string CreateConstraint { get; } Property Value Type Description String CreateForeignKeyConstraint Declaration public virtual string CreateForeignKeyConstraint { get; } Property Value Type Description String CreateIndex Declaration public virtual string CreateIndex { get; } Property Value Type Description String CreateSchema Declaration public virtual string CreateSchema { get; } Property Value Type Description String CreateTable Declaration public virtual string CreateTable { get; } Property Value Type Description String DeleteConstraint Declaration public virtual string DeleteConstraint { get; } Property Value Type Description String DeleteData Declaration public virtual string DeleteData { get; } Property Value Type Description String DropColumn Declaration public virtual string DropColumn { get; } Property Value Type Description String DropIndex Declaration public virtual string DropIndex { get; } Property Value Type Description String DropSchema Declaration public virtual string DropSchema { get; } Property Value Type Description String DropTable Declaration public virtual string DropTable { get; } Property Value Type Description String InsertData Declaration public virtual string InsertData { get; } Property Value Type Description String RenameColumn Declaration public virtual string RenameColumn { get; } Property Value Type Description String RenameTable Declaration public virtual string RenameTable { get; } Property Value Type Description String UpdateData Declaration public virtual string UpdateData { get; } Property Value Type Description String Methods AppendSqlStatementEndToken(StringBuilder) Declaration protected virtual StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterColumnExpression) Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterSchemaExpression) Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateColumnExpression) Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateConstraintExpression) Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateForeignKeyExpression) Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateIndexExpression) Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSchemaExpression) Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSequenceExpression) Generate(CreateTableExpression) Outputs a create table string Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateTableExpression) Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteColumnExpression) Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteConstraintExpression) Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDataExpression) Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteForeignKeyExpression) Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteIndexExpression) Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSchemaExpression) Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSequenceExpression) Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteTableExpression) Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(InsertDataExpression) Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameColumnExpression) Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameTableExpression) Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(UpdateDataExpression) GenerateColumnNamesAndValues(InsertDataExpression) Declaration protected List<KeyValuePair<string, string>> GenerateColumnNamesAndValues(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description List < KeyValuePair < String , String >> GenerateForeignKeyName(ForeignKeyDefinition) Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String GetClusterTypeString(CreateIndexExpression) Declaration public virtual string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String GetUniqueString(CreateIndexExpression) Declaration public virtual string GetUniqueString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) Declaration protected string ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<string, object>> features) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> features Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html",
    "title": "Class GenericQuoter | FluentMigrator documentation",
    "keywords": "Class GenericQuoter Inheritance Object GenericQuoter Db2Quoter FirebirdQuoter HanaQuoter JetQuoter MySqlQuoter OracleQuoterQuotedIdentifier PostgresQuoter RedshiftQuoter SqlAnywhereQuoter SQLiteQuoter SqlServer2000Quoter Implements IQuoter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public class GenericQuoter : IQuoter Properties CloseQuote Returns the closing quote identifier - \" is the standard according to the specification Declaration public virtual string CloseQuote { get; } Property Value Type Description String CloseQuoteEscapeString Declaration public virtual string CloseQuoteEscapeString { get; } Property Value Type Description String EscapeValueQuote Declaration public virtual string EscapeValueQuote { get; } Property Value Type Description String IdentifierSeparator Gets the separator between identifiers (e.g. the dot between SCHEMA.TABLENAME) Declaration public virtual string IdentifierSeparator { get; } Property Value Type Description String OpenQuote Returns the opening quote identifier - \" is the standard according to the specification Declaration public virtual string OpenQuote { get; } Property Value Type Description String OpenQuoteEscapeString Declaration public virtual string OpenQuoteEscapeString { get; } Property Value Type Description String ValueQuote Declaration public virtual string ValueQuote { get; } Property Value Type Description String Methods CreateSchemaPrefixedQuotedIdentifier(String, String) Declaration protected virtual string CreateSchemaPrefixedQuotedIdentifier(string quotedSchemaName, string quotedIdentifier) Parameters Type Name Description String quotedSchemaName String quotedIdentifier Returns Type Description String FormatAnsiString(String) Declaration public virtual string FormatAnsiString(string value) Parameters Type Name Description String value Returns Type Description String FormatBool(Boolean) Declaration public virtual string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String FormatByteArray(Byte[]) Declaration protected virtual string FormatByteArray(byte[] value) Parameters Type Name Description Byte [] value Returns Type Description String FormatChar(Char) Declaration public virtual string FormatChar(char value) Parameters Type Name Description Char value Returns Type Description String FormatDateTime(DateTime) Declaration public virtual string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String FormatDateTimeOffset(DateTimeOffset) Declaration public virtual string FormatDateTimeOffset(DateTimeOffset value) Parameters Type Name Description DateTimeOffset value Returns Type Description String FormatEnum(Object) Declaration public virtual string FormatEnum(object value) Parameters Type Name Description Object value Returns Type Description String FormatGuid(Guid) Declaration public virtual string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String FormatNationalString(String) Declaration public virtual string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String FormatNull() Declaration public virtual string FormatNull() Returns Type Description String FormatSystemMethods(SystemMethods) Declaration public virtual string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String FromTimeSpan(TimeSpan) Declaration public virtual string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration public virtual bool IsQuoted(string name) Parameters Type Name Description String name Returns Type Description Boolean Quote(String) Returns a quoted string that has been correctly escaped Declaration public virtual string Quote(string name) Parameters Type Name Description String name Returns Type Description String QuoteColumnName(String) Quotes a column name Declaration public virtual string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String QuoteConstraintName(String, String) Quotes a constraint name Declaration public virtual string QuoteConstraintName(string constraintName, string schemaName) Parameters Type Name Description String constraintName String schemaName Returns Type Description String QuoteIndexName(String, String) Quote an index name Declaration public virtual string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String QuoteSchemaName(String) Quotes a schema name Declaration public virtual string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name QuoteSequenceName(String, String) Quotes a Sequence name Declaration public virtual string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String QuoteTableName(String, String) Quotes a Table name Declaration public virtual string QuoteTableName(string tableName, string schemaName) Parameters Type Name Description String tableName String schemaName Returns Type Description String QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration public virtual string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value ShouldQuote(String) Declaration protected virtual bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean UnQuote(String) Provides an unquoted, unescaped string Declaration public virtual string UnQuote(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Generic.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Generic.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Generic | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Generic Classes GenericDescriptionGenerator Base class to generate descriptions for tables/classes GenericGenerator GenericQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html",
    "title": "Class HanaDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class HanaDescriptionGenerator Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html",
    "title": "Class HanaGenerator | FluentMigrator documentation",
    "keywords": "Class HanaGenerator Inheritance Object GeneratorBase GenericGenerator HanaGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaGenerator : GenericGenerator Constructors HanaGenerator() Declaration public HanaGenerator() Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html",
    "title": "Class HanaQuoter | FluentMigrator documentation",
    "keywords": "Class HanaQuoter Inheritance Object GenericQuoter HanaQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaQuoter : GenericQuoter, IQuoter Methods FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Hana.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Hana Classes HanaDescriptionGenerator HanaGenerator HanaQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.html",
    "title": "Namespace FluentMigrator.Runner.Generators | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators Classes CompatabilityModeExtension EmptyDescriptionGenerator MigrationGeneratorFactory Interfaces IColumn IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns IQuoter The interface to be implemented for handling quotes ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.IColumn.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.IColumn.html",
    "title": "Interface IColumn | FluentMigrator documentation",
    "keywords": "Interface IColumn Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumn Methods FormatCascade(String, Rule) Declaration string FormatCascade(string onWhat, Rule rule) Parameters Type Name Description String onWhat Rule rule Returns Type Description String FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Declaration string FormatForeignKey(ForeignKeyDefinition foreignKey, Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey Func < ForeignKeyDefinition , String > fkNameGeneration Returns Type Description String Generate(ColumnDefinition) Declaration string Generate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column Returns Type Description String Generate(IEnumerable<ColumnDefinition>, String) Declaration string Generate(IEnumerable<ColumnDefinition> columns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns String tableName Returns Type Description String GenerateForeignKeyName(ForeignKeyDefinition) Declaration string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.IDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.IDescriptionGenerator.html",
    "title": "Interface IDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Interface IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDescriptionGenerator Methods GenerateDescriptionStatement(AlterColumnExpression) Declaration string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String GenerateDescriptionStatement(AlterTableExpression) Declaration string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String GenerateDescriptionStatement(CreateColumnExpression) Declaration string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String GenerateDescriptionStatements(CreateTableExpression) Declaration IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String >"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.IQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.IQuoter.html",
    "title": "Interface IQuoter | FluentMigrator documentation",
    "keywords": "Interface IQuoter The interface to be implemented for handling quotes Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IQuoter Methods IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration bool IsQuoted(string value) Parameters Type Name Description String value Returns Type Description Boolean Quote(String) Returns a quoted string that has been correctly escaped Declaration string Quote(string value) Parameters Type Name Description String value Returns Type Description String QuoteColumnName(String) Quotes a column name Declaration string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String QuoteConstraintName(String, String) Quotes a constraint name Declaration string QuoteConstraintName(string contraintName, string schemaName = null) Parameters Type Name Description String contraintName String schemaName Returns Type Description String QuoteIndexName(String, String) Quote an index name Declaration string QuoteIndexName(string indexName, string schemaName = null) Parameters Type Name Description String indexName String schemaName Returns Type Description String QuoteSchemaName(String) Quotes a schema name Declaration string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name QuoteSequenceName(String, String) Quotes a Sequence name Declaration string QuoteSequenceName(string sequenceName, string schemaName = null) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String QuoteTableName(String, String) Quotes a Table name Declaration string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value UnQuote(String) Provides an unquoted, unescaped string Declaration string UnQuote(string value) Parameters Type Name Description String value Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.ITypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.ITypeMap.html",
    "title": "Interface ITypeMap | FluentMigrator documentation",
    "keywords": "Interface ITypeMap Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITypeMap Methods GetTypeMap(DbType, Int32, Int32) Declaration string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type Int32 size Int32 precision Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Jet.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Jet Classes JetGenerator JetQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Jet.JetGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Jet.JetGenerator.html",
    "title": "Class JetGenerator | FluentMigrator documentation",
    "keywords": "Class JetGenerator Inheritance Object GeneratorBase GenericGenerator JetGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetGenerator : GenericGenerator Constructors JetGenerator() Declaration public JetGenerator() Properties DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex Methods Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Jet.JetQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Jet.JetQuoter.html",
    "title": "Class JetQuoter | FluentMigrator documentation",
    "keywords": "Class JetQuoter Inheritance Object GenericQuoter JetQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetQuoter : GenericQuoter, IQuoter Properties CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html",
    "title": "Class MigrationGeneratorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationGeneratorFactory Inheritance Object MigrationGeneratorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.dll Syntax public class MigrationGeneratorFactory Methods GetGenerator(String) Declaration public virtual IMigrationGenerator GetGenerator(string name) Parameters Type Name Description String name Returns Type Description IMigrationGenerator ListAvailableGeneratorTypes() Declaration public string ListAvailableGeneratorTypes() Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.MySql.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Generators.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.MySql Classes MySql4Generator MySql5Generator MySqlQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html",
    "title": "Class MySql4Generator | FluentMigrator documentation",
    "keywords": "Class MySql4Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4Generator : GenericGenerator Constructors MySql4Generator() Declaration public MySql4Generator() MySql4Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected MySql4Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn DeleteConstraint Declaration public override string DeleteConstraint { get; } Property Value Type Description String Overrides GenericGenerator.DeleteConstraint Methods Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html",
    "title": "Class MySql5Generator | FluentMigrator documentation",
    "keywords": "Class MySql5Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator Implements IMigrationGenerator Inherited Members MySql4Generator.AlterColumn MySql4Generator.DeleteConstraint MySql4Generator.Generate(CreateTableExpression) MySql4Generator.Generate(AlterTableExpression) MySql4Generator.Generate(DeleteIndexExpression) MySql4Generator.Generate(RenameColumnExpression) MySql4Generator.Generate(AlterDefaultConstraintExpression) MySql4Generator.Generate(CreateSequenceExpression) MySql4Generator.Generate(DeleteSequenceExpression) MySql4Generator.Generate(DeleteConstraintExpression) MySql4Generator.Generate(DeleteForeignKeyExpression) MySql4Generator.Generate(DeleteDefaultConstraintExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5Generator : MySql4Generator Constructors MySql5Generator() Declaration public MySql5Generator() MySql5Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected MySql5Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html",
    "title": "Class MySqlQuoter | FluentMigrator documentation",
    "keywords": "Class MySqlQuoter Inheritance Object GenericQuoter MySqlQuoter Implements IQuoter Inherited Members GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlQuoter : GenericQuoter, IQuoter Properties CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote Methods FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) QuoteValue(Object) Declaration public override string QuoteValue(object value) Parameters Type Name Description Object value Returns Type Description String Overrides GenericQuoter.QuoteValue(Object) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Oracle Classes OracleDescriptionGenerator OracleGenerator OracleQuoter OracleQuoterQuotedIdentifier OracleTypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html",
    "title": "Class OracleDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class OracleDescriptionGenerator Inheritance Object GenericDescriptionGenerator OracleDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html",
    "title": "Class OracleGenerator | FluentMigrator documentation",
    "keywords": "Class OracleGenerator Inheritance Object GeneratorBase GenericGenerator OracleGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleGenerator : GenericGenerator Constructors OracleGenerator() Declaration public OracleGenerator() OracleGenerator(Boolean) Declaration public OracleGenerator(bool useQuotedIdentifiers) Parameters Type Name Description Boolean useQuotedIdentifiers Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable InsertData Declaration public override string InsertData { get; } Property Value Type Description String Overrides GenericGenerator.InsertData RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods AppendSqlStatementEndToken(StringBuilder) Declaration protected override StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder Overrides GenericGenerator.AppendSqlStatementEndToken(StringBuilder) Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html",
    "title": "Class OracleQuoter | FluentMigrator documentation",
    "keywords": "Class OracleQuoter Inheritance Object GenericQuoter OracleQuoterQuotedIdentifier OracleQuoter Implements IQuoter Inherited Members OracleQuoterQuotedIdentifier.FormatDateTime(DateTime) OracleQuoterQuotedIdentifier.FromTimeSpan(TimeSpan) OracleQuoterQuotedIdentifier.FormatGuid(Guid) OracleQuoterQuotedIdentifier.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoter : OracleQuoterQuotedIdentifier, IQuoter Methods Quote(String) Declaration public override string Quote(string name) Parameters Type Name Description String name Returns Type Description String Overrides GenericQuoter.Quote(String) QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) QuoteTableName(String, String) Declaration public override string QuoteTableName(string tableName, string schemaName) Parameters Type Name Description String tableName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteTableName(String, String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html",
    "title": "Class OracleQuoterQuotedIdentifier | FluentMigrator documentation",
    "keywords": "Class OracleQuoterQuotedIdentifier Inheritance Object GenericQuoter OracleQuoterQuotedIdentifier OracleQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoterQuotedIdentifier : GenericQuoter, IQuoter Methods FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) FormatGuid(Guid) Declaration public override string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String Overrides GenericQuoter.FormatGuid(Guid) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html",
    "title": "Class OracleTypeMap | FluentMigrator documentation",
    "keywords": "Class OracleTypeMap Inheritance Object TypeMapBase OracleTypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleTypeMap : TypeMapBase, ITypeMap Fields AnsiStringCapacity Declaration public const int AnsiStringCapacity = 4000 Field Value Type Description Int32 AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 BlobCapacity Declaration public const int BlobCapacity = 2147483647 Field Value Type Description Int32 CharStringCapacity Declaration public const int CharStringCapacity = 2000 Field Value Type Description Int32 DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 RawCapacity Declaration public const int RawCapacity = 2000 Field Value Type Description Int32 UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 2147483647 Field Value Type Description Int32 Methods SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Postgres.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Postgres Classes PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description PostgresGenerator PostgresQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html",
    "title": "Class PostgresDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator PostgresDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors PostgresDescriptionGenerator() Declaration public PostgresDescriptionGenerator() Properties Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html",
    "title": "Class PostgresGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresGenerator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresGenerator : GenericGenerator Constructors PostgresGenerator() Declaration public PostgresGenerator() Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html",
    "title": "Class PostgresQuoter | FluentMigrator documentation",
    "keywords": "Class PostgresQuoter Inheritance Object GenericQuoter PostgresQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresQuoter : GenericQuoter, IQuoter Methods FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Redshift.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Redshift Classes RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description RedshiftGenerator RedshiftQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html",
    "title": "Class RedshiftDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator RedshiftDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors RedshiftDescriptionGenerator() Declaration public RedshiftDescriptionGenerator() Properties Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html",
    "title": "Class RedshiftGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftGenerator Inheritance Object GeneratorBase GenericGenerator RedshiftGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftGenerator : GenericGenerator Constructors RedshiftGenerator() Declaration public RedshiftGenerator() Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html",
    "title": "Class RedshiftQuoter | FluentMigrator documentation",
    "keywords": "Class RedshiftQuoter Inheritance Object GenericQuoter RedshiftQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftQuoter : GenericQuoter, IQuoter Methods FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere Classes SqlAnywhere16Generator SqlAnywhere16TypeMap SqlAnywhereQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html",
    "title": "Class SqlAnywhere16Generator | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16Generator Inheritance Object GeneratorBase GenericGenerator SqlAnywhere16Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16Generator : GenericGenerator Constructors SqlAnywhere16Generator() Declaration public SqlAnywhere16Generator() SqlAnywhere16Generator(IColumn, IDescriptionGenerator) Declaration protected SqlAnywhere16Generator(IColumn column, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IDescriptionGenerator descriptionGenerator Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex CreateSchema Declaration public override string CreateSchema { get; } Property Value Type Description String Overrides GenericGenerator.CreateSchema DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex DropSchema Declaration public override string DropSchema { get; } Property Value Type Description String Overrides GenericGenerator.DropSchema RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String GetConstraintClusteringString(CreateConstraintExpression) Declaration protected string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String GetWithNullsDistinctString(IndexDefinition) Declaration protected virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html",
    "title": "Class SqlAnywhere16TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16TypeMap Inheritance Object TypeMapBase SqlAnywhere16TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16TypeMap : TypeMapBase, ITypeMap Fields AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html",
    "title": "Class SqlAnywhereQuoter | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereQuoter Inheritance Object GenericQuoter SqlAnywhereQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereQuoter : GenericQuoter, IQuoter Properties CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SQLite.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SQLite Classes SQLiteGenerator SQLiteQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html",
    "title": "Class SQLiteGenerator | FluentMigrator documentation",
    "keywords": "Class SQLiteGenerator Inheritance Object GeneratorBase GenericGenerator SQLiteGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteGenerator : GenericGenerator Constructors SQLiteGenerator() Declaration public SQLiteGenerator() Properties RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html",
    "title": "Class SQLiteQuoter | FluentMigrator documentation",
    "keywords": "Class SQLiteQuoter Inheritance Object GenericQuoter SQLiteQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteQuoter : GenericQuoter, IQuoter Methods FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlServer Classes SqlServer2000Generator SqlServer2000Quoter SqlServer2000TypeMap SqlServer2005DescriptionGenerator SqlServer2005Generator SqlServer2005Quoter SqlServer2005TypeMap SqlServer2008Generator SqlServer2008Quoter SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator SqlServerCeGenerator SqlServerCeTypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html",
    "title": "Class SqlServer2000Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServerCeGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Generator : GenericGenerator Constructors SqlServer2000Generator() Declaration public SqlServer2000Generator() SqlServer2000Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2000Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex IdentityInsert Declaration public virtual string IdentityInsert { get; } Property Value Type Description String RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods BuildDelete(DeleteColumnExpression, String, StringBuilder) Declaration protected virtual void BuildDelete(DeleteColumnExpression expression, string columnName, StringBuilder builder) Parameters Type Name Description DeleteColumnExpression expression String columnName StringBuilder builder Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String GetConstraintClusteringString(CreateConstraintExpression) Declaration protected virtual string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) IsUsingIdentityInsert(InsertDataExpression) Declaration protected static bool IsUsingIdentityInsert(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html",
    "title": "Class SqlServer2000Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Quoter : GenericQuoter, IQuoter Properties CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html",
    "title": "Class SqlServer2000TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2000TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000TypeMap : TypeMapBase, ITypeMap Fields AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html",
    "title": "Class SqlServer2005DescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005DescriptionGenerator Inheritance Object GenericDescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005DescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) GenerateDescriptionStatement(AlterColumnExpression) Declaration public override string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String GenerateDescriptionStatement(AlterTableExpression) Declaration public override string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html",
    "title": "Class SqlServer2005Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator Implements IMigrationGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Generator : SqlServer2000Generator Constructors SqlServer2005Generator() Declaration public SqlServer2005Generator() SqlServer2005Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2005Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides SqlServer2000Generator.AddColumn CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides SqlServer2000Generator.DropIndex IdentityInsert Declaration public override string IdentityInsert { get; } Property Value Type Description String Overrides SqlServer2000Generator.IdentityInsert Methods Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(CreateConstraintExpression) Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteDefaultConstraintExpression) Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String GetIncludeString(CreateIndexExpression) Declaration public virtual string GetIncludeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String GetWithOptions(ISupportAdditionalFeatures) Declaration public virtual string GetWithOptions(ISupportAdditionalFeatures expression) Parameters Type Name Description ISupportAdditionalFeatures expression Returns Type Description String IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2000Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html",
    "title": "Class SqlServer2005Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) SqlServer2000Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Quoter : SqlServer2000Quoter, IQuoter Methods QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides SqlServer2000Quoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html",
    "title": "Class SqlServer2005TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2005TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members SqlServer2000TypeMap.AnsiStringCapacity SqlServer2000TypeMap.AnsiTextCapacity SqlServer2000TypeMap.UnicodeStringCapacity SqlServer2000TypeMap.UnicodeTextCapacity SqlServer2000TypeMap.ImageCapacity SqlServer2000TypeMap.DecimalCapacity TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005TypeMap : SqlServer2000TypeMap, ITypeMap Methods SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides SqlServer2000TypeMap.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html",
    "title": "Class SqlServer2008Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator Implements IMigrationGenerator Inherited Members SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Generator : SqlServer2005Generator Constructors SqlServer2008Generator() Declaration public SqlServer2008Generator() SqlServer2008Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2008Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Methods Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides SqlServer2005Generator.Generate(CreateIndexExpression) GetWithNullsDistinctString(IndexDefinition) Declaration public virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2005Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html",
    "title": "Class SqlServer2008Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2005Quoter.QuoteSchemaName(String) SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Quoter : SqlServer2005Quoter, IQuoter Methods FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides SqlServer2000Quoter.FormatSystemMethods(SystemMethods) Implements IQuoter"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html",
    "title": "Class SqlServer2012Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2012Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator Implements IMigrationGenerator Inherited Members SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012Generator : SqlServer2008Generator Constructors SqlServer2012Generator() Declaration public SqlServer2012Generator() SqlServer2012Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2012Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Methods Generate(Expressions.CreateSequenceExpression) Declaration public override string Generate(Expressions.CreateSequenceExpression expression) Parameters Type Name Description Expressions.CreateSequenceExpression expression Returns Type Description String Generate(Expressions.DeleteSequenceExpression) Declaration public override string Generate(Expressions.DeleteSequenceExpression expression) Parameters Type Name Description Expressions.DeleteSequenceExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html",
    "title": "Class SqlServer2014Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2014Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(Expressions.CreateSequenceExpression) SqlServer2012Generator.Generate(Expressions.DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014Generator : SqlServer2012Generator Constructors SqlServer2014Generator() Declaration public SqlServer2014Generator() SqlServer2014Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2014Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html",
    "title": "Class SqlServer2016Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2016Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(Expressions.CreateSequenceExpression) SqlServer2012Generator.Generate(Expressions.DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016Generator : SqlServer2014Generator Constructors SqlServer2016Generator() Declaration public SqlServer2016Generator() SqlServer2016Generator(IColumn, IQuoter, IDescriptionGenerator) Declaration protected SqlServer2016Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Implements IMigrationGenerator"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html",
    "title": "Class SqlServerCeGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServerCeGenerator Inheritance Object SqlServer2000Generator SqlServerCeGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.DropIndex SqlServer2000Generator.AddColumn SqlServer2000Generator.IdentityInsert SqlServer2000Generator.CreateConstraint SqlServer2000Generator.Generate(CreateConstraintExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) SqlServer2000Generator.IsAdditionalFeatureSupported(String) Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeGenerator : SqlServer2000Generator Constructors SqlServerCeGenerator() Declaration public SqlServerCeGenerator() Properties InsertData Declaration public override string InsertData { get; } Property Value Type Description String Methods Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String GetConstraintClusteringString(CreateConstraintExpression) Declaration protected override string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html",
    "title": "Class SqlServerCeTypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServerCeTypeMap Inheritance Object SqlServerCeTypeMap Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeTypeMap : TypeMapBase Fields BinaryCapacity Declaration public const int BinaryCapacity = 8000 Field Value Type Description Int32 DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 ImageCapacity Declaration public const int ImageCapacity = 1073741823 Field Value Type Description Int32 UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 Methods SetupTypeMaps() Declaration protected override void SetupTypeMaps()"
  },
  "api/v2.x/FluentMigrator.Runner.Helpers.FormatHelper.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Helpers.FormatHelper.html",
    "title": "Class FormatHelper | FluentMigrator documentation",
    "keywords": "Class FormatHelper Inheritance Object FormatHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Helpers Assembly : FluentMigrator.Runner.Core.dll Syntax public class FormatHelper Methods FormatSqlEscape(String) Declaration public static string FormatSqlEscape(string sql) Parameters Type Name Description String sql Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Helpers.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Helpers.html",
    "title": "Namespace FluentMigrator.Runner.Helpers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Helpers Classes FormatHelper"
  },
  "api/v2.x/FluentMigrator.Runner.html": {
    "href": "api/v2.x/FluentMigrator.Runner.html",
    "title": "Namespace FluentMigrator.Runner | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner Classes AnnouncerExtensions ConnectionlessVersionLoader ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. DefaultConventionSet DefaultMigrationInformationLoader MaintenanceLoader MigrationRunner MigrationRunnerConventions MigrationScopeHandler MigrationValidator NoOpMigrationScope ProfileLoader StopWatch TrackingMigrationScope TransactionalMigrationScope VersionLoader Interfaces IAnnouncer IMaintenanceLoader IMigrationInformationLoader IMigrationRunner IMigrationRunnerConventions IMigrationScope IMigrationScopeStarter IProfileLoader IStopWatch IVersionLoader Enums CompatabilityMode"
  },
  "api/v2.x/FluentMigrator.Runner.IAnnouncer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IAnnouncer.html",
    "title": "Interface IAnnouncer | FluentMigrator documentation",
    "keywords": "Interface IAnnouncer Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAnnouncer Methods ElapsedTime(TimeSpan) Declaration void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Emphasize(String) Declaration void Emphasize(string message) Parameters Type Name Description String message Error(Exception) Declaration void Error(Exception exception) Parameters Type Name Description Exception exception Error(String) Declaration void Error(string message) Parameters Type Name Description String message Heading(String) Declaration void Heading(string message) Parameters Type Name Description String message Say(String) Declaration void Say(string message) Parameters Type Name Description String message Sql(String) Declaration void Sql(string sql) Parameters Type Name Description String sql Write(String, Boolean) Declaration [Obsolete] void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Extension Methods AnnouncerExtensions.Heading(IAnnouncer, String, Object[]) AnnouncerExtensions.Say(IAnnouncer, String, Object[]) AnnouncerExtensions.Error(IAnnouncer, String, Object[])"
  },
  "api/v2.x/FluentMigrator.Runner.IMaintenanceLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMaintenanceLoader.html",
    "title": "Interface IMaintenanceLoader | FluentMigrator documentation",
    "keywords": "Interface IMaintenanceLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMaintenanceLoader Methods LoadMaintenance(MigrationStage) Declaration IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo >"
  },
  "api/v2.x/FluentMigrator.Runner.IMigrationInformationLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMigrationInformationLoader.html",
    "title": "Interface IMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Interface IMigrationInformationLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationInformationLoader Methods LoadMigrations() Declaration SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo >"
  },
  "api/v2.x/FluentMigrator.Runner.IMigrationRunner.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMigrationRunner.html",
    "title": "Interface IMigrationRunner | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunner Inherited Members IMigrationScopeStarter.BeginScope() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationRunner : IMigrationScopeStarter Properties MigrationAssemblies Declaration IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection MigrationLoader Declaration IMigrationInformationLoader MigrationLoader { get; set; } Property Value Type Description IMigrationInformationLoader Processor Declaration IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor RunnerContext Declaration IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext Methods Down(IMigration) Declaration void Down(IMigration migration) Parameters Type Name Description IMigration migration HasMigrationsToApplyDown(Int64) Declaration bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version Returns Type Description Boolean HasMigrationsToApplyRollback() Declaration bool HasMigrationsToApplyRollback() Returns Type Description Boolean HasMigrationsToApplyUp(Nullable<Int64>) Declaration bool HasMigrationsToApplyUp(long? version = null) Parameters Type Name Description Nullable < Int64 > version Returns Type Description Boolean ListMigrations() Declaration void ListMigrations() MigrateDown(Int64) Declaration void MigrateDown(long version) Parameters Type Name Description Int64 version MigrateUp() Declaration void MigrateUp() MigrateUp(Int64) Declaration void MigrateUp(long version) Parameters Type Name Description Int64 version Rollback(Int32) Declaration void Rollback(int steps) Parameters Type Name Description Int32 steps RollbackToVersion(Int64) Declaration void RollbackToVersion(long version) Parameters Type Name Description Int64 version Up(IMigration) Declaration void Up(IMigration migration) Parameters Type Name Description IMigration migration ValidateVersionOrder() Declaration void ValidateVersionOrder()"
  },
  "api/v2.x/FluentMigrator.Runner.IMigrationRunnerConventions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMigrationRunnerConventions.html",
    "title": "Interface IMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerConventions Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationRunnerConventions Properties GetMaintenanceStage Declaration Func<Type, MigrationStage?> GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> GetMigrationInfo Declaration Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > TypeHasMatchingTags Declaration Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > TypeHasTags Declaration Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > TypeIsMigration Declaration Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > TypeIsProfile Declaration Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > TypeIsVersionTableMetaData Declaration Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean >"
  },
  "api/v2.x/FluentMigrator.Runner.IMigrationScope.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMigrationScope.html",
    "title": "Interface IMigrationScope | FluentMigrator documentation",
    "keywords": "Interface IMigrationScope Inherited Members IDisposable.Dispose() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScope : IDisposable Properties IsActive Declaration bool IsActive { get; } Property Value Type Description Boolean Methods Cancel() Declaration void Cancel() Complete() Declaration void Complete()"
  },
  "api/v2.x/FluentMigrator.Runner.IMigrationScopeStarter.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IMigrationScopeStarter.html",
    "title": "Interface IMigrationScopeStarter | FluentMigrator documentation",
    "keywords": "Interface IMigrationScopeStarter Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScopeStarter Methods BeginScope() Declaration IMigrationScope BeginScope() Returns Type Description IMigrationScope"
  },
  "api/v2.x/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html",
    "title": "Class DefaultMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationRunnerConventions Inheritance Object DefaultMigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.dll Syntax public class DefaultMigrationRunnerConventions : IMigrationRunnerConventions Properties GetMaintenanceStage Declaration public Func<Type, MigrationStage?> GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> GetMigrationInfo Declaration public Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > Instance Declaration public static DefaultMigrationRunnerConventions Instance { get; } Property Value Type Description DefaultMigrationRunnerConventions TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions"
  },
  "api/v2.x/FluentMigrator.Runner.Infrastructure.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Infrastructure.html",
    "title": "Namespace FluentMigrator.Runner.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Infrastructure Classes DefaultMigrationRunnerConventions RuntimeHost Interfaces IHostAbstraction"
  },
  "api/v2.x/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html",
    "title": "Interface IHostAbstraction | FluentMigrator documentation",
    "keywords": "Interface IHostAbstraction Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IHostAbstraction Properties BaseDirectory Declaration string BaseDirectory { get; } Property Value Type Description String Methods CreateInstance(IServiceProvider, String, String) Declaration object CreateInstance(IServiceProvider serviceProvider, string assemblyName, string typeName) Parameters Type Name Description IServiceProvider serviceProvider String assemblyName String typeName Returns Type Description Object GetLoadedAssemblies() Declaration IEnumerable<Assembly> GetLoadedAssemblies() Returns Type Description IEnumerable < Assembly >"
  },
  "api/v2.x/FluentMigrator.Runner.Infrastructure.RuntimeHost.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Infrastructure.RuntimeHost.html",
    "title": "Class RuntimeHost | FluentMigrator documentation",
    "keywords": "Class RuntimeHost Inheritance Object RuntimeHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public static class RuntimeHost Properties Current Declaration public static IHostAbstraction Current { get; } Property Value Type Description IHostAbstraction Methods FindAssemblies() Declaration public static IEnumerable<AssemblyName> FindAssemblies() Returns Type Description IEnumerable < AssemblyName > FindAssemblies(String) Declaration public static IEnumerable<AssemblyName> FindAssemblies(string name) Parameters Type Name Description String name Returns Type Description IEnumerable < AssemblyName >"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html",
    "title": "Class AssemblyLoaderFactory | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFactory Inheritance Object AssemblyLoaderFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFactory Methods GetAssemblyLoader(String) Declaration public virtual IAssemblyLoader GetAssemblyLoader(string name) Parameters Type Name Description String name Returns Type Description IAssemblyLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html",
    "title": "Class AssemblyLoaderFromFile | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromFile Inheritance Object AssemblyLoaderFromFile Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromFile : IAssemblyLoader Constructors AssemblyLoaderFromFile(String) Declaration public AssemblyLoaderFromFile(string name) Parameters Type Name Description String name Methods Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html",
    "title": "Class AssemblyLoaderFromName | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromName Inheritance Object AssemblyLoaderFromName Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromName : IAssemblyLoader Constructors AssemblyLoaderFromName(String) Declaration public AssemblyLoaderFromName(string name) Parameters Type Name Description String name Methods Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.html",
    "title": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader Classes AssemblyLoaderFactory AssemblyLoaderFromFile AssemblyLoaderFromName Interfaces IAssemblyLoader"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html",
    "title": "Interface IAssemblyLoader | FluentMigrator documentation",
    "keywords": "Interface IAssemblyLoader Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public interface IAssemblyLoader Methods Load() Declaration Assembly Load() Returns Type Description Assembly"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html",
    "title": "Class DefaultConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Class DefaultConnectionStringProvider Inheritance Object DefaultConnectionStringProvider Implements IConnectionStringProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public class DefaultConnectionStringProvider : IConnectionStringProvider Methods GetConnectionString(IAnnouncer, String, String, String, String) Declaration public string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String Implements IConnectionStringProvider"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.html",
    "title": "Namespace FluentMigrator.Runner.Initialization | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization Classes DefaultConnectionStringProvider RunnerContext TaskExecutor Interfaces IConnectionStringProvider IRunnerContext"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html",
    "title": "Interface IConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringProvider Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public interface IConnectionStringProvider Methods GetConnectionString(IAnnouncer, String, String, String, String) Declaration string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.IRunnerContext.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.IRunnerContext.html",
    "title": "Interface IRunnerContext | FluentMigrator documentation",
    "keywords": "Interface IRunnerContext Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public interface IRunnerContext Properties AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Announcer Declaration IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration object ApplicationContext { get; set; } Property Value Type Description Object Connection Declaration string Connection { get; set; } Property Value Type Description String ConnectionStringConfigPath Declaration string ConnectionStringConfigPath { get; set; } Property Value Type Description String Database Declaration string Database { get; set; } Property Value Type Description String DefaultSchemaName Gets or sets the default schema name Declaration string DefaultSchemaName { get; set; } Property Value Type Description String Namespace Declaration string Namespace { get; set; } Property Value Type Description String NestedNamespaces Declaration bool NestedNamespaces { get; set; } Property Value Type Description Boolean NoConnection Declaration bool NoConnection { get; set; } Property Value Type Description Boolean PreviewOnly Declaration bool PreviewOnly { get; set; } Property Value Type Description Boolean Profile Declaration string Profile { get; set; } Property Value Type Description String ProviderSwitches Declaration string ProviderSwitches { get; set; } Property Value Type Description String StartVersion Declaration long StartVersion { get; set; } Property Value Type Description Int64 Steps Declaration int Steps { get; set; } Property Value Type Description Int32 StopWatch Declaration IStopWatch StopWatch { get; } Property Value Type Description IStopWatch Tags Declaration IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > Targets Declaration string[] Targets { get; set; } Property Value Type Description String [] Task Declaration string Task { get; set; } Property Value Type Description String Timeout Declaration int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > TransactionPerSession Declaration bool TransactionPerSession { get; set; } Property Value Type Description Boolean Version Declaration long Version { get; set; } Property Value Type Description Int64 WorkingDirectory Declaration string WorkingDirectory { get; set; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.RunnerContext.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.RunnerContext.html",
    "title": "Class RunnerContext | FluentMigrator documentation",
    "keywords": "Class RunnerContext Inheritance Object RunnerContext Implements IRunnerContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public class RunnerContext : IRunnerContext Constructors RunnerContext(IAnnouncer) Declaration public RunnerContext(IAnnouncer announcer) Parameters Type Name Description IAnnouncer announcer Properties AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration public bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Announcer Declaration public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration public object ApplicationContext { get; set; } Property Value Type Description Object Connection Declaration public string Connection { get; set; } Property Value Type Description String ConnectionStringConfigPath Declaration public string ConnectionStringConfigPath { get; set; } Property Value Type Description String Database Declaration public string Database { get; set; } Property Value Type Description String DefaultSchemaName Gets or sets the default schema name Declaration public string DefaultSchemaName { get; set; } Property Value Type Description String Namespace Declaration public string Namespace { get; set; } Property Value Type Description String NestedNamespaces Declaration public bool NestedNamespaces { get; set; } Property Value Type Description Boolean NoConnection Declaration public bool NoConnection { get; set; } Property Value Type Description Boolean PreviewOnly Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean Profile Declaration public string Profile { get; set; } Property Value Type Description String ProviderSwitches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 Steps Declaration public int Steps { get; set; } Property Value Type Description Int32 StopWatch Declaration public IStopWatch StopWatch { get; } Property Value Type Description IStopWatch Tags Declaration public IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > Targets Declaration public string[] Targets { get; set; } Property Value Type Description String [] Task Declaration public string Task { get; set; } Property Value Type Description String Timeout Declaration public int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > TransactionPerSession Declaration public bool TransactionPerSession { get; set; } Property Value Type Description Boolean Version Declaration public long Version { get; set; } Property Value Type Description Int64 WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Implements IRunnerContext"
  },
  "api/v2.x/FluentMigrator.Runner.Initialization.TaskExecutor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Initialization.TaskExecutor.html",
    "title": "Class TaskExecutor | FluentMigrator documentation",
    "keywords": "Class TaskExecutor Inheritance Object TaskExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public class TaskExecutor Constructors TaskExecutor(IRunnerContext) Declaration public TaskExecutor(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext TaskExecutor(IRunnerContext, IConnectionStringProvider, AssemblyLoaderFactory, MigrationProcessorFactoryProvider) Declaration public TaskExecutor(IRunnerContext runnerContext, IConnectionStringProvider connectionStringProvider, AssemblyLoaderFactory assemblyLoaderFactory, MigrationProcessorFactoryProvider processorFactoryProvider) Parameters Type Name Description IRunnerContext runnerContext IConnectionStringProvider connectionStringProvider AssemblyLoaderFactory assemblyLoaderFactory MigrationProcessorFactoryProvider processorFactoryProvider Properties ConnectionStringProvider Declaration protected IConnectionStringProvider ConnectionStringProvider { get; } Property Value Type Description IConnectionStringProvider Runner Declaration protected IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner Methods Execute() Declaration public void Execute() GetTargetAssemblies() Declaration protected virtual IEnumerable<Assembly> GetTargetAssemblies() Returns Type Description IEnumerable < Assembly > HasMigrationsToApply() Checks whether the current task will actually run any migrations. Can be used to decide whether it's necessary perform a backup before the migrations are executed. Declaration public bool HasMigrationsToApply() Returns Type Description Boolean Initialize() Declaration protected virtual void Initialize()"
  },
  "api/v2.x/FluentMigrator.Runner.IProfileLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IProfileLoader.html",
    "title": "Interface IProfileLoader | FluentMigrator documentation",
    "keywords": "Interface IProfileLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IProfileLoader Methods ApplyProfiles() Declaration void ApplyProfiles() FindProfilesIn(IAssemblyCollection, String) Declaration IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies String profile Returns Type Description IEnumerable < IMigration >"
  },
  "api/v2.x/FluentMigrator.Runner.IStopWatch.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IStopWatch.html",
    "title": "Interface IStopWatch | FluentMigrator documentation",
    "keywords": "Interface IStopWatch Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IStopWatch Methods ElapsedTime() Declaration TimeSpan ElapsedTime() Returns Type Description TimeSpan Start() Declaration void Start() Stop() Declaration void Stop() Time(Action) Declaration TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan"
  },
  "api/v2.x/FluentMigrator.Runner.IVersionLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.IVersionLoader.html",
    "title": "Interface IVersionLoader | FluentMigrator documentation",
    "keywords": "Interface IVersionLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionLoader Properties AlreadyCreatedVersionSchema Declaration bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean AlreadyCreatedVersionTable Declaration bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean Runner Declaration IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner VersionInfo Declaration IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo VersionTableMetaData Declaration IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Methods DeleteVersion(Int64) Declaration void DeleteVersion(long version) Parameters Type Name Description Int64 version GetVersionTableMetaData() Declaration IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData LoadVersionInfo() Declaration void LoadVersionInfo() RemoveVersionTable() Declaration void RemoveVersionTable() UpdateVersionInfo(Int64) Declaration void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version UpdateVersionInfo(Int64, String) Declaration void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description"
  },
  "api/v2.x/FluentMigrator.Runner.MaintenanceLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.MaintenanceLoader.html",
    "title": "Class MaintenanceLoader | FluentMigrator documentation",
    "keywords": "Class MaintenanceLoader Inheritance Object MaintenanceLoader Implements IMaintenanceLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MaintenanceLoader : IMaintenanceLoader Constructors MaintenanceLoader(IAssemblyCollection, IEnumerable<String>, IMigrationRunnerConventions) Declaration public MaintenanceLoader(IAssemblyCollection assemblyCollection, IEnumerable<string> tags, IMigrationRunnerConventions conventions) Parameters Type Name Description IAssemblyCollection assemblyCollection IEnumerable < String > tags IMigrationRunnerConventions conventions Methods LoadMaintenance(MigrationStage) Declaration public IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo > Implements IMaintenanceLoader"
  },
  "api/v2.x/FluentMigrator.Runner.MigrationRunner.html": {
    "href": "api/v2.x/FluentMigrator.Runner.MigrationRunner.html",
    "title": "Class MigrationRunner | FluentMigrator documentation",
    "keywords": "Class MigrationRunner Inheritance Object MigrationRunner Implements IMigrationRunner IMigrationScopeStarter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunner : IMigrationRunner, IMigrationScopeStarter Constructors MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions) Declaration public MigrationRunner(IAssemblyCollection assemblies, IRunnerContext runnerContext, IMigrationProcessor processor, IVersionTableMetaData versionTableMetaData = null, IMigrationRunnerConventions migrationRunnerConventions = null) Parameters Type Name Description IAssemblyCollection assemblies IRunnerContext runnerContext IMigrationProcessor processor IVersionTableMetaData versionTableMetaData IMigrationRunnerConventions migrationRunnerConventions MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions, IConventionSet) Declaration public MigrationRunner(IAssemblyCollection assemblies, IRunnerContext runnerContext, IMigrationProcessor processor, IVersionTableMetaData versionTableMetaData, IMigrationRunnerConventions migrationRunnerConventions, IConventionSet conventionSet) Parameters Type Name Description IAssemblyCollection assemblies IRunnerContext runnerContext IMigrationProcessor processor IVersionTableMetaData versionTableMetaData IMigrationRunnerConventions migrationRunnerConventions IConventionSet conventionSet MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor) Declaration public MigrationRunner(Assembly assembly, IRunnerContext runnerContext, IMigrationProcessor processor) Parameters Type Name Description Assembly assembly IRunnerContext runnerContext IMigrationProcessor processor MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor, IConventionSet) Declaration public MigrationRunner(Assembly assembly, IRunnerContext runnerContext, IMigrationProcessor processor, IConventionSet conventionSet) Parameters Type Name Description Assembly assembly IRunnerContext runnerContext IMigrationProcessor processor IConventionSet conventionSet Properties CaughtExceptions Declaration public IList<Exception> CaughtExceptions { get; } Property Value Type Description IList < Exception > Conventions Declaration public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions CurrentScope Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope MaintenanceLoader Declaration public IMaintenanceLoader MaintenanceLoader { get; set; } Property Value Type Description IMaintenanceLoader MigrationAssemblies Declaration public IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection MigrationLoader Declaration public IMigrationInformationLoader MigrationLoader { get; set; } Property Value Type Description IMigrationInformationLoader Processor Declaration public IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor ProfileLoader Declaration public IProfileLoader ProfileLoader { get; set; } Property Value Type Description IProfileLoader RunnerContext Declaration public IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext SilentlyFail Declaration public bool SilentlyFail { get; set; } Property Value Type Description Boolean TransactionPerSession Declaration public bool TransactionPerSession { get; } Property Value Type Description Boolean VersionLoader Declaration public IVersionLoader VersionLoader { get; set; } Property Value Type Description IVersionLoader Methods ApplyMaintenance(MigrationStage, Boolean) Declaration public void ApplyMaintenance(MigrationStage stage, bool useAutomaticTransactionManagement) Parameters Type Name Description MigrationStage stage Boolean useAutomaticTransactionManagement ApplyMigrationDown(IMigrationInfo, Boolean) Declaration public virtual void ApplyMigrationDown(IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo Boolean useTransaction ApplyMigrationUp(IMigrationInfo, Boolean) Declaration public virtual void ApplyMigrationUp(IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo Boolean useTransaction ApplyProfiles() Declaration public void ApplyProfiles() BeginScope() Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope Down(IMigration) Declaration public void Down(IMigration migration) Parameters Type Name Description IMigration migration ExecuteExpressions(ICollection<IMigrationExpression>) execute each migration expression in the expression collection Declaration protected void ExecuteExpressions(ICollection<IMigrationExpression> expressions) Parameters Type Name Description ICollection < IMigrationExpression > expressions HasMigrationsToApplyDown(Int64) Declaration public bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version Returns Type Description Boolean HasMigrationsToApplyRollback() Declaration public bool HasMigrationsToApplyRollback() Returns Type Description Boolean HasMigrationsToApplyUp(Nullable<Int64>) Declaration public bool HasMigrationsToApplyUp(long? version = null) Parameters Type Name Description Nullable < Int64 > version Returns Type Description Boolean ListMigrations() Declaration public void ListMigrations() MigrateDown(Int64) Declaration public void MigrateDown(long targetVersion) Parameters Type Name Description Int64 targetVersion MigrateDown(Int64, Boolean) Declaration public void MigrateDown(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion Boolean useAutomaticTransactionManagement MigrateUp() Declaration public void MigrateUp() MigrateUp(Boolean) Declaration public void MigrateUp(bool useAutomaticTransactionManagement) Parameters Type Name Description Boolean useAutomaticTransactionManagement MigrateUp(Int64) Declaration public void MigrateUp(long targetVersion) Parameters Type Name Description Int64 targetVersion MigrateUp(Int64, Boolean) Declaration public void MigrateUp(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion Boolean useAutomaticTransactionManagement Rollback(Int32) Declaration public void Rollback(int steps) Parameters Type Name Description Int32 steps Rollback(Int32, Boolean) Declaration public void Rollback(int steps, bool useAutomaticTransactionManagement) Parameters Type Name Description Int32 steps Boolean useAutomaticTransactionManagement RollbackToVersion(Int64) Declaration public void RollbackToVersion(long version) Parameters Type Name Description Int64 version RollbackToVersion(Int64, Boolean) Declaration public void RollbackToVersion(long version, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 version Boolean useAutomaticTransactionManagement Up(IMigration) Declaration public void Up(IMigration migration) Parameters Type Name Description IMigration migration ValidateVersionOrder() Declaration public void ValidateVersionOrder() Implements IMigrationRunner IMigrationScopeStarter"
  },
  "api/v2.x/FluentMigrator.Runner.MigrationRunnerConventions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.MigrationRunnerConventions.html",
    "title": "Class MigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class MigrationRunnerConventions Inheritance Object MigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunnerConventions : IMigrationRunnerConventions Constructors MigrationRunnerConventions() Declaration public MigrationRunnerConventions() Properties GetMaintenanceStage Declaration public Func<Type, MigrationStage?> GetMaintenanceStage { get; set; } Property Value Type Description Func < Type , Nullable < MigrationStage >> GetMigrationInfo Declaration public Func<Type, IMigrationInfo> GetMigrationInfo { get; set; } Property Value Type Description Func < Type , IMigrationInfo > TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; set; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; set; } Property Value Type Description Func < Type , Boolean > TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; set; } Property Value Type Description Func < Type , Boolean > TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; set; } Property Value Type Description Func < Type , Boolean > TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; set; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions"
  },
  "api/v2.x/FluentMigrator.Runner.MigrationScopeHandler.html": {
    "href": "api/v2.x/FluentMigrator.Runner.MigrationScopeHandler.html",
    "title": "Class MigrationScopeHandler | FluentMigrator documentation",
    "keywords": "Class MigrationScopeHandler Inheritance Object MigrationScopeHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationScopeHandler Constructors MigrationScopeHandler(IMigrationProcessor) Declaration public MigrationScopeHandler(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Properties CurrentScope Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope Methods BeginScope() Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope CreateOrWrapMigrationScope(Boolean) Declaration public IMigrationScope CreateOrWrapMigrationScope(bool transactional = true) Parameters Type Name Description Boolean transactional Returns Type Description IMigrationScope"
  },
  "api/v2.x/FluentMigrator.Runner.MigrationValidator.html": {
    "href": "api/v2.x/FluentMigrator.Runner.MigrationValidator.html",
    "title": "Class MigrationValidator | FluentMigrator documentation",
    "keywords": "Class MigrationValidator Inheritance Object MigrationValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationValidator Constructors MigrationValidator() Declaration public MigrationValidator() MigrationValidator(IAnnouncer, IConventionSet) Declaration public MigrationValidator(IAnnouncer announcer, IConventionSet conventions) Parameters Type Name Description IAnnouncer announcer IConventionSet conventions Methods ApplyConventionsToAndValidateExpressions(IMigration, IEnumerable<IMigrationExpression>) Validates each migration expression that has implemented the ICanBeValidated interface. It throws an InvalidMigrationException exception if validation fails. Declaration public void ApplyConventionsToAndValidateExpressions(IMigration migration, IEnumerable<IMigrationExpression> expressions) Parameters Type Name Description IMigration migration The current migration being run IEnumerable < IMigrationExpression > expressions All the expressions contained in the up or down action"
  },
  "api/v2.x/FluentMigrator.Runner.NoOpMigrationScope.html": {
    "href": "api/v2.x/FluentMigrator.Runner.NoOpMigrationScope.html",
    "title": "Class NoOpMigrationScope | FluentMigrator documentation",
    "keywords": "Class NoOpMigrationScope Inheritance Object NoOpMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class NoOpMigrationScope : IMigrationScope, IDisposable Properties IsActive Declaration public bool IsActive { get; } Property Value Type Description Boolean Methods Cancel() Declaration public void Cancel() Complete() Declaration public void Complete() Dispose() Declaration public void Dispose() Implements IMigrationScope System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html",
    "title": "Class ConnectionlessProcessor | FluentMigrator documentation",
    "keywords": "Class ConnectionlessProcessor Inheritance Object ConnectionlessProcessor Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax public class ConnectionlessProcessor : IMigrationProcessor Constructors ConnectionlessProcessor(IMigrationGenerator, IRunnerContext, IMigrationProcessorOptions) Declaration public ConnectionlessProcessor(IMigrationGenerator generator, IRunnerContext context, IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IRunnerContext context IMigrationProcessorOptions options Properties Announcer Declaration public IAnnouncer Announcer { get; set; } Property Value Type Description IAnnouncer ConnectionString Declaration public string ConnectionString { get; } Property Value Type Description String Context Declaration public IRunnerContext Context { get; set; } Property Value Type Description IRunnerContext DatabaseType Declaration public string DatabaseType { get; } Property Value Type Description String DatabaseTypeAliases Declaration public IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Generator Declaration public IMigrationGenerator Generator { get; set; } Property Value Type Description IMigrationGenerator Options Declaration public IMigrationProcessorOptions Options { get; set; } Property Value Type Description IMigrationProcessorOptions Methods BeginTransaction() Declaration public void BeginTransaction() ColumnExists(String, String, String) Declaration public bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean CommitTransaction() Declaration public void CommitTransaction() ConstraintExists(String, String, String) Declaration public bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean DefaultValueExists(String, String, String, Object) Declaration public bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Dispose() Declaration public void Dispose() Execute(String, Object[]) Declaration public void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Exists(String, Object[]) Declaration public bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean IndexExists(String, String, String) Declaration public bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Process(Expressions.AlterColumnExpression) Declaration public void Process(Expressions.AlterColumnExpression expression) Parameters Type Name Description Expressions.AlterColumnExpression expression Process(Expressions.AlterDefaultConstraintExpression) Declaration public void Process(Expressions.AlterDefaultConstraintExpression expression) Parameters Type Name Description Expressions.AlterDefaultConstraintExpression expression Process(Expressions.AlterSchemaExpression) Declaration public void Process(Expressions.AlterSchemaExpression expression) Parameters Type Name Description Expressions.AlterSchemaExpression expression Process(Expressions.AlterTableExpression) Declaration public void Process(Expressions.AlterTableExpression expression) Parameters Type Name Description Expressions.AlterTableExpression expression Process(Expressions.CreateColumnExpression) Declaration public void Process(Expressions.CreateColumnExpression expression) Parameters Type Name Description Expressions.CreateColumnExpression expression Process(Expressions.CreateConstraintExpression) Declaration public void Process(Expressions.CreateConstraintExpression expression) Parameters Type Name Description Expressions.CreateConstraintExpression expression Process(Expressions.CreateForeignKeyExpression) Declaration public void Process(Expressions.CreateForeignKeyExpression expression) Parameters Type Name Description Expressions.CreateForeignKeyExpression expression Process(Expressions.CreateIndexExpression) Declaration public void Process(Expressions.CreateIndexExpression expression) Parameters Type Name Description Expressions.CreateIndexExpression expression Process(Expressions.CreateSchemaExpression) Declaration public void Process(Expressions.CreateSchemaExpression expression) Parameters Type Name Description Expressions.CreateSchemaExpression expression Process(Expressions.CreateSequenceExpression) Declaration public void Process(Expressions.CreateSequenceExpression expression) Parameters Type Name Description Expressions.CreateSequenceExpression expression Process(Expressions.CreateTableExpression) Declaration public void Process(Expressions.CreateTableExpression expression) Parameters Type Name Description Expressions.CreateTableExpression expression Process(Expressions.DeleteColumnExpression) Declaration public void Process(Expressions.DeleteColumnExpression expression) Parameters Type Name Description Expressions.DeleteColumnExpression expression Process(Expressions.DeleteConstraintExpression) Declaration public void Process(Expressions.DeleteConstraintExpression expression) Parameters Type Name Description Expressions.DeleteConstraintExpression expression Process(Expressions.DeleteDataExpression) Declaration public void Process(Expressions.DeleteDataExpression expression) Parameters Type Name Description Expressions.DeleteDataExpression expression Process(Expressions.DeleteDefaultConstraintExpression) Declaration public void Process(Expressions.DeleteDefaultConstraintExpression expression) Parameters Type Name Description Expressions.DeleteDefaultConstraintExpression expression Process(Expressions.DeleteForeignKeyExpression) Declaration public void Process(Expressions.DeleteForeignKeyExpression expression) Parameters Type Name Description Expressions.DeleteForeignKeyExpression expression Process(Expressions.DeleteIndexExpression) Declaration public void Process(Expressions.DeleteIndexExpression expression) Parameters Type Name Description Expressions.DeleteIndexExpression expression Process(Expressions.DeleteSchemaExpression) Declaration public void Process(Expressions.DeleteSchemaExpression expression) Parameters Type Name Description Expressions.DeleteSchemaExpression expression Process(Expressions.DeleteSequenceExpression) Declaration public void Process(Expressions.DeleteSequenceExpression expression) Parameters Type Name Description Expressions.DeleteSequenceExpression expression Process(Expressions.DeleteTableExpression) Declaration public void Process(Expressions.DeleteTableExpression expression) Parameters Type Name Description Expressions.DeleteTableExpression expression Process(Expressions.InsertDataExpression) Declaration public void Process(Expressions.InsertDataExpression expression) Parameters Type Name Description Expressions.InsertDataExpression expression Process(Expressions.RenameColumnExpression) Declaration public void Process(Expressions.RenameColumnExpression expression) Parameters Type Name Description Expressions.RenameColumnExpression expression Process(Expressions.RenameTableExpression) Declaration public void Process(Expressions.RenameTableExpression expression) Parameters Type Name Description Expressions.RenameTableExpression expression Process(Expressions.UpdateDataExpression) Declaration public void Process(Expressions.UpdateDataExpression expression) Parameters Type Name Description Expressions.UpdateDataExpression expression Process(PerformDBOperationExpression) Declaration public void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected void Process(string sql) Parameters Type Name Description String sql Read(String, Object[]) Declaration public DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet ReadTableData(String, String) Declaration public DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet RollbackTransaction() Declaration public void RollbackTransaction() SchemaExists(String) Declaration public bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean SequenceExists(String, String) Declaration public bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean TableExists(String, String) Declaration public bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DataReaderExtensions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DataReaderExtensions.html",
    "title": "Class DataReaderExtensions | FluentMigrator documentation",
    "keywords": "Class DataReaderExtensions Inheritance Object DataReaderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public static class DataReaderExtensions Methods ReadDataSet(IDataReader) Declaration public static DataSet ReadDataSet(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataSet ReadTable(IDataReader) Declaration public static DataTable ReadTable(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataTable"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html",
    "title": "Class Db2DbFactory | FluentMigrator documentation",
    "keywords": "Class Db2DbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2DbFactory : ReflectionBasedDbFactory, IDbFactory Constructors Db2DbFactory() Declaration public Db2DbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2Processor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2Processor.html",
    "title": "Class Db2Processor | FluentMigrator documentation",
    "keywords": "Class Db2Processor Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Processor : GenericProcessorBase Constructors Db2Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public Db2Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html",
    "title": "Class Db2ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2 Classes Db2DbFactory Db2Processor Db2ProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html",
    "title": "Class Db2ISeriesDbFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2ISeriesDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors Db2ISeriesDbFactory() Declaration public Db2ISeriesDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html",
    "title": "Class Db2ISeriesProcessor | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessor Inheritance Object ProcessorBase GenericProcessorBase Db2ISeriesProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesProcessor : GenericProcessorBase Constructors Db2ISeriesProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public Db2ISeriesProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html",
    "title": "Class Db2ISeriesProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessorFactory Inheritance Object MigrationProcessorFactory Db2ISeriesProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries Classes Db2ISeriesDbFactory Db2ISeriesProcessor Db2ISeriesProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DbFactoryBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DbFactoryBase.html",
    "title": "Class DbFactoryBase | FluentMigrator documentation",
    "keywords": "Class DbFactoryBase Inheritance Object DbFactoryBase ReflectionBasedDbFactory SqlAnywhereDbFactory SqlServerDbFactory Implements IDbFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class DbFactoryBase : IDbFactory Constructors DbFactoryBase() Declaration protected DbFactoryBase() DbFactoryBase(DbProviderFactory) Declaration protected DbFactoryBase(DbProviderFactory factory) Parameters Type Name Description DbProviderFactory factory Properties Factory Declaration protected DbProviderFactory Factory { get; } Property Value Type Description DbProviderFactory Methods CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration public virtual IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand CreateConnection(String) Declaration public IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection CreateFactory() Declaration protected abstract DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html",
    "title": "Class DotConnectOracleDbFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory DotConnectOracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors DotConnectOracleDbFactory() Declaration public DotConnectOracleDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html",
    "title": "Class DotConnectOracleProcessor | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessor Inheritance Object ProcessorBase GenericProcessorBase DotConnectOracleProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleProcessor : GenericProcessorBase Constructors DotConnectOracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, DotConnectOracleDbFactory) Declaration public DotConnectOracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, DotConnectOracleDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options DotConnectOracleDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html",
    "title": "Class DotConnectOracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessorFactory Inheritance Object MigrationProcessorFactory DotConnectOracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.DotConnectOracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle Classes DotConnectOracleDbFactory DotConnectOracleProcessor DotConnectOracleProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html",
    "title": "Class AdoHelper | FluentMigrator documentation",
    "keywords": "Class AdoHelper Inheritance Object AdoHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public static class AdoHelper Methods FormatValue(String) Declaration public static string FormatValue(string value) Parameters Type Name Description String value Returns Type Description String GetIntValue(Object) Declaration public static int? GetIntValue(object val) Parameters Type Name Description Object val Returns Type Description Nullable < Int32 > GetStringValue(Object) Declaration public static string GetStringValue(object val) Parameters Type Name Description Object val Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html",
    "title": "Class ColumnInfo | FluentMigrator documentation",
    "keywords": "Class ColumnInfo Inheritance Object ColumnInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ColumnInfo Properties CharacterLength Declaration public int? CharacterLength { get; } Property Value Type Description Nullable < Int32 > CustomType Declaration public string CustomType { get; } Property Value Type Description String DBType Declaration public DbType? DBType { get; } Property Value Type Description Nullable < DbType > DefaultValue Declaration public object DefaultValue { get; } Property Value Type Description Object FieldSubType Declaration public int? FieldSubType { get; } Property Value Type Description Nullable < Int32 > FieldType Declaration public int? FieldType { get; } Property Value Type Description Nullable < Int32 > FieldTypeName Declaration public string FieldTypeName { get; } Property Value Type Description String IsNullable Declaration public bool IsNullable { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Position Declaration public int Position { get; } Property Value Type Description Int32 Precision Declaration public int? Precision { get; } Property Value Type Description Nullable < Int32 > Size Declaration public int? Size { get; } Property Value Type Description Nullable < Int32 > TableName Declaration public string TableName { get; } Property Value Type Description String Methods Read(FirebirdProcessor, TableInfo) Declaration public static List<ColumnInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ColumnInfo >"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html",
    "title": "Class ConstraintInfo | FluentMigrator documentation",
    "keywords": "Class ConstraintInfo Inheritance Object ConstraintInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ConstraintInfo Properties DeleteRule Declaration public Rule DeleteRule { get; } Property Value Type Description Rule ForeignIndex Declaration public IndexInfo ForeignIndex { get; } Property Value Type Description IndexInfo IndexName Declaration public string IndexName { get; } Property Value Type Description String IsForeignKey Declaration public bool IsForeignKey { get; } Property Value Type Description Boolean IsNotNull Declaration public bool IsNotNull { get; } Property Value Type Description Boolean IsPrimaryKey Declaration public bool IsPrimaryKey { get; } Property Value Type Description Boolean IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String UpdateRule Declaration public Rule UpdateRule { get; } Property Value Type Description Rule Methods Read(FirebirdProcessor, TableInfo) Declaration public static List<ConstraintInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ConstraintInfo >"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html",
    "title": "Class FirebirdDbFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory FirebirdDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors FirebirdDbFactory() Declaration public FirebirdDbFactory() Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides ReflectionBasedDbFactory.CreateFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html",
    "title": "Class FirebirdOptions | FluentMigrator documentation",
    "keywords": "Class FirebirdOptions Inheritance Object FirebirdOptions Implements ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdOptions : ICloneable Constructors FirebirdOptions() Declaration public FirebirdOptions() Fields MaxNameLength Maximum internal length of names in firebird is 31 characters Declaration public static readonly int MaxNameLength Field Value Type Description Int32 Properties ForceQuote Gets or sets a value indicating whether all names should be quoted unconditionally. Declaration public bool ForceQuote { get; set; } Property Value Type Description Boolean PackKeyNames Declaration public bool PackKeyNames { get; set; } Property Value Type Description Boolean TransactionModel Which transaction model to use if any to work around firebird's DDL restrictions Declaration public FirebirdTransactionModel TransactionModel { get; set; } Property Value Type Description FirebirdTransactionModel TruncateLongNames Firebird only supports constraint, table, column, etc. names up to 31 characters Declaration public bool TruncateLongNames { get; set; } Property Value Type Description Boolean VirtualLock Virtually lock tables and columns touched by DDL statements in a transaction Declaration public bool VirtualLock { get; set; } Property Value Type Description Boolean Methods ApplyProviderSwitches(String) Declaration public FirebirdOptions ApplyProviderSwitches(string providerSwitches) Parameters Type Name Description String providerSwitches Returns Type Description FirebirdOptions AutoCommitBehaviour() Declaration public static FirebirdOptions AutoCommitBehaviour() Returns Type Description FirebirdOptions Clone() Declaration public object Clone() Returns Type Description Object CommitOnCheckFailBehaviour() Declaration public static FirebirdOptions CommitOnCheckFailBehaviour() Returns Type Description FirebirdOptions StandardBehaviour() Declaration public static FirebirdOptions StandardBehaviour() Returns Type Description FirebirdOptions Implements System.ICloneable"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpression.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpression.html",
    "title": "Class FirebirdProcessedExpression | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessedExpression Inheritance Object FirebirdProcessedExpressionBase FirebirdProcessedExpression Inherited Members FirebirdProcessedExpressionBase.expressionType FirebirdProcessedExpressionBase.Processor FirebirdProcessedExpressionBase.Expression FirebirdProcessedExpressionBase.GenerateSql(IMigrationExpression) FirebirdProcessedExpressionBase.Run(IMigrationExpression, IDbConnection, IDbTransaction) FirebirdProcessedExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class FirebirdProcessedExpression : FirebirdProcessedExpressionBase Constructors FirebirdProcessedExpression(IMigrationExpression, Type, FirebirdProcessor) Declaration public FirebirdProcessedExpression(IMigrationExpression expression, Type expressionType, FirebirdProcessor processor) Parameters Type Name Description IMigrationExpression expression Type expressionType FirebirdProcessor processor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpression-1.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpression-1.html",
    "title": "Class FirebirdProcessedExpression<T> | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessedExpression<T> Inheritance Object FirebirdProcessedExpressionBase FirebirdProcessedExpression<T> Inherited Members FirebirdProcessedExpressionBase.expressionType FirebirdProcessedExpressionBase.Processor FirebirdProcessedExpressionBase.Expression FirebirdProcessedExpressionBase.GenerateSql(IMigrationExpression) FirebirdProcessedExpressionBase.Run(IMigrationExpression, IDbConnection, IDbTransaction) FirebirdProcessedExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class FirebirdProcessedExpression<T> : FirebirdProcessedExpressionBase where T : IMigrationExpression Type Parameters Name Description T Constructors FirebirdProcessedExpression(T, FirebirdProcessor) Declaration public FirebirdProcessedExpression(T expression, FirebirdProcessor processor) Parameters Type Name Description T expression FirebirdProcessor processor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpressionBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessedExpressionBase.html",
    "title": "Class FirebirdProcessedExpressionBase | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessedExpressionBase Inheritance Object FirebirdProcessedExpressionBase FirebirdProcessedExpression FirebirdProcessedExpression<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public abstract class FirebirdProcessedExpressionBase Constructors FirebirdProcessedExpressionBase(IMigrationExpression, Type, FirebirdProcessor) Declaration protected FirebirdProcessedExpressionBase(IMigrationExpression expression, Type expressionType, FirebirdProcessor processor) Parameters Type Name Description IMigrationExpression expression Type expressionType FirebirdProcessor processor Fields expressionType Declaration protected Type expressionType Field Value Type Description Type Properties Expression Declaration public IMigrationExpression Expression { get; } Property Value Type Description IMigrationExpression Processor Declaration public FirebirdProcessor Processor { get; } Property Value Type Description FirebirdProcessor Methods GenerateSql(IMigrationExpression) Declaration protected string GenerateSql(IMigrationExpression expression) Parameters Type Name Description IMigrationExpression expression Returns Type Description String Run(IMigrationExpression, IDbConnection, IDbTransaction) Declaration protected void Run(IMigrationExpression expression, IDbConnection connection, IDbTransaction transaction) Parameters Type Name Description IMigrationExpression expression IDbConnection connection IDbTransaction transaction ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html",
    "title": "Class FirebirdProcessor | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessor Inheritance Object ProcessorBase GenericProcessorBase FirebirdProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdProcessor : GenericProcessorBase Constructors FirebirdProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory, FirebirdOptions) Declaration public FirebirdProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory, FirebirdOptions fbOptions) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory FirebirdOptions fbOptions Fields DDLCreatedColumns Declaration protected Dictionary<string, List<string>> DDLCreatedColumns Field Value Type Description Dictionary < String , List < String >> DDLCreatedTables Declaration protected List<string> DDLCreatedTables Field Value Type Description List < String > DDLTouchedColumns Declaration protected Dictionary<string, List<string>> DDLTouchedColumns Field Value Type Description Dictionary < String , List < String >> DDLTouchedTables Declaration protected List<string> DDLTouchedTables Field Value Type Description List < String > truncator Declaration protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties Announcer Declaration public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases FBOptions Declaration public FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions Generator Declaration public IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator IsFirebird3 Declaration public bool IsFirebird3 { get; } Property Value Type Description Boolean Methods AutoCommit() Declaration public virtual void AutoCommit() BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() CheckColumn(String, IEnumerable<String>) Declaration public void CheckColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns CheckColumn(String, String) Declaration public void CheckColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName CheckTable(String) Declaration public void CheckTable(string tableName) Parameters Type Name Description String tableName ClearDDLFollowers() Declaration protected void ClearDDLFollowers() ClearLocks() Declaration protected void ClearLocks() ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) CommitRetaining() Declaration public virtual void CommitRetaining() CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) CreateTriggerExpression(String, TriggerInfo) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, TriggerInfo trigger) Parameters Type Name Description String tableName TriggerInfo trigger Returns Type Description PerformDBOperationExpression CreateTriggerExpression(String, String, Boolean, TriggerEvent, String) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, string triggerName, bool onBefore, TriggerEvent onEvent, string triggerBody) Parameters Type Name Description String tableName String triggerName Boolean onBefore TriggerEvent onEvent String triggerBody Returns Type Description PerformDBOperationExpression DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) DeleteTriggerExpression(String, String) Declaration public PerformDBOperationExpression DeleteTriggerExpression(string tableName, string triggerName) Parameters Type Name Description String tableName String triggerName Returns Type Description PerformDBOperationExpression Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) InternalProcess(String) Declaration protected void InternalProcess(string sql) Parameters Type Name Description String sql IsColumnCreated(String, String) Declaration protected bool IsColumnCreated(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description Boolean IsRunningOutOfMigrationScope() Declaration public bool IsRunningOutOfMigrationScope() Returns Type Description Boolean IsTableCreated(String) Declaration protected bool IsTableCreated(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean LockColumn(String, IEnumerable<String>) Declaration public void LockColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns LockColumn(String, String) Declaration public void LockColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName LockTable(String) Declaration public void LockTable(string tableName) Parameters Type Name Description String tableName Process(AlterSchemaExpression) Declaration public override void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Process(CreateConstraintExpression) Declaration public override void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Process(CreateForeignKeyExpression) Declaration public override void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Process(CreateIndexExpression) Declaration public override void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Process(CreateSequenceExpression) Declaration public override void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Process(DeleteConstraintExpression) Declaration public override void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Process(DeleteForeignKeyExpression) Declaration public override void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Process(DeleteIndexExpression) Declaration public override void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Process(DeleteSchemaExpression) Declaration public override void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Process(DeleteSequenceExpression) Declaration public override void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Process(Expressions.AlterColumnExpression) Declaration public override void Process(Expressions.AlterColumnExpression expression) Parameters Type Name Description Expressions.AlterColumnExpression expression Process(Expressions.AlterDefaultConstraintExpression) Declaration public override void Process(Expressions.AlterDefaultConstraintExpression expression) Parameters Type Name Description Expressions.AlterDefaultConstraintExpression expression Process(Expressions.AlterTableExpression) Declaration public override void Process(Expressions.AlterTableExpression expression) Parameters Type Name Description Expressions.AlterTableExpression expression Process(Expressions.CreateColumnExpression) Declaration public override void Process(Expressions.CreateColumnExpression expression) Parameters Type Name Description Expressions.CreateColumnExpression expression Process(Expressions.CreateTableExpression) Declaration public override void Process(Expressions.CreateTableExpression expression) Parameters Type Name Description Expressions.CreateTableExpression expression Process(Expressions.DeleteColumnExpression) Declaration public override void Process(Expressions.DeleteColumnExpression expression) Parameters Type Name Description Expressions.DeleteColumnExpression expression Process(Expressions.DeleteDataExpression) Declaration public override void Process(Expressions.DeleteDataExpression expression) Parameters Type Name Description Expressions.DeleteDataExpression expression Process(Expressions.DeleteDefaultConstraintExpression) Declaration public override void Process(Expressions.DeleteDefaultConstraintExpression expression) Parameters Type Name Description Expressions.DeleteDefaultConstraintExpression expression Process(Expressions.DeleteTableExpression) Declaration public override void Process(Expressions.DeleteTableExpression expression) Parameters Type Name Description Expressions.DeleteTableExpression expression Process(Expressions.InsertDataExpression) Declaration public override void Process(Expressions.InsertDataExpression expression) Parameters Type Name Description Expressions.InsertDataExpression expression Process(Expressions.RenameColumnExpression) Declaration public override void Process(Expressions.RenameColumnExpression expression) Parameters Type Name Description Expressions.RenameColumnExpression expression Process(Expressions.RenameTableExpression) Declaration public override void Process(Expressions.RenameTableExpression expression) Parameters Type Name Description Expressions.RenameTableExpression expression Process(Expressions.UpdateDataExpression) Declaration public override void Process(Expressions.UpdateDataExpression expression) Parameters Type Name Description Expressions.UpdateDataExpression expression Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) RegisterColumnCreation(String, String) Declaration protected void RegisterColumnCreation(string tableName, string columnName) Parameters Type Name Description String tableName String columnName RegisterTableCreation(String) Declaration protected void RegisterTableCreation(string tableName) Parameters Type Name Description String tableName RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) TriggerExists(String, String, String) Declaration public virtual bool TriggerExists(string schemaName, string tableName, string triggerName) Parameters Type Name Description String schemaName String tableName String triggerName Returns Type Description Boolean Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html",
    "title": "Class FirebirdProcessorFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessorFactory Inheritance Object MigrationProcessorFactory FirebirdProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors FirebirdProcessorFactory() Declaration public FirebirdProcessorFactory() FirebirdProcessorFactory(FirebirdOptions) Declaration public FirebirdProcessorFactory(FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions Properties FbOptions Declaration public FirebirdOptions FbOptions { get; set; } Property Value Type Description FirebirdOptions Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html",
    "title": "Class FirebirdSchemaProvider | FluentMigrator documentation",
    "keywords": "Class FirebirdSchemaProvider Inheritance Object FirebirdSchemaProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdSchemaProvider Constructors FirebirdSchemaProvider(FirebirdProcessor, FirebirdQuoter) Declaration public FirebirdSchemaProvider(FirebirdProcessor processor, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor FirebirdQuoter quoter Properties Processor Declaration public FirebirdProcessor Processor { get; protected set; } Property Value Type Description FirebirdProcessor Methods GetColumnDefinition(String, String) Declaration public ColumnDefinition GetColumnDefinition(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description ColumnDefinition GetIndex(String, String) Declaration public IndexDefinition GetIndex(string tableName, string indexName) Parameters Type Name Description String tableName String indexName Returns Type Description IndexDefinition GetSequence(String) Declaration public SequenceInfo GetSequence(string sequenceName) Parameters Type Name Description String sequenceName Returns Type Description SequenceInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html",
    "title": "Enum FirebirdTransactionModel | FluentMigrator documentation",
    "keywords": "Enum FirebirdTransactionModel Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum FirebirdTransactionModel Fields Name Description AutoCommit Automaticaly commits every processed statement AutoCommitOnCheckFail Automatically starts a new transaction when a virtual lock check fails None Don't manage transactions"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Firebird Classes AdoHelper ColumnInfo ConstraintInfo FirebirdDbFactory FirebirdOptions FirebirdProcessedExpression FirebirdProcessedExpression<T> FirebirdProcessedExpressionBase FirebirdProcessor FirebirdProcessorFactory FirebirdSchemaProvider IndexInfo SequenceInfo TableInfo TriggerInfo Enums FirebirdTransactionModel TriggerEvent"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html",
    "title": "Class IndexInfo | FluentMigrator documentation",
    "keywords": "Class IndexInfo Inheritance Object IndexInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class IndexInfo Properties Columns Declaration public List<string> Columns { get; } Property Value Type Description List < String > IsAscending Declaration public bool IsAscending { get; } Property Value Type Description Boolean IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String TableName Declaration public string TableName { get; } Property Value Type Description String Methods Read(FirebirdProcessor, TableInfo) Declaration public static List<IndexInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < IndexInfo > Read(FirebirdProcessor, String) Declaration public static IndexInfo Read(FirebirdProcessor processor, string indexName) Parameters Type Name Description FirebirdProcessor processor String indexName Returns Type Description IndexInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html",
    "title": "Class SequenceInfo | FluentMigrator documentation",
    "keywords": "Class SequenceInfo Inheritance Object SequenceInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class SequenceInfo Properties CurrentValue Declaration public int CurrentValue { get; } Property Value Type Description Int32 Name Declaration public string Name { get; } Property Value Type Description String Methods Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static SequenceInfo Read(FirebirdProcessor processor, string sequenceName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String sequenceName FirebirdQuoter quoter Returns Type Description SequenceInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TableInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TableInfo.html",
    "title": "Class TableInfo | FluentMigrator documentation",
    "keywords": "Class TableInfo Inheritance Object TableInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TableInfo Constructors TableInfo(DataRow) Declaration public TableInfo(DataRow drMeta) Parameters Type Name Description DataRow drMeta TableInfo(String, Boolean) Declaration public TableInfo(string name, bool exists) Parameters Type Name Description String name Boolean exists Properties Exists Declaration public bool Exists { get; } Property Value Type Description Boolean Name Declaration public string Name { get; } Property Value Type Description String Methods Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static TableInfo Read(FirebirdProcessor processor, string tableName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String tableName FirebirdQuoter quoter Returns Type Description TableInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html",
    "title": "Enum TriggerEvent | FluentMigrator documentation",
    "keywords": "Enum TriggerEvent Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum TriggerEvent Fields Name Description Delete Insert Update"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html",
    "title": "Class TriggerInfo | FluentMigrator documentation",
    "keywords": "Class TriggerInfo Inheritance Object TriggerInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TriggerInfo Properties Before Declaration public bool Before { get; } Property Value Type Description Boolean Body Declaration public string Body { get; } Property Value Type Description String Event Declaration public TriggerEvent Event { get; } Property Value Type Description TriggerEvent Name Declaration public string Name { get; } Property Value Type Description String OnDelete Declaration public bool OnDelete { get; } Property Value Type Description Boolean OnInsert Declaration public bool OnInsert { get; } Property Value Type Description Boolean OnUpdate Declaration public bool OnUpdate { get; } Property Value Type Description Boolean Sequence Declaration public int Sequence { get; } Property Value Type Description Int32 Type Declaration public int Type { get; } Property Value Type Description Int32 Methods Read(FirebirdProcessor, TableInfo) Declaration public static List<TriggerInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < TriggerInfo >"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.GenericProcessorBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.GenericProcessorBase.html",
    "title": "Class GenericProcessorBase | FluentMigrator documentation",
    "keywords": "Class GenericProcessorBase Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Db2ISeriesProcessor DotConnectOracleProcessor FirebirdProcessor HanaProcessor MySqlProcessor OracleProcessor PostgresProcessor RedshiftProcessor SqlAnywhereProcessor SQLiteProcessor SqlServer2000Processor SqlServerProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.DatabaseType ProcessorBase.DatabaseTypeAliases ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Process(String) ProcessorBase.ReadTableData(String, String) ProcessorBase.Read(String, Object[]) ProcessorBase.Exists(String, Object[]) ProcessorBase.Execute(String, Object[]) ProcessorBase.SchemaExists(String) ProcessorBase.TableExists(String, String) ProcessorBase.ColumnExists(String, String, String) ProcessorBase.ConstraintExists(String, String, String) ProcessorBase.IndexExists(String, String, String) ProcessorBase.SequenceExists(String, String) ProcessorBase.DefaultValueExists(String, String, String, Object) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericProcessorBase : ProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors GenericProcessorBase(IDbConnection, IDbFactory, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration protected GenericProcessorBase(IDbConnection connection, IDbFactory factory, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IDbFactory factory IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options Properties Connection Declaration public IDbConnection Connection { get; protected set; } Property Value Type Description IDbConnection ConnectionString Declaration public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString Factory Declaration public IDbFactory Factory { get; protected set; } Property Value Type Description IDbFactory Transaction Declaration public IDbTransaction Transaction { get; protected set; } Property Value Type Description IDbTransaction Methods BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) EnsureConnectionIsClosed() Declaration protected virtual void EnsureConnectionIsClosed() EnsureConnectionIsOpen() Declaration protected virtual void EnsureConnectionIsOpen() RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html",
    "title": "Class HanaDbFactory | FluentMigrator documentation",
    "keywords": "Class HanaDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory HanaDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors HanaDbFactory() Declaration public HanaDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html",
    "title": "Class HanaProcessor | FluentMigrator documentation",
    "keywords": "Class HanaProcessor Inheritance Object ProcessorBase GenericProcessorBase HanaProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaProcessor : GenericProcessorBase Constructors HanaProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public HanaProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html",
    "title": "Class HanaProcessorFactory | FluentMigrator documentation",
    "keywords": "Class HanaProcessorFactory Inheritance Object MigrationProcessorFactory HanaProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Hana.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Hana Classes HanaDbFactory HanaProcessor HanaProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.html",
    "title": "Namespace FluentMigrator.Runner.Processors | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors Classes ConnectionlessProcessor DataReaderExtensions DbFactoryBase GenericProcessorBase MigrationProcessorFactory MigrationProcessorFactoryProvider ProcessorBase ProcessorOptions ReflectionBasedDbFactory ReflectionBasedDbFactory.TestEntry Interfaces IDbFactory IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.IDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.IDbFactory.html",
    "title": "Interface IDbFactory | FluentMigrator documentation",
    "keywords": "Interface IDbFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDbFactory Methods CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand CreateConnection(String) Declaration IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html",
    "title": "Interface IMigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationProcessorFactory Properties Name Declaration string Name { get; } Property Value Type Description String Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor IsForProvider(String) Declaration bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Jet.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Jet Classes JetProcessor JetProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Jet.JetProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Jet.JetProcessor.html",
    "title": "Class JetProcessor | FluentMigrator documentation",
    "keywords": "Class JetProcessor Inheritance Object ProcessorBase JetProcessor Implements IMigrationProcessor Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetProcessor : ProcessorBase Constructors JetProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration public JetProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options Properties Connection Declaration public OleDbConnection Connection { get; } Property Value Type Description OleDbConnection ConnectionString Declaration public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Transaction Declaration public OleDbTransaction Transaction { get; } Property Value Type Description OleDbTransaction Methods BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) EnsureConnectionIsClosed() Declaration protected void EnsureConnectionIsClosed() EnsureConnectionIsOpen() Declaration protected void EnsureConnectionIsOpen() Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() SchemaExists(String) Declaration public override bool SchemaExists(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html",
    "title": "Class JetProcessorFactory | FluentMigrator documentation",
    "keywords": "Class JetProcessorFactory Inheritance Object MigrationProcessorFactory JetProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html",
    "title": "Class MigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Db2ISeriesProcessorFactory DotConnectOracleProcessorFactory FirebirdProcessorFactory HanaProcessorFactory JetProcessorFactory MySql4ProcessorFactory MySql5ProcessorFactory OracleManagedProcessorFactory OracleProcessorFactory PostgresProcessorFactory RedshiftProcessorFactory SqlAnywhere16ProcessorFactory SQLiteProcessorFactory SqlServer2000ProcessorFactory SqlServer2005ProcessorFactory SqlServer2008ProcessorFactory SqlServer2012ProcessorFactory SqlServer2014ProcessorFactory SqlServer2016ProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class MigrationProcessorFactory : IMigrationProcessorFactory Properties Name Declaration public virtual string Name { get; } Property Value Type Description String Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public abstract IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor IsForProvider(String) Declaration public virtual bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html",
    "title": "Class MigrationProcessorFactoryProvider | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactoryProvider Inheritance Object MigrationProcessorFactoryProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax public class MigrationProcessorFactoryProvider Properties ProcessorTypes Declaration public static IEnumerable<string> ProcessorTypes { get; } Property Value Type Description IEnumerable < String > RegisteredFactories Declaration public static IEnumerable<IMigrationProcessorFactory> RegisteredFactories { get; } Property Value Type Description IEnumerable < IMigrationProcessorFactory > Methods GetFactory(String) Declaration public virtual IMigrationProcessorFactory GetFactory(string name) Parameters Type Name Description String name Returns Type Description IMigrationProcessorFactory ListAvailableProcessorTypes() Declaration public string ListAvailableProcessorTypes() Returns Type Description String Register(IMigrationProcessorFactory) Declaration public static void Register(IMigrationProcessorFactory factory) Parameters Type Name Description IMigrationProcessorFactory factory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MySql.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Processors.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.MySql Classes MySql4ProcessorFactory MySql5ProcessorFactory MySqlDbFactory MySqlProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html",
    "title": "Class MySql4ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql4ProcessorFactory Inheritance Object MigrationProcessorFactory MySql4ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html",
    "title": "Class MySql5ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql5ProcessorFactory Inheritance Object MigrationProcessorFactory MySql5ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html",
    "title": "Class MySqlDbFactory | FluentMigrator documentation",
    "keywords": "Class MySqlDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory MySqlDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors MySqlDbFactory() Declaration public MySqlDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html",
    "title": "Class MySqlProcessor | FluentMigrator documentation",
    "keywords": "Class MySqlProcessor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlProcessor : GenericProcessorBase Constructors MySqlProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public MySqlProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(Expressions.RenameColumnExpression) Declaration public override void Process(Expressions.RenameColumnExpression expression) Parameters Type Name Description Expressions.RenameColumnExpression expression Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Oracle Classes OracleDbFactory OracleManagedDbFactory OracleManagedProcessorFactory OracleProcessor OracleProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html",
    "title": "Class OracleDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors OracleDbFactory() Declaration public OracleDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html",
    "title": "Class OracleManagedDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleManagedDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors OracleManagedDbFactory() Declaration public OracleManagedDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html",
    "title": "Class OracleManagedProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedProcessorFactory Inheritance Object MigrationProcessorFactory OracleManagedProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html",
    "title": "Class OracleProcessor | FluentMigrator documentation",
    "keywords": "Class OracleProcessor Inheritance Object ProcessorBase GenericProcessorBase OracleProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessor : GenericProcessorBase Constructors OracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public OracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html",
    "title": "Class OracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleProcessorFactory Inheritance Object MigrationProcessorFactory OracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Postgres.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Postgres Classes PostgresDbFactory PostgresProcessor PostgresProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html",
    "title": "Class PostgresDbFactory | FluentMigrator documentation",
    "keywords": "Class PostgresDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory PostgresDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors PostgresDbFactory() Declaration public PostgresDbFactory() Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides ReflectionBasedDbFactory.CreateFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html",
    "title": "Class PostgresProcessor | FluentMigrator documentation",
    "keywords": "Class PostgresProcessor Inheritance Object ProcessorBase GenericProcessorBase PostgresProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresProcessor : GenericProcessorBase Constructors PostgresProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public PostgresProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html",
    "title": "Class PostgresProcessorFactory | FluentMigrator documentation",
    "keywords": "Class PostgresProcessorFactory Inheritance Object MigrationProcessorFactory PostgresProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.ProcessorBase.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.ProcessorBase.html",
    "title": "Class ProcessorBase | FluentMigrator documentation",
    "keywords": "Class ProcessorBase Inheritance Object ProcessorBase GenericProcessorBase JetProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ProcessorBase : IMigrationProcessor, IQuerySchema, IDisposable Constructors ProcessorBase(IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration protected ProcessorBase(IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options Fields Announcer Declaration protected readonly IAnnouncer Announcer Field Value Type Description IAnnouncer Generator Declaration protected readonly IMigrationGenerator Generator Field Value Type Description IMigrationGenerator Properties ConnectionString Declaration public abstract string ConnectionString { get; } Property Value Type Description String DatabaseType Declaration public abstract string DatabaseType { get; } Property Value Type Description String DatabaseTypeAliases Declaration public abstract IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Options Declaration public IMigrationProcessorOptions Options { get; } Property Value Type Description IMigrationProcessorOptions WasCommitted Declaration public bool WasCommitted { get; protected set; } Property Value Type Description Boolean Methods BeginTransaction() Declaration public virtual void BeginTransaction() ColumnExists(String, String, String) Declaration public abstract bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean CommitTransaction() Declaration public virtual void CommitTransaction() ConstraintExists(String, String, String) Declaration public abstract bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean DefaultValueExists(String, String, String, Object) Declaration public abstract bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Dispose() Declaration public void Dispose() Dispose(Boolean) Declaration protected abstract void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Execute(String, Object[]) Declaration public abstract void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Exists(String, Object[]) Declaration public abstract bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean IndexExists(String, String, String) Declaration public abstract bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Process(AlterColumnExpression) Declaration public virtual void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Process(AlterDefaultConstraintExpression) Declaration public virtual void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Process(AlterSchemaExpression) Declaration public virtual void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Process(AlterTableExpression) Declaration public virtual void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Process(CreateColumnExpression) Declaration public virtual void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Process(CreateConstraintExpression) Declaration public virtual void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Process(CreateForeignKeyExpression) Declaration public virtual void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Process(CreateIndexExpression) Declaration public virtual void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Process(CreateSchemaExpression) Declaration public virtual void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Process(CreateSequenceExpression) Declaration public virtual void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Process(CreateTableExpression) Declaration public virtual void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Process(DeleteColumnExpression) Declaration public virtual void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Process(DeleteConstraintExpression) Declaration public virtual void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Process(DeleteDataExpression) Declaration public virtual void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Process(DeleteDefaultConstraintExpression) Declaration public virtual void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Process(DeleteForeignKeyExpression) Declaration public virtual void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Process(DeleteIndexExpression) Declaration public virtual void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Process(DeleteSchemaExpression) Declaration public virtual void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Process(DeleteSequenceExpression) Declaration public virtual void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Process(DeleteTableExpression) Declaration public virtual void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Process(InsertDataExpression) Declaration public virtual void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Process(PerformDBOperationExpression) Declaration public abstract void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(RenameColumnExpression) Declaration public virtual void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Process(RenameTableExpression) Declaration public virtual void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Process(UpdateDataExpression) Declaration public virtual void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Process(String) Declaration protected abstract void Process(string sql) Parameters Type Name Description String sql Read(String, Object[]) Declaration public abstract DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet ReadTableData(String, String) Declaration public abstract DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet RollbackTransaction() Declaration public virtual void RollbackTransaction() SchemaExists(String) Declaration public abstract bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean SequenceExists(String, String) Declaration public abstract bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean TableExists(String, String) Declaration public abstract bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.ProcessorOptions.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.ProcessorOptions.html",
    "title": "Class ProcessorOptions | FluentMigrator documentation",
    "keywords": "Class ProcessorOptions Inheritance Object ProcessorOptions Implements IMigrationProcessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ProcessorOptions : IMigrationProcessorOptions Properties PreviewOnly Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean ProviderSwitches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String Timeout Declaration public int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > Implements IMigrationProcessorOptions"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Redshift.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Redshift Classes RedshiftDbFactory RedshiftProcessor RedshiftProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html",
    "title": "Class RedshiftDbFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory RedshiftDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors RedshiftDbFactory() Declaration public RedshiftDbFactory() Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides ReflectionBasedDbFactory.CreateFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html",
    "title": "Class RedshiftProcessor | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessor Inheritance Object ProcessorBase GenericProcessorBase RedshiftProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftProcessor : GenericProcessorBase Constructors RedshiftProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public RedshiftProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html",
    "title": "Class RedshiftProcessorFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessorFactory Inheritance Object MigrationProcessorFactory RedshiftProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html",
    "title": "Class ReflectionBasedDbFactory | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Db2ISeriesDbFactory DotConnectOracleDbFactory FirebirdDbFactory HanaDbFactory MySqlDbFactory OracleDbFactory OracleManagedDbFactory PostgresDbFactory RedshiftDbFactory SQLiteDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ReflectionBasedDbFactory : DbFactoryBase, IDbFactory Constructors ReflectionBasedDbFactory(ReflectionBasedDbFactory.TestEntry[]) Declaration protected ReflectionBasedDbFactory(params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry [] testEntries ReflectionBasedDbFactory(String, String) Declaration public ReflectionBasedDbFactory(string assemblyName, string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry> entries, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description IEnumerable < ReflectionBasedDbFactory.TestEntry > entries ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry entry, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry entry, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromAppDomainDirectories(string assemblyName, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromDirectories(IEnumerable<string> directories, string assemblyName, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description IEnumerable < String > directories String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html",
    "title": "Class ReflectionBasedDbFactory.TestEntry | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory.TestEntry Inheritance Object ReflectionBasedDbFactory.TestEntry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax protected class TestEntry Constructors TestEntry(String, String) Declaration public TestEntry(string assemblyName, string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Properties AssemblyName Declaration public string AssemblyName { get; } Property Value Type Description String DBProviderFactoryTypeName Declaration public string DBProviderFactoryTypeName { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere Classes SqlAnywhere16ProcessorFactory SqlAnywhereDbFactory SqlAnywhereProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html",
    "title": "Class SqlAnywhere16ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16ProcessorFactory Inheritance Object MigrationProcessorFactory SqlAnywhere16ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor IsForProvider(String) Declaration public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html",
    "title": "Class SqlAnywhereDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereDbFactory Inheritance Object DbFactoryBase SqlAnywhereDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereDbFactory : DbFactoryBase, IDbFactory Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html",
    "title": "Class SqlAnywhereProcessor | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlAnywhereProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public sealed class SqlAnywhereProcessor : GenericProcessorBase Constructors SqlAnywhereProcessor(String, IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public SqlAnywhereProcessor(string databaseType, IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description String databaseType IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SQLite.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SQLite Classes SQLiteDbFactory SQLiteProcessor SQLiteProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html",
    "title": "Class SQLiteDbFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SQLiteDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors SQLiteDbFactory() Declaration public SQLiteDbFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html",
    "title": "Class SQLiteProcessor | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessor Inheritance Object ProcessorBase GenericProcessorBase SQLiteProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteProcessor : GenericProcessorBase Constructors SQLiteProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public SQLiteProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html",
    "title": "Class SQLiteProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessorFactory Inheritance Object MigrationProcessorFactory SQLiteProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlServer Classes SqlServer2000Processor SqlServer2000ProcessorFactory SqlServer2005ProcessorFactory SqlServer2008ProcessorFactory SqlServer2012ProcessorFactory SqlServer2014ProcessorFactory SqlServer2016ProcessorFactory SqlServerCeDbFactory SqlServerCeProcessor SqlServerCeProcessorFactory SqlServerDbFactory SqlServerProcessor SqlServerProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html",
    "title": "Class SqlServer2000Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServer2000Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public sealed class SqlServer2000Processor : GenericProcessorBase Constructors SqlServer2000Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public SqlServer2000Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html",
    "title": "Class SqlServer2000ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2000ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2000ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html",
    "title": "Class SqlServer2005ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2005ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2005ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html",
    "title": "Class SqlServer2008ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2008ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2008ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html",
    "title": "Class SqlServer2012ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2012ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2012ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html",
    "title": "Class SqlServer2014ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2014ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2014ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html",
    "title": "Class SqlServer2016ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2016ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2016ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html",
    "title": "Class SqlServerCeDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeDbFactory Inheritance Object SqlServerCeDbFactory Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeDbFactory : ReflectionBasedDbFactory Constructors SqlServerCeDbFactory() Declaration public SqlServerCeDbFactory() Methods CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration public override IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html",
    "title": "Class SqlServerCeProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessor Inheritance Object SqlServerCeProcessor Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public sealed class SqlServerCeProcessor : GenericProcessorBase Constructors SqlServerCeProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public SqlServerCeProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Methods ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html",
    "title": "Class SqlServerCeProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessorFactory Inheritance Object SqlServerCeProcessorFactory Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeProcessorFactory : MigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html",
    "title": "Class SqlServerDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerDbFactory Inheritance Object DbFactoryBase SqlServerDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerDbFactory : DbFactoryBase, IDbFactory Constructors SqlServerDbFactory() Declaration public SqlServerDbFactory() Methods CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() Implements IDbFactory"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html",
    "title": "Class SqlServerProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.Options ProcessorBase.WasCommitted ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public sealed class SqlServerProcessor : GenericProcessorBase Constructors SqlServerProcessor(IEnumerable<String>, IDbConnection, GenericGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration public SqlServerProcessor(IEnumerable<string> databaseTypes, IDbConnection connection, GenericGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IEnumerable < String > databaseTypes IDbConnection connection GenericGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html",
    "title": "Class SqlServerProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessorFactory Inheritance Object MigrationProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor IsForProvider(String) Declaration public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/v2.x/FluentMigrator.Runner.ProfileLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.ProfileLoader.html",
    "title": "Class ProfileLoader | FluentMigrator documentation",
    "keywords": "Class ProfileLoader Inheritance Object ProfileLoader Implements IProfileLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ProfileLoader : IProfileLoader Constructors ProfileLoader(IRunnerContext, IMigrationRunner, IMigrationRunnerConventions) Declaration public ProfileLoader(IRunnerContext runnerContext, IMigrationRunner runner, IMigrationRunnerConventions conventions) Parameters Type Name Description IRunnerContext runnerContext IMigrationRunner runner IMigrationRunnerConventions conventions Properties Conventions Declaration protected IMigrationRunnerConventions Conventions { get; set; } Property Value Type Description IMigrationRunnerConventions Profiles Declaration public IEnumerable<IMigration> Profiles { get; } Property Value Type Description IEnumerable < IMigration > Methods ApplyProfiles() Declaration public void ApplyProfiles() FindProfilesIn(IAssemblyCollection, String) Declaration public IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies String profile Returns Type Description IEnumerable < IMigration > Implements IProfileLoader"
  },
  "api/v2.x/FluentMigrator.Runner.StopWatch.html": {
    "href": "api/v2.x/FluentMigrator.Runner.StopWatch.html",
    "title": "Class StopWatch | FluentMigrator documentation",
    "keywords": "Class StopWatch Inheritance Object StopWatch Implements IStopWatch Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class StopWatch : IStopWatch Fields TimeNow Declaration public static Func<DateTime> TimeNow Field Value Type Description Func < DateTime > Methods ElapsedTime() Declaration public TimeSpan ElapsedTime() Returns Type Description TimeSpan Start() Declaration public void Start() Stop() Declaration public void Stop() Time(Action) Declaration public TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan Implements IStopWatch"
  },
  "api/v2.x/FluentMigrator.Runner.TrackingMigrationScope.html": {
    "href": "api/v2.x/FluentMigrator.Runner.TrackingMigrationScope.html",
    "title": "Class TrackingMigrationScope | FluentMigrator documentation",
    "keywords": "Class TrackingMigrationScope Inheritance Object TrackingMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TrackingMigrationScope : IMigrationScope, IDisposable Constructors TrackingMigrationScope(Action) Declaration public TrackingMigrationScope(Action disposalAction) Parameters Type Name Description Action disposalAction Properties IsActive Declaration public virtual bool IsActive { get; } Property Value Type Description Boolean Methods Cancel() Declaration public void Cancel() Complete() Declaration public void Complete() Dispose() Declaration public void Dispose() DoCancel() Declaration protected virtual void DoCancel() DoComplete() Declaration protected virtual void DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.TransactionalMigrationScope.html": {
    "href": "api/v2.x/FluentMigrator.Runner.TransactionalMigrationScope.html",
    "title": "Class TransactionalMigrationScope | FluentMigrator documentation",
    "keywords": "Class TransactionalMigrationScope Inheritance Object TrackingMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members TrackingMigrationScope.Dispose() TrackingMigrationScope.IsActive TrackingMigrationScope.Complete() TrackingMigrationScope.Cancel() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TransactionalMigrationScope : TrackingMigrationScope, IMigrationScope, IDisposable Constructors TransactionalMigrationScope(IMigrationProcessor, Action) Declaration public TransactionalMigrationScope(IMigrationProcessor migrationProcessor, Action disposalAction) Parameters Type Name Description IMigrationProcessor migrationProcessor Action disposalAction Methods DoCancel() Declaration protected override void DoCancel() Overrides TrackingMigrationScope.DoCancel() DoComplete() Declaration protected override void DoComplete() Overrides TrackingMigrationScope.DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.html",
    "title": "Namespace FluentMigrator.Runner.Versioning | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Versioning Classes VersionDescriptionMigration VersionInfo VersionMigration VersionSchemaMigration VersionUniqueMigration Interfaces IVersionInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.IVersionInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.IVersionInfo.html",
    "title": "Interface IVersionInfo | FluentMigrator documentation",
    "keywords": "Interface IVersionInfo Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionInfo Methods AddAppliedMigration(Int64) Declaration void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration AppliedMigrations() Declaration IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > HasAppliedMigration(Int64) Declaration bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration Returns Type Description Boolean Latest() Declaration long Latest() Returns Type Description Int64"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html",
    "title": "Class VersionDescriptionMigration | FluentMigrator documentation",
    "keywords": "Class VersionDescriptionMigration Inheritance Object MigrationBase Migration VersionDescriptionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionDescriptionMigration : Migration Constructors VersionDescriptionMigration(IVersionTableMetaData) Declaration public VersionDescriptionMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods Down() Declaration public override void Down() Overrides MigrationBase.Down() Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.VersionInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.VersionInfo.html",
    "title": "Class VersionInfo | FluentMigrator documentation",
    "keywords": "Class VersionInfo Inheritance Object VersionInfo Implements IVersionInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionInfo : IVersionInfo Methods AddAppliedMigration(Int64) Declaration public void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration AppliedMigrations() Declaration public IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > HasAppliedMigration(Int64) Declaration public bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration Returns Type Description Boolean Latest() Declaration public long Latest() Returns Type Description Int64 Implements IVersionInfo"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.VersionMigration.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.VersionMigration.html",
    "title": "Class VersionMigration | FluentMigrator documentation",
    "keywords": "Class VersionMigration Inheritance Object MigrationBase Migration VersionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionMigration : Migration Constructors VersionMigration(IVersionTableMetaData) Declaration public VersionMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods Down() Declaration public override void Down() Overrides MigrationBase.Down() Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html",
    "title": "Class VersionSchemaMigration | FluentMigrator documentation",
    "keywords": "Class VersionSchemaMigration Inheritance Object MigrationBase Migration VersionSchemaMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionSchemaMigration : Migration Constructors VersionSchemaMigration(IVersionTableMetaData) Declaration public VersionSchemaMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods Down() Declaration public override void Down() Overrides MigrationBase.Down() Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html": {
    "href": "api/v2.x/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html",
    "title": "Class VersionUniqueMigration | FluentMigrator documentation",
    "keywords": "Class VersionUniqueMigration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration Implements IMigration Inherited Members ForwardOnlyMigration.Down() Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionUniqueMigration : ForwardOnlyMigration Constructors VersionUniqueMigration(IVersionTableMetaData) Declaration public VersionUniqueMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v2.x/FluentMigrator.Runner.VersionLoader.html": {
    "href": "api/v2.x/FluentMigrator.Runner.VersionLoader.html",
    "title": "Class VersionLoader | FluentMigrator documentation",
    "keywords": "Class VersionLoader Inheritance Object VersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class VersionLoader : IVersionLoader Constructors VersionLoader(IMigrationRunner, IAssemblyCollection, IConventionSet, IMigrationRunnerConventions, IVersionTableMetaData) Declaration public VersionLoader(IMigrationRunner runner, IAssemblyCollection assemblies, IConventionSet conventionSet, IMigrationRunnerConventions conventions, IVersionTableMetaData versionTableMetaData = null) Parameters Type Name Description IMigrationRunner runner IAssemblyCollection assemblies IConventionSet conventionSet IMigrationRunnerConventions conventions IVersionTableMetaData versionTableMetaData VersionLoader(IMigrationRunner, Assembly, IConventionSet, IMigrationRunnerConventions) Declaration public VersionLoader(IMigrationRunner runner, Assembly assembly, IConventionSet conventionSet, IMigrationRunnerConventions conventions) Parameters Type Name Description IMigrationRunner runner Assembly assembly IConventionSet conventionSet IMigrationRunnerConventions conventions Properties AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean AlreadyMadeVersionDescription Declaration public bool AlreadyMadeVersionDescription { get; } Property Value Type Description Boolean AlreadyMadeVersionUnique Declaration public bool AlreadyMadeVersionUnique { get; } Property Value Type Description Boolean Assemblies Declaration protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection OwnsVersionSchema Declaration public bool OwnsVersionSchema { get; } Property Value Type Description Boolean Runner Declaration public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version GetVersionTableMetaData() Declaration public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData LoadVersionInfo() Declaration public void LoadVersionInfo() RemoveVersionTable() Declaration public void RemoveVersionTable() UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/v2.x/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html": {
    "href": "api/v2.x/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html",
    "title": "Class DefaultVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Class DefaultVersionTableMetaData Inheritance Object DefaultVersionTableMetaData Implements IVersionTableMetaData ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.dll Syntax public class DefaultVersionTableMetaData : IVersionTableMetaData Constructors DefaultVersionTableMetaData() Declaration public DefaultVersionTableMetaData() DefaultVersionTableMetaData(String) Declaration public DefaultVersionTableMetaData(string schemaName) Parameters Type Name Description String schemaName Properties ApplicationContext Provides access to ApplicationContext object. Declaration public object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. AppliedOnColumnName Declaration public virtual string AppliedOnColumnName { get; } Property Value Type Description String ColumnName Declaration public virtual string ColumnName { get; } Property Value Type Description String DescriptionColumnName Declaration public virtual string DescriptionColumnName { get; } Property Value Type Description String OwnsSchema Declaration public virtual bool OwnsSchema { get; } Property Value Type Description Boolean SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String TableName Declaration public virtual string TableName { get; } Property Value Type Description String UniqueIndexName Declaration public virtual string UniqueIndexName { get; } Property Value Type Description String Implements IVersionTableMetaData ISchemaExpression"
  },
  "api/v2.x/FluentMigrator.Runner.VersionTableInfo.html": {
    "href": "api/v2.x/FluentMigrator.Runner.VersionTableInfo.html",
    "title": "Namespace FluentMigrator.Runner.VersionTableInfo | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.VersionTableInfo Classes DefaultVersionTableMetaData VersionTableMetaDataAttribute Interfaces IVersionTableMetaData"
  },
  "api/v2.x/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html": {
    "href": "api/v2.x/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html",
    "title": "Interface IVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaData Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionTableMetaData Properties ApplicationContext Provides access to ApplicationContext object. Declaration object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. AppliedOnColumnName Declaration string AppliedOnColumnName { get; } Property Value Type Description String ColumnName Declaration string ColumnName { get; } Property Value Type Description String DescriptionColumnName Declaration string DescriptionColumnName { get; } Property Value Type Description String OwnsSchema Declaration bool OwnsSchema { get; } Property Value Type Description Boolean SchemaName Declaration string SchemaName { get; } Property Value Type Description String TableName Declaration string TableName { get; } Property Value Type Description String UniqueIndexName Declaration string UniqueIndexName { get; } Property Value Type Description String"
  },
  "api/v2.x/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html": {
    "href": "api/v2.x/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html",
    "title": "Class VersionTableMetaDataAttribute | FluentMigrator documentation",
    "keywords": "Class VersionTableMetaDataAttribute Inheritance Object Attribute VersionTableMetaDataAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class VersionTableMetaDataAttribute : Attribute, _Attribute Constructors VersionTableMetaDataAttribute() Declaration public VersionTableMetaDataAttribute() Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.SqlAnywhere.html": {
    "href": "api/v2.x/FluentMigrator.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlAnywhere Classes SqlAnywhereExtensions"
  },
  "api/v2.x/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html": {
    "href": "api/v2.x/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html",
    "title": "Class SqlAnywhereExtensions | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereExtensions Inheritance Object SqlAnywhereExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlAnywhere Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public static class SqlAnywhereExtensions Fields ConstraintType Declaration public const string ConstraintType = \"SqlAnywhereConstraintType\" Field Value Type Description String SchemaPassword Declaration public const string SchemaPassword = \"SqlAnywhereSchemaPassword\" Field Value Type Description String WithNullsDistinct Declaration public const string WithNullsDistinct = \"SqlAnywhereNullsDistinct\" Field Value Type Description String Methods Clustered(ICreateConstraintOptionsSyntax) Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression NonClustered(ICreateConstraintOptionsSyntax) Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression Password(ICreateSchemaOptionsSyntax, String) Declaration public static ICreateSchemaOptionsSyntax Password(this ICreateSchemaOptionsSyntax expression, string password) Parameters Type Name Description ICreateSchemaOptionsSyntax expression String password Returns Type Description ICreateSchemaOptionsSyntax UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression"
  },
  "api/v2.x/FluentMigrator.SqlAnywhereConstraintType.html": {
    "href": "api/v2.x/FluentMigrator.SqlAnywhereConstraintType.html",
    "title": "Enum SqlAnywhereConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlAnywhereConstraintType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public enum SqlAnywhereConstraintType Fields Name Description Clustered NonClustered"
  },
  "api/v2.x/FluentMigrator.SqlScriptTokenReplacer.html": {
    "href": "api/v2.x/FluentMigrator.SqlScriptTokenReplacer.html",
    "title": "Class SqlScriptTokenReplacer | FluentMigrator documentation",
    "keywords": "Class SqlScriptTokenReplacer Inheritance Object SqlScriptTokenReplacer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public static class SqlScriptTokenReplacer Methods ReplaceSqlScriptTokens(String, IDictionary<String, String>) Declaration public static string ReplaceSqlScriptTokens(string sqlText, IDictionary<string, string> parameters) Parameters Type Name Description String sqlText IDictionary < String , String > parameters Returns Type Description String"
  },
  "api/v2.x/FluentMigrator.SqlServer.html": {
    "href": "api/v2.x/FluentMigrator.SqlServer.html",
    "title": "Namespace FluentMigrator.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlServer Classes SqlServerExtensions"
  },
  "api/v2.x/FluentMigrator.SqlServer.SqlServerExtensions.html": {
    "href": "api/v2.x/FluentMigrator.SqlServer.SqlServerExtensions.html",
    "title": "Class SqlServerExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerExtensions Inheritance Object SqlServerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlServer Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public static class SqlServerExtensions Fields ConstraintType Declaration public const string ConstraintType = \"SqlServerConstraintType\" Field Value Type Description String IdentityIncrement Declaration public const string IdentityIncrement = \"SqlServerIdentityIncrement\" Field Value Type Description String IdentityInsert Declaration public const string IdentityInsert = \"SqlServerIdentityInsert\" Field Value Type Description String IdentitySeed Declaration public const string IdentitySeed = \"SqlServerIdentitySeed\" Field Value Type Description String IncludesList Declaration public const string IncludesList = \"SqlServerIncludes\" Field Value Type Description String IndexColumnNullsDistinct Declaration public const string IndexColumnNullsDistinct = \"SqlServerIndexColumnNullsDistinct\" Field Value Type Description String OnlineIndex Declaration public const string OnlineIndex = \"SqlServerOnlineIndex\" Field Value Type Description String RowGuidColumn Declaration public const string RowGuidColumn = \"SqlServerRowGuidColumn\" Field Value Type Description String Methods Clustered(ICreateConstraintOptionsSyntax) Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) Makes a column an Identity column using the specified seed and increment values. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, int seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int32 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32) Makes a column an Identity column using the specified seed and increment values with bigint support. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, long seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int64 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk Include(ICreateIndexOnColumnSyntax, String) Declaration public static ICreateIndexNonKeyColumnSyntax Include(this ICreateIndexOnColumnSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOnColumnSyntax expression String columnName Returns Type Description ICreateIndexNonKeyColumnSyntax Include(ICreateIndexOptionsSyntax, String) Declaration public static ICreateIndexOptionsSyntax Include(this ICreateIndexOptionsSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOptionsSyntax expression String columnName Returns Type Description ICreateIndexOptionsSyntax NonClustered(ICreateConstraintOptionsSyntax) Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexColumnUniqueOptionsSyntax The expression NullsDistinct(ICreateIndexMoreColumnOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax NullsDistinct(this ICreateIndexMoreColumnOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsNotDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression) Parameters Type Name Description ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexColumnUniqueOptionsSyntax The expression NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax NullsNotDistinct(this ICreateIndexMoreColumnOptionsSyntax expression) Parameters Type Name Description ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression Online(ICreateConstraintOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateConstraintOptionsSyntax Online(this ICreateConstraintOptionsSyntax expression, bool active = true) Parameters Type Name Description ICreateConstraintOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description ICreateConstraintOptionsSyntax Online(ICreateIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateIndexOptionsSyntax Online(this ICreateIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description ICreateIndexOptionsSyntax Online(IDeleteConstraintInSchemaOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteConstraintInSchemaOptionsSyntax Online(this IDeleteConstraintInSchemaOptionsSyntax expression, bool active = true) Parameters Type Name Description IDeleteConstraintInSchemaOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description IDeleteConstraintInSchemaOptionsSyntax Online(IDeleteIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteIndexOptionsSyntax Online(this IDeleteIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description IDeleteIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description IDeleteIndexOptionsSyntax RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) Declaration public static ICreateTableColumnOptionOrWithColumnSyntax RowGuid(this ICreateTableColumnOptionOrWithColumnSyntax expression) Parameters Type Name Description ICreateTableColumnOptionOrWithColumnSyntax expression Returns Type Description ICreateTableColumnOptionOrWithColumnSyntax UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression WithIdentityInsert(IInsertDataSyntax) Inserts data using Sql Server's IDENTITY INSERT feature. Declaration public static IInsertDataSyntax WithIdentityInsert(this IInsertDataSyntax expression) Parameters Type Name Description IInsertDataSyntax expression Returns Type Description IInsertDataSyntax"
  },
  "api/v2.x/FluentMigrator.SqlServerConstraintType.html": {
    "href": "api/v2.x/FluentMigrator.SqlServerConstraintType.html",
    "title": "Enum SqlServerConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlServerConstraintType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public enum SqlServerConstraintType Fields Name Description Clustered NonClustered"
  },
  "api/v2.x/FluentMigrator.SystemMethods.html": {
    "href": "api/v2.x/FluentMigrator.SystemMethods.html",
    "title": "Enum SystemMethods | FluentMigrator documentation",
    "keywords": "Enum SystemMethods Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum SystemMethods Fields Name Description CurrentDateTime CurrentDateTimeOffset CurrentUser CurrentUTCDateTime NewGuid NewSequentialId"
  },
  "api/v2.x/FluentMigrator.TagBehavior.html": {
    "href": "api/v2.x/FluentMigrator.TagBehavior.html",
    "title": "Enum TagBehavior | FluentMigrator documentation",
    "keywords": "Enum TagBehavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TagBehavior Fields Name Description RequireAll RequireAny"
  },
  "api/v2.x/FluentMigrator.TagsAttribute.html": {
    "href": "api/v2.x/FluentMigrator.TagsAttribute.html",
    "title": "Class TagsAttribute | FluentMigrator documentation",
    "keywords": "Class TagsAttribute Used to filter which migrations are run. Inheritance Object Attribute TagsAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = true)] [CLSCompliant(false)] public class TagsAttribute : Attribute, _Attribute Constructors TagsAttribute(TagBehavior, String[]) Initializes a new instance of the TagsAttribute class. Declaration [CLSCompliant(false)] public TagsAttribute(TagBehavior behavior, params string[] tagNames) Parameters Type Name Description TagBehavior behavior The behavior of the runner when evaluating tagNames . String [] tagNames The names of the tags that are evaluated by the runner. TagsAttribute(String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1) Parameters Type Name Description String tagName1 The tag that is evaluated by the runner. TagsAttribute(String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. TagsAttribute(String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. TagsAttribute(String, String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3, string tagName4) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. String tagName4 The fourth tag that is evaluated by the runner. TagsAttribute(String[]) Initializes a new instance of the TagsAttribute class. Declaration [CLSCompliant(false)] public TagsAttribute(params string[] tagNames) Parameters Type Name Description String [] tagNames The names of the tags that are evaluated by the runner. Properties Behavior Gets the behavior of the runner when evaluating TagNames . Declaration public TagBehavior Behavior { get; } Property Value Type Description TagBehavior TagNames Gets the names of the tags that are evaluated by the runner. Declaration public string[] TagNames { get; } Property Value Type Description String [] Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.TimestampedMigrationAttribute.html": {
    "href": "api/v2.x/FluentMigrator.TimestampedMigrationAttribute.html",
    "title": "Class TimestampedMigrationAttribute | FluentMigrator documentation",
    "keywords": "Class TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members MigrationAttribute.Version MigrationAttribute.TransactionBehavior MigrationAttribute.Description MigrationAttribute.BreakingChange Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [CLSCompliant(false)] public class TimestampedMigrationAttribute : MigrationAttribute, _Attribute Constructors TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration [CLSCompliant(false)] public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. String description A description for the migration. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. String description A description for the migration. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v2.x/FluentMigrator.TransactionBehavior.html": {
    "href": "api/v2.x/FluentMigrator.TransactionBehavior.html",
    "title": "Enum TransactionBehavior | FluentMigrator documentation",
    "keywords": "Enum TransactionBehavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TransactionBehavior Fields Name Description Default The default transaction behavior, meaning 1 transaction per migration if the Processor allows it. None A migration will not use a transaction."
  },
  "api/v2.x/index.html": {
    "href": "api/v2.x/index.html",
    "title": "API for version 2.x | FluentMigrator documentation",
    "keywords": "API for version 2.x Using the in-process runner // Create the announcer to output the migration messages var announcer = new ConsoleAnnouncer(); // Processor specific options (usually none are needed) var options = new ProcessorOptions(); // Use SQLite var processorFactory = new SQLiteProcessorFactory(); // Initialize the processor using (var processor = processorFactory.Create( // The SQLite connection string \"Data Source=test.db\", announcer, options)) { // Configure the runner var context = new RunnerContext(announcer); // Create the migration runner var runner = new MigrationRunner( // Specify the assembly with the migrations typeof(MyMigration).Assembly, context, processor); // Run the migrations runner.MigrateUp(); }"
  },
  "api/v3.x/FluentMigrator.AutoNameContext.html": {
    "href": "api/v3.x/FluentMigrator.AutoNameContext.html",
    "title": "Enum AutoNameContext | FluentMigrator documentation",
    "keywords": "Enum AutoNameContext Sets the context for the automatic name generation Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum AutoNameContext Fields Name Description EmbeddedResource The automatic name generation is for an embedded resource"
  },
  "api/v3.x/FluentMigrator.AutoReversingMigration.html": {
    "href": "api/v3.x/FluentMigrator.AutoReversingMigration.html",
    "title": "Class AutoReversingMigration | FluentMigrator documentation",
    "keywords": "Class AutoReversingMigration A migration base class that will automatically generate the down expressions Inheritance Object MigrationBase AutoReversingMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoReversingMigration : MigrationBase, IMigration Remarks This only works for some expressions like CREATE TABLE, but not for DROP TABLE. Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public sealed override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration public override void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions Overrides MigrationBase.GetDownExpressions(IMigrationContext) Implements IMigration"
  },
  "api/v3.x/FluentMigrator.AutoScriptMigration.html": {
    "href": "api/v3.x/FluentMigrator.AutoScriptMigration.html",
    "title": "Class AutoScriptMigration | FluentMigrator documentation",
    "keywords": "Class AutoScriptMigration Migration that automatically uses embedded SQL scripts depending on the database type name Inheritance Object MigrationBase AutoScriptMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoScriptMigration : MigrationBase, IMigration Remarks The embedded SQL scripts must end in Scripts.{Direction}.{Version} {DerivedTypeName} {DatabaseType}.sql . The {Direction} can be Up or Down . The {Version} is the migration version. The {DerivedTypeName} is the name of the type derived from AutoScriptMigration . The {DatabaseType} is the database type name. For SQL Server 2016, the variants SqlServer2016 , SqlServer , and Generic will be tested. The behavior may be overriden by providing a custom FluentMigrator.Runner.Conventions.IAutoNameConvention . Constructors | Improve this Doc View Source AutoScriptMigration() Declaration [Obsolete] protected AutoScriptMigration() | Improve this Doc View Source AutoScriptMigration(IEnumerable<IEmbeddedResourceProvider>) Declaration protected AutoScriptMigration(IEnumerable<IEmbeddedResourceProvider> embeddedResourceProviders) Parameters Type Name Description IEnumerable < IEmbeddedResourceProvider > embeddedResourceProviders Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public sealed override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Collect the UP migration expressions Declaration public sealed override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.Builder.Create.Index.html": {
    "href": "api/v3.x/FluentMigrator.Builder.Create.Index.html",
    "title": "Namespace FluentMigrator.Builder.Create.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builder.Create.Index Interfaces ICreateIndexNonKeyColumnSyntax The interface to add a column to a non-key column index"
  },
  "api/v3.x/FluentMigrator.Builder.Create.Index.ICreateIndexNonKeyColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builder.Create.Index.ICreateIndexNonKeyColumnSyntax.html",
    "title": "Interface ICreateIndexNonKeyColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexNonKeyColumnSyntax The interface to add a column to a non-key column index Namespace : FluentMigrator.Builder.Create.Index Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public interface ICreateIndexNonKeyColumnSyntax Methods | Improve this Doc View Source Include(String) Define the column to add to the non-key column index Declaration ICreateIndexNonKeyColumnSyntax Include(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ICreateIndexNonKeyColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.html",
    "title": "Namespace FluentMigrator.Builders.Alter.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter.Column Interfaces IAlterColumnAsTypeOrInSchemaSyntax Interface to fluently specify the table schema of the column modification IAlterColumnAsTypeSyntax The interface for the column modification IAlterColumnOnTableSyntax Interface to specify the table for the column modification IAlterColumnOptionOrForeignKeyCascadeSyntax Interface to change the column modification options or specifying the foreign key constraints IAlterColumnOptionSyntax Interface to specify the column modification options"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax.html",
    "title": "Interface IAlterColumnAsTypeOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnAsTypeOrInSchemaSyntax Interface to fluently specify the table schema of the column modification Inherited Members IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsByte() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDate() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnAsTypeOrInSchemaSyntax : IAlterColumnAsTypeSyntax, IColumnTypeSyntax<IAlterColumnOptionSyntax>, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the table schema of the column modification Declaration IAlterColumnAsTypeSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The table schema name Returns Type Description IAlterColumnAsTypeSyntax The interface for the column modification"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeSyntax.html",
    "title": "Interface IAlterColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnAsTypeSyntax The interface for the column modification Inherited Members IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsByte() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDate() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsTime() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml() IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnAsTypeSyntax : IColumnTypeSyntax<IAlterColumnOptionSyntax>, IFluentSyntax"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax.html",
    "title": "Interface IAlterColumnOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOnTableSyntax Interface to specify the table for the column modification Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the table for the column modification Declaration IAlterColumnAsTypeOrInSchemaSyntax OnTable(string name) Parameters Type Name Description String name The table name Returns Type Description IAlterColumnAsTypeOrInSchemaSyntax Interface for the column modification or the schema specification"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionOrForeignKeyCascadeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionOrForeignKeyCascadeSyntax.html",
    "title": "Interface IAlterColumnOptionOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOptionOrForeignKeyCascadeSyntax Interface to change the column modification options or specifying the foreign key constraints Inherited Members IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOptionOrForeignKeyCascadeSyntax : IAlterColumnOptionSyntax, IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IForeignKeyCascadeSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) PostgresExtensions.DropIdentity(IAlterColumnOptionSyntax, Boolean) PostgresExtensions.AddIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) PostgresExtensions.SetIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Column.IAlterColumnOptionSyntax.html",
    "title": "Interface IAlterColumnOptionSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterColumnOptionSyntax Interface to specify the column modification options Inherited Members IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) Namespace : FluentMigrator.Builders.Alter.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterColumnOptionSyntax : IColumnOptionSyntax<IAlterColumnOptionSyntax, IAlterColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) PostgresExtensions.DropIdentity(IAlterColumnOptionSyntax, Boolean) PostgresExtensions.AddIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) PostgresExtensions.SetIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.html",
    "title": "Namespace FluentMigrator.Builders.Alter | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter Interfaces IAlterExpressionRoot The root expression interface for the alterations"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.IAlterExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.IAlterExpressionRoot.html",
    "title": "Interface IAlterExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IAlterExpressionRoot The root expression interface for the alterations Namespace : FluentMigrator.Builders.Alter Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Column(String) Alter the column for a given table Declaration IAlterColumnOnTableSyntax Column(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description IAlterColumnOnTableSyntax The interface to specify the table | Improve this Doc View Source Table(String) Alter the table or its columns/options Declaration IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax The interface for the modifications"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.html",
    "title": "Namespace FluentMigrator.Builders.Alter.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Alter.Table Interfaces IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax Interface to change the description or alter the table/column/schema IAlterTableAddColumnOrAlterColumnOrSchemaSyntax Interface to specify the schema or alter a table/column IAlterTableAddColumnOrAlterColumnSyntax Interface to add or alter a column IAlterTableColumnAsTypeSyntax Define the column type IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax Interface to alter/add a column with an optional foreign key IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax Interface for adding/altering columns or column options"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax Interface to change the description or alter the table/column/schema Inherited Members IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.InSchema(String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax : IAlterTableAddColumnOrAlterColumnOrSchemaSyntax, IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source WithDescription(String) Set the description Declaration IAlterTableAddColumnOrAlterColumnOrSchemaSyntax WithDescription(string description) Parameters Type Name Description String description The description to set Returns Type Description IAlterTableAddColumnOrAlterColumnOrSchemaSyntax Interface providing ways for other modifications"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax Interface to specify the schema or alter a table/column Inherited Members IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnOrSchemaSyntax : IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema name Declaration IAlterTableAddColumnOrAlterColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IAlterTableAddColumnOrAlterColumnSyntax The interface to alter a table/column"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.html",
    "title": "Interface IAlterTableAddColumnOrAlterColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableAddColumnOrAlterColumnSyntax Interface to add or alter a column Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableAddColumnOrAlterColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source AddColumn(String) Add a column Declaration IAlterTableColumnAsTypeSyntax AddColumn(string name) Parameters Type Name Description String name The column name Returns Type Description IAlterTableColumnAsTypeSyntax The interface to define the column properties | Improve this Doc View Source AlterColumn(String) Alter a column Declaration IAlterTableColumnAsTypeSyntax AlterColumn(string name) Parameters Type Name Description String name The column name Returns Type Description IAlterTableColumnAsTypeSyntax The interface to define the column properties | Improve this Doc View Source ToSchema(String) Set the table schema Declaration void ToSchema(string name) Parameters Type Name Description String name The schema name"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnAsTypeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnAsTypeSyntax.html",
    "title": "Interface IAlterTableColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnAsTypeSyntax Define the column type Inherited Members IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBinary() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBinary(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsBoolean() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsByte() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsCurrency() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDate() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTime() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTime2() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTimeOffset() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDecimal() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsDouble() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsGuid() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsFloat() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt16() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt32() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsInt64() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsString(Int32, String) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsTime() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsXml() IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsXml(Int32) IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnAsTypeSyntax : IColumnTypeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax>, IFluentSyntax"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax.html",
    "title": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax Interface to alter/add a column with an optional foreign key Inherited Members IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.SetExistingRowsTo(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax : IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IAlterTableAddColumnOrAlterColumnSyntax, IForeignKeyCascadeSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.html",
    "title": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax Interface for adding/altering columns or column options Inherited Members IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(String) IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(String) Namespace : FluentMigrator.Builders.Alter.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax : IColumnOptionSyntax<IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax, IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax>, IAlterTableAddColumnOrAlterColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source SetExistingRowsTo(Object) The value to set against existing rows for the new column. Only used for creating columns, not altering them. Declaration IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax SetExistingRowsTo(object value) Parameters Type Name Description Object value Returns Type Description IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.html",
    "title": "Namespace FluentMigrator.Builders.Create.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Column Interfaces ICreateColumnAsTypeOrInSchemaSyntax Set the column type or the table schema ICreateColumnAsTypeSyntax Set the column type ICreateColumnOnTableSyntax Interface to specify the table for a column ICreateColumnOptionOrForeignKeyCascadeSyntax The interface to specify the column options or the foreign key ICreateColumnOptionSyntax Interface to set the column options or the new value for existing rows"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax.html",
    "title": "Interface ICreateColumnAsTypeOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnAsTypeOrInSchemaSyntax Set the column type or the table schema Inherited Members IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsByte() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDate() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnAsTypeOrInSchemaSyntax : ICreateColumnAsTypeSyntax, IColumnTypeSyntax<ICreateColumnOptionSyntax>, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Set the table schema Declaration ICreateColumnAsTypeSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateColumnAsTypeSyntax The interface to define the column type"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeSyntax.html",
    "title": "Interface ICreateColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnAsTypeSyntax Set the column type Inherited Members IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsBoolean() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsByte() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCurrency() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDate() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsDouble() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsGuid() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsFloat() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt16() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt32() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsInt64() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsTime() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml() IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateColumnOptionSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnAsTypeSyntax : IColumnTypeSyntax<ICreateColumnOptionSyntax>, IFluentSyntax"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax.html",
    "title": "Interface ICreateColumnOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOnTableSyntax Interface to specify the table for a column Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the table for the column Declaration ICreateColumnAsTypeOrInSchemaSyntax OnTable(string name) Parameters Type Name Description String name The table name Returns Type Description ICreateColumnAsTypeOrInSchemaSyntax The interface to specify the table schema or column information"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionOrForeignKeyCascadeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionOrForeignKeyCascadeSyntax.html",
    "title": "Interface ICreateColumnOptionOrForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOptionOrForeignKeyCascadeSyntax The interface to specify the column options or the foreign key Inherited Members ICreateColumnOptionSyntax.SetExistingRowsTo(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOptionOrForeignKeyCascadeSyntax : ICreateColumnOptionSyntax, IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IForeignKeyCascadeSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax.html",
    "title": "Interface ICreateColumnOptionSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateColumnOptionSyntax Interface to set the column options or the new value for existing rows Inherited Members IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Identity() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Indexed(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Nullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.NotNullable() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.Unique(String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ForeignKey() IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>.ReferencedBy(String, String, String, String) Namespace : FluentMigrator.Builders.Create.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateColumnOptionSyntax : IColumnOptionSyntax<ICreateColumnOptionSyntax, ICreateColumnOptionOrForeignKeyCascadeSyntax>, IFluentSyntax Methods | Improve this Doc View Source SetExistingRowsTo(Object) The value to set against existing rows for the new column. Declaration ICreateColumnOptionSyntax SetExistingRowsTo(object value) Parameters Type Name Description Object value Returns Type Description ICreateColumnOptionSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Create.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Constraint Interfaces ICreateConstraintColumnsSyntax Define the columns of a constraint ICreateConstraintOnTableSyntax Specify the primary table for the constraint ICreateConstraintOptionsSyntax Options for creating the constraint ICreateConstraintWithSchemaOrColumnSyntax Specify the constraint table schema or the columns ICreateConstraintWithSchemaSyntax Specify the constraint schema"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.html",
    "title": "Interface ICreateConstraintColumnsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintColumnsSyntax Define the columns of a constraint Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintColumnsSyntax Methods | Improve this Doc View Source Column(String) The column for the constraint Declaration ICreateConstraintOptionsSyntax Column(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ICreateConstraintOptionsSyntax Other constraint options | Improve this Doc View Source Columns(String[]) The columns for the constraint Declaration ICreateConstraintOptionsSyntax Columns(params string[] columnNames) Parameters Type Name Description String [] columnNames The column names Returns Type Description ICreateConstraintOptionsSyntax Other constraint options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax.html",
    "title": "Interface ICreateConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintOnTableSyntax Specify the primary table for the constraint Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the primary table for the constraint Declaration ICreateConstraintWithSchemaOrColumnSyntax OnTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description ICreateConstraintWithSchemaOrColumnSyntax Define the schema or columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax.html",
    "title": "Interface ICreateConstraintOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintOptionsSyntax Options for creating the constraint Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintOptionsSyntax : IFluentSyntax Remarks This is an extension point for DB-specific constraint options Extension Methods SqlAnywhereExtensions.Clustered(ICreateConstraintOptionsSyntax) SqlAnywhereExtensions.NonClustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.Clustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.NonClustered(ICreateConstraintOptionsSyntax) SqlServerExtensions.Online(ICreateConstraintOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaOrColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaOrColumnSyntax.html",
    "title": "Interface ICreateConstraintWithSchemaOrColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintWithSchemaOrColumnSyntax Specify the constraint table schema or the columns Inherited Members ICreateConstraintColumnsSyntax.Column(String) ICreateConstraintColumnsSyntax.Columns(String[]) ICreateConstraintWithSchemaSyntax.WithSchema(String) Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintWithSchemaOrColumnSyntax : ICreateConstraintColumnsSyntax, ICreateConstraintWithSchemaSyntax, IFluentSyntax"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax.html",
    "title": "Interface ICreateConstraintWithSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateConstraintWithSchemaSyntax Specify the constraint schema Namespace : FluentMigrator.Builders.Create.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateConstraintWithSchemaSyntax : IFluentSyntax Methods | Improve this Doc View Source WithSchema(String) The constraint schema Declaration ICreateConstraintColumnsSyntax WithSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateConstraintColumnsSyntax Specify the constraint columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.html",
    "title": "Namespace FluentMigrator.Builders.Create.ForeignKey | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.ForeignKey Interfaces ICreateForeignKeyCascadeSyntax Defines the cascading rules of a foreign key constraint ICreateForeignKeyForeignColumnOrInSchemaSyntax Interface to define the foreign key columns or the foreign keys table schema ICreateForeignKeyForeignColumnSyntax Interface to define the foreign key columns ICreateForeignKeyFromTableSyntax Specify the table to create of foreign key for ICreateForeignKeyPrimaryColumnOrInSchemaSyntax Specify the schema of the foreign keys primary table ICreateForeignKeyPrimaryColumnSyntax Define the primary table columns for a foreign key ICreateForeignKeyToTableSyntax Specify the foreign keys primary table"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.html",
    "title": "Interface ICreateForeignKeyCascadeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyCascadeSyntax Defines the cascading rules of a foreign key constraint Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyCascadeSyntax : IFluentSyntax Methods | Improve this Doc View Source OnDelete(Rule) Defines the DELETE rule Declaration ICreateForeignKeyCascadeSyntax OnDelete(Rule rule) Parameters Type Name Description Rule rule The rule to apply to DELETE operations Returns Type Description ICreateForeignKeyCascadeSyntax Specify other rules | Improve this Doc View Source OnDeleteOrUpdate(Rule) Defines the UPDATE and DELETE rule Declaration void OnDeleteOrUpdate(Rule rule) Parameters Type Name Description Rule rule The rule to apply to UPDATE and DELETE operations | Improve this Doc View Source OnUpdate(Rule) Defines the UPDATE rule Declaration ICreateForeignKeyCascadeSyntax OnUpdate(Rule rule) Parameters Type Name Description Rule rule The rule to apply to UPDATE operations Returns Type Description ICreateForeignKeyCascadeSyntax Specify other rules"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateForeignKeyForeignColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyForeignColumnOrInSchemaSyntax Interface to define the foreign key columns or the foreign keys table schema Inherited Members ICreateForeignKeyForeignColumnSyntax.ForeignColumn(String) ICreateForeignKeyForeignColumnSyntax.ForeignColumns(String[]) Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyForeignColumnOrInSchemaSyntax : ICreateForeignKeyForeignColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema of the foreign key table Declaration ICreateForeignKeyForeignColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateForeignKeyForeignColumnSyntax Specify the foreign key columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.html",
    "title": "Interface ICreateForeignKeyForeignColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyForeignColumnSyntax Interface to define the foreign key columns Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyForeignColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source ForeignColumn(String) Define the foreign key column Declaration ICreateForeignKeyToTableSyntax ForeignColumn(string column) Parameters Type Name Description String column The column name Returns Type Description ICreateForeignKeyToTableSyntax Define the foreign keys primary table | Improve this Doc View Source ForeignColumns(String[]) Define the foreign key columns Declaration ICreateForeignKeyToTableSyntax ForeignColumns(params string[] columns) Parameters Type Name Description String [] columns The column names Returns Type Description ICreateForeignKeyToTableSyntax Define the foreign keys primary table"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax.html",
    "title": "Interface ICreateForeignKeyFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyFromTableSyntax Specify the table to create of foreign key for Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyFromTableSyntax : IFluentSyntax Methods | Improve this Doc View Source FromTable(String) Specify the table to create of foreign key for Declaration ICreateForeignKeyForeignColumnOrInSchemaSyntax FromTable(string table) Parameters Type Name Description String table The table name Returns Type Description ICreateForeignKeyForeignColumnOrInSchemaSyntax The schema or foreign key columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax Specify the schema of the foreign keys primary table Inherited Members ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumn(String) ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumns(String[]) Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyPrimaryColumnOrInSchemaSyntax : ICreateForeignKeyPrimaryColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema of the foreign keys primary table Declaration ICreateForeignKeyPrimaryColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateForeignKeyPrimaryColumnSyntax Specify the foreign keys primary table columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.html",
    "title": "Interface ICreateForeignKeyPrimaryColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyPrimaryColumnSyntax Define the primary table columns for a foreign key Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyPrimaryColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source PrimaryColumn(String) Define the primary table column for a foreign key Declaration ICreateForeignKeyCascadeSyntax PrimaryColumn(string column) Parameters Type Name Description String column The column name Returns Type Description ICreateForeignKeyCascadeSyntax Define the cascade rules | Improve this Doc View Source PrimaryColumns(String[]) Define the primary table columns for a foreign key Declaration ICreateForeignKeyCascadeSyntax PrimaryColumns(params string[] columns) Parameters Type Name Description String [] columns The column names Returns Type Description ICreateForeignKeyCascadeSyntax Define the cascade rules"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax.html",
    "title": "Interface ICreateForeignKeyToTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateForeignKeyToTableSyntax Specify the foreign keys primary table Namespace : FluentMigrator.Builders.Create.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateForeignKeyToTableSyntax : IFluentSyntax Methods | Improve this Doc View Source ToTable(String) Specify the foreign keys primary table Declaration ICreateForeignKeyPrimaryColumnOrInSchemaSyntax ToTable(string table) Parameters Type Name Description String table The table name Returns Type Description ICreateForeignKeyPrimaryColumnOrInSchemaSyntax Specify the primary tables columns"
  },
  "api/v3.x/FluentMigrator.Builders.Create.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.html",
    "title": "Namespace FluentMigrator.Builders.Create | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create Interfaces ICreateExpressionRoot The root expression for a CREATE operation"
  },
  "api/v3.x/FluentMigrator.Builders.Create.ICreateExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.ICreateExpressionRoot.html",
    "title": "Interface ICreateExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface ICreateExpressionRoot The root expression for a CREATE operation Namespace : FluentMigrator.Builders.Create Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Column(String) Creates a column Declaration ICreateColumnOnTableSyntax Column(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ICreateColumnOnTableSyntax Additional information about the column creation | Improve this Doc View Source ForeignKey() Creates a foreign key with a default name Declaration ICreateForeignKeyFromTableSyntax ForeignKey() Returns Type Description ICreateForeignKeyFromTableSyntax Additional information about the foreign key creation | Improve this Doc View Source ForeignKey(String) Creates a foreign key with the given name Declaration ICreateForeignKeyFromTableSyntax ForeignKey(string foreignKeyName) Parameters Type Name Description String foreignKeyName The foreign key name Returns Type Description ICreateForeignKeyFromTableSyntax Additional information about the foreign key creation | Improve this Doc View Source Index() Creates an index with a default name Declaration ICreateIndexForTableSyntax Index() Returns Type Description ICreateIndexForTableSyntax Additional information about the index creation | Improve this Doc View Source Index(String) Creates an index with the given name Declaration ICreateIndexForTableSyntax Index(string indexName) Parameters Type Name Description String indexName The index name Returns Type Description ICreateIndexForTableSyntax Additional information about the index creation | Improve this Doc View Source PrimaryKey() Creates a primary key with a default name Declaration ICreateConstraintOnTableSyntax PrimaryKey() Returns Type Description ICreateConstraintOnTableSyntax Additional information about the primary key creation | Improve this Doc View Source PrimaryKey(String) Creates a primary key with the given name Declaration ICreateConstraintOnTableSyntax PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName The primary key name Returns Type Description ICreateConstraintOnTableSyntax Additional information about the primary key creation | Improve this Doc View Source Schema(String) Creates a schema Declaration ICreateSchemaOptionsSyntax Schema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateSchemaOptionsSyntax The options for the schema creation | Improve this Doc View Source Sequence(String) Creates a sequence Declaration ICreateSequenceInSchemaSyntax Sequence(string sequenceName) Parameters Type Name Description String sequenceName The sequence name Returns Type Description ICreateSequenceInSchemaSyntax Additional information about the sequence creation | Improve this Doc View Source Table(String) Creates a table Declaration ICreateTableWithColumnOrSchemaOrDescriptionSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description ICreateTableWithColumnOrSchemaOrDescriptionSyntax Additional information about the table creation | Improve this Doc View Source UniqueConstraint() Creates an unique constraint with a default name Declaration ICreateConstraintOnTableSyntax UniqueConstraint() Returns Type Description ICreateConstraintOnTableSyntax Additional information about the unique constraint creation | Improve this Doc View Source UniqueConstraint(String) Creates an unique constraint with the given name Declaration ICreateConstraintOnTableSyntax UniqueConstraint(string constraintName) Parameters Type Name Description String constraintName The unique constraint name Returns Type Description ICreateConstraintOnTableSyntax Additional information about the unique constraint creation"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.html",
    "title": "Namespace FluentMigrator.Builders.Create.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Index Interfaces ICreateIndexColumnOptionsSyntax Setting the default index column options ICreateIndexColumnUniqueOptionsSyntax Extension point for unique column options ICreateIndexForTableSyntax Definition of the table the index belongs to ICreateIndexMoreColumnOptionsSyntax Extension point for additional index column options ICreateIndexNonKeyColumnSyntax The interface to add a column to a non-key column index ICreateIndexOnColumnOrInSchemaSyntax Definition of the schema the table belongs to ICreateIndexOnColumnSyntax Definition of index columns or options ICreateIndexOptionsSyntax Index options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.html",
    "title": "Interface ICreateIndexColumnOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexColumnOptionsSyntax Setting the default index column options Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexColumnOptionsSyntax : IFluentSyntax Methods | Improve this Doc View Source Ascending() Mark the index column as ascending Declaration ICreateIndexMoreColumnOptionsSyntax Ascending() Returns Type Description ICreateIndexMoreColumnOptionsSyntax More column options | Improve this Doc View Source Descending() Mark the index column as descending Declaration ICreateIndexMoreColumnOptionsSyntax Descending() Returns Type Description ICreateIndexMoreColumnOptionsSyntax More column options | Improve this Doc View Source Unique() Mark the index column as unique Declaration ICreateIndexColumnUniqueOptionsSyntax Unique() Returns Type Description ICreateIndexColumnUniqueOptionsSyntax More column options for the unique column"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax.html",
    "title": "Interface ICreateIndexColumnUniqueOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexColumnUniqueOptionsSyntax Extension point for unique column options Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexColumnUniqueOptionsSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Properties | Improve this Doc View Source CurrentColumn Access to the current index column definition Declaration IndexColumnDefinition CurrentColumn { get; } Property Value Type Description IndexColumnDefinition Extension Methods PostgresExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax) SqlServerExtensions.NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax.html",
    "title": "Interface ICreateIndexForTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexForTableSyntax Definition of the table the index belongs to Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexForTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Defines the table the new index belongs to Declaration ICreateIndexOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description ICreateIndexOnColumnOrInSchemaSyntax Column or schema definition"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax.html",
    "title": "Interface ICreateIndexMoreColumnOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexMoreColumnOptionsSyntax Extension point for additional index column options Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexMoreColumnOptionsSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Properties | Improve this Doc View Source CurrentColumn Access to the current index column definition Declaration IndexColumnDefinition CurrentColumn { get; } Property Value Type Description IndexColumnDefinition Extension Methods PostgresExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax) SqlServerExtensions.NullsDistinct(ICreateIndexMoreColumnOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax.html",
    "title": "Interface ICreateIndexNonKeyColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexNonKeyColumnSyntax The interface to add a column to a non-key column index Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public interface ICreateIndexNonKeyColumnSyntax Methods | Improve this Doc View Source Include(String) Define the column to add to the non-key column index Declaration ICreateIndexNonKeyColumnSyntax Include(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ICreateIndexNonKeyColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax.html",
    "title": "Interface ICreateIndexOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOnColumnOrInSchemaSyntax Definition of the schema the table belongs to Inherited Members ICreateIndexOnColumnSyntax.OnColumn(String) ICreateIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOnColumnOrInSchemaSyntax : ICreateIndexOnColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Defines the schema of the table to create the index for Declaration ICreateIndexOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateIndexOnColumnSyntax Definition of index columns Extension Methods PostgresExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.html",
    "title": "Interface ICreateIndexOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOnColumnSyntax Definition of index columns or options Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOnColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source OnColumn(String) Defines the index column Declaration ICreateIndexColumnOptionsSyntax OnColumn(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ICreateIndexColumnOptionsSyntax Defines the index column options | Improve this Doc View Source WithOptions() Set the index options Declaration ICreateIndexOptionsSyntax WithOptions() Returns Type Description ICreateIndexOptionsSyntax Defines the index options Extension Methods PostgresExtensions.Include(ICreateIndexOnColumnSyntax, String) SqlServerExtensions.Include(ICreateIndexOnColumnSyntax, String)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.html",
    "title": "Interface ICreateIndexOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateIndexOptionsSyntax Index options Namespace : FluentMigrator.Builders.Create.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateIndexOptionsSyntax : IFluentSyntax Methods | Improve this Doc View Source Clustered() Defines the index as clustered Declaration ICreateIndexOnColumnSyntax Clustered() Returns Type Description ICreateIndexOnColumnSyntax Defines the column for the index | Improve this Doc View Source NonClustered() Defines the index as non-clustered Declaration ICreateIndexOnColumnSyntax NonClustered() Returns Type Description ICreateIndexOnColumnSyntax Defines the column for the index | Improve this Doc View Source Unique() Defines the index as unique Declaration ICreateIndexOnColumnSyntax Unique() Returns Type Description ICreateIndexOnColumnSyntax Defines the column for the index Extension Methods SqlAnywhereExtensions.UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) SqlAnywhereExtensions.UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) PostgresExtensions.AsConcurrently(ICreateIndexOptionsSyntax) PostgresExtensions.AsConcurrently(ICreateIndexOptionsSyntax, Boolean) PostgresExtensions.Filter(ICreateIndexOptionsSyntax, String) PostgresExtensions.Include(ICreateIndexOptionsSyntax, String) PostgresExtensions.AsOnly(ICreateIndexOptionsSyntax) PostgresExtensions.AsOnly(ICreateIndexOptionsSyntax, Boolean) PostgresExtensions.UsingBTree(ICreateIndexOptionsSyntax) PostgresExtensions.UsingHash(ICreateIndexOptionsSyntax) PostgresExtensions.UsingGist(ICreateIndexOptionsSyntax) PostgresExtensions.UsingSpgist(ICreateIndexOptionsSyntax) PostgresExtensions.UsingGin(ICreateIndexOptionsSyntax) PostgresExtensions.UsingBrin(ICreateIndexOptionsSyntax) PostgresExtensions.Using(ICreateIndexOptionsSyntax, Algorithm) SqlServerExtensions.WithDataCompression(ICreateIndexOptionsSyntax, DataCompressionType) SqlServerExtensions.Filter(ICreateIndexOptionsSyntax, String) SqlServerExtensions.Include(ICreateIndexOptionsSyntax, String) SqlServerExtensions.UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) SqlServerExtensions.UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) SqlServerExtensions.Online(ICreateIndexOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Schema.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Create.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Schema Interfaces ICreateSchemaOptionsSyntax Extension point for schema creation options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax.html",
    "title": "Interface ICreateSchemaOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSchemaOptionsSyntax Extension point for schema creation options Namespace : FluentMigrator.Builders.Create.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSchemaOptionsSyntax : IFluentSyntax Extension Methods SqlAnywhereExtensions.Password(ICreateSchemaOptionsSyntax, String) SqlServerExtensions.Authorization(ICreateSchemaOptionsSyntax, String)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Sequence.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Sequence.html",
    "title": "Namespace FluentMigrator.Builders.Create.Sequence | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Sequence Interfaces ICreateSequenceInSchemaSyntax Defines a sequence and (optionally) the schema it's stored in ICreateSequenceSyntax Define the sequence options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax.html",
    "title": "Interface ICreateSequenceInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSequenceInSchemaSyntax Defines a sequence and (optionally) the schema it's stored in Inherited Members ICreateSequenceSyntax.IncrementBy(Int64) ICreateSequenceSyntax.MinValue(Int64) ICreateSequenceSyntax.MaxValue(Int64) ICreateSequenceSyntax.StartWith(Int64) ICreateSequenceSyntax.Cache(Int64) ICreateSequenceSyntax.Cycle() Namespace : FluentMigrator.Builders.Create.Sequence Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSequenceInSchemaSyntax : ICreateSequenceSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Defines the schema of the sequence Declaration ICreateSequenceSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateSequenceSyntax Defines the sequence options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.html",
    "title": "Interface ICreateSequenceSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateSequenceSyntax Define the sequence options Namespace : FluentMigrator.Builders.Create.Sequence Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateSequenceSyntax : IFluentSyntax Methods | Improve this Doc View Source Cache(Int64) Cache the next value number of values for a single sequence increment Declaration ICreateSequenceSyntax Cache(long value) Parameters Type Name Description Int64 value The number of values to cache Returns Type Description ICreateSequenceSyntax Define the sequence options Remarks Normally used together with IncrementBy(Int64) | Improve this Doc View Source Cycle() Defines that the sequence starts again with the MinValue(Int64) value for the next value after MaxValue(Int64) Declaration ICreateSequenceSyntax Cycle() Returns Type Description ICreateSequenceSyntax Define the sequence options | Improve this Doc View Source IncrementBy(Int64) Defines the increment Declaration ICreateSequenceSyntax IncrementBy(long increment) Parameters Type Name Description Int64 increment The value used to increment the sequence Returns Type Description ICreateSequenceSyntax Define the sequence options | Improve this Doc View Source MaxValue(Int64) Sets the maximum value of the sequence Declaration ICreateSequenceSyntax MaxValue(long maxValue) Parameters Type Name Description Int64 maxValue The maximum value of the sequence Returns Type Description ICreateSequenceSyntax Define the sequence options | Improve this Doc View Source MinValue(Int64) Sets the minimum value of the sequence Declaration ICreateSequenceSyntax MinValue(long minValue) Parameters Type Name Description Int64 minValue The minimum value of the sequence Returns Type Description ICreateSequenceSyntax Define the sequence options | Improve this Doc View Source StartWith(Int64) Sets the start value of the sequence Declaration ICreateSequenceSyntax StartWith(long startWith) Parameters Type Name Description Int64 startWith The start value Returns Type Description ICreateSequenceSyntax Define the sequence options"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.html",
    "title": "Namespace FluentMigrator.Builders.Create.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Create.Table Interfaces ICreateTableColumnAsTypeSyntax Defines the column type ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax Set column options or create a new column or set a foreign key cascade rule ICreateTableColumnOptionOrWithColumnSyntax Set column options or define a new column ICreateTableWithColumnOrSchemaOrDescriptionSyntax Define table schema, a new column or set the tables description ICreateTableWithColumnOrSchemaSyntax Define the table schema or a new column ICreateTableWithColumnSyntax Define a new column"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnAsTypeSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnAsTypeSyntax.html",
    "title": "Interface ICreateTableColumnAsTypeSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnAsTypeSyntax Defines the column type Inherited Members IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsAnsiString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBinary() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBinary(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsBoolean() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsByte() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsCurrency() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDate() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTime() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTime2() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTimeOffset() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDateTimeOffset(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDecimal() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDecimal(Int32, Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsDouble() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsGuid() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthAnsiString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFixedLengthAnsiString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsFloat() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt16() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt32() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsInt64() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsString(Int32, String) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsTime() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsXml() IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsXml(Int32) IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>.AsCustom(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnAsTypeSyntax : IColumnTypeSyntax<ICreateTableColumnOptionOrWithColumnSyntax>, IFluentSyntax"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax.html",
    "title": "Interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax Set column options or create a new column or set a foreign key cascade rule Inherited Members IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Identity() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Nullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.NotNullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String, String) ICreateTableWithColumnSyntax.WithColumn(String) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnDelete(Rule) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnUpdate(Rule) IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.OnDeleteOrUpdate(Rule) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax : ICreateTableColumnOptionOrWithColumnSyntax, IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, ICreateTableWithColumnSyntax, IForeignKeyCascadeSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Sparse(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax.html",
    "title": "Interface ICreateTableColumnOptionOrWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableColumnOptionOrWithColumnSyntax Set column options or define a new column Inherited Members IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefault(SystemMethods) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithDefaultValue(Object) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.WithColumnDescription(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Identity() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Indexed(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.PrimaryKey(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Nullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.NotNullable() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.Unique(String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey(String, String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ForeignKey() IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String) IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>.ReferencedBy(String, String, String, String) ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableColumnOptionOrWithColumnSyntax : IColumnOptionSyntax<ICreateTableColumnOptionOrWithColumnSyntax, ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax>, ICreateTableWithColumnSyntax, IFluentSyntax Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Sparse(ICreateTableColumnOptionOrWithColumnSyntax) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax.html",
    "title": "Interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax Define table schema, a new column or set the tables description Inherited Members ICreateTableWithColumnOrSchemaSyntax.InSchema(String) ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnOrSchemaOrDescriptionSyntax : ICreateTableWithColumnOrSchemaSyntax, ICreateTableWithColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source WithDescription(String) Set the tables description Declaration ICreateTableWithColumnOrSchemaSyntax WithDescription(string description) Parameters Type Name Description String description The description Returns Type Description ICreateTableWithColumnOrSchemaSyntax Define the table schema or a new column"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax.html",
    "title": "Interface ICreateTableWithColumnOrSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnOrSchemaSyntax Define the table schema or a new column Inherited Members ICreateTableWithColumnSyntax.WithColumn(String) Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnOrSchemaSyntax : ICreateTableWithColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Define the tables schema Declaration ICreateTableWithColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ICreateTableWithColumnSyntax Define a new column"
  },
  "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax.html",
    "title": "Interface ICreateTableWithColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ICreateTableWithColumnSyntax Define a new column Namespace : FluentMigrator.Builders.Create.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ICreateTableWithColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source WithColumn(String) Define a new column Declaration ICreateTableColumnAsTypeSyntax WithColumn(string name) Parameters Type Name Description String name The column name Returns Type Description ICreateTableColumnAsTypeSyntax Define the columns type"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Column.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Column.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Column Interfaces IDeleteColumnFromTableSyntax Delete a column from a table"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.html",
    "title": "Interface IDeleteColumnFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteColumnFromTableSyntax Delete a column from a table Namespace : FluentMigrator.Builders.Delete.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteColumnFromTableSyntax : IFluentSyntax Methods | Improve this Doc View Source Column(String) Delete define the column to delete Declaration IDeleteColumnFromTableSyntax Column(string columnName) Parameters Type Name Description String columnName The name of the column to delete Returns Type Description IDeleteColumnFromTableSyntax The next step | Improve this Doc View Source FromTable(String) Define the table to delete the column from Declaration IInSchemaSyntax FromTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Constraint.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Constraint Interfaces IDeleteConstraintColumnSyntax Delete a constraint column IDeleteConstraintInSchemaOptionsSyntax Define the schema of the constraint to delete IDeleteConstraintOnTableSyntax Delete the constraint from the given table"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.html",
    "title": "Interface IDeleteConstraintColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintColumnSyntax Delete a constraint column Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source Column(String) The name of the column to delete Declaration void Column(string columnName) Parameters Type Name Description String columnName The column name | Improve this Doc View Source Columns(String[]) The names of the columns to delete Declaration void Columns(params string[] columnNames) Parameters Type Name Description String [] columnNames The column names"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax.html",
    "title": "Interface IDeleteConstraintInSchemaOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintInSchemaOptionsSyntax Define the schema of the constraint to delete Inherited Members IDeleteConstraintColumnSyntax.Column(String) IDeleteConstraintColumnSyntax.Columns(String[]) Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintInSchemaOptionsSyntax : IDeleteConstraintColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Define the schema of the constraint to delete Declaration IDeleteConstraintInSchemaOptionsSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IDeleteConstraintInSchemaOptionsSyntax The next step Extension Methods SqlServerExtensions.Online(IDeleteConstraintInSchemaOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax.html",
    "title": "Interface IDeleteConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteConstraintOnTableSyntax Delete the constraint from the given table Namespace : FluentMigrator.Builders.Delete.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteConstraintOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source FromTable(String) Specify the table to delete the constraint from Declaration IDeleteConstraintInSchemaOptionsSyntax FromTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IDeleteConstraintInSchemaOptionsSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.html",
    "title": "Namespace FluentMigrator.Builders.Delete.DefaultConstraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.DefaultConstraint Interfaces IDeleteDefaultConstraintOnColumnOrInSchemaSyntax Delete the default constraint from the given column IDeleteDefaultConstraintOnColumnSyntax Specify the column to delete the default constraint from IDeleteDefaultConstraintOnTableSyntax Define the table of the column to delete the default constraint from"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax Delete the default constraint from the given column Inherited Members IDeleteDefaultConstraintOnColumnSyntax.OnColumn(String) Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnColumnOrInSchemaSyntax : IDeleteDefaultConstraintOnColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) The table schema of the columns default constraint Declaration IDeleteDefaultConstraintOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IDeleteDefaultConstraintOnColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnColumnSyntax Specify the column to delete the default constraint from Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source OnColumn(String) The column to delete the default constraint from Declaration void OnColumn(string columnName) Parameters Type Name Description String columnName The column name"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax.html",
    "title": "Interface IDeleteDefaultConstraintOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDefaultConstraintOnTableSyntax Define the table of the column to delete the default constraint from Namespace : FluentMigrator.Builders.Delete.DefaultConstraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDefaultConstraintOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the name of the table to delete the columns default constraint from Declaration IDeleteDefaultConstraintOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IDeleteDefaultConstraintOnColumnOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.html",
    "title": "Namespace FluentMigrator.Builders.Delete.ForeignKey | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.ForeignKey Interfaces IDeleteForeignKeyForeignColumnOrInSchemaSyntax Define the schema or foreign key column to delete IDeleteForeignKeyForeignColumnSyntax Specify the foreign key columns to delete IDeleteForeignKeyFromTableSyntax Define the table of the foreign key to delete IDeleteForeignKeyOnTableSyntax Specify the table of the foreign key IDeleteForeignKeyPrimaryColumnSyntax Specify the columns of the primary table IDeleteForeignKeyToTableSyntax Specify the primary table of the foreign key"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax Define the schema or foreign key column to delete Inherited Members IDeleteForeignKeyForeignColumnSyntax.ForeignColumn(String) IDeleteForeignKeyForeignColumnSyntax.ForeignColumns(String[]) Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyForeignColumnOrInSchemaSyntax : IDeleteForeignKeyForeignColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Define the schema Declaration IDeleteForeignKeyForeignColumnSyntax InSchema(string foreignSchemaName) Parameters Type Name Description String foreignSchemaName The schema of the foreign key Returns Type Description IDeleteForeignKeyForeignColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.html",
    "title": "Interface IDeleteForeignKeyForeignColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyForeignColumnSyntax Specify the foreign key columns to delete Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyForeignColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source ForeignColumn(String) Specify the column of the foreign key to delete Declaration IDeleteForeignKeyToTableSyntax ForeignColumn(string column) Parameters Type Name Description String column The column name Returns Type Description IDeleteForeignKeyToTableSyntax The next step | Improve this Doc View Source ForeignColumns(String[]) Specify the columns of the foreign key to delete Declaration IDeleteForeignKeyToTableSyntax ForeignColumns(params string[] columns) Parameters Type Name Description String [] columns The foreign keys column names Returns Type Description IDeleteForeignKeyToTableSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax.html",
    "title": "Interface IDeleteForeignKeyFromTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyFromTableSyntax Define the table of the foreign key to delete Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyFromTableSyntax : IFluentSyntax Methods | Improve this Doc View Source FromTable(String) Specify the table of the foreign key Declaration IDeleteForeignKeyForeignColumnOrInSchemaSyntax FromTable(string foreignTableName) Parameters Type Name Description String foreignTableName The foreign key table name Returns Type Description IDeleteForeignKeyForeignColumnOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax.html",
    "title": "Interface IDeleteForeignKeyOnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyOnTableSyntax Specify the table of the foreign key Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyOnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the table of the foreign key Declaration IInSchemaSyntax OnTable(string foreignTableName) Parameters Type Name Description String foreignTableName The foreign keys table name Returns Type Description IInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.html",
    "title": "Interface IDeleteForeignKeyPrimaryColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyPrimaryColumnSyntax Specify the columns of the primary table Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyPrimaryColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source PrimaryColumn(String) Specify the primary table column Declaration void PrimaryColumn(string column) Parameters Type Name Description String column The column name | Improve this Doc View Source PrimaryColumns(String[]) Specify the primary table columns Declaration void PrimaryColumns(params string[] columns) Parameters Type Name Description String [] columns The column names"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax.html",
    "title": "Interface IDeleteForeignKeyToTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteForeignKeyToTableSyntax Specify the primary table of the foreign key Namespace : FluentMigrator.Builders.Delete.ForeignKey Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteForeignKeyToTableSyntax : IFluentSyntax Methods | Improve this Doc View Source ToTable(String) Specify the primary table of the foreign key Declaration IDeleteForeignKeyPrimaryColumnSyntax ToTable(string table) Parameters Type Name Description String table The primary table name Returns Type Description IDeleteForeignKeyPrimaryColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.html",
    "title": "Namespace FluentMigrator.Builders.Delete | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete Interfaces IDeleteDataOrInSchemaSyntax Specify the schema or the condition of the data to delete IDeleteDataSyntax Specify the condition of the data to delete IDeleteExpressionRoot The root expression for a DELETE operation"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax.html",
    "title": "Interface IDeleteDataOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDataOrInSchemaSyntax Specify the schema or the condition of the data to delete Inherited Members IDeleteDataSyntax.Row(Object) IDeleteDataSyntax.AllRows() IDeleteDataSyntax.IsNull(String) Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDataOrInSchemaSyntax : IDeleteDataSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema of the table to delete from Declaration IDeleteDataSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IDeleteDataSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.IDeleteDataSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.IDeleteDataSyntax.html",
    "title": "Interface IDeleteDataSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteDataSyntax Specify the condition of the data to delete Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteDataSyntax : IFluentSyntax Methods | Improve this Doc View Source AllRows() Specify that all rows should be deleted Declaration void AllRows() | Improve this Doc View Source IsNull(String) Specify that all rows having a null value in the given column should be deleted Declaration void IsNull(string columnName) Parameters Type Name Description String columnName The column name | Improve this Doc View Source Row(Object) Define the condition of a row/multiple rows to delete Declaration IDeleteDataSyntax Row(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType An anonymous type whose member names will be trated as column names and their values as values for the condition Returns Type Description IDeleteDataSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.IDeleteExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.IDeleteExpressionRoot.html",
    "title": "Interface IDeleteExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IDeleteExpressionRoot The root expression for a DELETE operation Namespace : FluentMigrator.Builders.Delete Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Column(String) Specify the column to delete Declaration IDeleteColumnFromTableSyntax Column(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description IDeleteColumnFromTableSyntax The next step | Improve this Doc View Source DefaultConstraint() Deletes a default constraint from a column Declaration IDeleteDefaultConstraintOnTableSyntax DefaultConstraint() Returns Type Description IDeleteDefaultConstraintOnTableSyntax The next step | Improve this Doc View Source ForeignKey() Specify that a foreign key with a default name should be deleted Declaration IDeleteForeignKeyFromTableSyntax ForeignKey() Returns Type Description IDeleteForeignKeyFromTableSyntax The next step | Improve this Doc View Source ForeignKey(String) Specify that a foreign key with the given name should be deleted Declaration IDeleteForeignKeyOnTableSyntax ForeignKey(string foreignKeyName) Parameters Type Name Description String foreignKeyName The foreign key name Returns Type Description IDeleteForeignKeyOnTableSyntax The next step | Improve this Doc View Source FromTable(String) Deletes data from a table Declaration IDeleteDataOrInSchemaSyntax FromTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IDeleteDataOrInSchemaSyntax The next step | Improve this Doc View Source Index() Deletes an index, based on the naming convention in effect Declaration IDeleteIndexForTableSyntax Index() Returns Type Description IDeleteIndexForTableSyntax The next step | Improve this Doc View Source Index(String) Deletes an index Declaration IDeleteIndexForTableSyntax Index(string indexName) Parameters Type Name Description String indexName the name of the index Returns Type Description IDeleteIndexForTableSyntax The next step | Improve this Doc View Source PrimaryKey(String) Deletes a named Primary Key from a table Declaration IDeleteConstraintOnTableSyntax PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName The name of the primary key Returns Type Description IDeleteConstraintOnTableSyntax The next step | Improve this Doc View Source Schema(String) Specify the schema to delete Declaration void Schema(string schemaName) Parameters Type Name Description String schemaName The name of the schema | Improve this Doc View Source Sequence(String) Delete a sequence with the given name Declaration IInSchemaSyntax Sequence(string sequenceName) Parameters Type Name Description String sequenceName The sequence name Returns Type Description IInSchemaSyntax The next step | Improve this Doc View Source Table(String) Specify the table to delete Declaration IInSchemaSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IInSchemaSyntax The next step | Improve this Doc View Source UniqueConstraint() Deletes a named Unique Constraint from a table based on the naming convention in effect Declaration IDeleteConstraintOnTableSyntax UniqueConstraint() Returns Type Description IDeleteConstraintOnTableSyntax The next step | Improve this Doc View Source UniqueConstraint(String) Deletes a named Unique Constraint From a table Declaration IDeleteConstraintOnTableSyntax UniqueConstraint(string constraintName) Parameters Type Name Description String constraintName The constraint name Returns Type Description IDeleteConstraintOnTableSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Index.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Index.html",
    "title": "Namespace FluentMigrator.Builders.Delete.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Delete.Index Interfaces IDeleteIndexForTableSyntax Specify the options or table of the index to delete IDeleteIndexOnColumnOrInSchemaSyntax Specify the column or schema of the index to delete IDeleteIndexOnColumnSyntax Specify the column or columns of the index to dlete IDeleteIndexOptionsSyntax Extension point for index options"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.html",
    "title": "Interface IDeleteIndexForTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexForTableSyntax Specify the options or table of the index to delete Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexForTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the table of the index to delete Declaration IDeleteIndexOnColumnOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IDeleteIndexOnColumnOrInSchemaSyntax The next step | Improve this Doc View Source WithOptions() Specify the options of the index to delete Declaration IDeleteIndexOptionsSyntax WithOptions() Returns Type Description IDeleteIndexOptionsSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax.html",
    "title": "Interface IDeleteIndexOnColumnOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOnColumnOrInSchemaSyntax Specify the column or schema of the index to delete Inherited Members IDeleteIndexOnColumnSyntax.OnColumn(String) IDeleteIndexOnColumnSyntax.OnColumns(String[]) IDeleteIndexOnColumnSyntax.WithOptions() Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOnColumnOrInSchemaSyntax : IDeleteIndexOnColumnSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) The schema of the index to delete Declaration IDeleteIndexOnColumnSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IDeleteIndexOnColumnSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.html",
    "title": "Interface IDeleteIndexOnColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOnColumnSyntax Specify the column or columns of the index to dlete Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOnColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source OnColumn(String) Specify the column of the index to delete Declaration IDeleteIndexOptionsSyntax OnColumn(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description IDeleteIndexOptionsSyntax The next step | Improve this Doc View Source OnColumns(String[]) Specify the columns of the index to delete Declaration IDeleteIndexOptionsSyntax OnColumns(params string[] columnNames) Parameters Type Name Description String [] columnNames The column names Returns Type Description IDeleteIndexOptionsSyntax The next step | Improve this Doc View Source WithOptions() Specify the options of the index to delete Declaration IDeleteIndexOptionsSyntax WithOptions() Returns Type Description IDeleteIndexOptionsSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax.html",
    "title": "Interface IDeleteIndexOptionsSyntax | FluentMigrator documentation",
    "keywords": "Interface IDeleteIndexOptionsSyntax Extension point for index options Namespace : FluentMigrator.Builders.Delete.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface IDeleteIndexOptionsSyntax : IFluentSyntax Extension Methods SqlServerExtensions.Online(IDeleteIndexOptionsSyntax, Boolean)"
  },
  "api/v3.x/FluentMigrator.Builders.Execute.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Execute.html",
    "title": "Namespace FluentMigrator.Builders.Execute | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Execute Interfaces IExecuteExpressionRoot Executes some SQL"
  },
  "api/v3.x/FluentMigrator.Builders.Execute.IExecuteExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Execute.IExecuteExpressionRoot.html",
    "title": "Interface IExecuteExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IExecuteExpressionRoot Executes some SQL Namespace : FluentMigrator.Builders.Execute Assembly : FluentMigrator.Abstractions.dll Syntax public interface IExecuteExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source EmbeddedScript(String) Executes an SQL script loaded from an embedded resource Declaration void EmbeddedScript(string embeddedSqlScriptName) Parameters Type Name Description String embeddedSqlScriptName The name of the embedded SQL script (partial matches allowed) | Improve this Doc View Source EmbeddedScript(String, IDictionary<String, String>) Executes an SQL script loaded from an embedded resource Declaration void EmbeddedScript(string embeddedSqlScriptName, IDictionary<string, string> parameters) Parameters Type Name Description String embeddedSqlScriptName The name of the embedded SQL script (partial matches allowed) IDictionary < String , String > parameters The parameters to be replaced in the SQL script | Improve this Doc View Source Script(String) Executes an SQL script loaded from the given file Declaration void Script(string pathToSqlScript) Parameters Type Name Description String pathToSqlScript The file to read the SQL script from | Improve this Doc View Source Script(String, IDictionary<String, String>) Executes an SQL script loaded from the given file Declaration void Script(string pathToSqlScript, IDictionary<string, string> parameters) Parameters Type Name Description String pathToSqlScript The file to read the SQL script from IDictionary < String , String > parameters The parameters to be replaced in the SQL script | Improve this Doc View Source Sql(String) Executes an SQL statement Declaration void Sql(string sqlStatement) Parameters Type Name Description String sqlStatement The SQL statement to execute | Improve this Doc View Source Sql(String, String) Executes an SQL statement Declaration void Sql(string sqlStatement, string description) Parameters Type Name Description String sqlStatement The SQL statement to execute String description Description for this SQL statement for logging purposes | Improve this Doc View Source WithConnection(Action<IDbConnection, IDbTransaction>) Calls an action to execute dynamically generated SQL statements Declaration void WithConnection(Action<IDbConnection, IDbTransaction> operation) Parameters Type Name Description Action < IDbConnection , IDbTransaction > operation The operation to execute on a given connection and transaction"
  },
  "api/v3.x/FluentMigrator.Builders.html": {
    "href": "api/v3.x/FluentMigrator.Builders.html",
    "title": "Namespace FluentMigrator.Builders | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders Interfaces IColumnExpressionBuilder Describes common attributes for expression builders which have a current table/column. IColumnOptionSyntax<TNext, TNextFk> Specify column options IColumnTypeSyntax<TNext> Defines the column type IForeignKeyCascadeSyntax<TNext, TNextFk> Base interface for specifying the foreign key cascading IInSchemaSyntax Defines the schema"
  },
  "api/v3.x/FluentMigrator.Builders.IColumnExpressionBuilder.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IColumnExpressionBuilder.html",
    "title": "Interface IColumnExpressionBuilder | FluentMigrator documentation",
    "keywords": "Interface IColumnExpressionBuilder Describes common attributes for expression builders which have a current table/column. Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnExpressionBuilder : IFluentSyntax Properties | Improve this Doc View Source Column Gets the current column definition Declaration ColumnDefinition Column { get; } Property Value Type Description ColumnDefinition | Improve this Doc View Source SchemaName Gets the schema name Declaration string SchemaName { get; } Property Value Type Description String | Improve this Doc View Source TableName Gets the table name Declaration string TableName { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Builders.IColumnOptionSyntax-2.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IColumnOptionSyntax-2.html",
    "title": "Interface IColumnOptionSyntax<TNext, TNextFk> | FluentMigrator documentation",
    "keywords": "Interface IColumnOptionSyntax<TNext, TNextFk> Specify column options Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnOptionSyntax<TNext, TNextFk> : IFluentSyntax where TNext : IFluentSyntax where TNextFk : IFluentSyntax Type Parameters Name Description TNext The interface of the next step TNextFk The interface of the next step after a foreign key definition Methods | Improve this Doc View Source ForeignKey() Specifies a foreign key Declaration TNextFk ForeignKey() Returns Type Description TNextFk The next step | Improve this Doc View Source ForeignKey(String, String) Specifies a foreign key Declaration TNextFk ForeignKey(string primaryTableName, string primaryColumnName) Parameters Type Name Description String primaryTableName The primary table name String primaryColumnName The primary tables column name Returns Type Description TNextFk The next step | Improve this Doc View Source ForeignKey(String, String, String) Specifies a foreign key Declaration TNextFk ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName) Parameters Type Name Description String foreignKeyName The foreign key name String primaryTableName The primary table name String primaryColumnName The primary tables column name Returns Type Description TNextFk The next step | Improve this Doc View Source ForeignKey(String, String, String, String) Specifies a foreign key Declaration TNextFk ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName) Parameters Type Name Description String foreignKeyName The foreign key name String primaryTableSchema The primary tables schema name String primaryTableName The primary table name String primaryColumnName The primary tables column name Returns Type Description TNextFk The next step | Improve this Doc View Source Identity() Sets the columns identity configuration Declaration TNext Identity() Returns Type Description TNext The next step | Improve this Doc View Source Indexed() Create an index for this column Declaration TNext Indexed() Returns Type Description TNext The next step | Improve this Doc View Source Indexed(String) Create an index for this column Declaration TNext Indexed(string indexName) Parameters Type Name Description String indexName The index name Returns Type Description TNext The next step | Improve this Doc View Source NotNullable() Specify the column as not-nullable Declaration TNext NotNullable() Returns Type Description TNext The next step | Improve this Doc View Source Nullable() Specify the column as nullable Declaration TNext Nullable() Returns Type Description TNext The next step | Improve this Doc View Source PrimaryKey() Define the column as primary key Declaration TNext PrimaryKey() Returns Type Description TNext The next step | Improve this Doc View Source PrimaryKey(String) Define the column as primary key Declaration TNext PrimaryKey(string primaryKeyName) Parameters Type Name Description String primaryKeyName The primary key constraint name Returns Type Description TNext The next step | Improve this Doc View Source ReferencedBy(String, String) Specify a foreign key pointing to the current column Declaration TNextFk ReferencedBy(string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignTableName The foreign key table String foreignColumnName The foreign key column Returns Type Description TNextFk The next step | Improve this Doc View Source ReferencedBy(String, String, String) Specify a foreign key pointing to the current column Declaration TNextFk ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignKeyName The foreign key name String foreignTableName The foreign key table String foreignColumnName The foreign key column Returns Type Description TNextFk The next step | Improve this Doc View Source ReferencedBy(String, String, String, String) Specify a foreign key pointing to the current column Declaration TNextFk ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName) Parameters Type Name Description String foreignKeyName The foreign key name String foreignTableSchema The foreign key table schema String foreignTableName The foreign key table String foreignColumnName The foreign key column Returns Type Description TNextFk The next step | Improve this Doc View Source Unique() Specify a unique index for the column Declaration TNext Unique() Returns Type Description TNext The next step | Improve this Doc View Source Unique(String) Specify a unique index for the column Declaration TNext Unique(string indexName) Parameters Type Name Description String indexName The index name Returns Type Description TNext The next step | Improve this Doc View Source WithColumnDescription(String) Sets the columns description Declaration TNext WithColumnDescription(string description) Parameters Type Name Description String description The description Returns Type Description TNext The next step | Improve this Doc View Source WithDefault(SystemMethods) Sets the default function for the column Declaration TNext WithDefault(SystemMethods method) Parameters Type Name Description SystemMethods method The function providing the default value Returns Type Description TNext The next step | Improve this Doc View Source WithDefaultValue(Object) Sets the default value for the column Declaration TNext WithDefaultValue(object value) Parameters Type Name Description Object value The default value Returns Type Description TNext The next step Extension Methods PostgresExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) OracleExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) SqlServerExtensions.Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32)"
  },
  "api/v3.x/FluentMigrator.Builders.IColumnTypeSyntax-1.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IColumnTypeSyntax-1.html",
    "title": "Interface IColumnTypeSyntax<TNext> | FluentMigrator documentation",
    "keywords": "Interface IColumnTypeSyntax<TNext> Defines the column type Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnTypeSyntax<TNext> : IFluentSyntax where TNext : IFluentSyntax Type Parameters Name Description TNext The interface to return after a type was specified Methods | Improve this Doc View Source AsAnsiString() Defines the column type as ANSI string (single byte character set) Declaration TNext AsAnsiString() Returns Type Description TNext The next step | Improve this Doc View Source AsAnsiString(Int32) Defines the column type as ANSI string (single byte character set) with the given size Declaration TNext AsAnsiString(int size) Parameters Type Name Description Int32 size The maximum size (usually in bytes) of the ansi string Returns Type Description TNext The next step | Improve this Doc View Source AsAnsiString(Int32, String) Defines the column type as ANSI string (single byte character set) with the given size and collationName Declaration TNext AsAnsiString(int size, string collationName) Parameters Type Name Description Int32 size The maximum size (usually in bytes) of the ansi string String collationName The collation to use for this column Returns Type Description TNext The next step | Improve this Doc View Source AsAnsiString(String) Defines the column type as ANSI string (single byte character set) with the given collationName Declaration TNext AsAnsiString(string collationName) Parameters Type Name Description String collationName The collation to use for this column Returns Type Description TNext The next step | Improve this Doc View Source AsBinary() Defines the column type as BLOB Declaration TNext AsBinary() Returns Type Description TNext The next step | Improve this Doc View Source AsBinary(Int32) Defines the column type as BLOB Declaration TNext AsBinary(int size) Parameters Type Name Description Int32 size The maximum size of the BLOB (in bytes) Returns Type Description TNext The next step | Improve this Doc View Source AsBoolean() Defines the column type as Boolean (or bit) Declaration TNext AsBoolean() Returns Type Description TNext The next step | Improve this Doc View Source AsByte() Defines the column type as Byte Declaration TNext AsByte() Returns Type Description TNext The next step | Improve this Doc View Source AsCurrency() Defines the column type as currency Declaration TNext AsCurrency() Returns Type Description TNext The next step | Improve this Doc View Source AsCustom(String) Defines the column with a custom (DB-specific) type Declaration TNext AsCustom(string customType) Parameters Type Name Description String customType The custom type as SQL identifier Returns Type Description TNext The next step | Improve this Doc View Source AsDate() Defines the column type as date Declaration TNext AsDate() Returns Type Description TNext The next step | Improve this Doc View Source AsDateTime() Defines the column type as DateTime Declaration TNext AsDateTime() Returns Type Description TNext The next step | Improve this Doc View Source AsDateTime2() Defines the column type as DateTime with extended range and precision Declaration TNext AsDateTime2() Returns Type Description TNext The next step | Improve this Doc View Source AsDateTimeOffset() Defines the column type as DateTimeOffset Declaration TNext AsDateTimeOffset() Returns Type Description TNext The next step | Improve this Doc View Source AsDateTimeOffset(Int32) Defines the column type as DateTimeOffset Declaration TNext AsDateTimeOffset(int precision) Parameters Type Name Description Int32 precision The number of digits for the fraction of a second Returns Type Description TNext The next step | Improve this Doc View Source AsDecimal() Defines the column type as Decimal Declaration TNext AsDecimal() Returns Type Description TNext The next step | Improve this Doc View Source AsDecimal(Int32, Int32) Defines the column type as decimal with given size and precision Declaration TNext AsDecimal(int size, int precision) Parameters Type Name Description Int32 size The number of digits Int32 precision The number of digits after the comma Returns Type Description TNext The next step | Improve this Doc View Source AsDouble() Defines the column type as Double Declaration TNext AsDouble() Returns Type Description TNext The next step | Improve this Doc View Source AsFixedLengthAnsiString(Int32) Defines the column type as ANSI string with fixed length Declaration TNext AsFixedLengthAnsiString(int size) Parameters Type Name Description Int32 size The length of the string in bytes Returns Type Description TNext The next step | Improve this Doc View Source AsFixedLengthAnsiString(Int32, String) Defines the column type as ANSI string with fixed length Declaration TNext AsFixedLengthAnsiString(int size, string collationName) Parameters Type Name Description Int32 size The length of the string in bytes String collationName The name of the collation to use Returns Type Description TNext The next step | Improve this Doc View Source AsFixedLengthString(Int32) Defines the column type as unicode string with a fixed length Declaration TNext AsFixedLengthString(int size) Parameters Type Name Description Int32 size The maximum length of the string in code points Returns Type Description TNext The next step | Improve this Doc View Source AsFixedLengthString(Int32, String) Defines the column type as unicode string with a fixed length Declaration TNext AsFixedLengthString(int size, string collationName) Parameters Type Name Description Int32 size The length of the string in code points String collationName The name of the collation to use Returns Type Description TNext The next step | Improve this Doc View Source AsFloat() Defines the column type as a Single Declaration TNext AsFloat() Returns Type Description TNext The next step | Improve this Doc View Source AsGuid() Defines the column type as a Guid Declaration TNext AsGuid() Returns Type Description TNext The next step | Improve this Doc View Source AsInt16() Defines the column type as a Int16 Declaration TNext AsInt16() Returns Type Description TNext The next step | Improve this Doc View Source AsInt32() Defines the column type as a Int32 Declaration TNext AsInt32() Returns Type Description TNext The next step | Improve this Doc View Source AsInt64() Defines the column type as a Int64 Declaration TNext AsInt64() Returns Type Description TNext The next step | Improve this Doc View Source AsString() Defines the column type as unicode string Declaration TNext AsString() Returns Type Description TNext The next step | Improve this Doc View Source AsString(Int32) Defines the column type as unicode string Declaration TNext AsString(int size) Parameters Type Name Description Int32 size The maximum length in code points Returns Type Description TNext The next step | Improve this Doc View Source AsString(Int32, String) Defines the column type as unicode string Declaration TNext AsString(int size, string collationName) Parameters Type Name Description Int32 size The maximum length in code points String collationName The name of the collation Returns Type Description TNext The next step | Improve this Doc View Source AsString(String) Defines the column type as unicode string Declaration TNext AsString(string collationName) Parameters Type Name Description String collationName The name of the collation Returns Type Description TNext The next step | Improve this Doc View Source AsTime() Defines the column type as TimeSpan Declaration TNext AsTime() Returns Type Description TNext The next step | Improve this Doc View Source AsXml() Defines the column type as XML Declaration TNext AsXml() Returns Type Description TNext The next step | Improve this Doc View Source AsXml(Int32) Defines the column type as XML Declaration TNext AsXml(int size) Parameters Type Name Description Int32 size The maximum size Returns Type Description TNext The next step"
  },
  "api/v3.x/FluentMigrator.Builders.IfDatabase.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IfDatabase.html",
    "title": "Namespace FluentMigrator.Builders.IfDatabase | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.IfDatabase Interfaces IIfDatabaseExpressionRoot Defines fluent expressions that can be conditionally executed"
  },
  "api/v3.x/FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.html",
    "title": "Interface IIfDatabaseExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IIfDatabaseExpressionRoot Defines fluent expressions that can be conditionally executed Namespace : FluentMigrator.Builders.IfDatabase Assembly : FluentMigrator.Abstractions.dll Syntax public interface IIfDatabaseExpressionRoot Properties | Improve this Doc View Source Alter Creates an ALTER expression Declaration IAlterExpressionRoot Alter { get; } Property Value Type Description IAlterExpressionRoot | Improve this Doc View Source Create Creates CREATE expression Declaration ICreateExpressionRoot Create { get; } Property Value Type Description ICreateExpressionRoot | Improve this Doc View Source Delete Creates a DELETE expression Declaration IDeleteExpressionRoot Delete { get; } Property Value Type Description IDeleteExpressionRoot | Improve this Doc View Source Execute Execute some SQL Declaration IExecuteExpressionRoot Execute { get; } Property Value Type Description IExecuteExpressionRoot | Improve this Doc View Source Insert Inserts data into a table Declaration IInsertExpressionRoot Insert { get; } Property Value Type Description IInsertExpressionRoot | Improve this Doc View Source Rename Renames a database object Declaration IRenameExpressionRoot Rename { get; } Property Value Type Description IRenameExpressionRoot | Improve this Doc View Source Schema Check if a database object exists Declaration ISchemaExpressionRoot Schema { get; } Property Value Type Description ISchemaExpressionRoot | Improve this Doc View Source Update Updates data in a table Declaration IUpdateExpressionRoot Update { get; } Property Value Type Description IUpdateExpressionRoot Methods | Improve this Doc View Source Delegate(Action) Invokes a delegate that can be used to create database specific expressions Declaration void Delegate(Action delegation) Parameters Type Name Description Action delegation The delegate to call if the database type matches"
  },
  "api/v3.x/FluentMigrator.Builders.IForeignKeyCascadeSyntax-2.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IForeignKeyCascadeSyntax-2.html",
    "title": "Interface IForeignKeyCascadeSyntax<TNext, TNextFk> | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyCascadeSyntax<TNext, TNextFk> Base interface for specifying the foreign key cascading Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IForeignKeyCascadeSyntax<TNext, TNextFk> : IFluentSyntax where TNext : IFluentSyntax where TNextFk : IFluentSyntax Type Parameters Name Description TNext The interface for the next step after specifying the cascade rules for both DELETE and UPDATE TNextFk The interface for the next step after specifying the cascade rule for either DELETE or UPDATE Methods | Improve this Doc View Source OnDelete(Rule) Specify the behavior for DELETEs Declaration TNextFk OnDelete(Rule rule) Parameters Type Name Description Rule rule The rule to apply for DELETEs Returns Type Description TNextFk The next step | Improve this Doc View Source OnDeleteOrUpdate(Rule) Specify the behavior for UPDATEs and DELETEs Declaration TNext OnDeleteOrUpdate(Rule rule) Parameters Type Name Description Rule rule The rule to apply for UPDATEs and DELETEs Returns Type Description TNext The next step | Improve this Doc View Source OnUpdate(Rule) Specify the behavior for UPDATEs Declaration TNextFk OnUpdate(Rule rule) Parameters Type Name Description Rule rule The rule to apply for UPDATEs Returns Type Description TNextFk The next step"
  },
  "api/v3.x/FluentMigrator.Builders.IInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.IInSchemaSyntax.html",
    "title": "Interface IInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IInSchemaSyntax Defines the schema Namespace : FluentMigrator.Builders Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInSchemaSyntax : IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specifies the schema Declaration void InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name"
  },
  "api/v3.x/FluentMigrator.Builders.Insert.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Insert.html",
    "title": "Namespace FluentMigrator.Builders.Insert | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Insert Interfaces IInsertDataOrInSchemaSyntax Specify the data or schema to insert IInsertDataSyntax Specify the data to insert IInsertExpressionRoot The root of the INSERT expression"
  },
  "api/v3.x/FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax.html",
    "title": "Interface IInsertDataOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IInsertDataOrInSchemaSyntax Specify the data or schema to insert Inherited Members IInsertDataSyntax.Row(Object) IInsertDataSyntax.Row(IDictionary<String, Object>) Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertDataOrInSchemaSyntax : IInsertDataSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema of the table to insert data Declaration IInsertDataSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema Returns Type Description IInsertDataSyntax The next step Extension Methods SqlServerExtensions.WithIdentityInsert(IInsertDataSyntax)"
  },
  "api/v3.x/FluentMigrator.Builders.Insert.IInsertDataSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Insert.IInsertDataSyntax.html",
    "title": "Interface IInsertDataSyntax | FluentMigrator documentation",
    "keywords": "Interface IInsertDataSyntax Specify the data to insert Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertDataSyntax : IFluentSyntax Methods | Improve this Doc View Source Row(IDictionary<String, Object>) Specify the data to insert Declaration IInsertDataSyntax Row(IDictionary<string, object> data) Parameters Type Name Description IDictionary < String , Object > data The dictionary containing column name/value combinations Returns Type Description IInsertDataSyntax The next step | Improve this Doc View Source Row(Object) Specify the data to insert Declaration IInsertDataSyntax Row(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType An anonymous object that is used to insert data Returns Type Description IInsertDataSyntax The next step Remarks The properties are the column names and their values are the row values. Extension Methods SqlServerExtensions.WithIdentityInsert(IInsertDataSyntax)"
  },
  "api/v3.x/FluentMigrator.Builders.Insert.IInsertExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Insert.IInsertExpressionRoot.html",
    "title": "Interface IInsertExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IInsertExpressionRoot The root of the INSERT expression Namespace : FluentMigrator.Builders.Insert Assembly : FluentMigrator.Abstractions.dll Syntax public interface IInsertExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source IntoTable(String) Specify the table name to insert data to Declaration IInsertDataOrInSchemaSyntax IntoTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IInsertDataOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Column.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Column.html",
    "title": "Namespace FluentMigrator.Builders.Rename.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename.Column Interfaces IRenameColumnToOrInSchemaSyntax Specify the schema of the table whose column is to be renamed IRenameColumnToSyntax Specify the target column name"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax.html",
    "title": "Interface IRenameColumnToOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnToOrInSchemaSyntax Specify the schema of the table whose column is to be renamed Inherited Members IRenameColumnToSyntax.To(String) Namespace : FluentMigrator.Builders.Rename.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnToOrInSchemaSyntax : IRenameColumnToSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema name Declaration IRenameColumnToSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IRenameColumnToSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax.html",
    "title": "Interface IRenameColumnToSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnToSyntax Specify the target column name Namespace : FluentMigrator.Builders.Rename.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnToSyntax : IFluentSyntax Methods | Improve this Doc View Source To(String) Specify the new column name Declaration void To(string name) Parameters Type Name Description String name The new column name"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.html",
    "title": "Namespace FluentMigrator.Builders.Rename | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename Interfaces IRenameColumnTableSyntax Specify the table (or its column) to be renamed IRenameExpressionRoot The expression root for renaming tables or columns"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.IRenameColumnTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.IRenameColumnTableSyntax.html",
    "title": "Interface IRenameColumnTableSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameColumnTableSyntax Specify the table (or its column) to be renamed Namespace : FluentMigrator.Builders.Rename Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameColumnTableSyntax : IFluentSyntax Methods | Improve this Doc View Source OnTable(String) Specify the name of the table (or its column) to be renamed Declaration IRenameColumnToOrInSchemaSyntax OnTable(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IRenameColumnToOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.IRenameExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.IRenameExpressionRoot.html",
    "title": "Interface IRenameExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IRenameExpressionRoot The expression root for renaming tables or columns Namespace : FluentMigrator.Builders.Rename Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Column(String) Specify the column to be renamed Declaration IRenameColumnTableSyntax Column(string oldName) Parameters Type Name Description String oldName The current column name Returns Type Description IRenameColumnTableSyntax The next step | Improve this Doc View Source Table(String) Specify the table (or its column) to be renamed Declaration IRenameTableToOrInSchemaSyntax Table(string oldName) Parameters Type Name Description String oldName The current table name Returns Type Description IRenameTableToOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Table.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Table.html",
    "title": "Namespace FluentMigrator.Builders.Rename.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Rename.Table Interfaces IRenameTableToOrInSchemaSyntax Specify the new table name or schema of the table to rename IRenameTableToSyntax Specify the new table name"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax.html",
    "title": "Interface IRenameTableToOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameTableToOrInSchemaSyntax Specify the new table name or schema of the table to rename Inherited Members IRenameTableToSyntax.To(String) Namespace : FluentMigrator.Builders.Rename.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameTableToOrInSchemaSyntax : IRenameTableToSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the tables schema name Declaration IRenameTableToSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IRenameTableToSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax.html",
    "title": "Interface IRenameTableToSyntax | FluentMigrator documentation",
    "keywords": "Interface IRenameTableToSyntax Specify the new table name Namespace : FluentMigrator.Builders.Rename.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface IRenameTableToSyntax : IFluentSyntax Methods | Improve this Doc View Source To(String) Specify the new name of the table Declaration IInSchemaSyntax To(string name) Parameters Type Name Description String name The new table name Returns Type Description IInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Column.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Column.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Column | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Column Interfaces ISchemaColumnSyntax Query a columns existence"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax.html",
    "title": "Interface ISchemaColumnSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaColumnSyntax Query a columns existence Namespace : FluentMigrator.Builders.Schema.Column Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaColumnSyntax : IFluentSyntax Methods | Improve this Doc View Source Exists() Returns true when the column exists Declaration bool Exists() Returns Type Description Boolean true when the column exists"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Constraint.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Constraint.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Constraint | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Constraint Interfaces ISchemaConstraintSyntax Query a constraints existence"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax.html",
    "title": "Interface ISchemaConstraintSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaConstraintSyntax Query a constraints existence Namespace : FluentMigrator.Builders.Schema.Constraint Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaConstraintSyntax : IFluentSyntax Methods | Improve this Doc View Source Exists() Returns true when a constraint exists Declaration bool Exists() Returns Type Description Boolean true when a constraint exists"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema Interfaces ISchemaExpressionRoot The expression root to query the existence of database objects"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Index.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Index.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Index | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Index Interfaces ISchemaIndexSyntax Query an index' existence"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax.html",
    "title": "Interface ISchemaIndexSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaIndexSyntax Query an index' existence Namespace : FluentMigrator.Builders.Schema.Index Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaIndexSyntax : IFluentSyntax Methods | Improve this Doc View Source Exists() Returns true when the index exists Declaration bool Exists() Returns Type Description Boolean true when the index exists"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.ISchemaExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.ISchemaExpressionRoot.html",
    "title": "Interface ISchemaExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface ISchemaExpressionRoot The expression root to query the existence of database objects Namespace : FluentMigrator.Builders.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Schema(String) Specify the schema as base to query a database objects existence Declaration ISchemaSchemaSyntax Schema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description ISchemaSchemaSyntax The next step | Improve this Doc View Source Table(String) Specify the table as base to query a database objects existence Declaration ISchemaTableSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description ISchemaTableSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Schema.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Schema.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Schema | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Schema Interfaces ISchemaSchemaSyntax Query a schemas (or its of its tables) existence"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.html",
    "title": "Interface ISchemaSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaSchemaSyntax Query a schemas (or its of its tables) existence Namespace : FluentMigrator.Builders.Schema.Schema Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaSchemaSyntax : IFluentSyntax Methods | Improve this Doc View Source Exists() Returns true when a schema exists Declaration bool Exists() Returns Type Description Boolean true when a schema exists | Improve this Doc View Source Table(String) Specify the table name as basis for a query a database objects existence Declaration ISchemaTableSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description ISchemaTableSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Table.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Table.html",
    "title": "Namespace FluentMigrator.Builders.Schema.Table | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Schema.Table Interfaces ISchemaTableSyntax Queries a tables (or one of its childs) existence"
  },
  "api/v3.x/FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.html",
    "title": "Interface ISchemaTableSyntax | FluentMigrator documentation",
    "keywords": "Interface ISchemaTableSyntax Queries a tables (or one of its childs) existence Namespace : FluentMigrator.Builders.Schema.Table Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaTableSyntax Methods | Improve this Doc View Source Column(String) Specifies the column to check Declaration ISchemaColumnSyntax Column(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description ISchemaColumnSyntax The next step | Improve this Doc View Source Constraint(String) Specify the constraint to check Declaration ISchemaConstraintSyntax Constraint(string constraintName) Parameters Type Name Description String constraintName The constraint name Returns Type Description ISchemaConstraintSyntax The next step | Improve this Doc View Source Exists() Returns true when the table exists Declaration bool Exists() Returns Type Description Boolean true when the table exists | Improve this Doc View Source Index(String) Specify the index to check Declaration ISchemaIndexSyntax Index(string indexName) Parameters Type Name Description String indexName The index name Returns Type Description ISchemaIndexSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Update.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Update.html",
    "title": "Namespace FluentMigrator.Builders.Update | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Builders.Update Interfaces IUpdateExpressionRoot The expression root to update rows IUpdateSetOrInSchemaSyntax Specify the schema or the data to update IUpdateSetSyntax Specify the data to update IUpdateWhereSyntax Interface the specify the update condition"
  },
  "api/v3.x/FluentMigrator.Builders.Update.IUpdateExpressionRoot.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Update.IUpdateExpressionRoot.html",
    "title": "Interface IUpdateExpressionRoot | FluentMigrator documentation",
    "keywords": "Interface IUpdateExpressionRoot The expression root to update rows Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateExpressionRoot : IFluentSyntax Methods | Improve this Doc View Source Table(String) Specifies the table to update its data Declaration IUpdateSetOrInSchemaSyntax Table(string tableName) Parameters Type Name Description String tableName The table name Returns Type Description IUpdateSetOrInSchemaSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax.html",
    "title": "Interface IUpdateSetOrInSchemaSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateSetOrInSchemaSyntax Specify the schema or the data to update Inherited Members IUpdateSetSyntax.Set(Object) Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateSetOrInSchemaSyntax : IUpdateSetSyntax, IFluentSyntax Methods | Improve this Doc View Source InSchema(String) Specify the schema of the table to update its data Declaration IUpdateSetSyntax InSchema(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description IUpdateSetSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Update.IUpdateSetSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Update.IUpdateSetSyntax.html",
    "title": "Interface IUpdateSetSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateSetSyntax Specify the data to update Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateSetSyntax : IFluentSyntax Methods | Improve this Doc View Source Set(Object) Specify the values to be set Declaration IUpdateWhereSyntax Set(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType The columns and values to be used set Returns Type Description IUpdateWhereSyntax The next step"
  },
  "api/v3.x/FluentMigrator.Builders.Update.IUpdateWhereSyntax.html": {
    "href": "api/v3.x/FluentMigrator.Builders.Update.IUpdateWhereSyntax.html",
    "title": "Interface IUpdateWhereSyntax | FluentMigrator documentation",
    "keywords": "Interface IUpdateWhereSyntax Interface the specify the update condition Namespace : FluentMigrator.Builders.Update Assembly : FluentMigrator.Abstractions.dll Syntax public interface IUpdateWhereSyntax : IFluentSyntax Methods | Improve this Doc View Source AllRows() Specify that all rows should be updated Declaration void AllRows() | Improve this Doc View Source Where(Object) Specify the condition of the rows to update Declaration void Where(object dataAsAnonymousType) Parameters Type Name Description Object dataAsAnonymousType The columns and values to be used as condition"
  },
  "api/v3.x/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html",
    "title": "Class DatabaseOperationNotSupportedException | FluentMigrator documentation",
    "keywords": "Class DatabaseOperationNotSupportedException Exception to be thrown when a database operation is not supported Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DatabaseOperationNotSupportedException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source DatabaseOperationNotSupportedException() Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException() | Improve this Doc View Source DatabaseOperationNotSupportedException(SerializationInfo, StreamingContext) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source DatabaseOperationNotSupportedException(String) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source DatabaseOperationNotSupportedException(String, Exception) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v3.x/FluentMigrator.Exceptions.DuplicateMigrationException.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.DuplicateMigrationException.html",
    "title": "Class DuplicateMigrationException | FluentMigrator documentation",
    "keywords": "Class DuplicateMigrationException An exception that is thrown when more than one migration with the same version was found Inheritance Object Exception FluentMigratorException DuplicateMigrationException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DuplicateMigrationException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source DuplicateMigrationException() Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException() | Improve this Doc View Source DuplicateMigrationException(SerializationInfo, StreamingContext) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source DuplicateMigrationException(String) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source DuplicateMigrationException(String, Exception) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v3.x/FluentMigrator.Exceptions.FluentMigratorException.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.FluentMigratorException.html",
    "title": "Class FluentMigratorException | FluentMigrator documentation",
    "keywords": "Class FluentMigratorException The base exception class for FluentMigrator exceptions Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException DatabaseOperationNotSupportedException DuplicateMigrationException DuplicateMigrationException ProcessorFactoryNotFoundException ProcessorFactoryNotFoundException UndeterminableConnectionException UndeterminableConnectionException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public abstract class FluentMigratorException : Exception, _Exception, ISerializable Constructors | Improve this Doc View Source FluentMigratorException() Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException() | Improve this Doc View Source FluentMigratorException(SerializationInfo, StreamingContext) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source FluentMigratorException(String) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source FluentMigratorException(String, Exception) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v3.x/FluentMigrator.Exceptions.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.html",
    "title": "Namespace FluentMigrator.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Exceptions Classes DatabaseOperationNotSupportedException Exception to be thrown when a database operation is not supported DuplicateMigrationException An exception that is thrown when more than one migration with the same version was found FluentMigratorException The base exception class for FluentMigrator exceptions ProcessorFactoryNotFoundException Exception that gets thrown when a processor factory couldn't be found UndeterminableConnectionException Exception that gets thrown when no connection string could be found"
  },
  "api/v3.x/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html",
    "title": "Class ProcessorFactoryNotFoundException | FluentMigrator documentation",
    "keywords": "Class ProcessorFactoryNotFoundException Exception that gets thrown when a processor factory couldn't be found Inheritance Object Exception FluentMigratorException ProcessorFactoryNotFoundException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class ProcessorFactoryNotFoundException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source ProcessorFactoryNotFoundException() Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException() | Improve this Doc View Source ProcessorFactoryNotFoundException(SerializationInfo, StreamingContext) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source ProcessorFactoryNotFoundException(String) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source ProcessorFactoryNotFoundException(String, Exception) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v3.x/FluentMigrator.Exceptions.UndeterminableConnectionException.html": {
    "href": "api/v3.x/FluentMigrator.Exceptions.UndeterminableConnectionException.html",
    "title": "Class UndeterminableConnectionException | FluentMigrator documentation",
    "keywords": "Class UndeterminableConnectionException Exception that gets thrown when no connection string could be found Inheritance Object Exception FluentMigratorException UndeterminableConnectionException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class UndeterminableConnectionException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source UndeterminableConnectionException() Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException() | Improve this Doc View Source UndeterminableConnectionException(SerializationInfo, StreamingContext) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source UndeterminableConnectionException(String) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source UndeterminableConnectionException(String, Exception) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/v3.x/FluentMigrator.ExplicitUnicodeString.html": {
    "href": "api/v3.x/FluentMigrator.ExplicitUnicodeString.html",
    "title": "Class ExplicitUnicodeString | FluentMigrator documentation",
    "keywords": "Class ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Inheritance Object ExplicitUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete(\"Use normal CLR strings instead, as they will be formatted to SQL Server Unicode strings\")] public class ExplicitUnicodeString Constructors | Improve this Doc View Source ExplicitUnicodeString(String) Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Declaration public ExplicitUnicodeString(string text) Parameters Type Name Description String text Unicode string Properties | Improve this Doc View Source Text Gets the text of the unicode string literal Declaration public string Text { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/v3.x/FluentMigrator.Expressions.AlterColumnExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.AlterColumnExpression.html",
    "title": "Class AlterColumnExpression | FluentMigrator documentation",
    "keywords": "Class AlterColumnExpression The implementation of interfaces to alter a column Inheritance Object MigrationExpressionBase AlterColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IValidationChildren Properties | Improve this Doc View Source Column Gets or sets the column definition Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html",
    "title": "Class AlterDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class AlterDefaultConstraintExpression Expression to alter default constraints Inheritance Object MigrationExpressionBase AlterDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source ColumnName Gets or sets the column name Declaration public virtual string ColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultValue Gets or sets the default value Declaration public virtual object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.AlterSchemaExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.AlterSchemaExpression.html",
    "title": "Class AlterSchemaExpression | FluentMigrator documentation",
    "keywords": "Class AlterSchemaExpression Expression to move a table from one schema to another Inheritance Object MigrationExpressionBase AlterSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source DestinationSchemaName Gets or sets the destination schema name Declaration public virtual string DestinationSchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source SourceSchemaName Gets or sets the source schema name Declaration public virtual string SourceSchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.AlterTableExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.AlterTableExpression.html",
    "title": "Class AlterTableExpression | FluentMigrator documentation",
    "keywords": "Class AlterTableExpression Expression to alter the table description Inheritance Object MigrationExpressionBase AlterTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableDescription Gets or sets the table description Declaration public virtual string TableDescription { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateColumnExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateColumnExpression.html",
    "title": "Class CreateColumnExpression | FluentMigrator documentation",
    "keywords": "Class CreateColumnExpression Expression to create a table Inheritance Object MigrationExpressionBase CreateColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression, IValidationChildren Properties | Improve this Doc View Source Column Gets or sets the current column definition Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IColumnsExpression.Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateConstraintExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateConstraintExpression.html",
    "title": "Class CreateConstraintExpression | FluentMigrator documentation",
    "keywords": "Class CreateConstraintExpression The expression to create a constraint Inheritance Object MigrationExpressionBase CreateConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression, IValidationChildren Constructors | Improve this Doc View Source CreateConstraintExpression(ConstraintType) Initializes a new instance of the CreateConstraintExpression class. Declaration public CreateConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Constraint Gets the constraint definition Declaration public virtual ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateForeignKeyExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateForeignKeyExpression.html",
    "title": "Class CreateForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class CreateForeignKeyExpression Expression to create a foreign key Inheritance Object MigrationExpressionBase CreateForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression, IValidationChildren Properties | Improve this Doc View Source ForeignKey Gets the foreign key definition Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateIndexExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateIndexExpression.html",
    "title": "Class CreateIndexExpression | FluentMigrator documentation",
    "keywords": "Class CreateIndexExpression Expression to create an index Inheritance Object MigrationExpressionBase CreateIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression, IValidationChildren Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Index Gets the index definition Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateSchemaExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateSchemaExpression.html",
    "title": "Class CreateSchemaExpression | FluentMigrator documentation",
    "keywords": "Class CreateSchemaExpression Expression to create a schema Inheritance Object MigrationExpressionBase CreateSchemaExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateSequenceExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateSequenceExpression.html",
    "title": "Class CreateSequenceExpression | FluentMigrator documentation",
    "keywords": "Class CreateSequenceExpression Expression to crate a sequence Inheritance Object MigrationExpressionBase CreateSequenceExpression Implements IMigrationExpression ICanBeValidated ISequenceExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISequenceExpression, IValidationChildren Properties | Improve this Doc View Source Children Gets the child objects Declaration public IEnumerable<object> Children { get; } Property Value Type Description IEnumerable < Object > | Improve this Doc View Source Sequence Gets the sequence definition Declaration public virtual SequenceDefinition Sequence { get; set; } Property Value Type Description SequenceDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISequenceExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.CreateTableExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.CreateTableExpression.html",
    "title": "Class CreateTableExpression | FluentMigrator documentation",
    "keywords": "Class CreateTableExpression Expression to create a table Inheritance Object MigrationExpressionBase CreateTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression, IValidationChildren Properties | Improve this Doc View Source Columns Gets or sets the column definitions Declaration public virtual IList<ColumnDefinition> Columns { get; set; } Property Value Type Description IList < ColumnDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableDescription Gets or sets the table description Declaration public virtual string TableDescription { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IColumnsExpression.Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteColumnExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteColumnExpression.html",
    "title": "Class DeleteColumnExpression | FluentMigrator documentation",
    "keywords": "Class DeleteColumnExpression Expression to delete a column Inheritance Object MigrationExpressionBase DeleteColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source ColumnNames Gets or sets the column names Declaration public ICollection<string> ColumnNames { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets a table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteConstraintExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteConstraintExpression.html",
    "title": "Class DeleteConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteConstraintExpression Expression to delete a constraint Inheritance Object MigrationExpressionBase DeleteConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression Constructors | Improve this Doc View Source DeleteConstraintExpression(ConstraintType) Initializes a new instance of the DeleteConstraintExpression class. Declaration public DeleteConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Constraint Gets or sets the constraint definition Declaration public ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteDataExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteDataExpression.html",
    "title": "Class DeleteDataExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDataExpression Expression to delete the data Inheritance Object DeleteDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDataExpression : IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source IsAllRows Gets or sets a value indicating whether all rows should be deleted Declaration public virtual bool IsAllRows { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rows Gets the list of row definitions Declaration public List<DeletionDataDefinition> Rows { get; } Property Value Type Description List < DeletionDataDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html",
    "title": "Class DeleteDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDefaultConstraintExpression Expression to delete constraints Inheritance Object MigrationExpressionBase DeleteDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source ColumnName Gets or sets the column name Declaration public virtual string ColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteForeignKeyExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteForeignKeyExpression.html",
    "title": "Class DeleteForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class DeleteForeignKeyExpression Expression to delete a foreign key Inheritance Object MigrationExpressionBase DeleteForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression Properties | Improve this Doc View Source ForeignKey Gets the foreign key definition Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteIndexExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteIndexExpression.html",
    "title": "Class DeleteIndexExpression | FluentMigrator documentation",
    "keywords": "Class DeleteIndexExpression Expression to delete an index Inheritance Object MigrationExpressionBase DeleteIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Index Gets the index definition Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteSchemaExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteSchemaExpression.html",
    "title": "Class DeleteSchemaExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSchemaExpression Expression to delete a schema Inheritance Object MigrationExpressionBase DeleteSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source SchemaName Gets or sets a schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteSequenceExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteSequenceExpression.html",
    "title": "Class DeleteSequenceExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSequenceExpression Expression to delete a sequence Inheritance Object MigrationExpressionBase DeleteSequenceExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source SequenceName Gets or sets the sequence name Declaration public virtual string SequenceName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.DeleteTableExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.DeleteTableExpression.html",
    "title": "Class DeleteTableExpression | FluentMigrator documentation",
    "keywords": "Class DeleteTableExpression Expression to delete a table Inheritance Object MigrationExpressionBase DeleteTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html",
    "title": "Class ExecuteEmbeddedSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteEmbeddedSqlScriptExpression Expression to execute an embedded SQL script Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members ExecuteEmbeddedSqlScriptExpressionBase.GetQualifiedResourcePath(IReadOnlyCollection<(, )<String, Assembly>>, String[]) ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public sealed class ExecuteEmbeddedSqlScriptExpression : ExecuteEmbeddedSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated Constructors | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression() Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration [Obsolete] public ExecuteEmbeddedSqlScriptExpression() | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression(IAssemblyCollection) Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration [Obsolete] public ExecuteEmbeddedSqlScriptExpression(IAssemblyCollection assemblyCollection) Parameters Type Name Description IAssemblyCollection assemblyCollection The collection of assemblies to be searched for the resources | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression(IEnumerable<IEmbeddedResourceProvider>) Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration public ExecuteEmbeddedSqlScriptExpression(IEnumerable<IEmbeddedResourceProvider> embeddedResourceProviders) Parameters Type Name Description IEnumerable < IEmbeddedResourceProvider > embeddedResourceProviders The embedded resource providers Properties | Improve this Doc View Source MigrationAssemblies Gets or sets the migration assemblies Declaration [Obsolete] public IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source SqlScript Gets or sets the SQL script name Declaration public string SqlScript { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.html",
    "title": "Class ExecuteEmbeddedSqlScriptExpressionBase | FluentMigrator documentation",
    "keywords": "Class ExecuteEmbeddedSqlScriptExpressionBase Base class that handles execution of scripts stored as embedded resource Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.ExecuteWith(IMigrationProcessor) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class ExecuteEmbeddedSqlScriptExpressionBase : ExecuteSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated Methods | Improve this Doc View Source GetQualifiedResourcePath(IReadOnlyCollection<(String name, Assembly assembly)>, String[]) Gets the fully qualified resource name and assembly Declaration protected static (string name, Assembly assembly) GetQualifiedResourcePath(IReadOnlyCollection<(string name, Assembly assembly)> resourceNames, params string[] sqlScriptNames) Parameters Type Name Description IReadOnlyCollection < (, ) < String , Assembly >> resourceNames The resource names where the sqlScriptNames should be found String [] sqlScriptNames The names of the SQL script resources to be found Returns Type Description (, ) < String , Assembly > the fully qualified resource name and assembly Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html",
    "title": "Class ExecuteSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlScriptExpression Expression to execute SQL scripts Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteSqlScriptExpression Implements IMigrationExpression ICanBeValidated IFileSystemExpression Inherited Members ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlScriptExpression : ExecuteSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated, IFileSystemExpression Properties | Improve this Doc View Source RootPath Gets or sets the root path where the SQL script file should be loaded from Declaration public string RootPath { get; set; } Property Value Type Description String | Improve this Doc View Source SqlScript Gets or sets the SQL script to be executed Declaration public string SqlScript { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated IFileSystemExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.html",
    "title": "Class ExecuteSqlScriptExpressionBase | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlScriptExpressionBase The base class for SQL script execution Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.ExecuteWith(IMigrationProcessor) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class ExecuteSqlScriptExpressionBase : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source Parameters Gets or sets parameters to be replaced before script execution Declaration public IDictionary<string, string> Parameters { get; set; } Property Value Type Description IDictionary < String , String > Methods | Improve this Doc View Source Execute(IMigrationProcessor, String) Executes the sqlScript with the given processor Declaration protected void Execute(IMigrationProcessor processor, string sqlScript) Parameters Type Name Description IMigrationProcessor processor The processor to execute the script with String sqlScript The SQL script to execute Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html",
    "title": "Class ExecuteSqlStatementExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlStatementExpression Expression to execute an SQL statement Inheritance Object MigrationExpressionBase ExecuteSqlStatementExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlStatementExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source Description Gets or sets the description for this SQL statement Declaration public virtual string Description { get; set; } Property Value Type Description String | Improve this Doc View Source SqlStatement Gets or sets the SQL statement to be executed Declaration public virtual string SqlStatement { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.html",
    "title": "Namespace FluentMigrator.Expressions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Expressions Classes AlterColumnExpression The implementation of interfaces to alter a column AlterDefaultConstraintExpression Expression to alter default constraints AlterSchemaExpression Expression to move a table from one schema to another AlterTableExpression Expression to alter the table description CreateColumnExpression Expression to create a table CreateConstraintExpression The expression to create a constraint CreateForeignKeyExpression Expression to create a foreign key CreateIndexExpression Expression to create an index CreateSchemaExpression Expression to create a schema CreateSequenceExpression Expression to crate a sequence CreateTableExpression Expression to create a table DeleteColumnExpression Expression to delete a column DeleteConstraintExpression Expression to delete a constraint DeleteDataExpression Expression to delete the data DeleteDefaultConstraintExpression Expression to delete constraints DeleteForeignKeyExpression Expression to delete a foreign key DeleteIndexExpression Expression to delete an index DeleteSchemaExpression Expression to delete a schema DeleteSequenceExpression Expression to delete a sequence DeleteTableExpression Expression to delete a table ExecuteEmbeddedSqlScriptExpression Expression to execute an embedded SQL script ExecuteEmbeddedSqlScriptExpressionBase Base class that handles execution of scripts stored as embedded resource ExecuteSqlScriptExpression Expression to execute SQL scripts ExecuteSqlScriptExpressionBase The base class for SQL script execution ExecuteSqlStatementExpression Expression to execute an SQL statement InsertDataExpression Expression to insert data MigrationExpressionBase The base class for migration expressions PerformDBOperationExpression Expression that allows the execution of DB operations RenameColumnExpression Expression to rename a column RenameTableExpression Expression to rename a table UpdateDataExpression Expression to update data Interfaces IAutoNameExpression The expression requires an automatically generated name IColumnsExpression Opt-in into columns conventions IConstraintExpression Opt-in into constraint expression conventions IFileSystemExpression Opt-in into the file system convention IForeignKeyExpression Opt-in into the foreign key expressions conventions IIndexExpression Opt-in into the index expression conventions IMigrationExpression The interface for a migration expression ISchemaExpression Opt-in into the schema expression convention ISequenceExpression Opt-in into the sequence expression conventions"
  },
  "api/v3.x/FluentMigrator.Expressions.IAutoNameExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IAutoNameExpression.html",
    "title": "Interface IAutoNameExpression | FluentMigrator documentation",
    "keywords": "Interface IAutoNameExpression The expression requires an automatically generated name Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAutoNameExpression Properties | Improve this Doc View Source AutoNameContext Gets or sets the context in which the automatically generated name gets used Declaration AutoNameContext AutoNameContext { get; } Property Value Type Description AutoNameContext | Improve this Doc View Source AutoNames Gets or sets the automatically generated names Declaration IList<string> AutoNames { get; set; } Property Value Type Description IList < String > | Improve this Doc View Source DatabaseNames Gets the database names Declaration IList<string> DatabaseNames { get; } Property Value Type Description IList < String > | Improve this Doc View Source Direction Gets the direction of the migration Declaration MigrationDirection Direction { get; } Property Value Type Description MigrationDirection | Improve this Doc View Source MigrationType Gets the type of the migration object Declaration Type MigrationType { get; } Property Value Type Description Type"
  },
  "api/v3.x/FluentMigrator.Expressions.IColumnsExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IColumnsExpression.html",
    "title": "Interface IColumnsExpression | FluentMigrator documentation",
    "keywords": "Interface IColumnsExpression Opt-in into columns conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnsExpression Properties | Improve this Doc View Source Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> Columns { get; } Property Value Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source TableName Gets the table name Declaration string TableName { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Expressions.IConstraintExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IConstraintExpression.html",
    "title": "Interface IConstraintExpression | FluentMigrator documentation",
    "keywords": "Interface IConstraintExpression Opt-in into constraint expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IConstraintExpression Properties | Improve this Doc View Source Constraint Gets the constraint definition Declaration ConstraintDefinition Constraint { get; } Property Value Type Description ConstraintDefinition"
  },
  "api/v3.x/FluentMigrator.Expressions.IFileSystemExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IFileSystemExpression.html",
    "title": "Interface IFileSystemExpression | FluentMigrator documentation",
    "keywords": "Interface IFileSystemExpression Opt-in into the file system convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IFileSystemExpression Properties | Improve this Doc View Source RootPath Gets or sets the root path (working directory) Declaration string RootPath { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Expressions.IForeignKeyExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IForeignKeyExpression.html",
    "title": "Interface IForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyExpression Opt-in into the foreign key expressions conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IForeignKeyExpression Properties | Improve this Doc View Source ForeignKey Gets the foreign key definition Declaration ForeignKeyDefinition ForeignKey { get; } Property Value Type Description ForeignKeyDefinition"
  },
  "api/v3.x/FluentMigrator.Expressions.IIndexExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IIndexExpression.html",
    "title": "Interface IIndexExpression | FluentMigrator documentation",
    "keywords": "Interface IIndexExpression Opt-in into the index expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IIndexExpression Properties | Improve this Doc View Source Index Gets the index definition Declaration IndexDefinition Index { get; } Property Value Type Description IndexDefinition"
  },
  "api/v3.x/FluentMigrator.Expressions.IMigrationExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.IMigrationExpression.html",
    "title": "Interface IMigrationExpression | FluentMigrator documentation",
    "keywords": "Interface IMigrationExpression The interface for a migration expression Inherited Members ICanBeValidated.CollectValidationErrors(ICollection<String>) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationExpression : ICanBeValidated Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.InsertDataExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.InsertDataExpression.html",
    "title": "Class InsertDataExpression | FluentMigrator documentation",
    "keywords": "Class InsertDataExpression Expression to insert data Inheritance Object InsertDataExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertDataExpression : IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, ISchemaExpression Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Rows Gets the rows to be inserted Declaration public List<InsertionDataDefinition> Rows { get; } Property Value Type Description List < InsertionDataDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Expressions.ISchemaExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ISchemaExpression.html",
    "title": "Interface ISchemaExpression | FluentMigrator documentation",
    "keywords": "Interface ISchemaExpression Opt-in into the schema expression convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration string SchemaName { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Expressions.ISequenceExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.ISequenceExpression.html",
    "title": "Interface ISequenceExpression | FluentMigrator documentation",
    "keywords": "Interface ISequenceExpression Opt-in into the sequence expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISequenceExpression Properties | Improve this Doc View Source Sequence Gets the sequence definition Declaration SequenceDefinition Sequence { get; } Property Value Type Description SequenceDefinition"
  },
  "api/v3.x/FluentMigrator.Expressions.MigrationExpressionBase.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.MigrationExpressionBase.html",
    "title": "Class MigrationExpressionBase | FluentMigrator documentation",
    "keywords": "Class MigrationExpressionBase The base class for migration expressions Inheritance Object MigrationExpressionBase AlterColumnExpression AlterColumnExpression AlterDefaultConstraintExpression AlterDefaultConstraintExpression AlterSchemaExpression AlterSchemaExpression AlterTableExpression AlterTableExpression CreateColumnExpression CreateColumnExpression CreateConstraintExpression CreateConstraintExpression CreateForeignKeyExpression CreateForeignKeyExpression CreateIndexExpression CreateIndexExpression CreateSchemaExpression CreateSchemaExpression CreateSequenceExpression CreateSequenceExpression CreateTableExpression CreateTableExpression DeleteColumnExpression DeleteColumnExpression DeleteConstraintExpression DeleteConstraintExpression DeleteDefaultConstraintExpression DeleteDefaultConstraintExpression DeleteForeignKeyExpression DeleteForeignKeyExpression DeleteIndexExpression DeleteIndexExpression DeleteSchemaExpression DeleteSchemaExpression DeleteSequenceExpression DeleteSequenceExpression DeleteTableExpression DeleteTableExpression ExecuteEmbeddedSqlScriptExpression ExecuteSqlScriptExpression ExecuteSqlScriptExpressionBase ExecuteSqlStatementExpression ExecuteSqlStatementExpression PerformDBOperationExpression PerformDBOperationExpression RenameColumnExpression RenameColumnExpression RenameTableExpression RenameTableExpression UpdateDataExpression UpdateDataExpression Implements IMigrationExpression ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class MigrationExpressionBase : IMigrationExpression, ICanBeValidated Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public abstract void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public virtual IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.PerformDBOperationExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.PerformDBOperationExpression.html",
    "title": "Class PerformDBOperationExpression | FluentMigrator documentation",
    "keywords": "Class PerformDBOperationExpression Expression that allows the execution of DB operations Inheritance Object MigrationExpressionBase PerformDBOperationExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class PerformDBOperationExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source Operation Gets or sets the operation to be executed for a given database connection Declaration public Action<IDbConnection, IDbTransaction> Operation { get; set; } Property Value Type Description Action < IDbConnection , IDbTransaction > Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.RenameColumnExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.RenameColumnExpression.html",
    "title": "Class RenameColumnExpression | FluentMigrator documentation",
    "keywords": "Class RenameColumnExpression Expression to rename a column Inheritance Object MigrationExpressionBase RenameColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source NewName Gets or sets the new column name Declaration public virtual string NewName { get; set; } Property Value Type Description String | Improve this Doc View Source OldName Gets or sets the old column name Declaration public virtual string OldName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the name of the table Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.RenameTableExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.RenameTableExpression.html",
    "title": "Class RenameTableExpression | FluentMigrator documentation",
    "keywords": "Class RenameTableExpression Expression to rename a table Inheritance Object MigrationExpressionBase RenameTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source NewName Gets or sets the new table name Declaration public virtual string NewName { get; set; } Property Value Type Description String | Improve this Doc View Source OldName Gets or sets the old table name Declaration public virtual string OldName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Expressions.UpdateDataExpression.html": {
    "href": "api/v3.x/FluentMigrator.Expressions.UpdateDataExpression.html",
    "title": "Class UpdateDataExpression | FluentMigrator documentation",
    "keywords": "Class UpdateDataExpression Expression to update data Inheritance Object MigrationExpressionBase UpdateDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class UpdateDataExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source IsAllRows Gets or sets a value indicating whether all rows should be updated Declaration public bool IsAllRows { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source Set Gets or sets the values to be set Declaration public List<KeyValuePair<string, object>> Set { get; set; } Property Value Type Description List < KeyValuePair < String , Object >> | Improve this Doc View Source TableName Gets or sets the table name Declaration public string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source Where Gets or sets the condition column/value pairs Declaration public List<KeyValuePair<string, object>> Where { get; set; } Property Value Type Description List < KeyValuePair < String , Object >> Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.ForwardOnlyMigration.html": {
    "href": "api/v3.x/FluentMigrator.ForwardOnlyMigration.html",
    "title": "Class ForwardOnlyMigration | FluentMigrator documentation",
    "keywords": "Class ForwardOnlyMigration A forward-only migration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration VersionUniqueMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class ForwardOnlyMigration : Migration, IMigration Remarks A try to collect the Down expressions will result in an exception Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public sealed override void Down() Overrides MigrationBase.Down() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.html": {
    "href": "api/v3.x/FluentMigrator.html",
    "title": "Namespace FluentMigrator | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator Classes AutoReversingMigration A migration base class that will automatically generate the down expressions AutoScriptMigration Migration that automatically uses embedded SQL scripts depending on the database type name ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N ForwardOnlyMigration A forward-only migration LegacyValidationExtensions Extension methods for the obsolete ICanBeValidated MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Migration The base migration class for custom SQL queries and data updates/deletions MigrationAttribute Attribute for a migration MigrationBase The base migration class MigrationTraitAttribute A trait for a migration NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) ProfileAttribute Defines a profile for a migration RawSql A wrapper class for a SQL value SqlScriptTokenReplacer Function to replace token in an SQL script TagsAttribute Used to filter which migrations are run. TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Interfaces IMigration The base interface for all migrations IMigrationGenerator Base interface for a migration SQL generator IMigrationProcessor Interface for a migration processor IMigrationProcessorOptions Options for the IMigrationProcessor IQuerySchema Gets the interface to query a database Enums AutoNameContext Sets the context for the automatic name generation MigrationDirection The direction of the migration MigrationStage Represents a stage in the migration run. OracleGenerationType PostgresGenerationType Default value generation strategy (Identity) types. The clauses ALWAYS and BY DEFAULT determine how the sequence value is given precedence over a user-specified value in an INSERT statement. PostgresIdentityModificationType SqlAnywhereConstraintType The constraint type as supported by SQL Anywhere SqlServerConstraintType SystemMethods The well-known system methods TagBehavior The desired tag matching behavior TransactionBehavior The desired transaction behavior"
  },
  "api/v3.x/FluentMigrator.IMigration.html": {
    "href": "api/v3.x/FluentMigrator.IMigration.html",
    "title": "Interface IMigration | FluentMigrator documentation",
    "keywords": "Interface IMigration The base interface for all migrations Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigration Properties | Improve this Doc View Source ApplicationContext Gets the arbitrary application context passed to the task runner Declaration object ApplicationContext { get; } Property Value Type Description Object | Improve this Doc View Source ConnectionString Gets the connection string passed to the task runner Declaration string ConnectionString { get; } Property Value Type Description String Methods | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions | Improve this Doc View Source GetUpExpressions(IMigrationContext) Collects all Up migration expressions in the context . Declaration void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Up migration expressions"
  },
  "api/v3.x/FluentMigrator.IMigrationGenerator.html": {
    "href": "api/v3.x/FluentMigrator.IMigrationGenerator.html",
    "title": "Interface IMigrationGenerator | FluentMigrator documentation",
    "keywords": "Interface IMigrationGenerator Base interface for a migration SQL generator Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationGenerator Methods | Improve this Doc View Source Generate(AlterColumnExpression) Generates a ALTER TABLE ALTER COLUMN SQL statement Declaration string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Generates an SQL statement to alter a DEFAULT constraint Declaration string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterSchemaExpression) Generates an SQL statement to move a table from one schema to another Declaration string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterTableExpression) Generates a ALTER TABLE SQL statement Declaration string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateColumnExpression) Generates a ALTER TABLE ADD COLUMN SQL statement Declaration string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateConstraintExpression) Generates an SQL statement to create a constraint Declaration string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateForeignKeyExpression) Generates an SQL statement to create a foreign key Declaration string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateIndexExpression) Generates an SQL statement to create an index Declaration string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateSchemaExpression) Generates a CREATE SCHEMA SQL statement Declaration string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateSequenceExpression) Generates a CREATE SEQUENCE SQL statement Declaration string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateTableExpression) Generates a CREATE TABLE SQL statement Declaration string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteColumnExpression) Generates a ALTER TABLE DROP COLUMN SQL statement Declaration string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteConstraintExpression) Generates an SQL statement to drop a constraint Declaration string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteDataExpression) Generates an SQL statement to DELETE data Declaration string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Generates an SQL statement to drop a default constraint Declaration string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Generates an SQL statement to delete a foreign key Declaration string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteIndexExpression) Generates an SQL statement to drop an index Declaration string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteSchemaExpression) Generates a DROP SCHEMA SQL statement Declaration string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteSequenceExpression) Generates a DROP SEQUENCE SQL statement Declaration string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteTableExpression) Generates a DROP TABLE SQL statement Declaration string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(InsertDataExpression) Generates an SQL statement to INSERT data Declaration string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(RenameColumnExpression) Generates an SQL statement to rename a column Declaration string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(RenameTableExpression) Generates an SQL statement to rename a table Declaration string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(UpdateDataExpression) Generates an SQL statement to UPDATE data Declaration string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL"
  },
  "api/v3.x/FluentMigrator.IMigrationProcessor.html": {
    "href": "api/v3.x/FluentMigrator.IMigrationProcessor.html",
    "title": "Interface IMigrationProcessor | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessor Interface for a migration processor Inherited Members IQuerySchema.DatabaseType IQuerySchema.DatabaseTypeAliases IQuerySchema.SchemaExists(String) IQuerySchema.TableExists(String, String) IQuerySchema.ColumnExists(String, String, String) IQuerySchema.ConstraintExists(String, String, String) IQuerySchema.IndexExists(String, String, String) IQuerySchema.SequenceExists(String, String) IQuerySchema.DefaultValueExists(String, String, String, Object) IDisposable.Dispose() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationProcessor : IQuerySchema, IDisposable Remarks A migration processor generates the SQL statements using a IMigrationGenerator and executes it using the given connection string. Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration [Obsolete] string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source Options Gets the migration processor options Declaration [Obsolete] IMigrationProcessorOptions Options { get; } Property Value Type Description IMigrationProcessorOptions Methods | Improve this Doc View Source BeginTransaction() Begins a transaction Declaration void BeginTransaction() | Improve this Doc View Source CommitTransaction() Commits a transaction Declaration void CommitTransaction() | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Execute an SQL statement Declaration void Execute(string template, params object[] args) Parameters Type Name Description String template The SQL statement Object [] args The arguments to replace in the SQL statement | Improve this Doc View Source Exists(String, Object[]) Returns true if data could be found for the given SQL query Declaration bool Exists(string template, params object[] args) Parameters Type Name Description String template The SQL query Object [] args The arguments of the SQL query Returns Type Description Boolean true when the SQL query returned data | Improve this Doc View Source Process(AlterColumnExpression) Executes a ALTER TABLE ALTER COLUMN SQL expression Declaration void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression The expression to execute | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Executes an SQL expression to alter a default constraint Declaration void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression The expression to execute | Improve this Doc View Source Process(AlterSchemaExpression) Executes a ALTER SCHEMA SQL expression Declaration void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression The expression to execute | Improve this Doc View Source Process(AlterTableExpression) Executes a ALTER TABLE SQL expression Declaration void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression The expression to execute | Improve this Doc View Source Process(CreateColumnExpression) Executes a ALTER TABLE ADD COLUMN SQL expression Declaration void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression The expression to execute | Improve this Doc View Source Process(CreateConstraintExpression) Executes an SQL expression to create a constraint Declaration void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression The expression to execute | Improve this Doc View Source Process(CreateForeignKeyExpression) Executes an SQL expression to create a foreign key Declaration void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression The expression to execute | Improve this Doc View Source Process(CreateIndexExpression) Executes an SQL expression to create an index Declaration void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression The expression to execute | Improve this Doc View Source Process(CreateSchemaExpression) Executes a CREATE SCHEMA SQL expression Declaration void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression The expression to execute | Improve this Doc View Source Process(CreateSequenceExpression) Executes a CREATE SEQUENCE SQL expression Declaration void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression The expression to execute | Improve this Doc View Source Process(CreateTableExpression) Executes a CREATE TABLE SQL expression Declaration void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression The expression to execute | Improve this Doc View Source Process(DeleteColumnExpression) Executes a ALTER TABLE DROP COLUMN SQL expression Declaration void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression The expression to execute | Improve this Doc View Source Process(DeleteConstraintExpression) Executes an SQL expression to drop a constraint Declaration void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression The expression to execute | Improve this Doc View Source Process(DeleteDataExpression) Executes an SQL expression to DELETE data Declaration void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression The expression to execute | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Executes an SQL expression to drop a default constraint Declaration void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression The expression to execute | Improve this Doc View Source Process(DeleteForeignKeyExpression) Executes an SQL expression to drop a foreign key Declaration void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression The expression to execute | Improve this Doc View Source Process(DeleteIndexExpression) Executes an SQL expression to drop an index Declaration void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression The expression to execute | Improve this Doc View Source Process(DeleteSchemaExpression) Executes a DROP SCHEMA SQL expression Declaration void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression The expression to execute | Improve this Doc View Source Process(DeleteSequenceExpression) Executes a DROP SEQUENCE SQL expression Declaration void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression The expression to execute | Improve this Doc View Source Process(DeleteTableExpression) Executes a DROP TABLE SQL expression Declaration void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression The expression to execute | Improve this Doc View Source Process(InsertDataExpression) Executes an SQL expression to INSERT data Declaration void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression The expression to execute | Improve this Doc View Source Process(PerformDBOperationExpression) Executes a DB operation Declaration void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression The expression to execute | Improve this Doc View Source Process(RenameColumnExpression) Executes an SQL expression to rename a column Declaration void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression The expression to execute | Improve this Doc View Source Process(RenameTableExpression) Executes an SQL expression to rename a table Declaration void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression The expression to execute | Improve this Doc View Source Process(UpdateDataExpression) Executes an SQL expression to UPDATE data Declaration void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression The expression to execute | Improve this Doc View Source Read(String, Object[]) Executes and returns the result of an SQL query Declaration DataSet Read(string template, params object[] args) Parameters Type Name Description String template The SQL query Object [] args The arguments of the SQL query Returns Type Description DataSet The data from the specified SQL query | Improve this Doc View Source ReadTableData(String, String) Reads all data from all rows from a table Declaration DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName The schema name of the table String tableName The table name Returns Type Description DataSet The data from the specified table | Improve this Doc View Source RollbackTransaction() Rollback of a transaction Declaration void RollbackTransaction()"
  },
  "api/v3.x/FluentMigrator.IMigrationProcessorOptions.html": {
    "href": "api/v3.x/FluentMigrator.IMigrationProcessorOptions.html",
    "title": "Interface IMigrationProcessorOptions | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorOptions Options for the IMigrationProcessor Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public interface IMigrationProcessorOptions Properties | Improve this Doc View Source PreviewOnly Gets a value indicating whether a preview-only mode is active Declaration bool PreviewOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source ProviderSwitches Gets the provider switches Declaration string ProviderSwitches { get; } Property Value Type Description String | Improve this Doc View Source Timeout Gets the global timeout Declaration int? Timeout { get; } Property Value Type Description Nullable < Int32 >"
  },
  "api/v3.x/FluentMigrator.Infrastructure.AssemblyCollection.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.AssemblyCollection.html",
    "title": "Class AssemblyCollection | FluentMigrator documentation",
    "keywords": "Class AssemblyCollection An assembly collection for multiple assemblies Inheritance Object AssemblyCollection Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class AssemblyCollection : IAssemblyCollection Constructors | Improve this Doc View Source AssemblyCollection(IEnumerable<Assembly>) Initializes a new instance of the AssemblyCollection class. Declaration public AssemblyCollection(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies The assemblies for the collection Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "api/v3.x/FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.html",
    "title": "Class DefaultEmbeddedResourceProvider | FluentMigrator documentation",
    "keywords": "Class DefaultEmbeddedResourceProvider The default implementation of the IEmbeddedResourceProvider interface Inheritance Object DefaultEmbeddedResourceProvider Implements IEmbeddedResourceProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class DefaultEmbeddedResourceProvider : IEmbeddedResourceProvider Constructors | Improve this Doc View Source DefaultEmbeddedResourceProvider(IAssemblyCollection) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration [Obsolete] public DefaultEmbeddedResourceProvider(IAssemblyCollection assemblyCollection) Parameters Type Name Description IAssemblyCollection assemblyCollection The assembly collection to get the ebmedded resources for | Improve this Doc View Source DefaultEmbeddedResourceProvider(IEnumerable<Assembly>) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration public DefaultEmbeddedResourceProvider(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies The assemblies to be scanned for the embedded resources | Improve this Doc View Source DefaultEmbeddedResourceProvider(Assembly[]) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration public DefaultEmbeddedResourceProvider(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to be scanned for the embedded resources Methods | Improve this Doc View Source GetEmbeddedResources() Gets all embedded resources Declaration public IEnumerable<(string name, Assembly assembly)> GetEmbeddedResources() Returns Type Description IEnumerable < (, ) < String , Assembly >> A tuple for every embedded resource and the containing assembly Implements IEmbeddedResourceProvider"
  },
  "api/v3.x/FluentMigrator.Infrastructure.ErrorMessages.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.ErrorMessages.html",
    "title": "Class ErrorMessages | FluentMigrator documentation",
    "keywords": "Class ErrorMessages Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw. Inheritance Object ErrorMessages Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class ErrorMessages Properties | Improve this Doc View Source ColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The column's name cannot be null or an empty string. ähnelt. Declaration public static string ColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ColumnNamesMustBeUnique Sucht eine lokalisierte Zeichenfolge, die Column names must be unique. ähnelt. Declaration public static string ColumnNamesMustBeUnique { get; } Property Value Type Description String | Improve this Doc View Source ColumnTypeMustBeDefined Sucht eine lokalisierte Zeichenfolge, die The column does not have a type defined. ähnelt. Declaration public static string ColumnTypeMustBeDefined { get; } Property Value Type Description String | Improve this Doc View Source ConstraintMustHaveAtLeastOneColumn Sucht eine lokalisierte Zeichenfolge, die The constraint must have at least one column specified. ähnelt. Declaration public static string ConstraintMustHaveAtLeastOneColumn { get; } Property Value Type Description String | Improve this Doc View Source Culture Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden. Declaration public static CultureInfo Culture { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source DefaultValueCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The default value cannot be null. ähnelt. Declaration public static string DefaultValueCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source DestinationSchemaCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The destination schema's name cannot be null or an empty string. ähnelt. Declaration public static string DestinationSchemaCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source ExpressionTableNameMissing Sucht eine lokalisierte Zeichenfolge, die expression.TableName must not be empty ähnelt. Declaration public static string ExpressionTableNameMissing { get; } Property Value Type Description String | Improve this Doc View Source ExpressionTableNameMissingWithHints Sucht eine lokalisierte Zeichenfolge, die Table name not specified, ensure you have appended the OnTable extension. Format should be Delete.ForeignKey(KeyName).OnTable(TableName) ähnelt. Declaration public static string ExpressionTableNameMissingWithHints { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyMustHaveOneOrMoreForeignColumns Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more foreign columns. ähnelt. Declaration public static string ForeignKeyMustHaveOneOrMoreForeignColumns { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyMustHaveOneOrMorePrimaryColumns Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more primary columns. ähnelt. Declaration public static string ForeignKeyMustHaveOneOrMorePrimaryColumns { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The foreign key's name cannot be null or an empty string. ähnelt. Declaration public static string ForeignKeyNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ForeignTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The foreign table name cannot be null or empty. ähnelt. Declaration public static string ForeignTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source IndexMustHaveOneOrMoreColumns Sucht eine lokalisierte Zeichenfolge, die The index must have one or more columns. ähnelt. Declaration public static string IndexMustHaveOneOrMoreColumns { get; } Property Value Type Description String | Improve this Doc View Source IndexNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The index's name cannot be null or an empty string. ähnelt. Declaration public static string IndexNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source MethodXMustBeCalledOnObjectImplementingY Sucht eine lokalisierte Zeichenfolge, die The {0} method must be called on an object that implements {1}. ähnelt. Declaration public static string MethodXMustBeCalledOnObjectImplementingY { get; } Property Value Type Description String | Improve this Doc View Source NewColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The new column name cannot be null or empty. ähnelt. Declaration public static string NewColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source NewTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The new table name cannot be null or empty. ähnelt. Declaration public static string NewTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OldColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The old column name cannot be null or empty. ähnelt. Declaration public static string OldColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OldTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The old table name cannot be null or empty. ähnelt. Declaration public static string OldTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OperationCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The operation to be performed using the database connection cannot be null. ähnelt. Declaration public static string OperationCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source PrimaryTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The primary table name cannot be null or empty. ähnelt. Declaration public static string PrimaryTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ResourceManager Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird. Declaration public static ResourceManager ResourceManager { get; } Property Value Type Description ResourceManager | Improve this Doc View Source SchemaNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The schema's name cannot be null or an empty string. ähnelt. Declaration public static string SchemaNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SequenceNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sequence's name cannot be null or an empty string. ähnelt. Declaration public static string SequenceNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SqlScriptCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sql script cannot be null or an empty string. ähnelt. Declaration public static string SqlScriptCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SqlStatementCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sql statement cannot be null or an empty string. ähnelt. Declaration public static string SqlStatementCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source TableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The table's name cannot be null or an empty string. ähnelt. Declaration public static string TableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source UpdateDataExpressionMustNotSpecifyBothWhereClauseAndAllRows Sucht eine lokalisierte Zeichenfolge, die Update statement specifies both a .Where() condition and that .AllRows() should be targeted. Specify one or the other, but not both. ähnelt. Declaration public static string UpdateDataExpressionMustNotSpecifyBothWhereClauseAndAllRows { get; } Property Value Type Description String | Improve this Doc View Source UpdateDataExpressionMustSpecifyWhereClauseOrAllRows Sucht eine lokalisierte Zeichenfolge, die Update statement is missing a condition. Specify one by calling .Where() or target all rows by calling .AllRows(). ähnelt. Declaration public static string UpdateDataExpressionMustSpecifyWhereClauseOrAllRows { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html",
    "title": "Class AdditionalFeaturesExtensions | FluentMigrator documentation",
    "keywords": "Class AdditionalFeaturesExtensions Extension methods for the ISupportAdditionalFeatures interface Inheritance Object AdditionalFeaturesExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class AdditionalFeaturesExtensions Methods | Improve this Doc View Source GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Gets an additional feature value Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T defaultValue = null) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary T defaultValue The default value to be used if none was found Returns Type Description T The stored value or the defaultValue Type Parameters Name Description T The value type | Improve this Doc View Source GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) Gets an additional feature value Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, Func<T> createDefaultValue) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary Func <T> createDefaultValue A lambda to create a default value Returns Type Description T The stored or a newly created value Type Parameters Name Description T The value type | Improve this Doc View Source SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Sets the value for an additional feature Declaration public static void SetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T value) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary T value The value to be set Type Parameters Name Description T The value type"
  },
  "api/v3.x/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html",
    "title": "Class CloneExtensions | FluentMigrator documentation",
    "keywords": "Class CloneExtensions Extension methods for cloning Inheritance Object CloneExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class CloneExtensions Methods | Improve this Doc View Source Clone(IEnumerable<KeyValuePair<String, Object>>) Clones all key/value pairs Declaration public static Dictionary<string, object> Clone(this IEnumerable<KeyValuePair<string, object>> dict) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> dict The key value pairs to clone Returns Type Description Dictionary < String , Object > The cloned key/value pairs | Improve this Doc View Source CloneAll<T>(IEnumerable<T>) Clones all items Declaration public static IEnumerable<T> CloneAll<T>(this IEnumerable<T> items) where T : ICloneable Parameters Type Name Description IEnumerable <T> items The items to clone Returns Type Description IEnumerable <T> The cloned items Type Parameters Name Description T The item type | Improve this Doc View Source CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>) Clones the values of dict and stores them into target Declaration public static void CloneTo(this IEnumerable<KeyValuePair<string, object>> dict, IDictionary<string, object> target) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> dict The key/value pairs to clone IDictionary < String , Object > target The target dictionary to store the cloned key/value pairs"
  },
  "api/v3.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html",
    "title": "Class ExtensionsForICustomAttributeProvider | FluentMigrator documentation",
    "keywords": "Class ExtensionsForICustomAttributeProvider Extension methods for ICustomAttributeProvider Inheritance Object ExtensionsForICustomAttributeProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForICustomAttributeProvider Methods | Improve this Doc View Source GetAllAttributes<T>(ICustomAttributeProvider) Get all attributes of exactly the given type Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description T[] The found attributes Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetAllAttributes<T>(ICustomAttributeProvider, Boolean) Get all attributes of the given type Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description T[] The found attributes Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetOneAttribute<T>(ICustomAttributeProvider) Get the first attribute of exactly the given type Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description T The found attribute or null Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetOneAttribute<T>(ICustomAttributeProvider, Boolean) Get the first attribute of the given type Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description T The found attribute or null Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source HasAttribute<T>(ICustomAttributeProvider) Returns a value indicating whether the custom attribute provider contains the given attribute Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description Boolean true when an attribute with the given type could be found Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source HasAttribute<T>(ICustomAttributeProvider, Boolean) Returns a value indicating whether the custom attribute provider contains the given attribute Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description Boolean true when an attribute with the given type could be found Type Parameters Name Description T The attribute type to search for"
  },
  "api/v3.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html",
    "title": "Class ExtensionsForIMigrationInfo | FluentMigrator documentation",
    "keywords": "Class ExtensionsForIMigrationInfo Extension methods for IMigrationInfo Inheritance Object ExtensionsForIMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForIMigrationInfo Methods | Improve this Doc View Source IsAttributed(IMigrationInfo) Returns true when the migration behind the migrationInfo has a migration attribute Declaration public static bool IsAttributed(this IMigrationInfo migrationInfo) Parameters Type Name Description IMigrationInfo migrationInfo The migration information to test Returns Type Description Boolean true when the migration behind the migrationInfo has a migration attribute"
  },
  "api/v3.x/FluentMigrator.Infrastructure.Extensions.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.Extensions.html",
    "title": "Namespace FluentMigrator.Infrastructure.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure.Extensions Classes AdditionalFeaturesExtensions Extension methods for the ISupportAdditionalFeatures interface CloneExtensions Extension methods for cloning ExtensionsForICustomAttributeProvider Extension methods for ICustomAttributeProvider ExtensionsForIMigrationInfo Extension methods for IMigrationInfo"
  },
  "api/v3.x/FluentMigrator.Infrastructure.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.html",
    "title": "Namespace FluentMigrator.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure Classes AssemblyCollection An assembly collection for multiple assemblies DefaultEmbeddedResourceProvider The default implementation of the IEmbeddedResourceProvider interface ErrorMessages Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw. ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to MigrationContext The default implementation of the IMigrationContext MigrationInfo The default IMigrationInfo implementation for migrations with the MigrationAttribute NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo . SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Interfaces IAssemblyCollection A bundle of one or more Assembly instances ICanBeValidated Interface definition for validation IEmbeddedResourceProvider Interface for getting all embedded resources IMigrationContext The context of a migration while collecting up/down expressions IMigrationInfo Interface for migration information ISupportAdditionalFeatures Provides a dictionary to store values for non-standard additional features"
  },
  "api/v3.x/FluentMigrator.Infrastructure.IAssemblyCollection.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.IAssemblyCollection.html",
    "title": "Interface IAssemblyCollection | FluentMigrator documentation",
    "keywords": "Interface IAssemblyCollection A bundle of one or more Assembly instances Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public interface IAssemblyCollection Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration [Obsolete] Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration [Obsolete] Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration [Obsolete] ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly."
  },
  "api/v3.x/FluentMigrator.Infrastructure.ICanBeValidated.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.ICanBeValidated.html",
    "title": "Interface ICanBeValidated | FluentMigrator documentation",
    "keywords": "Interface ICanBeValidated Interface definition for validation Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete(\"Check for IValidatableObject and use it\")] public interface ICanBeValidated Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Check for IValidatableObject and use it\")] void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Infrastructure.IEmbeddedResourceProvider.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.IEmbeddedResourceProvider.html",
    "title": "Interface IEmbeddedResourceProvider | FluentMigrator documentation",
    "keywords": "Interface IEmbeddedResourceProvider Interface for getting all embedded resources Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IEmbeddedResourceProvider Methods | Improve this Doc View Source GetEmbeddedResources() Gets all embedded resources Declaration IEnumerable<(string name, Assembly assembly)> GetEmbeddedResources() Returns Type Description IEnumerable < (, ) < String , Assembly >> A tuple for every embedded resource and the containing assembly"
  },
  "api/v3.x/FluentMigrator.Infrastructure.IMigrationContext.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.IMigrationContext.html",
    "title": "Interface IMigrationContext | FluentMigrator documentation",
    "keywords": "Interface IMigrationContext The context of a migration while collecting up/down expressions Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationContext Properties | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete(\"Use dependency injection to access 'application state'.\")] object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string Declaration string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source Expressions Gets or sets the collection of expressions Declaration ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > | Improve this Doc View Source MigrationAssemblies Gets or sets the collection of migration assemblies Declaration [Obsolete] IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source QuerySchema Gets the IQuerySchema to access the database Declaration IQuerySchema QuerySchema { get; } Property Value Type Description IQuerySchema | Improve this Doc View Source ServiceProvider Gets the service provider used to create this migration context Declaration IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider"
  },
  "api/v3.x/FluentMigrator.Infrastructure.IMigrationInfo.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.IMigrationInfo.html",
    "title": "Interface IMigrationInfo | FluentMigrator documentation",
    "keywords": "Interface IMigrationInfo Interface for migration information Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationInfo Properties | Improve this Doc View Source Description Gets the migration description Declaration string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source GetName() Gets the migration name Declaration string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v3.x/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html",
    "title": "Interface ISupportAdditionalFeatures | FluentMigrator documentation",
    "keywords": "Interface ISupportAdditionalFeatures Provides a dictionary to store values for non-standard additional features Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Extension Methods PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html",
    "title": "Class ManifestResourceNameWithAssembly | FluentMigrator documentation",
    "keywords": "Class ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to Inheritance Object ManifestResourceNameWithAssembly Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class ManifestResourceNameWithAssembly Constructors | Improve this Doc View Source ManifestResourceNameWithAssembly(String, Assembly) Initializes a new instance of the ManifestResourceNameWithAssembly class. Declaration public ManifestResourceNameWithAssembly(string name, Assembly assembly) Parameters Type Name Description String name The resource name Assembly assembly The assembly this resource name belongs to Properties | Improve this Doc View Source Assembly Gets the assembly the resource Name belongs to Declaration public Assembly Assembly { get; } Property Value Type Description Assembly | Improve this Doc View Source Name Gets the resource name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Infrastructure.MigrationContext.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.MigrationContext.html",
    "title": "Class MigrationContext | FluentMigrator documentation",
    "keywords": "Class MigrationContext The default implementation of the IMigrationContext Inheritance Object MigrationContext Implements IMigrationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class MigrationContext : IMigrationContext Constructors | Improve this Doc View Source MigrationContext(IQuerySchema, IAssemblyCollection, Object, String) Initializes a new instance of the MigrationContext class. Declaration [Obsolete] public MigrationContext(IQuerySchema querySchema, IAssemblyCollection migrationAssemblies, object context, string connection) Parameters Type Name Description IQuerySchema querySchema The provider used to query the database IAssemblyCollection migrationAssemblies The collection of migration assemblies Object context The arbitrary application context passed to the task runner String connection The database connection | Improve this Doc View Source MigrationContext(IQuerySchema, IServiceProvider, Object, String) Initializes a new instance of the MigrationContext class. Declaration public MigrationContext(IQuerySchema querySchema, IServiceProvider serviceProvider, object context, string connection) Parameters Type Name Description IQuerySchema querySchema The provider used to query the database IServiceProvider serviceProvider The service provider Object context The arbitrary application context passed to the task runner String connection The database connection Properties | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete(\"Use dependency injection to access 'application state'.\")] public virtual object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string Declaration public string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source Expressions Gets or sets the collection of expressions Declaration public virtual ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > | Improve this Doc View Source MigrationAssemblies Gets or sets the collection of migration assemblies Declaration [Obsolete] public virtual IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source QuerySchema Gets the IQuerySchema to access the database Declaration public virtual IQuerySchema QuerySchema { get; set; } Property Value Type Description IQuerySchema | Improve this Doc View Source ServiceProvider Gets the service provider used to create this migration context Declaration public IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Implements IMigrationContext"
  },
  "api/v3.x/FluentMigrator.Infrastructure.MigrationInfo.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.MigrationInfo.html",
    "title": "Class MigrationInfo | FluentMigrator documentation",
    "keywords": "Class MigrationInfo The default IMigrationInfo implementation for migrations with the MigrationAttribute Inheritance Object MigrationInfo Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class MigrationInfo : IMigrationInfo Constructors | Improve this Doc View Source MigrationInfo(Int64, TransactionBehavior, IMigration) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, IMigration migration) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior IMigration migration The underlying migration | Improve this Doc View Source MigrationInfo(Int64, TransactionBehavior, Boolean, IMigration) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, bool isBreakingChange, IMigration migration) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior Boolean isBreakingChange Indicates wether the migration is a breaking change IMigration migration The underlying migration | Improve this Doc View Source MigrationInfo(Int64, String, TransactionBehavior, Boolean, Func<IMigration>) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, string description, TransactionBehavior transactionBehavior, bool isBreakingChange, Func<IMigration> migrationFunc) Parameters Type Name Description Int64 version The migration version String description The migration description TransactionBehavior transactionBehavior The desired transaction behavior Boolean isBreakingChange Indicates wether the migration is a breaking change Func < IMigration > migrationFunc A function to get the IMigration instance Properties | Improve this Doc View Source Description Gets the migration description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source AddTrait(String, Object) Manually adds a trait to the migration Declaration public void AddTrait(string name, object value) Parameters Type Name Description String name The trait name Object value The trait value | Improve this Doc View Source GetName() Gets the migration name Declaration public string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration public bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration public object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v3.x/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html",
    "title": "Class NonAttributedMigrationToMigrationInfoAdapter | FluentMigrator documentation",
    "keywords": "Class NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo . Inheritance Object NonAttributedMigrationToMigrationInfoAdapter Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class NonAttributedMigrationToMigrationInfoAdapter : IMigrationInfo Constructors | Improve this Doc View Source NonAttributedMigrationToMigrationInfoAdapter(IMigration) Initializes a new instance of the NonAttributedMigrationToMigrationInfoAdapter class. Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration) Parameters Type Name Description IMigration migration The underlying migration | Improve this Doc View Source NonAttributedMigrationToMigrationInfoAdapter(IMigration, TransactionBehavior) Initializes a new instance of the NonAttributedMigrationToMigrationInfoAdapter class. Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration, TransactionBehavior transactionBehavior) Parameters Type Name Description IMigration migration The underlying migration TransactionBehavior transactionBehavior The desired transaction behavior Properties | Improve this Doc View Source Description Gets the migration description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source GetName() Gets the migration name Declaration public string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration public bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration public object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/v3.x/FluentMigrator.Infrastructure.SingleAssembly.html": {
    "href": "api/v3.x/FluentMigrator.Infrastructure.SingleAssembly.html",
    "title": "Class SingleAssembly | FluentMigrator documentation",
    "keywords": "Class SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Inheritance Object SingleAssembly Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class SingleAssembly : IAssemblyCollection Constructors | Improve this Doc View Source SingleAssembly(Assembly) Initializes a new instance of the SingleAssembly class. Declaration public SingleAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "api/v3.x/FluentMigrator.IQuerySchema.html": {
    "href": "api/v3.x/FluentMigrator.IQuerySchema.html",
    "title": "Interface IQuerySchema | FluentMigrator documentation",
    "keywords": "Interface IQuerySchema Gets the interface to query a database Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IQuerySchema Properties | Improve this Doc View Source DatabaseType Gets the database type Declaration string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Gets the database type aliases Declaration IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Methods | Improve this Doc View Source ColumnExists(String, String, String) Tests if a column exists Declaration bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName The schema name String tableName The table name String columnName The column name Returns Type Description Boolean true when it exists | Improve this Doc View Source ConstraintExists(String, String, String) Tests if a constraint exists Declaration bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName The schema name String tableName The table name String constraintName The constraint name Returns Type Description Boolean true when it exists | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Tests if a default value for a column exists Declaration bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName The schema name String tableName The table name String columnName The column name Object defaultValue The default value Returns Type Description Boolean true when it exists | Improve this Doc View Source IndexExists(String, String, String) Tests if an index exists Declaration bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName The schema name String tableName The table name String indexName The index name Returns Type Description Boolean true when it exists | Improve this Doc View Source SchemaExists(String) Tests if the schema exists Declaration bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description Boolean true when it exists | Improve this Doc View Source SequenceExists(String, String) Tests if a sequence exists Declaration bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName The schema name String sequenceName The sequence name Returns Type Description Boolean true when it exists | Improve this Doc View Source TableExists(String, String) Tests if the table exists Declaration bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName The schema name String tableName The table name Returns Type Description Boolean true when it exists"
  },
  "api/v3.x/FluentMigrator.LegacyValidationExtensions.html": {
    "href": "api/v3.x/FluentMigrator.LegacyValidationExtensions.html",
    "title": "Class LegacyValidationExtensions | FluentMigrator documentation",
    "keywords": "Class LegacyValidationExtensions Extension methods for the obsolete ICanBeValidated Inheritance Object LegacyValidationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public static class LegacyValidationExtensions Methods | Improve this Doc View Source CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) Collects all error messages Declaration [Obsolete] public static void CollectErrors(this ICanBeValidated value, ICollection<string> errors, IServiceProvider serviceProvider = null) Parameters Type Name Description ICanBeValidated value The value to collect the errors for ICollection < String > errors The collected errors IServiceProvider serviceProvider The service provider used to resolve services | Improve this Doc View Source TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) Tries to collect errors using the data annotation validation Declaration [Obsolete] public static bool TryCollectResults(this ICanBeValidated rootValue, ICollection<ValidationResult> results, IServiceProvider serviceProvider, IDictionary<object, object> items = null) Parameters Type Name Description ICanBeValidated rootValue The value to collect the errors for ICollection < ValidationResult > results The validation results IServiceProvider serviceProvider The service provider used to resolve services IDictionary < Object , Object > items Key/value pairs passed to the validation functions Returns Type Description Boolean true when no errors were found"
  },
  "api/v3.x/FluentMigrator.MaintenanceAttribute.html": {
    "href": "api/v3.x/FluentMigrator.MaintenanceAttribute.html",
    "title": "Class MaintenanceAttribute | FluentMigrator documentation",
    "keywords": "Class MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Inheritance Object Attribute MaintenanceAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class MaintenanceAttribute : Attribute, _Attribute Remarks Migration annotated with MaintenanceAttribute will be always executed when migrating the database to the latest version. The execution stage in which it would be executed is defined by Stage . The transaction behavior can also be defined with the TransactionBehavior , which if not specified defaults to the default transaction behavior. Constructors | Improve this Doc View Source MaintenanceAttribute(MigrationStage) Initializes a new instance of the MaintenanceAttribute class Declaration public MaintenanceAttribute(MigrationStage stage) Parameters Type Name Description MigrationStage stage The migration stage when the migration should be applied | Improve this Doc View Source MaintenanceAttribute(MigrationStage, TransactionBehavior) Initializes a new instance of the MaintenanceAttribute class. Declaration public MaintenanceAttribute(MigrationStage stage, TransactionBehavior transactionBehavior) Parameters Type Name Description MigrationStage stage The migration stage when the migration should be applied TransactionBehavior transactionBehavior The desired transaction behavior Properties | Improve this Doc View Source Stage Gets the migration stage when the migration should be applied Declaration public MigrationStage Stage { get; } Property Value Type Description MigrationStage | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.Migration.html": {
    "href": "api/v3.x/FluentMigrator.Migration.html",
    "title": "Class Migration | FluentMigrator documentation",
    "keywords": "Class Migration The base migration class for custom SQL queries and data updates/deletions Inheritance Object MigrationBase Migration ForwardOnlyMigration ForwardOnlyMigration VersionDescriptionMigration VersionDescriptionMigration VersionMigration VersionMigration VersionSchemaMigration VersionSchemaMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.Down() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class Migration : MigrationBase, IMigration Properties | Improve this Doc View Source Delete Gets the starting point for data deletions Declaration public IDeleteExpressionRoot Delete { get; } Property Value Type Description IDeleteExpressionRoot | Improve this Doc View Source Execute Gets the starting point for SQL execution Declaration public IExecuteExpressionRoot Execute { get; } Property Value Type Description IExecuteExpressionRoot | Improve this Doc View Source Update Gets the starting point for data updates Declaration public IUpdateExpressionRoot Update { get; } Property Value Type Description IUpdateExpressionRoot Implements IMigration"
  },
  "api/v3.x/FluentMigrator.MigrationAttribute.html": {
    "href": "api/v3.x/FluentMigrator.MigrationAttribute.html",
    "title": "Class MigrationAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationAttribute Attribute for a migration Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class MigrationAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MigrationAttribute(Int64, TransactionBehavior, String) Initializes a new instance of the MigrationAttribute class. Declaration public MigrationAttribute(long version, TransactionBehavior transactionBehavior = TransactionBehavior.Default, string description = null) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior String description The migration description | Improve this Doc View Source MigrationAttribute(Int64, String) Initializes a new instance of the MigrationAttribute class. Declaration public MigrationAttribute(long version, string description) Parameters Type Name Description Int64 version The migration version String description The migration description Properties | Improve this Doc View Source BreakingChange Gets or sets a value indicating whether the transaction is a breaking change Declaration public bool BreakingChange { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Description Gets the description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.MigrationBase.html": {
    "href": "api/v3.x/FluentMigrator.MigrationBase.html",
    "title": "Class MigrationBase | FluentMigrator documentation",
    "keywords": "Class MigrationBase The base migration class Inheritance Object MigrationBase AutoReversingMigration AutoReversingMigration AutoScriptMigration AutoScriptMigration Migration Migration Implements IMigration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class MigrationBase : IMigration Properties | Improve this Doc View Source Alter Gets the starting point for alterations Declaration public IAlterExpressionRoot Alter { get; } Property Value Type Description IAlterExpressionRoot | Improve this Doc View Source ApplicationContext Gets the arbitrary application context passed to the task runner Declaration public object ApplicationContext { get; protected set; } Property Value Type Description Object | Improve this Doc View Source ConnectionString Gets the connection string passed to the task runner Declaration public string ConnectionString { get; protected set; } Property Value Type Description String | Improve this Doc View Source Create Gets the starting point for creating database objects Declaration public ICreateExpressionRoot Create { get; } Property Value Type Description ICreateExpressionRoot | Improve this Doc View Source Insert Gets the starting point for data insertion Declaration public IInsertExpressionRoot Insert { get; } Property Value Type Description IInsertExpressionRoot | Improve this Doc View Source Rename Gets the starting point for renaming database objects Declaration public IRenameExpressionRoot Rename { get; } Property Value Type Description IRenameExpressionRoot | Improve this Doc View Source Schema Gets the starting point for schema-rooted expressions Declaration public ISchemaExpressionRoot Schema { get; } Property Value Type Description ISchemaExpressionRoot Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public abstract void Down() | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration public virtual void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions | Improve this Doc View Source GetUpExpressions(IMigrationContext) Collects all Up migration expressions in the context . Declaration public virtual void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Up migration expressions | Improve this Doc View Source IfDatabase(Predicate<String>) Gets the starting point for database specific expressions Declaration public IIfDatabaseExpressionRoot IfDatabase(Predicate<string> databaseTypeFunc) Parameters Type Name Description Predicate < String > databaseTypeFunc The lambda that tests if the expression can be applied to the current database Returns Type Description IIfDatabaseExpressionRoot The database specific expression | Improve this Doc View Source IfDatabase(String[]) Gets the starting point for database specific expressions Declaration public IIfDatabaseExpressionRoot IfDatabase(params string[] databaseType) Parameters Type Name Description String [] databaseType The supported database types Returns Type Description IIfDatabaseExpressionRoot The database specific expression | Improve this Doc View Source Up() Collect the UP migration expressions Declaration public abstract void Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.MigrationDirection.html": {
    "href": "api/v3.x/FluentMigrator.MigrationDirection.html",
    "title": "Enum MigrationDirection | FluentMigrator documentation",
    "keywords": "Enum MigrationDirection The direction of the migration Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationDirection Fields Name Description Down Reverts the migration Up Applies the migration"
  },
  "api/v3.x/FluentMigrator.MigrationStage.html": {
    "href": "api/v3.x/FluentMigrator.MigrationStage.html",
    "title": "Enum MigrationStage | FluentMigrator documentation",
    "keywords": "Enum MigrationStage Represents a stage in the migration run. Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationStage Fields Name Description AfterAll Migration will be run after all standard migrations and profiles. AfterEach Migration will be run after each standard migration. BeforeAll Migration will be run before all standard migrations. BeforeEach Migration will be run before each standard migration. BeforeProfiles Migration will be run after all standard migrations, but before profiles."
  },
  "api/v3.x/FluentMigrator.MigrationTraitAttribute.html": {
    "href": "api/v3.x/FluentMigrator.MigrationTraitAttribute.html",
    "title": "Class MigrationTraitAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationTraitAttribute A trait for a migration Inheritance Object Attribute MigrationTraitAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class MigrationTraitAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MigrationTraitAttribute(String) Initializes a new instance of the MigrationTraitAttribute class. Declaration public MigrationTraitAttribute(string name) Parameters Type Name Description String name | Improve this Doc View Source MigrationTraitAttribute(String, Object) Initializes a new instance of the MigrationTraitAttribute class. Declaration public MigrationTraitAttribute(string name, object value) Parameters Type Name Description String name The trait name Object value The trait value Properties | Improve this Doc View Source Name Gets the trait name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Gets the trait value Declaration public object Value { get; } Property Value Type Description Object Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.Model.Algorithm.html": {
    "href": "api/v3.x/FluentMigrator.Model.Algorithm.html",
    "title": "Enum Algorithm | FluentMigrator documentation",
    "keywords": "Enum Algorithm Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public enum Algorithm Fields Name Description Brin BTree Gin Gist Hash Spgist"
  },
  "api/v3.x/FluentMigrator.Model.ColumnDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.ColumnDefinition.html",
    "title": "Class ColumnDefinition | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition The column definition Inheritance Object ColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source CollationName Gets or sets the collation name if the column has a string or ansi string type Declaration public virtual string CollationName { get; set; } Property Value Type Description String | Improve this Doc View Source ColumnDescription Gets or sets the column description Declaration public virtual string ColumnDescription { get; set; } Property Value Type Description String | Improve this Doc View Source CustomType Gets or sets a database specific custom column type Declaration public virtual string CustomType { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultValue Gets or sets the columns default value Declaration public virtual object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source ForeignKey Gets or sets the foreign key definition Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Remarks A column might be marked as IsForeignKey , but ForeignKey might still be null . This happens when ForeignKey() without arguments gets called on a column. | Improve this Doc View Source IsForeignKey Gets or sets a value indicating whether this column is a foreign key Declaration public virtual bool IsForeignKey { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsIdentity Gets or sets a value indicating whether this column gets its value using an identity definition Declaration public virtual bool IsIdentity { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsIndexed Gets or sets a value indicating that this column is indexed Declaration public virtual bool IsIndexed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsNullable Gets or sets a value indicating whether this column is nullable Declaration public virtual bool? IsNullable { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source IsPrimaryKey Gets or sets a value indicating whether this column is a primary key Declaration public virtual bool IsPrimaryKey { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Gets or sets a value indicating whether this column must be unique Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ModificationType Gets or sets if the column definition results in a CREATE or an ALTER SQL statement Declaration public virtual ColumnModificationType ModificationType { get; set; } Property Value Type Description ColumnModificationType | Improve this Doc View Source Name Gets or sets the column definition name Declaration public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Precision Gets or sets the column type precision (read: scale) Declaration public virtual int? Precision { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source PrimaryKeyName Gets or sets the primary key constraint name Declaration public virtual string PrimaryKeyName { get; set; } Property Value Type Description String | Improve this Doc View Source Size Gets or sets the column type size (read: precision or length) Declaration public virtual int? Size { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TableName Gets or sets the columns table name Declaration public virtual string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source Type Gets or sets the column type Declaration public virtual DbType? Type { get; set; } Property Value Type Description Nullable < DbType > Methods | Improve this Doc View Source Clone() Declaration public virtual object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Extension Methods PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html": {
    "href": "api/v3.x/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html",
    "title": "Class ColumnDefinition.UndefinedDefaultValue | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition.UndefinedDefaultValue Instances of this class are used to specify an undefined default value Inheritance Object ColumnDefinition.UndefinedDefaultValue Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public sealed class UndefinedDefaultValue"
  },
  "api/v3.x/FluentMigrator.Model.ColumnModificationType.html": {
    "href": "api/v3.x/FluentMigrator.Model.ColumnModificationType.html",
    "title": "Enum ColumnModificationType | FluentMigrator documentation",
    "keywords": "Enum ColumnModificationType Indicates wheter a column should be created or altered Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ColumnModificationType Fields Name Description Alter The column in question should be altered Create The column in question should be created"
  },
  "api/v3.x/FluentMigrator.Model.ConstraintDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.ConstraintDefinition.html",
    "title": "Class ConstraintDefinition | FluentMigrator documentation",
    "keywords": "Class ConstraintDefinition The constraint definition Inheritance Object ConstraintDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ConstraintDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Constructors | Improve this Doc View Source ConstraintDefinition(ConstraintType) Initializes a new instance of the ConstraintDefinition class. Declaration public ConstraintDefinition(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Columns Gets or sets the column names Declaration public virtual ICollection<string> Columns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source ConstraintName Gets or sets the constraint name Declaration public virtual string ConstraintName { get; set; } Property Value Type Description String | Improve this Doc View Source IsPrimaryKeyConstraint Gets a value indicating whether the constraint is a primary key constraint Declaration public bool IsPrimaryKeyConstraint { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUniqueConstraint Gets a value indicating whether the constraint is a unique constraint Declaration public bool IsUniqueConstraint { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Extension Methods PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Model.ConstraintType.html": {
    "href": "api/v3.x/FluentMigrator.Model.ConstraintType.html",
    "title": "Enum ConstraintType | FluentMigrator documentation",
    "keywords": "Enum ConstraintType The constraint type Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ConstraintType Fields Name Description PrimaryKey A primary key constraint Unique A unique constraint"
  },
  "api/v3.x/FluentMigrator.Model.DeletionDataDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.DeletionDataDefinition.html",
    "title": "Class DeletionDataDefinition | FluentMigrator documentation",
    "keywords": "Class DeletionDataDefinition A list of column name/value pairs used for DELETE conditions Inheritance Object List < KeyValuePair < String , Object >> DeletionDataDefinition Implements IList < KeyValuePair < String , Object >> ICollection < KeyValuePair < String , Object >> IReadOnlyList < KeyValuePair < String , Object >> IReadOnlyCollection < KeyValuePair < String , Object >> IEnumerable < KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class DeletionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/v3.x/FluentMigrator.Model.Direction.html": {
    "href": "api/v3.x/FluentMigrator.Model.Direction.html",
    "title": "Enum Direction | FluentMigrator documentation",
    "keywords": "Enum Direction The direction for an index column Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum Direction Fields Name Description Ascending The order direction of the index column should be Ascending Descending The order direction of the index column should be Descending"
  },
  "api/v3.x/FluentMigrator.Model.ForeignKeyDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.ForeignKeyDefinition.html",
    "title": "Class ForeignKeyDefinition | FluentMigrator documentation",
    "keywords": "Class ForeignKeyDefinition The foreign key definition Inheritance Object ForeignKeyDefinition Implements ICloneable ICanBeValidated IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ForeignKeyDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source ForeignColumns GEts or sets the foreign key column names Declaration public virtual ICollection<string> ForeignColumns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source ForeignTable Gets or sets the foreign key table Declaration public virtual string ForeignTable { get; set; } Property Value Type Description String | Improve this Doc View Source ForeignTableSchema Gets or sets the foreign keys table schema Declaration public virtual string ForeignTableSchema { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets a foreign key name Declaration public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source OnDelete Gets or sets the rule for a cascading DELETE Declaration public virtual Rule OnDelete { get; set; } Property Value Type Description Rule | Improve this Doc View Source OnUpdate Gets or sets the rule for a cascading UPDATE Declaration public virtual Rule OnUpdate { get; set; } Property Value Type Description Rule | Improve this Doc View Source PrimaryColumns Gets or sets the primary key column names Declaration public virtual ICollection<string> PrimaryColumns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source PrimaryTable Gets or sets the primary table Declaration public virtual string PrimaryTable { get; set; } Property Value Type Description String | Improve this Doc View Source PrimaryTableSchema Gets or sets the primary table schema Declaration public virtual string PrimaryTableSchema { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source HasForeignAndPrimaryColumnsDefined() Gets a value indicating whether primary and foreign key columns are defined Declaration public bool HasForeignAndPrimaryColumnsDefined() Returns Type Description Boolean | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Implements System.ICloneable ICanBeValidated IValidatableObject Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.Model.html": {
    "href": "api/v3.x/FluentMigrator.Model.html",
    "title": "Namespace FluentMigrator.Model | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Model Classes ColumnDefinition The column definition ColumnDefinition.UndefinedDefaultValue Instances of this class are used to specify an undefined default value ConstraintDefinition The constraint definition DeletionDataDefinition A list of column name/value pairs used for DELETE conditions ForeignKeyDefinition The foreign key definition IndexColumnDefinition Index column definition IndexDefinition The index definition IndexIncludeDefinition InsertionDataDefinition A list of column name/value pairs used for INSERT data PostgresIndexAlgorithmDefinition PostgresIndexConcurrentlyDefinition PostgresIndexIncludeDefinition PostgresIndexOnlyDefinition SequenceDefinition The sequence definition Enums Algorithm ColumnModificationType Indicates wheter a column should be created or altered ConstraintType The constraint type Direction The direction for an index column"
  },
  "api/v3.x/FluentMigrator.Model.IndexColumnDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.IndexColumnDefinition.html",
    "title": "Class IndexColumnDefinition | FluentMigrator documentation",
    "keywords": "Class IndexColumnDefinition Index column definition Inheritance Object IndexColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Direction Gets or sets the sort direction of the index column Declaration public virtual Direction Direction { get; set; } Property Value Type Description Direction | Improve this Doc View Source Name Gets or sets the column name Declaration public virtual string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Model.IndexDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.IndexDefinition.html",
    "title": "Class IndexDefinition | FluentMigrator documentation",
    "keywords": "Class IndexDefinition The index definition Inheritance Object IndexDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject IValidationChildren Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures, IValidationChildren Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Columns Gets or sets a collection of index column definitions Declaration public virtual ICollection<IndexColumnDefinition> Columns { get; set; } Property Value Type Description ICollection < IndexColumnDefinition > | Improve this Doc View Source IsClustered Gets or sets a value indicating whether the index is clustered Declaration public bool IsClustered { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Gets or sets a value indicating whteher the index only allows unique values Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets or sets the index name Declaration public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < ValidationResult > Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject IValidationChildren Extension Methods PostgresExtensions.Using(ISupportAdditionalFeatures, Algorithm) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/v3.x/FluentMigrator.Model.IndexIncludeDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.IndexIncludeDefinition.html",
    "title": "Class IndexIncludeDefinition | FluentMigrator documentation",
    "keywords": "Class IndexIncludeDefinition Inheritance Object IndexIncludeDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public class IndexIncludeDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v3.x/FluentMigrator.Model.InsertionDataDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.InsertionDataDefinition.html",
    "title": "Class InsertionDataDefinition | FluentMigrator documentation",
    "keywords": "Class InsertionDataDefinition A list of column name/value pairs used for INSERT data Inheritance Object List < KeyValuePair < String , Object >> InsertionDataDefinition Implements IList < KeyValuePair < String , Object >> ICollection < KeyValuePair < String , Object >> IReadOnlyList < KeyValuePair < String , Object >> IReadOnlyCollection < KeyValuePair < String , Object >> IEnumerable < KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/v3.x/FluentMigrator.Model.PostgresIndexAlgorithmDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.PostgresIndexAlgorithmDefinition.html",
    "title": "Class PostgresIndexAlgorithmDefinition | FluentMigrator documentation",
    "keywords": "Class PostgresIndexAlgorithmDefinition Inheritance Object PostgresIndexAlgorithmDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public class PostgresIndexAlgorithmDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Algorithm Declaration public virtual Algorithm Algorithm { get; set; } Property Value Type Description Algorithm Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v3.x/FluentMigrator.Model.PostgresIndexConcurrentlyDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.PostgresIndexConcurrentlyDefinition.html",
    "title": "Class PostgresIndexConcurrentlyDefinition | FluentMigrator documentation",
    "keywords": "Class PostgresIndexConcurrentlyDefinition Inheritance Object PostgresIndexConcurrentlyDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public class PostgresIndexConcurrentlyDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source IsConcurrently Declaration public virtual bool IsConcurrently { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v3.x/FluentMigrator.Model.PostgresIndexIncludeDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.PostgresIndexIncludeDefinition.html",
    "title": "Class PostgresIndexIncludeDefinition | FluentMigrator documentation",
    "keywords": "Class PostgresIndexIncludeDefinition Inheritance Object PostgresIndexIncludeDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public class PostgresIndexIncludeDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v3.x/FluentMigrator.Model.PostgresIndexOnlyDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.PostgresIndexOnlyDefinition.html",
    "title": "Class PostgresIndexOnlyDefinition | FluentMigrator documentation",
    "keywords": "Class PostgresIndexOnlyDefinition Inheritance Object PostgresIndexOnlyDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public class PostgresIndexOnlyDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source IsOnly Declaration public virtual bool IsOnly { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/v3.x/FluentMigrator.Model.SequenceDefinition.html": {
    "href": "api/v3.x/FluentMigrator.Model.SequenceDefinition.html",
    "title": "Class SequenceDefinition | FluentMigrator documentation",
    "keywords": "Class SequenceDefinition The sequence definition Inheritance Object SequenceDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class SequenceDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Cache Gets or sets the number of cached sequence values Declaration public virtual long? Cache { get; set; } Property Value Type Description Nullable < Int64 > Remarks Normally used together with Increment . | Improve this Doc View Source Cycle Gets or sets a value indicating whether the sequence should start with MinValue for the next value after MaxValue Declaration public virtual bool Cycle { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Increment Gets or sets the increment of the sequence Declaration public virtual long? Increment { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source MaxValue Gets or sets the maximum value of the sequence (inclusive) Declaration public virtual long? MaxValue { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source MinValue Gets or sets the minimum value of the sequence (inclusive) Declaration public virtual long? MinValue { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source Name Gets or sets the sequence name Declaration public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source StartWith Gets or sets the start value of the sequence Declaration public virtual long? StartWith { get; set; } Property Value Type Description Nullable < Int64 > Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Implements System.ICloneable ICanBeValidated Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/v3.x/FluentMigrator.NonUnicodeString.html": {
    "href": "api/v3.x/FluentMigrator.NonUnicodeString.html",
    "title": "Class NonUnicodeString | FluentMigrator documentation",
    "keywords": "Class NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) Inheritance Object NonUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class NonUnicodeString Constructors | Improve this Doc View Source NonUnicodeString(String) Used for explicitly creating a non-Unicode string literal in Transact SQL Declaration public NonUnicodeString(string value) Parameters Type Name Description String value The value of the non-Unicode string literal Properties | Improve this Doc View Source Value Gets the value of the non-Unicode string literal Declaration public string Value { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Overrides ToString() to return the value. Declaration public override string ToString() Returns Type Description String The value of the non-Unicode string literal. Overrides Object.ToString()"
  },
  "api/v3.x/FluentMigrator.Oracle.html": {
    "href": "api/v3.x/FluentMigrator.Oracle.html",
    "title": "Namespace FluentMigrator.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Oracle Classes OracleExtensions"
  },
  "api/v3.x/FluentMigrator.Oracle.OracleExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Oracle.OracleExtensions.html",
    "title": "Class OracleExtensions | FluentMigrator documentation",
    "keywords": "Class OracleExtensions Inheritance Object OracleExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Oracle Assembly : FluentMigrator.Extensions.Oracle.dll Syntax public static class OracleExtensions Properties | Improve this Doc View Source IdentityGeneration Declaration public static string IdentityGeneration { get; } Property Value Type Description String | Improve this Doc View Source IdentityIncrementBy Declaration public static string IdentityIncrementBy { get; } Property Value Type Description String | Improve this Doc View Source IdentityMaxValue Declaration public static string IdentityMaxValue { get; } Property Value Type Description String | Improve this Doc View Source IdentityMinValue Declaration public static string IdentityMinValue { get; } Property Value Type Description String | Improve this Doc View Source IdentityStartWith Declaration public static string IdentityStartWith { get; } Property Value Type Description String Methods | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType) Makes a column an Identity column using the specified generation type. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, OracleGenerationType generation) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. OracleGenerationType generation The generation type Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int32, Int32) Makes a column an Identity column using the specified generation type, seed and increment values. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, OracleGenerationType generation, int startWith, int incrementBy) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. OracleGenerationType generation The generation type Int32 startWith Starting value of the identity. Int32 incrementBy Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32) Makes a column an Identity column using the specified generation type, seed and increment values with bigint support. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, OracleGenerationType generation, long startWith, int incrementBy) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. OracleGenerationType generation The generation type Int64 startWith Starting value of the identity. Int32 incrementBy Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, OracleGenerationType, Int64, Int32, Int64, Int64) Makes a column an Identity column using the specified generation type, startWith, increment, minValue and maxValue with bigint support. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, OracleGenerationType generation, long startWith, int incrementBy, long minValue, long maxValue) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. OracleGenerationType generation The generation type Int64 startWith Starting value of the identity. Int32 incrementBy Increment value of the identity. Int64 minValue Min value of the identity. Int64 maxValue Max value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk"
  },
  "api/v3.x/FluentMigrator.OracleGenerationType.html": {
    "href": "api/v3.x/FluentMigrator.OracleGenerationType.html",
    "title": "Enum OracleGenerationType | FluentMigrator documentation",
    "keywords": "Enum OracleGenerationType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.Oracle.dll Syntax public enum OracleGenerationType Fields Name Description Always ByDefault ByDefaultOnNull"
  },
  "api/v3.x/FluentMigrator.Postgres.html": {
    "href": "api/v3.x/FluentMigrator.Postgres.html",
    "title": "Namespace FluentMigrator.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Postgres Classes PostgresExtensions Feature extensions for PostgreSQL"
  },
  "api/v3.x/FluentMigrator.Postgres.PostgresExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Postgres.PostgresExtensions.html",
    "title": "Class PostgresExtensions | FluentMigrator documentation",
    "keywords": "Class PostgresExtensions Feature extensions for PostgreSQL Inheritance Object PostgresExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Postgres Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public static class PostgresExtensions Remarks Given: MigrationBase m = null; These are valid calls: m.Alter.Column(\"\").OnTable(\"\").AsInt16().AddIdentity(PostgresGenerationType.Always); m.Alter.Column(\"\").OnTable(\"\").AsInt16().SetIdentity(PostgresGenerationType.Always); m.Alter.Column(\"\").OnTable(\"\").AsInt16().DropIdentity(true); m.Alter.Column(\"\").OnTable(\"\").AsInt16().Identity(); m.Alter.Column(\"\").OnTable(\"\").AsInt16().Identity(PostgresGenerationType.Always); //Ideally would like to stop this, forcing use of AddIdentity instead, but can't m.Alter.Table(\"\").AddColumn(\"\").AsInt16().Identity(PostgresGenerationType.Always); m.Alter.Table(\"\").AlterColumn(\"\").AsInt16().Identity(PostgresGenerationType.Always); These are not possible: m.Alter.Table(\"\").AddColumn(\"\").AsInt16().AddIdentity(PostgresGenerationType.Always); m.Alter.Table(\"\").AddColumn(\"\").AsInt16().SetIdentity(PostgresGenerationType.Always); m.Alter.Table(\"\").AddColumn(\"\").AsInt16().DropIdentity(PostgresGenerationType.Always); m.Alter.Table(\"\").AlterColumn(\"\").AsInt16().AddIdentity(PostgresGenerationType.Always); //Ideally would like to have these 3, but can't distinguish between return type AddColumn and AlterColumn at compiletime m.Alter.Table(\"\").AlterColumn(\"\").AsInt16().SetIdentity(PostgresGenerationType.Always); m.Alter.Table(\"\").AlterColumn(\"\").AsInt16().DropIdentity(false); Fields | Improve this Doc View Source Concurrently Declaration public const string Concurrently = \"PostgresConcurrently\" Field Value Type Description String | Improve this Doc View Source IncludesList Declaration public const string IncludesList = \"PostgresIncludes\" Field Value Type Description String | Improve this Doc View Source IndexAlgorithm Declaration public const string IndexAlgorithm = \"PostgresIndexAlgorithm\" Field Value Type Description String | Improve this Doc View Source IndexFilter Declaration public const string IndexFilter = \"PostgresIndexFilter\" Field Value Type Description String | Improve this Doc View Source Only Declaration public const string Only = \"PostgresOnly\" Field Value Type Description String Properties | Improve this Doc View Source IdentityGeneration Column identity generation ability for PostgreSQL 10 and above Declaration public static string IdentityGeneration { get; } Property Value Type Description String | Improve this Doc View Source IdentityModificationType Column identity modification type for PostgreSQL 10 and above Declaration public static string IdentityModificationType { get; } Property Value Type Description String Methods | Improve this Doc View Source AddIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) Adds a generated identity to the column Declaration public static IAlterColumnOptionSyntax AddIdentity(this IAlterColumnOptionSyntax expression, PostgresGenerationType generation) Parameters Type Name Description IAlterColumnOptionSyntax expression PostgresGenerationType generation Returns Type Description IAlterColumnOptionSyntax The next step Remarks This is an equivalent to Alter.Table.AlterColumn.Identity(PostgresGenerationType) Deliberate choice to extend IAlterColumnOptionSyntax rather than IColumnOptionSyntax<TNext, TNextFk> in order to prevent using these methods when adding a column to the table, since it makes no sense. It does mean the syntax migration.Alter.Table(\"tableName\").AlterColumn(\"columnName\") cannot be used since no distinction is made between the the return types of AddColumn or AlterColumn on the IAlterTableColumnAsTypeSyntax interface which is inconvenient but helps prevent misuse. | Improve this Doc View Source AsConcurrently(ICreateIndexOptionsSyntax) When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts, updates, or deletes on the table Whereas a standard index build locks out writes (but not reads) on the table until it's done. There are several caveats to be aware of when using this option Declaration public static ICreateIndexOptionsSyntax AsConcurrently(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax The next step Remarks To use this feature is necessary mark the migration to not use transaction. sample: [Migration(1, TransactionBehavior.None)] public class SomeMigration : Migration | Improve this Doc View Source AsConcurrently(ICreateIndexOptionsSyntax, Boolean) When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts, updates, or deletes on the table Whereas a standard index build locks out writes (but not reads) on the table until it's done. There are several caveats to be aware of when using this option Declaration public static ICreateIndexOptionsSyntax AsConcurrently(this ICreateIndexOptionsSyntax expression, bool isConcurrently) Parameters Type Name Description ICreateIndexOptionsSyntax expression Boolean isConcurrently if should or shouldn't be concurrently Returns Type Description ICreateIndexOptionsSyntax The next step Remarks To use this feature is necessary mark the migration to not use transaction. sample: [Migration(1, TransactionBehavior.None)] public class SomeMigration : Migration | Improve this Doc View Source AsOnly(ICreateIndexOptionsSyntax) Indicates not to recurse creating indexes on partitions, if the table is partitioned. Declaration public static ICreateIndexOptionsSyntax AsOnly(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax The next step | Improve this Doc View Source AsOnly(ICreateIndexOptionsSyntax, Boolean) Indicates not to recurse creating indexes on partitions, if the table is partitioned. Declaration public static ICreateIndexOptionsSyntax AsOnly(this ICreateIndexOptionsSyntax expression, bool isOnly) Parameters Type Name Description ICreateIndexOptionsSyntax expression Boolean isOnly if should or shouldn't be only Returns Type Description ICreateIndexOptionsSyntax The next step | Improve this Doc View Source DropIdentity(IAlterColumnOptionSyntax, Boolean) Drops an existing identity on the column Declaration public static IAlterColumnOptionSyntax DropIdentity(this IAlterColumnOptionSyntax expression, bool ifExists) Parameters Type Name Description IAlterColumnOptionSyntax expression Boolean ifExists If true and the column is not an identity column, no error is thrown. In this case a notice is issued instead. Returns Type Description IAlterColumnOptionSyntax The next step Remarks Deliberate choice to extend IAlterColumnOptionSyntax rather than IColumnOptionSyntax<TNext, TNextFk> in order to prevent using these methods when adding a column to the table, since it makes no sense. It does mean the syntax migration.Alter.Table(\"tableName\").AlterColumn(\"columnName\") cannot be used since no distinction is made between the the return types of AddColumn or AlterColumn on the IAlterTableColumnAsTypeSyntax interface which is inconvenient but helps prevent misuse. | Improve this Doc View Source Filter(ICreateIndexOptionsSyntax, String) The constraint expression for a partial index. Declaration public static ICreateIndexOptionsSyntax Filter(this ICreateIndexOptionsSyntax expression, string filter) Parameters Type Name Description ICreateIndexOptionsSyntax expression String filter The constraint expression Returns Type Description ICreateIndexOptionsSyntax The next step | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, PostgresGenerationType) Sets the column's identity generation attribute. To change or remove an existing one, use Alter.Column instead of Alter.Table.AlterColumn Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, PostgresGenerationType generation) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression PostgresGenerationType generation Returns Type Description TNext The next step Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Include(ICreateIndexOnColumnSyntax, String) Declaration public static ICreateIndexNonKeyColumnSyntax Include(this ICreateIndexOnColumnSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOnColumnSyntax expression String columnName Returns Type Description ICreateIndexNonKeyColumnSyntax | Improve this Doc View Source Include(ICreateIndexOptionsSyntax, String) Declaration public static ICreateIndexOptionsSyntax Include(this ICreateIndexOptionsSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOptionsSyntax expression String columnName Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source SetIdentity(IAlterColumnOptionSyntax, PostgresGenerationType) Alters the strategy for an existing generated identity on the column Declaration public static IAlterColumnOptionSyntax SetIdentity(this IAlterColumnOptionSyntax expression, PostgresGenerationType generation) Parameters Type Name Description IAlterColumnOptionSyntax expression PostgresGenerationType generation Returns Type Description IAlterColumnOptionSyntax The next step Remarks Deliberate choice to extend IAlterColumnOptionSyntax rather than IColumnOptionSyntax<TNext, TNextFk> in order to prevent using these methods when adding a column to the table, since it makes no sense. It does mean the syntax migration.Alter.Table(\"tableName\").AlterColumn(\"columnName\") cannot be used since no distinction is made between the the return types of AddColumn or AlterColumn on the IAlterTableColumnAsTypeSyntax interface which is inconvenient but helps prevent misuse. | Improve this Doc View Source Using(ICreateIndexOptionsSyntax, Algorithm) Declaration public static ICreateIndexOptionsSyntax Using(this ICreateIndexOptionsSyntax expression, Algorithm algorithm) Parameters Type Name Description ICreateIndexOptionsSyntax expression Algorithm algorithm Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source Using(ISupportAdditionalFeatures, Algorithm) Declaration public static void Using(this ISupportAdditionalFeatures additionalFeatures, Algorithm algorithm) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures Algorithm algorithm | Improve this Doc View Source UsingBrin(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingBrin(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source UsingBTree(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingBTree(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source UsingGin(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingGin(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source UsingGist(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingGist(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source UsingHash(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingHash(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source UsingSpgist(ICreateIndexOptionsSyntax) Declaration public static ICreateIndexOptionsSyntax UsingSpgist(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression Returns Type Description ICreateIndexOptionsSyntax"
  },
  "api/v3.x/FluentMigrator.PostgresGenerationType.html": {
    "href": "api/v3.x/FluentMigrator.PostgresGenerationType.html",
    "title": "Enum PostgresGenerationType | FluentMigrator documentation",
    "keywords": "Enum PostgresGenerationType Default value generation strategy (Identity) types. The clauses ALWAYS and BY DEFAULT determine how the sequence value is given precedence over a user-specified value in an INSERT statement. Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public enum PostgresGenerationType Fields Name Description Always A user-specified value is only accepted if the INSERT statement specifies OVERRIDING SYSTEM VALUE. ByDefault The user-specified value takes precedence."
  },
  "api/v3.x/FluentMigrator.PostgresIdentityModificationType.html": {
    "href": "api/v3.x/FluentMigrator.PostgresIdentityModificationType.html",
    "title": "Enum PostgresIdentityModificationType | FluentMigrator documentation",
    "keywords": "Enum PostgresIdentityModificationType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.Postgres.dll Syntax public enum PostgresIdentityModificationType Fields Name Description Add Drop DropIfExists Set"
  },
  "api/v3.x/FluentMigrator.ProfileAttribute.html": {
    "href": "api/v3.x/FluentMigrator.ProfileAttribute.html",
    "title": "Class ProfileAttribute | FluentMigrator documentation",
    "keywords": "Class ProfileAttribute Defines a profile for a migration Inheritance Object Attribute ProfileAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class ProfileAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ProfileAttribute(String) Initializes a new instance of the ProfileAttribute class. Declaration public ProfileAttribute(string profileName) Parameters Type Name Description String profileName The profile name Properties | Improve this Doc View Source ProfileName Gets the profile name Declaration public string ProfileName { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.RawSql.html": {
    "href": "api/v3.x/FluentMigrator.RawSql.html",
    "title": "Class RawSql | FluentMigrator documentation",
    "keywords": "Class RawSql A wrapper class for a SQL value Inheritance Object RawSql Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class RawSql Remarks This raw SQL value is normally used when a custom default value was specified Properties | Improve this Doc View Source Value Gets the underlying SQL value Declaration public string Value { get; } Property Value Type Description String Methods | Improve this Doc View Source Insert(String) Creates a new RawSql instance using a given SQL value Declaration public static RawSql Insert(string sqlToRun) Parameters Type Name Description String sqlToRun The SQL value Returns Type Description RawSql The new RawSql instance"
  },
  "api/v3.x/FluentMigrator.Runner.AnnouncerExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.AnnouncerExtensions.html",
    "title": "Class AnnouncerExtensions | FluentMigrator documentation",
    "keywords": "Class AnnouncerExtensions Extension methods for an IAnnouncer Inheritance Object AnnouncerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public static class AnnouncerExtensions Methods | Improve this Doc View Source Error(IAnnouncer, String, Object[]) Writes a formatted error message Declaration [Obsolete] public static void Error(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments | Improve this Doc View Source Heading(IAnnouncer, String, Object[]) Writes a formatted heading message Declaration [Obsolete] public static void Heading(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments | Improve this Doc View Source Say(IAnnouncer, String, Object[]) Writes a formatted message Declaration [Obsolete] public static void Say(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.Announcer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.Announcer.html",
    "title": "Class Announcer | FluentMigrator documentation",
    "keywords": "Class Announcer Inheritance Object Announcer ConsoleAnnouncer ConsoleAnnouncer NullAnnouncer NullAnnouncer TextWriterAnnouncer TextWriterAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public abstract class Announcer : IAnnouncer Constructors | Improve this Doc View Source Announcer() Declaration protected Announcer() | Improve this Doc View Source Announcer(IOptions<AnnouncerOptions>) Declaration protected Announcer(IOptions<AnnouncerOptions> options) Parameters Type Name Description IOptions < AnnouncerOptions > options Properties | Improve this Doc View Source ShowElapsedTime Declaration public virtual bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Declaration public virtual bool ShowSql { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public virtual void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public virtual void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public virtual void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public virtual void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public virtual void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public virtual void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public virtual void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration public abstract void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.AnnouncerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.AnnouncerOptions.html",
    "title": "Class AnnouncerOptions | FluentMigrator documentation",
    "keywords": "Class AnnouncerOptions Options for the IAnnouncer Inheritance Object AnnouncerOptions TextWriterAnnouncerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class AnnouncerOptions Fields | Improve this Doc View Source AllEnabled Declaration [Obsolete] public static readonly AnnouncerOptions AllEnabled Field Value Type Description AnnouncerOptions Properties | Improve this Doc View Source ShowElapsedTime Gets or sets a value indicating whether the elapsed time should be shown Declaration public bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Gets or sets a value indicating whether SQL statements should be shown Declaration public bool ShowSql { get; set; } Property Value Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html",
    "title": "Class CompositeAnnouncer | FluentMigrator documentation",
    "keywords": "Class CompositeAnnouncer Inheritance Object CompositeAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class CompositeAnnouncer : IAnnouncer Constructors | Improve this Doc View Source CompositeAnnouncer(IAnnouncer[]) Declaration public CompositeAnnouncer(params IAnnouncer[] announcers) Parameters Type Name Description IAnnouncer [] announcers Properties | Improve this Doc View Source Announcers Declaration public IEnumerable<IAnnouncer> Announcers { get; } Property Value Type Description IEnumerable < IAnnouncer > Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration [Obsolete] public void Write(string message, bool isNotSql) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html",
    "title": "Class ConsoleAnnouncer | FluentMigrator documentation",
    "keywords": "Class ConsoleAnnouncer Inheritance Object Announcer ConsoleAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Sql(String) Announcer.Error(Exception) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class ConsoleAnnouncer : Announcer, IAnnouncer Constructors | Improve this Doc View Source ConsoleAnnouncer() Declaration public ConsoleAnnouncer() | Improve this Doc View Source ConsoleAnnouncer(IOptions<AnnouncerOptions>) Declaration public ConsoleAnnouncer(IOptions<AnnouncerOptions> options) Parameters Type Name Description IOptions < AnnouncerOptions > options Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) | Improve this Doc View Source Emphasize(String) Declaration public override void Emphasize(string message) Parameters Type Name Description String message Overrides Announcer.Emphasize(String) | Improve this Doc View Source Error(String) Declaration public override void Error(string message) Parameters Type Name Description String message Overrides Announcer.Error(String) | Improve this Doc View Source Header() Declaration public void Header() | Improve this Doc View Source Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) | Improve this Doc View Source HorizontalRule() Declaration public void HorizontalRule() | Improve this Doc View Source Say(String) Declaration public override void Say(string message) Parameters Type Name Description String message Overrides Announcer.Say(String) | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.html",
    "title": "Namespace FluentMigrator.Runner.Announcers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Announcers Classes Announcer AnnouncerOptions Options for the IAnnouncer CompositeAnnouncer ConsoleAnnouncer LoggerAnnouncer Implementation of IAnnouncer that redirects all log messages to an NullAnnouncer TextWriterAnnouncer TextWriterAnnouncerOptions TextWriterWithGoAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.LoggerAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.LoggerAnnouncer.html",
    "title": "Class LoggerAnnouncer | FluentMigrator documentation",
    "keywords": "Class LoggerAnnouncer Implementation of IAnnouncer that redirects all log messages to an Inheritance Object LoggerAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class LoggerAnnouncer : IAnnouncer Constructors | Improve this Doc View Source LoggerAnnouncer(ILogger, AnnouncerOptions) Initializes a new instance of the LoggerAnnouncer class. Declaration public LoggerAnnouncer(ILogger logger, AnnouncerOptions options) Parameters Type Name Description ILogger logger AnnouncerOptions options The announcer options | Improve this Doc View Source LoggerAnnouncer(ILoggerFactory, IOptions<AnnouncerOptions>) Initializes a new instance of the LoggerAnnouncer class. Declaration public LoggerAnnouncer(ILoggerFactory loggerFactory, IOptions<AnnouncerOptions> options) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory to create the logger from IOptions < AnnouncerOptions > options The announcer options Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration public void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer Extension Methods AnnouncerExtensions.Heading(IAnnouncer, String, Object[]) AnnouncerExtensions.Say(IAnnouncer, String, Object[]) AnnouncerExtensions.Error(IAnnouncer, String, Object[])"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.NullAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.NullAnnouncer.html",
    "title": "Class NullAnnouncer | FluentMigrator documentation",
    "keywords": "Class NullAnnouncer Inheritance Object Announcer NullAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Heading(String) Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.ElapsedTime(TimeSpan) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class NullAnnouncer : Announcer, IAnnouncer Methods | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html",
    "title": "Class TextWriterAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete(\"Use DependencyInjection extension method chain instead: .AddLogging(lb => lb.AddDebug().AddFluentMigratorConsole())\")] public class TextWriterAnnouncer : Announcer, IAnnouncer Constructors | Improve this Doc View Source TextWriterAnnouncer(IOptions<TextWriterAnnouncerOptions>) Declaration public TextWriterAnnouncer(IOptions<TextWriterAnnouncerOptions> options) Parameters Type Name Description IOptions < TextWriterAnnouncerOptions > options | Improve this Doc View Source TextWriterAnnouncer(Action<String>) Declaration public TextWriterAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write | Improve this Doc View Source TextWriterAnnouncer(TextWriter) Declaration public TextWriterAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) | Improve this Doc View Source Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterAnnouncerOptions.html",
    "title": "Class TextWriterAnnouncerOptions | FluentMigrator documentation",
    "keywords": "Class TextWriterAnnouncerOptions Inheritance Object AnnouncerOptions TextWriterAnnouncerOptions Inherited Members AnnouncerOptions.AllEnabled AnnouncerOptions.ShowSql AnnouncerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class TextWriterAnnouncerOptions : AnnouncerOptions Properties | Improve this Doc View Source WriteDelegate Declaration public Action<string> WriteDelegate { get; set; } Property Value Type Description Action < String >"
  },
  "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html",
    "title": "Class TextWriterWithGoAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterWithGoAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members TextWriterAnnouncer.Heading(String) TextWriterAnnouncer.ElapsedTime(TimeSpan) TextWriterAnnouncer.Write(String, Boolean) Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class TextWriterWithGoAnnouncer : TextWriterAnnouncer, IAnnouncer Constructors | Improve this Doc View Source TextWriterWithGoAnnouncer(IOptions<TextWriterAnnouncerOptions>) Declaration public TextWriterWithGoAnnouncer(IOptions<TextWriterAnnouncerOptions> options) Parameters Type Name Description IOptions < TextWriterAnnouncerOptions > options | Improve this Doc View Source TextWriterWithGoAnnouncer(Action<String>) Declaration public TextWriterWithGoAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write | Improve this Doc View Source TextWriterWithGoAnnouncer(TextWriter) Declaration public TextWriterWithGoAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods | Improve this Doc View Source Sql(String) Declaration public override void Sql(string sql) Parameters Type Name Description String sql Overrides Announcer.Sql(String) Implements IAnnouncer"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html",
    "title": "Class EndCodeSearchResult | FluentMigrator documentation",
    "keywords": "Class EndCodeSearchResult The result of a FindEndCode(ILineReader) operation Inheritance Object EndCodeSearchResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class EndCodeSearchResult Constructors | Improve this Doc View Source EndCodeSearchResult(Int32) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader where the end code was found | Improve this Doc View Source EndCodeSearchResult(Int32, IRangeSearcher) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index, IRangeSearcher nestedRangeSearcher) Parameters Type Name Description Int32 index The index into the ILineReader where the nested start code was found IRangeSearcher nestedRangeSearcher The searcher to be used to find the end of the nested range Properties | Improve this Doc View Source Index Gets the index into the previously tested ILineReader of the end code or nested start code Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source IsNestedStart Gets a value indicating whether this is a nested range Declaration public bool IsNestedStart { get; } Property Value Type Description Boolean | Improve this Doc View Source NestedRangeSearcher Gets the searcher to be used to find the end of the nested range Declaration public IRangeSearcher NestedRangeSearcher { get; } Property Value Type Description IRangeSearcher Operators | Improve this Doc View Source Implicit(Int32 to EndCodeSearchResult) Operator to convert an index of the end code into a EndCodeSearchResult Declaration public static implicit operator EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader of the end code Returns Type Description EndCodeSearchResult"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser Classes EndCodeSearchResult The result of a FindEndCode(ILineReader) operation SpecialTokenEventArgs Event arguments for a special token SpecialTokenInfo Provides special information about the found token SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlBatchParser This is the base implementation of the SQL batch parser SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Interfaces ILineReader Read content from a line and advance the internal index IRangeSearcher Interface to search for content with a given start- and end code ISpecialTokenSearcher Searches for special tokens (e.g. GO ) ITextSource An interface to create a reader that is used to read the SQL script lines"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.ILineReader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.ILineReader.html",
    "title": "Interface ILineReader | FluentMigrator documentation",
    "keywords": "Interface ILineReader Read content from a line and advance the internal index Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ILineReader Properties | Improve this Doc View Source Index Gets the current index into the line Declaration int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Length Gets the remaining length Declaration int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Line Gets the current line Declaration string Line { get; } Property Value Type Description String Methods | Improve this Doc View Source Advance(Int32) Creates a new ILineReader while moving the internal Index by the given length Declaration ILineReader Advance(int length) Parameters Type Name Description Int32 length The number of characters to move the internal Index Returns Type Description ILineReader A new line reader with the new index | Improve this Doc View Source ReadString(Int32) Reads a string with the given length from the Line Declaration string ReadString(int length) Parameters Type Name Description Int32 length The length of the string to read from the Line Returns Type Description String The read string"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.IRangeSearcher.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.IRangeSearcher.html",
    "title": "Interface IRangeSearcher | FluentMigrator documentation",
    "keywords": "Interface IRangeSearcher Interface to search for content with a given start- and end code Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRangeSearcher Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html",
    "title": "Interface ISpecialTokenSearcher | FluentMigrator documentation",
    "keywords": "Interface ISpecialTokenSearcher Searches for special tokens (e.g. GO ) Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISpecialTokenSearcher Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.ITextSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.ITextSource.html",
    "title": "Interface ITextSource | FluentMigrator documentation",
    "keywords": "Interface ITextSource An interface to create a reader that is used to read the SQL script lines Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITextSource Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration ILineReader CreateReader() Returns Type Description ILineReader null when no content was available"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html",
    "title": "Class AnsiSqlIdentifier | FluentMigrator documentation",
    "keywords": "Class AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers Inheritance Object StringWithNoEscape AnsiSqlIdentifier Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class AnsiSqlIdentifier : StringWithNoEscape, IRangeSearcher Constructors | Improve this Doc View Source AnsiSqlIdentifier() Initializes a new instance of the AnsiSqlIdentifier class. Declaration public AnsiSqlIdentifier() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html",
    "title": "Class CharWithEscapeByDuplication | FluentMigrator documentation",
    "keywords": "Class CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. Inheritance Object CharWithEscapeByDuplication MySqlIdentifier MySqlIdentifier SqlServerIdentifier SqlServerIdentifier SqlString SqlString Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class CharWithEscapeByDuplication : IRangeSearcher Constructors | Improve this Doc View Source CharWithEscapeByDuplication(Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startAndEndChar, bool isComment = false) Parameters Type Name Description Char startAndEndChar The character used for start and end Boolean isComment Is this a comment | Improve this Doc View Source CharWithEscapeByDuplication(Char, Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startChar, char endChar, bool isComment = false) Parameters Type Name Description Char startChar The start character Char endChar The end character Boolean isComment Is this a comment Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html",
    "title": "Class DoubleDashSingleLineComment | FluentMigrator documentation",
    "keywords": "Class DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) Inheritance Object SingleLineComment DoubleDashSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DoubleDashSingleLineComment : SingleLineComment, IRangeSearcher Constructors | Improve this Doc View Source DoubleDashSingleLineComment() Initializes a new instance of the DoubleDashSingleLineComment class. Declaration public DoubleDashSingleLineComment() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleSlashSingleLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleSlashSingleLineComment.html",
    "title": "Class DoubleSlashSingleLineComment | FluentMigrator documentation",
    "keywords": "Class DoubleSlashSingleLineComment A single line comment starting with two slashes ( // comment ) Inheritance Object SingleLineComment DoubleSlashSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DoubleSlashSingleLineComment : SingleLineComment, IRangeSearcher Constructors | Improve this Doc View Source DoubleSlashSingleLineComment() Initializes a new instance of the DoubleSlashSingleLineComment class. Declaration public DoubleSlashSingleLineComment() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers Classes AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) DoubleSlashSingleLineComment A single line comment starting with two slashes ( // comment ) MultiLineComment The default multi-line comment ( /* comment */ ) MySqlIdentifier The MySQL identifier quotes using backticks NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) SingleLineComment A single line comment starting with the specified start code SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) SqlString A ANSI SQL string ( 'string' ) StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ )"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html",
    "title": "Class MultiLineComment | FluentMigrator documentation",
    "keywords": "Class MultiLineComment The default multi-line comment ( /* comment */ ) Inheritance Object StringWithNoEscape MultiLineComment Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MultiLineComment : StringWithNoEscape, IRangeSearcher Constructors | Improve this Doc View Source MultiLineComment() Initializes a new instance of the MultiLineComment class. Declaration public MultiLineComment() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html",
    "title": "Class MySqlIdentifier | FluentMigrator documentation",
    "keywords": "Class MySqlIdentifier The MySQL identifier quotes using backticks Inheritance Object CharWithEscapeByDuplication MySqlIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MySqlIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source MySqlIdentifier() Initializes a new instance of the MySqlIdentifier class. Declaration public MySqlIdentifier() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html",
    "title": "Class NestingMultiLineComment | FluentMigrator documentation",
    "keywords": "Class NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) Inheritance Object NestingMultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class NestingMultiLineComment : IRangeSearcher Constructors | Improve this Doc View Source NestingMultiLineComment() Initializes a new instance of the NestingMultiLineComment class. Declaration public NestingMultiLineComment() Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html",
    "title": "Class PoundSignSingleLineComment | FluentMigrator documentation",
    "keywords": "Class PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) Inheritance Object SingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class PoundSignSingleLineComment : SingleLineComment, IRangeSearcher Constructors | Improve this Doc View Source PoundSignSingleLineComment() Initializes a new instance of the PoundSignSingleLineComment class. Declaration public PoundSignSingleLineComment() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html",
    "title": "Class SingleLineComment | FluentMigrator documentation",
    "keywords": "Class SingleLineComment A single line comment starting with the specified start code Inheritance Object SingleLineComment DoubleDashSingleLineComment DoubleDashSingleLineComment DoubleSlashSingleLineComment PoundSignSingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SingleLineComment : IRangeSearcher Constructors | Improve this Doc View Source SingleLineComment(String) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode) Parameters Type Name Description String startCode The start code for the single line comment | Improve this Doc View Source SingleLineComment(String, Boolean) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode, bool onlyAtBeginningOfLine) Parameters Type Name Description String startCode The start code for the single line comment Boolean onlyAtBeginningOfLine Find the start code only at the beginning of the line Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html",
    "title": "Class SqlServerIdentifier | FluentMigrator documentation",
    "keywords": "Class SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) Inheritance Object CharWithEscapeByDuplication SqlServerIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlServerIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source SqlServerIdentifier() Initializes a new instance of the SqlServerIdentifier class. Declaration public SqlServerIdentifier() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html",
    "title": "Class SqlString | FluentMigrator documentation",
    "keywords": "Class SqlString A ANSI SQL string ( 'string' ) Inheritance Object CharWithEscapeByDuplication SqlString Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlString : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source SqlString() Initializes a new instance of the SqlString class. Declaration public SqlString() Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html",
    "title": "Class StringWithNoEscape | FluentMigrator documentation",
    "keywords": "Class StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ ) Inheritance Object StringWithNoEscape AnsiSqlIdentifier AnsiSqlIdentifier MultiLineComment MultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class StringWithNoEscape : IRangeSearcher Remarks Escaping is not supported. Constructors | Improve this Doc View Source StringWithNoEscape(String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startAndEndCode, bool isComment = false) Parameters Type Name Description String startAndEndCode The start- and end code string Boolean isComment Is this range a comment? | Improve this Doc View Source StringWithNoEscape(String, String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startCode, string endCode, bool isComment = false) Parameters Type Name Description String startCode The start code String endCode The end code Boolean isComment Is this range a comment? Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.Sources | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.Sources Classes LinesSource A ITextSource implementation that uses lines as input TextReaderSource A ITextSource implementation that uses a TextReader as source."
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html",
    "title": "Class LinesSource | FluentMigrator documentation",
    "keywords": "Class LinesSource A ITextSource implementation that uses lines as input Inheritance Object LinesSource Implements ITextSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class LinesSource : ITextSource Constructors | Improve this Doc View Source LinesSource(IEnumerable<String>) Initializes a new instance of the LinesSource class. Declaration public LinesSource(IEnumerable<string> batchSource) Parameters Type Name Description IEnumerable < String > batchSource The collection of lines to be used as source Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available Implements ITextSource"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html",
    "title": "Class TextReaderSource | FluentMigrator documentation",
    "keywords": "Class TextReaderSource A ITextSource implementation that uses a TextReader as source. Inheritance Object TextReaderSource Implements ITextSource IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class TextReaderSource : ITextSource, IDisposable Constructors | Improve this Doc View Source TextReaderSource(TextReader) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource(TextReader reader) Parameters Type Name Description TextReader reader The text reader to use Remarks This function doesn't take ownership of the reader . | Improve this Doc View Source TextReaderSource(TextReader, Boolean) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource(TextReader reader, bool takeOwnership) Parameters Type Name Description TextReader reader The text reader to use Boolean takeOwnership true when the TextReaderSource should become the owner of the reader Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements ITextSource System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html",
    "title": "Class SpecialTokenEventArgs | FluentMigrator documentation",
    "keywords": "Class SpecialTokenEventArgs Event arguments for a special token Inheritance Object EventArgs SpecialTokenEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenEventArgs : EventArgs Constructors | Improve this Doc View Source SpecialTokenEventArgs(String, Object) Initializes a new instance of the SpecialTokenEventArgs class. Declaration public SpecialTokenEventArgs(string token, object opaque) Parameters Type Name Description String token The found token Object opaque An opaque (token specific) value Properties | Improve this Doc View Source Opaque Gets an opaque (token specific) value Declaration public object Opaque { get; } Property Value Type Description Object | Improve this Doc View Source Token Gets the found token Declaration public string Token { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html",
    "title": "Class SpecialTokenInfo | FluentMigrator documentation",
    "keywords": "Class SpecialTokenInfo Provides special information about the found token Inheritance Object SpecialTokenInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenInfo Constructors | Improve this Doc View Source SpecialTokenInfo(Int32, Int32, String, Object) Initializes a new instance of the SpecialTokenInfo class. Declaration public SpecialTokenInfo(int index, int length, string token, object opaque = null) Parameters Type Name Description Int32 index The index to the first character that is assigned to the token Int32 length The content length that is assigned to the token String token The found token Object opaque An opaque (token specific) value Remarks The index may not point to the real token text and the length might be longer than the token itself. This is usually the case when the token should be the only text on the line, but is instead surrounded by whitespace. Properties | Improve this Doc View Source Index Gets the index to the first character that is assigned to the Token Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Length Gets the content length that is assigned to the Token Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Opaque Gets an opaque (token specific) value Declaration public object Opaque { get; } Property Value Type Description Object | Improve this Doc View Source Token Gets the found token Declaration public string Token { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html",
    "title": "Class GoSearcher.GoSearcherParameters | FluentMigrator documentation",
    "keywords": "Class GoSearcher.GoSearcherParameters Additional values for the GO token Inheritance Object GoSearcher.GoSearcherParameters Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcherParameters Properties | Improve this Doc View Source Count Gets the number of times the batch should be executed Declaration public int Count { get; } Property Value Type Description Int32"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html",
    "title": "Class GoSearcher | FluentMigrator documentation",
    "keywords": "Class GoSearcher Searches for a \"GO n\" or \"GO\" token Inheritance Object GoSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcher : ISpecialTokenSearcher Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found | Improve this Doc View Source GetGoCount(String) Declaration public static int? GetGoCount(string sql) Parameters Type Name Description String sql Returns Type Description Nullable < Int32 > Implements ISpecialTokenSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Classes GoSearcher Searches for a \"GO n\" or \"GO\" token GoSearcher.GoSearcherParameters Additional values for the GO token SemicolonSearcher Searches for a semicolon"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html",
    "title": "Class SemicolonSearcher | FluentMigrator documentation",
    "keywords": "Class SemicolonSearcher Searches for a semicolon Inheritance Object SemicolonSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SemicolonSearcher : ISpecialTokenSearcher Remarks This special token searcher might be used to separate SQL statements in a batch. Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found Implements ISpecialTokenSearcher"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html",
    "title": "Class SqlAnywhereBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlAnywhereBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SqlAnywhereBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlAnywhereBatchParser class. Declaration protected SqlAnywhereBatchParser(IEnumerable<IRangeSearcher> rangeSearchers, IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SqlAnywhereBatchParser(String) Initializes a new instance of the SqlAnywhereBatchParser class. Declaration public SqlAnywhereBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SqlBatchParser.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SqlBatchParser.html",
    "title": "Class SqlBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlBatchParser This is the base implementation of the SQL batch parser Inheritance Object SqlBatchParser SqlAnywhereBatchParser SqlAnywhereBatchParser SQLiteBatchParser SQLiteBatchParser SqlServerBatchParser SqlServerBatchParser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlBatchParser Constructors | Improve this Doc View Source SqlBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlBatchParser class. Declaration public SqlBatchParser(IEnumerable<IRangeSearcher> rangeSearchers, IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output Methods | Improve this Doc View Source OnSpecialToken(SpecialTokenEventArgs) Invokes the SpecialToken event Declaration protected virtual void OnSpecialToken(SpecialTokenEventArgs e) Parameters Type Name Description SpecialTokenEventArgs e The event arguments | Improve this Doc View Source OnSqlText(SqlTextEventArgs) Invokes the SqlText event Declaration protected virtual void OnSqlText(SqlTextEventArgs e) Parameters Type Name Description SqlTextEventArgs e The event arguments | Improve this Doc View Source Process(ITextSource, Boolean) Process the source Declaration public void Process(ITextSource source, bool stripComments = false) Parameters Type Name Description ITextSource source The source to process/parse for SQL statement batches Boolean stripComments true when the comments should be stripped Events | Improve this Doc View Source SpecialToken An event handler that is called when a special token was found Declaration public event EventHandler<SpecialTokenEventArgs> SpecialToken Event Type Type Description EventHandler < SpecialTokenEventArgs > | Improve this Doc View Source SqlText An event handler that is called when an SQL text was collected and is considered complete Declaration public event EventHandler<SqlTextEventArgs> SqlText Event Type Type Description EventHandler < SqlTextEventArgs >"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html",
    "title": "Class SQLiteBatchParser | FluentMigrator documentation",
    "keywords": "Class SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SQLiteBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SQLiteBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SQLiteBatchParser class. Declaration protected SQLiteBatchParser(IEnumerable<IRangeSearcher> rangeSearchers, IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SQLiteBatchParser(String) Initializes a new instance of the SQLiteBatchParser class. Declaration public SQLiteBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html",
    "title": "Class SqlServerBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlServerBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , SqlServerIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SqlServerBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlServerBatchParser class. Declaration protected SqlServerBatchParser(IEnumerable<IRangeSearcher> rangeSearchers, IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SqlServerBatchParser(String) Initializes a new instance of the SqlServerBatchParser class. Declaration public SqlServerBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/v3.x/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html": {
    "href": "api/v3.x/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html",
    "title": "Class SqlTextEventArgs | FluentMigrator documentation",
    "keywords": "Class SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Inheritance Object EventArgs SqlTextEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlTextEventArgs : EventArgs Constructors | Improve this Doc View Source SqlTextEventArgs(String) Initializes a new instance of the SqlTextEventArgs class. Declaration public SqlTextEventArgs(string sqlText) Parameters Type Name Description String sqlText The collected SQL text Properties | Improve this Doc View Source SqlText Gets the collected SQL text Declaration public string SqlText { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.CompatabilityMode.html": {
    "href": "api/v3.x/FluentMigrator.Runner.CompatabilityMode.html",
    "title": "Enum CompatabilityMode | FluentMigrator documentation",
    "keywords": "Enum CompatabilityMode The old compatibility mode Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete(\"Use CompatibilityMode instead\")] public enum CompatabilityMode Fields Name Description LOOSE Unsupported processor features are ignored STRICT Ensure that an exception gets thrown when a processor doesn't support a specific feature Extension Methods CompatabilityModeExtension.HandleCompatabilty(String)"
  },
  "api/v3.x/FluentMigrator.Runner.CompatibilityMode.html": {
    "href": "api/v3.x/FluentMigrator.Runner.CompatibilityMode.html",
    "title": "Enum CompatibilityMode | FluentMigrator documentation",
    "keywords": "Enum CompatibilityMode Sets the compatibility mode Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public enum CompatibilityMode Fields Name Description LOOSE Unsupported processor features are ignored STRICT Ensure that an exception gets thrown when a processor doesn't support a specific feature Extension Methods CompatibilityModeExtension.HandleCompatibilty(String)"
  },
  "api/v3.x/FluentMigrator.Runner.ConnectionlessVersionLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.ConnectionlessVersionLoader.html",
    "title": "Class ConnectionlessVersionLoader | FluentMigrator documentation",
    "keywords": "Class ConnectionlessVersionLoader Inheritance Object ConnectionlessVersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ConnectionlessVersionLoader : IVersionLoader Constructors | Improve this Doc View Source ConnectionlessVersionLoader(IProcessorAccessor, IMigrationRunnerConventions, IOptions<RunnerOptions>, IMigrationInformationLoader, IVersionTableMetaData) Declaration public ConnectionlessVersionLoader(IProcessorAccessor processorAccessor, IMigrationRunnerConventions conventions, IOptions<RunnerOptions> runnerOptions, IMigrationInformationLoader migrationInformationLoader, IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IProcessorAccessor processorAccessor IMigrationRunnerConventions conventions IOptions < RunnerOptions > runnerOptions IMigrationInformationLoader migrationInformationLoader IVersionTableMetaData versionTableMetaData Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source Assemblies Declaration [Obsolete] protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source Conventions Declaration public IMigrationRunnerConventions Conventions { get; set; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source Runner Declaration [Obsolete] public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source TargetVersion Declaration public long TargetVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration | Improve this Doc View Source VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; set; } Property Value Type Description IVersionTableMetaData | Improve this Doc View Source VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods | Improve this Doc View Source CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition | Improve this Doc View Source DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source GetVersionTableMetaData() Declaration public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData | Improve this Doc View Source LoadVersionInfo() Declaration public void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Declaration public void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/v3.x/FluentMigrator.Runner.ConsoleUtilities.html": {
    "href": "api/v3.x/FluentMigrator.Runner.ConsoleUtilities.html",
    "title": "Class ConsoleUtilities | FluentMigrator documentation",
    "keywords": "Class ConsoleUtilities Console helper methods Inheritance Object ConsoleUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class ConsoleUtilities Methods | Improve this Doc View Source AsEmphasize(Action) Changes the console color and calls the action Declaration public static void AsEmphasize(Action action) Parameters Type Name Description Action action Called after the console color has been set | Improve this Doc View Source AsError(Action) Changes the console color and calls the action Declaration public static void AsError(Action action) Parameters Type Name Description Action action Called after the console color has been set"
  },
  "api/v3.x/FluentMigrator.Runner.Constraints.CurrentVersionMigrationConstraintAttribute.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Constraints.CurrentVersionMigrationConstraintAttribute.html",
    "title": "Class CurrentVersionMigrationConstraintAttribute | FluentMigrator documentation",
    "keywords": "Class CurrentVersionMigrationConstraintAttribute Specifies minimum schema version against which this migration will be run. Inheritance Object Attribute MigrationConstraintAttribute CurrentVersionMigrationConstraintAttribute Implements _Attribute Inherited Members MigrationConstraintAttribute.ShouldRun(MigrationConstraintContext) Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Constraints Assembly : FluentMigrator.Runner.dll Syntax public class CurrentVersionMigrationConstraintAttribute : MigrationConstraintAttribute, _Attribute Constructors | Improve this Doc View Source CurrentVersionMigrationConstraintAttribute(Int64) Initializes a new instance of the CurrentVersionMigrationConstraintAttribute class. Declaration public CurrentVersionMigrationConstraintAttribute(long minimumVersionToRunAgainst) Parameters Type Name Description Int64 minimumVersionToRunAgainst The schema must equal or greater to this value for this migration to be run. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.Runner.Constraints.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Constraints.html",
    "title": "Namespace FluentMigrator.Runner.Constraints | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Constraints Classes CurrentVersionMigrationConstraintAttribute Specifies minimum schema version against which this migration will be run. MigrationConstraintAttribute Can be used to apply conditions when migrations will be run. MigrationConstraintContext Contextual information about the context in which runner will determinate whether a constrained Migration should be run."
  },
  "api/v3.x/FluentMigrator.Runner.Constraints.MigrationConstraintAttribute.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Constraints.MigrationConstraintAttribute.html",
    "title": "Class MigrationConstraintAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationConstraintAttribute Can be used to apply conditions when migrations will be run. Inheritance Object Attribute MigrationConstraintAttribute CurrentVersionMigrationConstraintAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Constraints Assembly : FluentMigrator.Runner.dll Syntax public class MigrationConstraintAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MigrationConstraintAttribute(Func<MigrationConstraintContext, Boolean>) Initializes a new instance of the MigrationConstraintAttribute class. Declaration public MigrationConstraintAttribute(Func<MigrationConstraintContext, bool> predicate) Parameters Type Name Description Func < MigrationConstraintContext , Boolean > predicate Predicate that determines whether this migration should be run in given context MigrationConstraintAttribute . Methods | Improve this Doc View Source ShouldRun(MigrationConstraintContext) Determines whether the migration having this attribute should be run under given context . Declaration public bool ShouldRun(MigrationConstraintContext context) Parameters Type Name Description MigrationConstraintContext context Contextual information that can be used to determine whether this migration should be run. Returns Type Description Boolean True if migration should be run under given context . Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.Runner.Constraints.MigrationConstraintContext.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Constraints.MigrationConstraintContext.html",
    "title": "Class MigrationConstraintContext | FluentMigrator documentation",
    "keywords": "Class MigrationConstraintContext Contextual information about the context in which runner will determinate whether a constrained Migration should be run. Inheritance Object MigrationConstraintContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Constraints Assembly : FluentMigrator.Runner.dll Syntax public class MigrationConstraintContext Properties | Improve this Doc View Source RunnerOptions Runner options under which current migration run is started Declaration public RunnerOptions RunnerOptions { get; set; } Property Value Type Description RunnerOptions | Improve this Doc View Source VersionInfo Provides information about the current state of target database Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo See Also MigrationConstraintAttribute"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.ConventionSet.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.ConventionSet.html",
    "title": "Class ConventionSet | FluentMigrator documentation",
    "keywords": "Class ConventionSet A convenience (empty) implementation of IConventionSet Inheritance Object ConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConventionSet : IConventionSet Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets or sets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; set; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets or sets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; set; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html",
    "title": "Class DefaultAutoNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultAutoNameConvention The default implementation of a IAutoNameConvention Inheritance Object DefaultAutoNameConvention Implements IAutoNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultAutoNameConvention : IAutoNameConvention Methods | Improve this Doc View Source Apply(IAutoNameExpression) Applies a convention to a IAutoNameExpression Declaration public IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression The expression this convention should be applied to Returns Type Description IAutoNameExpression The same or a new expression. The underlying type must stay the same. Implements IAutoNameConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html",
    "title": "Class DefaultConstraintNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultConstraintNameConvention The default implementation of a IConstraintConvention Inheritance Object DefaultConstraintNameConvention Implements IConstraintConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultConstraintNameConvention : IConstraintConvention Remarks It sets the default name of a constraint. Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. Implements IConstraintConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html",
    "title": "Class DefaultForeignKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention Inheritance Object DefaultForeignKeyNameConvention Implements IForeignKeyConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultForeignKeyNameConvention : IForeignKeyConvention Remarks It sets the default name of a foreign key. Methods | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html",
    "title": "Class DefaultIndexNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultIndexNameConvention The default implementation of a IIndexConvention Inheritance Object DefaultIndexNameConvention Implements IIndexConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultIndexNameConvention : IIndexConvention Remarks It sets the default name of an index. Methods | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. Implements IIndexConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html",
    "title": "Class DefaultPrimaryKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention Inheritance Object DefaultPrimaryKeyNameConvention Implements IColumnsConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultPrimaryKeyNameConvention : IColumnsConvention Remarks It sets the default constraint name of a primary key column. Methods | Improve this Doc View Source Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration public IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same. Implements IColumnsConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html",
    "title": "Class DefaultRootPathConvention | FluentMigrator documentation",
    "keywords": "Class DefaultRootPathConvention The default implementation of a IRootPathConvention Inheritance Object DefaultRootPathConvention Implements IRootPathConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultRootPathConvention : IRootPathConvention Remarks It sets the working directory, which is either the path given in the constructor or - when the given path is null - the current directory. Constructors | Improve this Doc View Source DefaultRootPathConvention(String) Initializes a new instance of the DefaultRootPathConvention class. Declaration public DefaultRootPathConvention(string rootPath) Parameters Type Name Description String rootPath The root path for expressions requiring file system access. Remarks When rootPath is null, then the current directory is returned Methods | Improve this Doc View Source Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration public IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same. Implements IRootPathConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html",
    "title": "Class DefaultSchemaConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaConvention The class handling the default schema name Inheritance Object DefaultSchemaConvention Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DefaultSchemaConvention : IForeignKeyConvention, IConstraintConvention, IIndexConvention, ISequenceConvention Remarks This class handles all ISchemaExpression and additionally implements other conventions that give access to schema names (e.g. IForeignKeyConvention ). Constructors | Improve this Doc View Source DefaultSchemaConvention() Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention() | Improve this Doc View Source DefaultSchemaConvention(IDefaultSchemaNameConvention) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(IDefaultSchemaNameConvention defaultSchemaNameConvention) Parameters Type Name Description IDefaultSchemaNameConvention defaultSchemaNameConvention The convention used to return the default schema name for a given original schema name. | Improve this Doc View Source DefaultSchemaConvention(String) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(ISchemaExpression) Applies a convention to a ISchemaExpression Declaration public ISchemaExpression Apply(ISchemaExpression expression) Parameters Type Name Description ISchemaExpression expression The expression this convention should be applied to Returns Type Description ISchemaExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration public ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html",
    "title": "Class DefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Inheritance Object DefaultSchemaNameConvention Implements IDefaultSchemaNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultSchemaNameConvention : IDefaultSchemaNameConvention Constructors | Improve this Doc View Source DefaultSchemaNameConvention(String) Initializes a new instance of the IDefaultSchemaNameConvention class. Declaration public DefaultSchemaNameConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name (can be null or empty) Methods | Improve this Doc View Source GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration public string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty Implements IDefaultSchemaNameConvention"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.html",
    "title": "Namespace FluentMigrator.Runner.Conventions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Conventions Classes ConventionSet A convenience (empty) implementation of IConventionSet DefaultAutoNameConvention The default implementation of a IAutoNameConvention DefaultConstraintNameConvention The default implementation of a IConstraintConvention DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention DefaultIndexNameConvention The default implementation of a IIndexConvention DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention DefaultRootPathConvention The default implementation of a IRootPathConvention DefaultSchemaConvention The class handling the default schema name DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Interfaces IAutoNameConvention A convention working on IAutoNameExpression implementations IColumnsConvention A convention working on IColumnsExpression implementations IConstraintConvention A convention working on IConstraintExpression implementations IConventionSet A set of conventions to be applied to expressions IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name IForeignKeyConvention A convention working on IForeignKeyExpression implementations IIndexConvention A convention working on IIndexExpression implementations IRootPathConvention A convention working on IFileSystemExpression implementations ISequenceConvention A convention working on ISequenceExpression implementations"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IAutoNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IAutoNameConvention.html",
    "title": "Interface IAutoNameConvention | FluentMigrator documentation",
    "keywords": "Interface IAutoNameConvention A convention working on IAutoNameExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAutoNameConvention Methods | Improve this Doc View Source Apply(IAutoNameExpression) Applies a convention to a IAutoNameExpression Declaration IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression The expression this convention should be applied to Returns Type Description IAutoNameExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IColumnsConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IColumnsConvention.html",
    "title": "Interface IColumnsConvention | FluentMigrator documentation",
    "keywords": "Interface IColumnsConvention A convention working on IColumnsExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumnsConvention Methods | Improve this Doc View Source Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IConstraintConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IConstraintConvention.html",
    "title": "Interface IConstraintConvention | FluentMigrator documentation",
    "keywords": "Interface IConstraintConvention A convention working on IConstraintExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConstraintConvention Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IConventionSet.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IConventionSet.html",
    "title": "Interface IConventionSet | FluentMigrator documentation",
    "keywords": "Interface IConventionSet A set of conventions to be applied to expressions Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConventionSet Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention >"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html",
    "title": "Interface IDefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Interface IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDefaultSchemaNameConvention Methods | Improve this Doc View Source GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty"
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html",
    "title": "Interface IForeignKeyConvention | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyConvention A convention working on IForeignKeyExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IForeignKeyConvention Methods | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IIndexConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IIndexConvention.html",
    "title": "Interface IIndexConvention | FluentMigrator documentation",
    "keywords": "Interface IIndexConvention A convention working on IIndexExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IIndexConvention Methods | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.IRootPathConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.IRootPathConvention.html",
    "title": "Interface IRootPathConvention | FluentMigrator documentation",
    "keywords": "Interface IRootPathConvention A convention working on IFileSystemExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRootPathConvention Methods | Improve this Doc View Source Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.Conventions.ISequenceConvention.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Conventions.ISequenceConvention.html",
    "title": "Interface ISequenceConvention | FluentMigrator documentation",
    "keywords": "Interface ISequenceConvention A convention working on ISequenceExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISequenceConvention Methods | Improve this Doc View Source Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/v3.x/FluentMigrator.Runner.ConventionSetExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.ConventionSetExtensions.html",
    "title": "Class ConventionSetExtensions | FluentMigrator documentation",
    "keywords": "Class ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. Inheritance Object ConventionSetExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class ConventionSetExtensions Methods | Improve this Doc View Source Apply(IEnumerable<IMigrationExpression>, IConventionSet) Applies all conventions in a conventionSet to the given expressions . Declaration public static IEnumerable<IMigrationExpression> Apply(this IEnumerable<IMigrationExpression> expressions, IConventionSet conventionSet) Parameters Type Name Description IEnumerable < IMigrationExpression > expressions The expression to apply the convention set to IConventionSet conventionSet The convention set to apply to the expressions Returns Type Description IEnumerable < IMigrationExpression > A sequence of expressions where the conventions have been applied to | Improve this Doc View Source Apply<T>(T, IConventionSet) Apply all conventions in a conventionSet to the given expression . Declaration public static T Apply<T>(this T expression, IConventionSet conventionSet) where T : IMigrationExpression Parameters Type Name Description T expression The expression to apply the conventionSet to IConventionSet conventionSet The convention set to apply to the expression Returns Type Description T The same or a new instance of the expression. The underlying type of the expression must not be changed. Type Parameters Name Description T The expression type, derived from IMigrationExpression"
  },
  "api/v3.x/FluentMigrator.Runner.Db2RunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Db2RunnerBuilderExtensions.html",
    "title": "Class Db2RunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class Db2RunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object Db2RunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Db2.dll Syntax public static class Db2RunnerBuilderExtensions Methods | Improve this Doc View Source AddDb2(IMigrationRunnerBuilder) Adds DB2 support (Linux and Windows server) Declaration public static IMigrationRunnerBuilder AddDb2(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the DB2-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddDb2ISeries(IMigrationRunnerBuilder) Adds DB2 iSeries support Declaration public static IMigrationRunnerBuilder AddDb2ISeries(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the DB2 iSeries-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.DefaultConventionSet.html": {
    "href": "api/v3.x/FluentMigrator.Runner.DefaultConventionSet.html",
    "title": "Class DefaultConventionSet | FluentMigrator documentation",
    "keywords": "Class DefaultConventionSet Inheritance Object DefaultConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultConventionSet : IConventionSet Constructors | Improve this Doc View Source DefaultConventionSet() Declaration public DefaultConventionSet() | Improve this Doc View Source DefaultConventionSet(IRunnerContext) Declaration [Obsolete] public DefaultConventionSet(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext | Improve this Doc View Source DefaultConventionSet(String, String) Declaration public DefaultConventionSet(string defaultSchemaName, string workingDirectory) Parameters Type Name Description String defaultSchemaName String workingDirectory Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/v3.x/FluentMigrator.Runner.DefaultMigrationInformationLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.DefaultMigrationInformationLoader.html",
    "title": "Class DefaultMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationInformationLoader Inheritance Object DefaultMigrationInformationLoader Implements IMigrationInformationLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultMigrationInformationLoader : IMigrationInformationLoader Constructors | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, Boolean, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, Boolean, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationSource, IOptionsSnapshot<TypeFilterOptions>, IMigrationRunnerConventions, IOptions<RunnerOptions>) Declaration public DefaultMigrationInformationLoader(IMigrationSource source, IOptionsSnapshot<TypeFilterOptions> filterOptions, IMigrationRunnerConventions conventions, IOptions<RunnerOptions> runnerOptions) Parameters Type Name Description IMigrationSource source IOptionsSnapshot < TypeFilterOptions > filterOptions IMigrationRunnerConventions conventions IOptions < RunnerOptions > runnerOptions Properties | Improve this Doc View Source Assemblies Declaration [Obsolete] public IAssemblyCollection Assemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source Conventions Declaration public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source LoadNestedNamespaces Declaration public bool LoadNestedNamespaces { get; } Property Value Type Description Boolean | Improve this Doc View Source Namespace Declaration public string Namespace { get; } Property Value Type Description String | Improve this Doc View Source TagsToMatch Declaration [Obsolete] public IEnumerable<string> TagsToMatch { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source LoadMigrations() Declaration public SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo > Implements IMigrationInformationLoader"
  },
  "api/v3.x/FluentMigrator.Runner.Exceptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Exceptions.html",
    "title": "Namespace FluentMigrator.Runner.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Exceptions Classes InvalidMigrationException MissingMigrationsException RunnerException VersionOrderInvalidException"
  },
  "api/v3.x/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html",
    "title": "Class InvalidMigrationException | FluentMigrator documentation",
    "keywords": "Class InvalidMigrationException Inheritance Object RunnerException InvalidMigrationException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class InvalidMigrationException : RunnerException Constructors | Improve this Doc View Source InvalidMigrationException(IMigration, String) Declaration public InvalidMigrationException(IMigration migration, string errors) Parameters Type Name Description IMigration migration String errors Properties | Improve this Doc View Source Message Declaration public override string Message { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html",
    "title": "Class MissingMigrationsException | FluentMigrator documentation",
    "keywords": "Class MissingMigrationsException Inheritance Object RunnerException MissingMigrationsException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class MissingMigrationsException : RunnerException Constructors | Improve this Doc View Source MissingMigrationsException() Declaration public MissingMigrationsException() | Improve this Doc View Source MissingMigrationsException(SerializationInfo, StreamingContext) Declaration public MissingMigrationsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source MissingMigrationsException(String) Declaration public MissingMigrationsException(string message) Parameters Type Name Description String message | Improve this Doc View Source MissingMigrationsException(String, Exception) Declaration public MissingMigrationsException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/v3.x/FluentMigrator.Runner.Exceptions.RunnerException.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Exceptions.RunnerException.html",
    "title": "Class RunnerException | FluentMigrator documentation",
    "keywords": "Class RunnerException Inheritance Object RunnerException InvalidMigrationException InvalidMigrationException MissingMigrationsException MissingMigrationsException VersionOrderInvalidException VersionOrderInvalidException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class RunnerException : FluentMigratorException Constructors | Improve this Doc View Source RunnerException() Declaration protected RunnerException() | Improve this Doc View Source RunnerException(SerializationInfo, StreamingContext) Declaration protected RunnerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source RunnerException(String) Declaration protected RunnerException(string message) Parameters Type Name Description String message | Improve this Doc View Source RunnerException(String, Exception) Declaration protected RunnerException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/v3.x/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html",
    "title": "Class VersionOrderInvalidException | FluentMigrator documentation",
    "keywords": "Class VersionOrderInvalidException Inheritance Object RunnerException VersionOrderInvalidException Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class VersionOrderInvalidException : RunnerException Constructors | Improve this Doc View Source VersionOrderInvalidException(IEnumerable<KeyValuePair<Int64, IMigrationInfo>>) Declaration public VersionOrderInvalidException(IEnumerable<KeyValuePair<long, IMigrationInfo>> invalidMigrations) Parameters Type Name Description IEnumerable < KeyValuePair < Int64 , IMigrationInfo >> invalidMigrations Properties | Improve this Doc View Source InvalidMigrations Declaration public IEnumerable<KeyValuePair<long, IMigrationInfo>> InvalidMigrations { get; set; } Property Value Type Description IEnumerable < KeyValuePair < Int64 , IMigrationInfo >> | Improve this Doc View Source InvalidVersions Declaration public IEnumerable<long> InvalidVersions { get; } Property Value Type Description IEnumerable < Int64 > | Improve this Doc View Source Message Declaration public override string Message { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Extensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Extensions.html",
    "title": "Namespace FluentMigrator.Runner.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Extensions Classes TagsExtensions TypeExtensions"
  },
  "api/v3.x/FluentMigrator.Runner.Extensions.TagsExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Extensions.TagsExtensions.html",
    "title": "Class TagsExtensions | FluentMigrator documentation",
    "keywords": "Class TagsExtensions Inheritance Object TagsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TagsExtensions Methods | Improve this Doc View Source ToTags(String) Declaration public static List<string> ToTags(this string tags) Parameters Type Name Description String tags Returns Type Description List < String >"
  },
  "api/v3.x/FluentMigrator.Runner.Extensions.TypeExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | FluentMigrator documentation",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source Is<T>(Type) Declaration public static bool Is<T>(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source IsConcrete(Type) Declaration public static bool IsConcrete(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.FirebirdRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.FirebirdRunnerBuilderExtensions.html",
    "title": "Class FirebirdRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class FirebirdRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object FirebirdRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Firebird.dll Syntax public static class FirebirdRunnerBuilderExtensions Methods | Improve this Doc View Source AddFirebird(IMigrationRunnerBuilder) Adds Firebird support Declaration public static IMigrationRunnerBuilder AddFirebird(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Firebird-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddFirebird(IMigrationRunnerBuilder, FirebirdOptions) Adds Firebird support Declaration public static IMigrationRunnerBuilder AddFirebird(this IMigrationRunnerBuilder builder, FirebirdOptions fbOptions) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Firebird-specific services to FirebirdOptions fbOptions Firebird options Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.FluentMigratorLoggerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.FluentMigratorLoggerOptions.html",
    "title": "Class FluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLoggerOptions Options for the FluentMigratorLogger Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public class FluentMigratorLoggerOptions Properties | Improve this Doc View Source ShowElapsedTime Gets or sets a value indicating whether the elapsed time should be shown Declaration public bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Gets or sets a value indicating whether SQL statements should be shown Declaration public bool ShowSql { get; set; } Property Value Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.FluentMigratorLoggingExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.FluentMigratorLoggingExtensions.html",
    "title": "Class FluentMigratorLoggingExtensions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLoggingExtensions Extension methods for and Inheritance Object FluentMigratorLoggingExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public static class FluentMigratorLoggingExtensions Methods | Improve this Doc View Source AddFluentMigratorConsole(ILoggerFactory) Adds the default FluentMigrator console logger Declaration public static ILoggerFactory AddFluentMigratorConsole(this ILoggerFactory loggerFactory) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory Returns Type Description ILoggerFactory The same logger factory | Improve this Doc View Source AddFluentMigratorConsole(ILoggerFactory, FluentMigratorLoggerOptions) Adds the default FluentMigrator console logger Declaration public static ILoggerFactory AddFluentMigratorConsole(this ILoggerFactory loggerFactory, FluentMigratorLoggerOptions options) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory FluentMigratorLoggerOptions options The logger options Returns Type Description ILoggerFactory The same logger factory | Improve this Doc View Source AddFluentMigratorConsole(ILoggingBuilder) Adds the default FluentMigrator console logger Declaration public static ILoggingBuilder AddFluentMigratorConsole(this ILoggingBuilder loggingBuilder) Parameters Type Name Description ILoggingBuilder loggingBuilder The logging builder Returns Type Description ILoggingBuilder The same logging builder"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Base.ColumnBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Base.ColumnBase.html",
    "title": "Class ColumnBase | FluentMigrator documentation",
    "keywords": "Class ColumnBase The base class for column definitions Inheritance Object ColumnBase Implements IColumn Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ColumnBase : IColumn Constructors | Improve this Doc View Source ColumnBase(ITypeMap, IQuoter) Initializes a new instance of the ColumnBase class. Declaration protected ColumnBase(ITypeMap typeMap, IQuoter quoter) Parameters Type Name Description ITypeMap typeMap The type map IQuoter quoter The quoter Properties | Improve this Doc View Source ClauseOrder Gets or sets the clause order Declaration protected IList<Func<ColumnDefinition, string>> ClauseOrder { get; set; } Property Value Type Description IList < Func < ColumnDefinition , String >> | Improve this Doc View Source ForeignKeyConstraint The default foreign key constraint format Declaration public virtual string ForeignKeyConstraint { get; } Property Value Type Description String | Improve this Doc View Source Quoter Gets the quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source AddPrimaryKeyConstraint(String, IEnumerable<ColumnDefinition>) Creates the primary key constraint SQL fragment Declaration public virtual string AddPrimaryKeyConstraint(string tableName, IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description String tableName The table name IEnumerable < ColumnDefinition > primaryKeyColumns The primary key column definitions Returns Type Description String The SQL fragment | Improve this Doc View Source FormatCascade(String, Rule) Formats the foreign key cascading SQL fragment Declaration public virtual string FormatCascade(string onWhat, Rule rule) Parameters Type Name Description String onWhat The action this cascade clause applies to (update or delete) Rule rule The cascade rule Returns Type Description String The formatted SQL fragment | Improve this Doc View Source FormatCollation(ColumnDefinition) Formats the collation of a text column Declaration protected virtual string FormatCollation(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source FormatDefaultValue(ColumnDefinition) Formats the column default value Declaration protected virtual string FormatDefaultValue(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted column default value | Improve this Doc View Source FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Formats the foreign key SQL fragment optionally using a custom foreign key name generator Declaration public virtual string FormatForeignKey(ForeignKeyDefinition foreignKey, Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Func < ForeignKeyDefinition , String > fkNameGeneration The custom foreign key name generator Returns Type Description String The SQL fragment | Improve this Doc View Source FormatIdentity(ColumnDefinition) Formats the identity SQL fragment Declaration protected abstract string FormatIdentity(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted identity SQL fragment | Improve this Doc View Source FormatNullable(ColumnDefinition) Formats the (not) null constraint Declaration protected virtual string FormatNullable(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted (not) null constraint | Improve this Doc View Source FormatPrimaryKey(ColumnDefinition) Formats the primary key constraint directly attached to the column Declaration protected virtual string FormatPrimaryKey(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The primary key constraint SQL fragment | Improve this Doc View Source FormatString(ColumnDefinition) Formats the column name Declaration public virtual string FormatString(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The (probably) quoted column name | Improve this Doc View Source FormatType(ColumnDefinition) Formats the column type Declaration protected virtual string FormatType(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted column type | Improve this Doc View Source Generate(ColumnDefinition) Generates the complete column definition SQL fragment Declaration public virtual string Generate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(IEnumerable<ColumnDefinition>, String) Generate the SQL fragment for all column definitions Declaration public virtual string Generate(IEnumerable<ColumnDefinition> columns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns The column definitions String tableName The table name Returns Type Description String The SQL fragment | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Generates the default foreign key name Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Returns Type Description String The SQL fragment | Improve this Doc View Source GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition>, String) Gets the name of the primary key constraint. Some Generators may need to override if the constraint name is limited Declaration protected virtual string GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition> primaryKeyColumns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns The primary key columns String tableName The table name Returns Type Description String The constraint clause | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Gets the formatted type from the type map Declaration [Obsolete] protected string GetTypeMap(DbType value, int size, int precision) Parameters Type Name Description DbType value The database type Int32 size The size (or precision) Int32 precision The precision (or scale) Returns Type Description String The formatted column type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Gets the formatted type from the type map Declaration protected string GetTypeMap(DbType value, int? size, int? precision) Parameters Type Name Description DbType value The database type Nullable < Int32 > size The size (or precision) Nullable < Int32 > precision The precision (or scale) Returns Type Description String The formatted column type | Improve this Doc View Source ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition>) Returns a value indicating whether the primary key constraint should be added separately Declaration public virtual bool ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns The primary key column definitions Returns Type Description Boolean true when the primary key constraint should be added separately Implements IColumn"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Base.GeneratorBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Base.GeneratorBase.html",
    "title": "Class GeneratorBase | FluentMigrator documentation",
    "keywords": "Class GeneratorBase Inheritance Object GeneratorBase GenericGenerator GenericGenerator Implements IMigrationGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GeneratorBase : IMigrationGenerator Constructors | Improve this Doc View Source GeneratorBase(IColumn, IQuoter, IDescriptionGenerator) Declaration public GeneratorBase(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties | Improve this Doc View Source Column Declaration protected IColumn Column { get; } Property Value Type Description IColumn | Improve this Doc View Source DescriptionGenerator Declaration protected IDescriptionGenerator DescriptionGenerator { get; } Property Value Type Description IDescriptionGenerator | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public abstract string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public abstract string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public abstract string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public virtual string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public abstract string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public abstract string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public abstract string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public abstract string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public abstract string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public abstract string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public abstract string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public abstract string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public abstract string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public abstract string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public abstract string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public abstract string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public abstract string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public abstract string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public abstract string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public abstract string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public abstract string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public abstract string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public abstract string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public abstract string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public virtual bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Base.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Base.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Base | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Base Classes ColumnBase The base class for column definitions GeneratorBase TypeMapBase"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Base.TypeMapBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Base.TypeMapBase.html",
    "title": "Class TypeMapBase | FluentMigrator documentation",
    "keywords": "Class TypeMapBase Inheritance Object TypeMapBase OracleTypeMap OracleTypeMap SqlAnywhere16TypeMap SqlAnywhere16TypeMap SqlServer2000TypeMap SqlServer2000TypeMap Implements ITypeMap Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class TypeMapBase : ITypeMap Constructors | Improve this Doc View Source TypeMapBase() Declaration protected TypeMapBase() Fields | Improve this Doc View Source PrecisionPlaceholder Declaration protected const string PrecisionPlaceholder = \"$precision\" Field Value Type Description String Methods | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Get the SQL type for a DbType Declaration [Obsolete] public virtual string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Int32 size The requested size (in DB lingua: precision) Int32 precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Get the SQL type for a DbType Declaration public virtual string GetTypeMap(DbType type, int? size, int? precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Nullable < Int32 > size The requested size (in DB lingua: precision) Nullable < Int32 > precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source SetTypeMap(DbType, String) Declaration protected void SetTypeMap(DbType type, string template) Parameters Type Name Description DbType type String template | Improve this Doc View Source SetTypeMap(DbType, String, Int32) Declaration protected void SetTypeMap(DbType type, string template, int maxSize) Parameters Type Name Description DbType type String template Int32 maxSize | Improve this Doc View Source SetupTypeMaps() Declaration protected abstract void SetupTypeMaps() Implements ITypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html",
    "title": "Class CompatabilityModeExtension | FluentMigrator documentation",
    "keywords": "Class CompatabilityModeExtension Inheritance Object CompatabilityModeExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public static class CompatabilityModeExtension Methods | Improve this Doc View Source HandleCompatabilty(CompatabilityMode, String) Declaration [Obsolete] public static string HandleCompatabilty(this CompatabilityMode mode, string message) Parameters Type Name Description CompatabilityMode mode String message Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.CompatibilityModeExtension.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.CompatibilityModeExtension.html",
    "title": "Class CompatibilityModeExtension | FluentMigrator documentation",
    "keywords": "Class CompatibilityModeExtension Extension methods for CompatibilityMode Inheritance Object CompatibilityModeExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public static class CompatibilityModeExtension Methods | Improve this Doc View Source HandleCompatibilty(CompatibilityMode, String) Handles unsupported generator features according to a compatibility mode. Declaration public static string HandleCompatibilty(this CompatibilityMode mode, string message) Parameters Type Name Description CompatibilityMode mode The compatibility modee String message The exception message (if any gets thrown) Returns Type Description String The string to be returned (if no exception was thrown) Exceptions Type Condition DatabaseOperationNotSupportedException The exception to be thrown"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.Db2Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.Db2Generator.html",
    "title": "Class Db2Generator | FluentMigrator documentation",
    "keywords": "Class Db2Generator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Generator : GenericGenerator Constructors | Improve this Doc View Source Db2Generator() Declaration public Db2Generator() | Improve this Doc View Source Db2Generator(Db2Quoter) Declaration public Db2Generator(Db2Quoter quoter) Parameters Type Name Description Db2Quoter quoter | Improve this Doc View Source Db2Generator(Db2Quoter, IOptions<GeneratorOptions>) Declaration public Db2Generator(Db2Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description Db2Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(Expressions.AlterColumnExpression) Declaration public override string Generate(Expressions.AlterColumnExpression expression) Parameters Type Name Description Expressions.AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.AlterDefaultConstraintExpression) Declaration public override string Generate(Expressions.AlterDefaultConstraintExpression expression) Parameters Type Name Description Expressions.AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.AlterSchemaExpression) Declaration public override string Generate(Expressions.AlterSchemaExpression expression) Parameters Type Name Description Expressions.AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateColumnExpression) Declaration public override string Generate(Expressions.CreateColumnExpression expression) Parameters Type Name Description Expressions.CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateConstraintExpression) Declaration public override string Generate(Expressions.CreateConstraintExpression expression) Parameters Type Name Description Expressions.CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateForeignKeyExpression) Declaration public override string Generate(Expressions.CreateForeignKeyExpression expression) Parameters Type Name Description Expressions.CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateIndexExpression) Declaration public override string Generate(Expressions.CreateIndexExpression expression) Parameters Type Name Description Expressions.CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateSchemaExpression) Declaration public override string Generate(Expressions.CreateSchemaExpression expression) Parameters Type Name Description Expressions.CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.CreateTableExpression) Declaration public override string Generate(Expressions.CreateTableExpression expression) Parameters Type Name Description Expressions.CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteColumnExpression) Declaration public override string Generate(Expressions.DeleteColumnExpression expression) Parameters Type Name Description Expressions.DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteConstraintExpression) Declaration public override string Generate(Expressions.DeleteConstraintExpression expression) Parameters Type Name Description Expressions.DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteDataExpression) Declaration public override string Generate(Expressions.DeleteDataExpression expression) Parameters Type Name Description Expressions.DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteDefaultConstraintExpression) Declaration public override string Generate(Expressions.DeleteDefaultConstraintExpression expression) Parameters Type Name Description Expressions.DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteForeignKeyExpression) Declaration public override string Generate(Expressions.DeleteForeignKeyExpression expression) Parameters Type Name Description Expressions.DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteIndexExpression) Declaration public override string Generate(Expressions.DeleteIndexExpression expression) Parameters Type Name Description Expressions.DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteSchemaExpression) Declaration public override string Generate(Expressions.DeleteSchemaExpression expression) Parameters Type Name Description Expressions.DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteTableExpression) Declaration public override string Generate(Expressions.DeleteTableExpression expression) Parameters Type Name Description Expressions.DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.InsertDataExpression) Declaration public override string Generate(Expressions.InsertDataExpression expression) Parameters Type Name Description Expressions.InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.RenameColumnExpression) Declaration public override string Generate(Expressions.RenameColumnExpression expression) Parameters Type Name Description Expressions.RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.RenameTableExpression) Declaration public override string Generate(Expressions.RenameTableExpression expression) Parameters Type Name Description Expressions.RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.UpdateDataExpression) Declaration public override string Generate(Expressions.UpdateDataExpression expression) Parameters Type Name Description Expressions.UpdateDataExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html",
    "title": "Class Db2Quoter | FluentMigrator documentation",
    "keywords": "Class Db2Quoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Db2ISeriesQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Quoter : GenericQuoter, IQuoter Fields | Improve this Doc View Source SpecialChars Declaration public readonly char[] SpecialChars Field Value Type Description Char [] Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) | Improve this Doc View Source ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2 Classes Db2Generator Db2Quoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html",
    "title": "Class Db2ISeriesGenerator | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members Db2Generator.Generate(Expressions.AlterDefaultConstraintExpression) Db2Generator.Generate(Expressions.DeleteDefaultConstraintExpression) Db2Generator.Generate(Expressions.RenameTableExpression) Db2Generator.Generate(Expressions.DeleteColumnExpression) Db2Generator.Generate(Expressions.CreateColumnExpression) Db2Generator.Generate(Expressions.CreateForeignKeyExpression) Db2Generator.Generate(Expressions.CreateConstraintExpression) Db2Generator.Generate(Expressions.CreateIndexExpression) Db2Generator.Generate(Expressions.CreateSchemaExpression) Db2Generator.Generate(Expressions.DeleteTableExpression) Db2Generator.Generate(Expressions.DeleteIndexExpression) Db2Generator.Generate(Expressions.DeleteSchemaExpression) Db2Generator.Generate(Expressions.DeleteConstraintExpression) Db2Generator.Generate(Expressions.DeleteForeignKeyExpression) Db2Generator.Generate(Expressions.DeleteDataExpression) Db2Generator.Generate(Expressions.RenameColumnExpression) Db2Generator.Generate(Expressions.InsertDataExpression) Db2Generator.Generate(Expressions.UpdateDataExpression) Db2Generator.Generate(Expressions.CreateTableExpression) Db2Generator.Generate(Expressions.AlterColumnExpression) Db2Generator.Generate(Expressions.AlterSchemaExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesGenerator : Db2Generator Constructors | Improve this Doc View Source Db2ISeriesGenerator() Declaration public Db2ISeriesGenerator() | Improve this Doc View Source Db2ISeriesGenerator(Db2ISeriesQuoter) Declaration public Db2ISeriesGenerator(Db2ISeriesQuoter quoter) Parameters Type Name Description Db2ISeriesQuoter quoter | Improve this Doc View Source Db2ISeriesGenerator(Db2ISeriesQuoter, IOptions<GeneratorOptions>) Declaration public Db2ISeriesGenerator(Db2ISeriesQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description Db2ISeriesQuoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html",
    "title": "Class Db2ISeriesQuoter | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesQuoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Implements IQuoter Inherited Members Db2Quoter.SpecialChars Db2Quoter.FormatDateTime(DateTime) Db2Quoter.ShouldQuote(String) Db2Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesQuoter : Db2Quoter, IQuoter Methods | Improve this Doc View Source QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides Db2Quoter.QuoteIndexName(String, String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries Classes Db2ISeriesGenerator Db2ISeriesQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html",
    "title": "Class EmptyDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class EmptyDescriptionGenerator Inheritance Object EmptyDescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class EmptyDescriptionGenerator : IDescriptionGenerator Methods | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration public string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration public IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html",
    "title": "Class FirebirdGenerator | FluentMigrator documentation",
    "keywords": "Class FirebirdGenerator Inheritance Object GeneratorBase GenericGenerator FirebirdGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdGenerator : GenericGenerator Constructors | Improve this Doc View Source FirebirdGenerator(FirebirdQuoter, FirebirdOptions, IOptions<GeneratorOptions>) Declaration public FirebirdGenerator(FirebirdQuoter quoter, FirebirdOptions fbOptions, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description FirebirdQuoter quoter FirebirdOptions fbOptions IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source FirebirdGenerator(FirebirdOptions) Declaration public FirebirdGenerator(FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions | Improve this Doc View Source FirebirdGenerator(FirebirdOptions, IOptions<GeneratorOptions>) Declaration public FirebirdGenerator(FirebirdOptions fbOptions, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description FirebirdOptions fbOptions IOptions < GeneratorOptions > generatorOptions Fields | Improve this Doc View Source truncator Declaration [Obsolete(\"Use the Truncator property\")] protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumnSetNullable3 ALTER TABLE table_name ALTER column_name { DROP | SET } [NOT] NULL Declaration public string AlterColumnSetNullable3 { get; } Property Value Type Description String | Improve this Doc View Source AlterColumnSetNullablePre3 Declaration public string AlterColumnSetNullablePre3 { get; } Property Value Type Description String | Improve this Doc View Source AlterColumnSetType Declaration public string AlterColumnSetType { get; } Property Value Type Description String | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source FBOptions Declaration protected FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source Truncator Declaration public FirebirdTruncator Truncator { get; } Property Value Type Description FirebirdTruncator Methods | Improve this Doc View Source ColumnTypesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool ColumnTypesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean | Improve this Doc View Source DefaultValuesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool DefaultValuesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String | Improve this Doc View Source GenerateAlterSequence(SequenceDefinition) Declaration public string GenerateAlterSequence(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence Returns Type Description String | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Declaration public override string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String | Improve this Doc View Source GenerateSetNull3(String, ColumnDefinition) Declaration public virtual string GenerateSetNull3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String | Improve this Doc View Source GenerateSetNullPre3(String, ColumnDefinition) Declaration public virtual string GenerateSetNullPre3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String | Improve this Doc View Source GenerateSetType(String, ColumnDefinition) Declaration public virtual string GenerateSetType(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html",
    "title": "Class FirebirdQuoter | FluentMigrator documentation",
    "keywords": "Class FirebirdQuoter Inheritance Object GenericQuoter FirebirdQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdQuoter : GenericQuoter, IQuoter Constructors | Improve this Doc View Source FirebirdQuoter(FirebirdOptions) Initializes a new instance of the FirebirdQuoter class. Declaration public FirebirdQuoter(FirebirdOptions options) Parameters Type Name Description FirebirdOptions options The firebird specific options | Improve this Doc View Source FirebirdQuoter(Boolean) Declaration public FirebirdQuoter(bool forceQuote) Parameters Type Name Description Boolean forceQuote Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) | Improve this Doc View Source ToFbObjectName(String) Declaration public string ToFbObjectName(string objName) Parameters Type Name Description String objName Returns Type Description String Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html",
    "title": "Class FirebirdTruncator | FluentMigrator documentation",
    "keywords": "Class FirebirdTruncator Inheritance Object FirebirdTruncator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdTruncator Constructors | Improve this Doc View Source FirebirdTruncator(Boolean, Boolean) Declaration public FirebirdTruncator(bool enabled, bool packKeyNames) Parameters Type Name Description Boolean enabled Boolean packKeyNames Methods | Improve this Doc View Source Pack(String) Declaration public string Pack(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source Truncate(AlterColumnExpression) Declaration public void Truncate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Truncate(AlterDefaultConstraintExpression) Declaration public void Truncate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Truncate(AlterSchemaExpression) Declaration public void Truncate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Truncate(AlterTableExpression) Declaration public void Truncate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Truncate(ColumnDefinition) Declaration public void Truncate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column | Improve this Doc View Source Truncate(ConstraintDefinition) Declaration public void Truncate(ConstraintDefinition constraint) Parameters Type Name Description ConstraintDefinition constraint | Improve this Doc View Source Truncate(CreateColumnExpression) Declaration public void Truncate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Truncate(CreateConstraintExpression) Declaration public void Truncate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Truncate(CreateForeignKeyExpression) Declaration public void Truncate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Truncate(CreateIndexExpression) Declaration public void Truncate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Truncate(CreateSchemaExpression) Declaration public void Truncate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Truncate(CreateSequenceExpression) Declaration public void Truncate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Truncate(CreateTableExpression) Declaration public void Truncate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Truncate(DeleteColumnExpression) Declaration public void Truncate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Truncate(DeleteConstraintExpression) Declaration public void Truncate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Truncate(DeleteDataExpression) Declaration public void Truncate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Truncate(DeleteDefaultConstraintExpression) Declaration public void Truncate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Truncate(DeleteForeignKeyExpression) Declaration public void Truncate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Truncate(DeleteIndexExpression) Declaration public void Truncate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Truncate(DeleteSchemaExpression) Declaration public void Truncate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Truncate(DeleteSequenceExpression) Declaration public void Truncate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Truncate(DeleteTableExpression) Declaration public void Truncate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Truncate(ForeignKeyDefinition) Declaration public void Truncate(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey | Improve this Doc View Source Truncate(IndexDefinition) Declaration public void Truncate(IndexDefinition index) Parameters Type Name Description IndexDefinition index | Improve this Doc View Source Truncate(InsertDataExpression) Declaration public void Truncate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Truncate(RenameColumnExpression) Declaration public void Truncate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Truncate(RenameTableExpression) Declaration public void Truncate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Truncate(SequenceDefinition) Declaration public void Truncate(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence | Improve this Doc View Source Truncate(String) Declaration public string Truncate(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source Truncate(UpdateDataExpression) Declaration public void Truncate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source TruncateColumns(ICollection<ColumnDefinition>) Declaration public void TruncateColumns(ICollection<ColumnDefinition> columns) Parameters Type Name Description ICollection < ColumnDefinition > columns | Improve this Doc View Source TruncateNames(ICollection<String>) Declaration public ICollection<string> TruncateNames(ICollection<string> names) Parameters Type Name Description ICollection < String > names Returns Type Description ICollection < String >"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Firebird.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Firebird Classes FirebirdGenerator FirebirdQuoter FirebirdTruncator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.GeneratorOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.GeneratorOptions.html",
    "title": "Class GeneratorOptions | FluentMigrator documentation",
    "keywords": "Class GeneratorOptions Options for IMigrationGenerator implementations Inheritance Object GeneratorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class GeneratorOptions Properties | Improve this Doc View Source CompatibilityMode Gets or sets the compatibility mode Declaration public CompatibilityMode? CompatibilityMode { get; set; } Property Value Type Description Nullable < CompatibilityMode >"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html",
    "title": "Class GenericDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class GenericDescriptionGenerator Base class to generate descriptions for tables/classes Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator HanaDescriptionGenerator OracleDescriptionGenerator OracleDescriptionGenerator PostgresDescriptionGenerator PostgresDescriptionGenerator RedshiftDescriptionGenerator RedshiftDescriptionGenerator SqlServer2005DescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericDescriptionGenerator : IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected abstract string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public virtual string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public virtual string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration public virtual string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration public virtual IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected abstract string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html",
    "title": "Class GenericGenerator | FluentMigrator documentation",
    "keywords": "Class GenericGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2Generator FirebirdGenerator FirebirdGenerator HanaGenerator HanaGenerator JetGenerator JetGenerator MySql4Generator MySql4Generator OracleGenerator OracleGenerator PostgresGenerator PostgresGenerator RedshiftGenerator RedshiftGenerator SqlAnywhere16Generator SqlAnywhere16Generator SQLiteGenerator SQLiteGenerator SqlServer2000Generator SqlServer2000Generator Implements IMigrationGenerator Inherited Members GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericGenerator : GeneratorBase, IMigrationGenerator Constructors | Improve this Doc View Source GenericGenerator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected GenericGenerator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions Fields | Improve this Doc View Source compatabilityMode Declaration [Obsolete(\"Use the CompatibilityMode property\")] public CompatabilityMode compatabilityMode Field Value Type Description CompatabilityMode Properties | Improve this Doc View Source AddColumn Declaration public virtual string AddColumn { get; } Property Value Type Description String | Improve this Doc View Source AlterColumn Declaration public virtual string AlterColumn { get; } Property Value Type Description String | Improve this Doc View Source AlterSchema Declaration public virtual string AlterSchema { get; } Property Value Type Description String | Improve this Doc View Source CompatibilityMode Declaration public CompatibilityMode CompatibilityMode { get; set; } Property Value Type Description CompatibilityMode | Improve this Doc View Source CreateConstraint Declaration public virtual string CreateConstraint { get; } Property Value Type Description String | Improve this Doc View Source CreateForeignKeyConstraint Declaration public virtual string CreateForeignKeyConstraint { get; } Property Value Type Description String | Improve this Doc View Source CreateIndex Declaration public virtual string CreateIndex { get; } Property Value Type Description String | Improve this Doc View Source CreateSchema Declaration public virtual string CreateSchema { get; } Property Value Type Description String | Improve this Doc View Source CreateTable Declaration public virtual string CreateTable { get; } Property Value Type Description String | Improve this Doc View Source DeleteConstraint Declaration public virtual string DeleteConstraint { get; } Property Value Type Description String | Improve this Doc View Source DeleteData Declaration public virtual string DeleteData { get; } Property Value Type Description String | Improve this Doc View Source DropColumn Declaration public virtual string DropColumn { get; } Property Value Type Description String | Improve this Doc View Source DropIndex Declaration public virtual string DropIndex { get; } Property Value Type Description String | Improve this Doc View Source DropSchema Declaration public virtual string DropSchema { get; } Property Value Type Description String | Improve this Doc View Source DropTable Declaration public virtual string DropTable { get; } Property Value Type Description String | Improve this Doc View Source InsertData Declaration public virtual string InsertData { get; } Property Value Type Description String | Improve this Doc View Source RenameColumn Declaration public virtual string RenameColumn { get; } Property Value Type Description String | Improve this Doc View Source RenameTable Declaration public virtual string RenameTable { get; } Property Value Type Description String | Improve this Doc View Source UpdateData Declaration public virtual string UpdateData { get; } Property Value Type Description String Methods | Improve this Doc View Source AppendSqlStatementEndToken(StringBuilder) Declaration protected virtual StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Outputs a create table string Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(UpdateDataExpression) | Improve this Doc View Source GenerateColumnNamesAndValues(InsertDataExpression) Declaration protected List<KeyValuePair<string, string>> GenerateColumnNamesAndValues(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description List < KeyValuePair < String , String >> | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public virtual string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetUniqueString(CreateIndexExpression) Declaration public virtual string GetUniqueString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) Declaration protected string ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<string, object>> features) Parameters Type Name Description IEnumerable < KeyValuePair < String , Object >> features Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html",
    "title": "Class GenericQuoter | FluentMigrator documentation",
    "keywords": "Class GenericQuoter Inheritance Object GenericQuoter Db2Quoter Db2Quoter FirebirdQuoter FirebirdQuoter HanaQuoter HanaQuoter JetQuoter JetQuoter MySqlQuoter MySqlQuoter OracleQuoterBase OracleQuoterQuotedIdentifier PostgresQuoter PostgresQuoter RedshiftQuoter RedshiftQuoter SqlAnywhereQuoter SqlAnywhereQuoter SQLiteQuoter SQLiteQuoter SqlServer2000Quoter SqlServer2000Quoter Implements IQuoter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public class GenericQuoter : IQuoter Properties | Improve this Doc View Source CloseQuote Returns the closing quote identifier - \" is the standard according to the specification Declaration public virtual string CloseQuote { get; } Property Value Type Description String | Improve this Doc View Source CloseQuoteEscapeString Declaration public virtual string CloseQuoteEscapeString { get; } Property Value Type Description String | Improve this Doc View Source EscapeValueQuote Declaration public virtual string EscapeValueQuote { get; } Property Value Type Description String | Improve this Doc View Source IdentifierSeparator Gets the separator between identifiers (e.g. the dot between SCHEMA.TABLENAME) Declaration public virtual string IdentifierSeparator { get; } Property Value Type Description String | Improve this Doc View Source OpenQuote Returns the opening quote identifier - \" is the standard according to the specification Declaration public virtual string OpenQuote { get; } Property Value Type Description String | Improve this Doc View Source OpenQuoteEscapeString Declaration public virtual string OpenQuoteEscapeString { get; } Property Value Type Description String | Improve this Doc View Source ValueQuote Declaration public virtual string ValueQuote { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateSchemaPrefixedQuotedIdentifier(String, String) Declaration protected virtual string CreateSchemaPrefixedQuotedIdentifier(string quotedSchemaName, string quotedIdentifier) Parameters Type Name Description String quotedSchemaName String quotedIdentifier Returns Type Description String | Improve this Doc View Source FormatAnsiString(String) Declaration public virtual string FormatAnsiString(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source FormatBool(Boolean) Declaration public virtual string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected virtual string FormatByteArray(byte[] value) Parameters Type Name Description Byte [] value Returns Type Description String | Improve this Doc View Source FormatChar(Char) Declaration public virtual string FormatChar(char value) Parameters Type Name Description Char value Returns Type Description String | Improve this Doc View Source FormatDateTime(DateTime) Declaration public virtual string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String | Improve this Doc View Source FormatDateTimeOffset(DateTimeOffset) Declaration public virtual string FormatDateTimeOffset(DateTimeOffset value) Parameters Type Name Description DateTimeOffset value Returns Type Description String | Improve this Doc View Source FormatEnum(Object) Declaration public virtual string FormatEnum(object value) Parameters Type Name Description Object value Returns Type Description String | Improve this Doc View Source FormatGuid(Guid) Declaration public virtual string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String | Improve this Doc View Source FormatNationalString(String) Declaration public virtual string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source FormatNull() Declaration public virtual string FormatNull() Returns Type Description String | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public virtual string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public virtual string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String | Improve this Doc View Source IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration public virtual bool IsQuoted(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Quote(String) Returns a quoted string that has been correctly escaped Declaration public virtual string Quote(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source QuoteColumnName(String) Quotes a column name Declaration public virtual string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String | Improve this Doc View Source QuoteConstraintName(String, String) Quotes a constraint name Declaration public virtual string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String | Improve this Doc View Source QuoteIndexName(String, String) Quote an index name Declaration public virtual string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Quotes a schema name Declaration public virtual string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name | Improve this Doc View Source QuoteSequenceName(String, String) Quotes a Sequence name Declaration public virtual string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String | Improve this Doc View Source QuoteTableName(String, String) Quotes a Table name Declaration public virtual string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String | Improve this Doc View Source QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration public virtual string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value | Improve this Doc View Source ShouldQuote(String) Declaration protected virtual bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source UnQuote(String) Provides an unquoted, unescaped string Declaration public virtual string UnQuote(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Generic.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Generic.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Generic | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Generic Classes GenericDescriptionGenerator Base class to generate descriptions for tables/classes GenericGenerator GenericQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html",
    "title": "Class HanaDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class HanaDescriptionGenerator Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html",
    "title": "Class HanaGenerator | FluentMigrator documentation",
    "keywords": "Class HanaGenerator Inheritance Object GeneratorBase GenericGenerator HanaGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaGenerator : GenericGenerator Constructors | Improve this Doc View Source HanaGenerator() Declaration public HanaGenerator() | Improve this Doc View Source HanaGenerator(HanaQuoter) Declaration public HanaGenerator(HanaQuoter quoter) Parameters Type Name Description HanaQuoter quoter | Improve this Doc View Source HanaGenerator(HanaQuoter, IOptions<GeneratorOptions>) Declaration public HanaGenerator(HanaQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description HanaQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html",
    "title": "Class HanaQuoter | FluentMigrator documentation",
    "keywords": "Class HanaQuoter Inheritance Object GenericQuoter HanaQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Hana.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Hana Classes HanaDescriptionGenerator HanaGenerator HanaQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.html",
    "title": "Namespace FluentMigrator.Runner.Generators | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators Classes CompatabilityModeExtension CompatibilityModeExtension Extension methods for CompatibilityMode EmptyDescriptionGenerator GeneratorOptions Options for IMigrationGenerator implementations MigrationGeneratorFactory SelectingGeneratorAccessor An IGeneratorAccessor implementation that selects one generator by name SelectingGeneratorAccessorOptions The options for the SelectingGeneratorAccessor Interfaces IColumn Interface for column-oriented SQL fragment generation IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns IGeneratorAccessor Accesses the selected migration generator IQuoter The interface to be implemented for handling quotes ITypeMap A map of DbType to an SQL type"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.IColumn.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.IColumn.html",
    "title": "Interface IColumn | FluentMigrator documentation",
    "keywords": "Interface IColumn Interface for column-oriented SQL fragment generation Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumn Methods | Improve this Doc View Source FormatCascade(String, Rule) Formats the foreign key cascading SQL fragment Declaration string FormatCascade(string onWhat, Rule rule) Parameters Type Name Description String onWhat The action this cascade clause applies to (update or delete) Rule rule The cascade rule Returns Type Description String The formatted SQL fragment | Improve this Doc View Source FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Formats the foreign key SQL fragment optionally using a custom foreign key name generator Declaration string FormatForeignKey(ForeignKeyDefinition foreignKey, Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Func < ForeignKeyDefinition , String > fkNameGeneration The custom foreign key name generator Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(ColumnDefinition) Generates the complete column definition SQL fragment Declaration string Generate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(IEnumerable<ColumnDefinition>, String) Generate the SQL fragment for all column definitions Declaration string Generate(IEnumerable<ColumnDefinition> columns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns The column definitions String tableName The table name Returns Type Description String The SQL fragment | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Generates the default foreign key name Declaration string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Returns Type Description String The SQL fragment"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.IDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.IDescriptionGenerator.html",
    "title": "Interface IDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Interface IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDescriptionGenerator Methods | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String >"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.IGeneratorAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.IGeneratorAccessor.html",
    "title": "Interface IGeneratorAccessor | FluentMigrator documentation",
    "keywords": "Interface IGeneratorAccessor Accesses the selected migration generator Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IGeneratorAccessor Remarks This is only different from using IMigrationGenerator as constructor parameter when multiple databases should be supported. Properties | Improve this Doc View Source Generator Gets the selected migration generator Declaration IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.IQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.IQuoter.html",
    "title": "Interface IQuoter | FluentMigrator documentation",
    "keywords": "Interface IQuoter The interface to be implemented for handling quotes Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IQuoter Methods | Improve this Doc View Source IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration bool IsQuoted(string value) Parameters Type Name Description String value Returns Type Description Boolean | Improve this Doc View Source Quote(String) Returns a quoted string that has been correctly escaped Declaration string Quote(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source QuoteColumnName(String) Quotes a column name Declaration string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String | Improve this Doc View Source QuoteConstraintName(String, String) Quotes a constraint name Declaration string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String | Improve this Doc View Source QuoteIndexName(String, String) Quote an index name Declaration string QuoteIndexName(string indexName, string schemaName = null) Parameters Type Name Description String indexName String schemaName Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Quotes a schema name Declaration string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name | Improve this Doc View Source QuoteSequenceName(String, String) Quotes a Sequence name Declaration string QuoteSequenceName(string sequenceName, string schemaName = null) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String | Improve this Doc View Source QuoteTableName(String, String) Quotes a Table name Declaration string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String | Improve this Doc View Source QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value | Improve this Doc View Source UnQuote(String) Provides an unquoted, unescaped string Declaration string UnQuote(string value) Parameters Type Name Description String value Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.ITypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.ITypeMap.html",
    "title": "Interface ITypeMap | FluentMigrator documentation",
    "keywords": "Interface ITypeMap A map of DbType to an SQL type Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITypeMap Methods | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Get the SQL type for a DbType Declaration [Obsolete] string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Int32 size The requested size (in DB lingua: precision) Int32 precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Get the SQL type for a DbType Declaration string GetTypeMap(DbType type, int? size, int? precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Nullable < Int32 > size The requested size (in DB lingua: precision) Nullable < Int32 > precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Jet.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Jet Classes JetGenerator JetQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Jet.JetGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Jet.JetGenerator.html",
    "title": "Class JetGenerator | FluentMigrator documentation",
    "keywords": "Class JetGenerator Inheritance Object GeneratorBase GenericGenerator JetGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetGenerator : GenericGenerator Constructors | Improve this Doc View Source JetGenerator() Declaration public JetGenerator() | Improve this Doc View Source JetGenerator(JetQuoter) Declaration public JetGenerator(JetQuoter quoter) Parameters Type Name Description JetQuoter quoter | Improve this Doc View Source JetGenerator(JetQuoter, IOptions<GeneratorOptions>) Declaration public JetGenerator(JetQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description JetQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Jet.JetQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Jet.JetQuoter.html",
    "title": "Class JetQuoter | FluentMigrator documentation",
    "keywords": "Class JetQuoter Inheritance Object GenericQuoter JetQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html",
    "title": "Class MigrationGeneratorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationGeneratorFactory Inheritance Object MigrationGeneratorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class MigrationGeneratorFactory Constructors | Improve this Doc View Source MigrationGeneratorFactory() Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public MigrationGeneratorFactory() Properties | Improve this Doc View Source RegisteredGenerators Declaration public static IEnumerable<IMigrationGenerator> RegisteredGenerators { get; } Property Value Type Description IEnumerable < IMigrationGenerator > Methods | Improve this Doc View Source GetGenerator(String) Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public virtual IMigrationGenerator GetGenerator(string name) Parameters Type Name Description String name Returns Type Description IMigrationGenerator | Improve this Doc View Source ListAvailableGeneratorTypes() Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public string ListAvailableGeneratorTypes() Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.MySql.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Generators.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.MySql Classes MySql4Generator MySql5Generator MySqlQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html",
    "title": "Class MySql4Generator | FluentMigrator documentation",
    "keywords": "Class MySql4Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator MySql5Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4Generator : GenericGenerator Constructors | Improve this Doc View Source MySql4Generator() Declaration public MySql4Generator() | Improve this Doc View Source MySql4Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected MySql4Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source MySql4Generator(MySqlQuoter) Declaration public MySql4Generator(MySqlQuoter quoter) Parameters Type Name Description MySqlQuoter quoter | Improve this Doc View Source MySql4Generator(MySqlQuoter, IOptions<GeneratorOptions>) Declaration public MySql4Generator(MySqlQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description MySqlQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DeleteConstraint Declaration public override string DeleteConstraint { get; } Property Value Type Description String Overrides GenericGenerator.DeleteConstraint Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html",
    "title": "Class MySql5Generator | FluentMigrator documentation",
    "keywords": "Class MySql5Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator Implements IMigrationGenerator Inherited Members MySql4Generator.AlterColumn MySql4Generator.DeleteConstraint MySql4Generator.Generate(CreateTableExpression) MySql4Generator.Generate(AlterTableExpression) MySql4Generator.Generate(DeleteIndexExpression) MySql4Generator.Generate(RenameColumnExpression) MySql4Generator.Generate(AlterDefaultConstraintExpression) MySql4Generator.Generate(CreateSequenceExpression) MySql4Generator.Generate(DeleteSequenceExpression) MySql4Generator.Generate(DeleteConstraintExpression) MySql4Generator.Generate(DeleteForeignKeyExpression) MySql4Generator.Generate(DeleteDefaultConstraintExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5Generator : MySql4Generator Constructors | Improve this Doc View Source MySql5Generator() Declaration public MySql5Generator() | Improve this Doc View Source MySql5Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected MySql5Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source MySql5Generator(MySqlQuoter) Declaration public MySql5Generator(MySqlQuoter quoter) Parameters Type Name Description MySqlQuoter quoter | Improve this Doc View Source MySql5Generator(MySqlQuoter, IOptions<GeneratorOptions>) Declaration public MySql5Generator(MySqlQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description MySqlQuoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html",
    "title": "Class MySqlQuoter | FluentMigrator documentation",
    "keywords": "Class MySqlQuoter Inheritance Object GenericQuoter MySqlQuoter Implements IQuoter Inherited Members GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote Methods | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source QuoteValue(Object) Declaration public override string QuoteValue(object value) Parameters Type Name Description Object value Returns Type Description String Overrides GenericQuoter.QuoteValue(Object) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Oracle Classes Oracle12CGenerator OracleDescriptionGenerator OracleGenerator OracleQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleTypeMap Interfaces IOracle12CGenerator IOracleGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.IOracle12CGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.IOracle12CGenerator.html",
    "title": "Interface IOracle12CGenerator | FluentMigrator documentation",
    "keywords": "Interface IOracle12CGenerator Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public interface IOracle12CGenerator : IOracleGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.IOracleGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.IOracleGenerator.html",
    "title": "Interface IOracleGenerator | FluentMigrator documentation",
    "keywords": "Interface IOracleGenerator Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public interface IOracleGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.Oracle12CGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.Oracle12CGenerator.html",
    "title": "Class Oracle12CGenerator | FluentMigrator documentation",
    "keywords": "Class Oracle12CGenerator Inheritance Object GeneratorBase GenericGenerator OracleGenerator Oracle12CGenerator Implements IMigrationGenerator IOracle12CGenerator IOracleGenerator IMigrationGenerator Inherited Members OracleGenerator.GetQuoter(Boolean) OracleGenerator.DropTable OracleGenerator.Generate(DeleteTableExpression) OracleGenerator.Generate(CreateSequenceExpression) OracleGenerator.AddColumn OracleGenerator.AlterColumn OracleGenerator.RenameTable OracleGenerator.InsertData OracleGenerator.AppendSqlStatementEndToken(StringBuilder) OracleGenerator.Generate(CreateTableExpression) OracleGenerator.Generate(AlterTableExpression) OracleGenerator.Generate(CreateColumnExpression) OracleGenerator.Generate(AlterColumnExpression) OracleGenerator.Generate(CreateIndexExpression) OracleGenerator.Generate(InsertDataExpression) OracleGenerator.Generate(AlterDefaultConstraintExpression) OracleGenerator.Generate(DeleteDefaultConstraintExpression) OracleGenerator.Generate(DeleteIndexExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class Oracle12CGenerator : OracleGenerator, IOracle12CGenerator, IOracleGenerator Constructors | Improve this Doc View Source Oracle12CGenerator() Declaration public Oracle12CGenerator() | Improve this Doc View Source Oracle12CGenerator(OracleQuoterBase) Declaration public Oracle12CGenerator(OracleQuoterBase quoter) Parameters Type Name Description OracleQuoterBase quoter | Improve this Doc View Source Oracle12CGenerator(OracleQuoterBase, IOptions<GeneratorOptions>) Declaration public Oracle12CGenerator(OracleQuoterBase quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description OracleQuoterBase quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source Oracle12CGenerator(Boolean) Declaration public Oracle12CGenerator(bool useQuotedIdentifiers) Parameters Type Name Description Boolean useQuotedIdentifiers Implements IMigrationGenerator IOracle12CGenerator IOracleGenerator IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html",
    "title": "Class OracleDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class OracleDescriptionGenerator Inheritance Object GenericDescriptionGenerator OracleDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html",
    "title": "Class OracleGenerator | FluentMigrator documentation",
    "keywords": "Class OracleGenerator Inheritance Object GeneratorBase GenericGenerator OracleGenerator Oracle12CGenerator Implements IMigrationGenerator IOracleGenerator IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleGenerator : GenericGenerator, IOracleGenerator Constructors | Improve this Doc View Source OracleGenerator() Declaration public OracleGenerator() | Improve this Doc View Source OracleGenerator(IColumn, OracleQuoterBase, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected OracleGenerator(IColumn column, OracleQuoterBase quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column OracleQuoterBase quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source OracleGenerator(IColumn, OracleQuoterBase, IOptions<GeneratorOptions>) Declaration public OracleGenerator(IColumn column, OracleQuoterBase quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column OracleQuoterBase quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source OracleGenerator(OracleQuoterBase) Declaration public OracleGenerator(OracleQuoterBase quoter) Parameters Type Name Description OracleQuoterBase quoter | Improve this Doc View Source OracleGenerator(OracleQuoterBase, IOptions<GeneratorOptions>) Declaration public OracleGenerator(OracleQuoterBase quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description OracleQuoterBase quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source OracleGenerator(Boolean) Declaration public OracleGenerator(bool useQuotedIdentifiers) Parameters Type Name Description Boolean useQuotedIdentifiers Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable | Improve this Doc View Source InsertData Declaration public override string InsertData { get; } Property Value Type Description String Overrides GenericGenerator.InsertData | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source AppendSqlStatementEndToken(StringBuilder) Declaration protected override StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder Overrides GenericGenerator.AppendSqlStatementEndToken(StringBuilder) | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source GetQuoter(Boolean) Declaration protected static OracleQuoterBase GetQuoter(bool useQuotedIdentifiers) Parameters Type Name Description Boolean useQuotedIdentifiers Returns Type Description OracleQuoterBase Implements IMigrationGenerator IOracleGenerator IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html",
    "title": "Class OracleQuoter | FluentMigrator documentation",
    "keywords": "Class OracleQuoter Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleQuoter Implements IQuoter Inherited Members OracleQuoterBase.MaxChunkLength OracleQuoterBase.EscapeCharacters OracleQuoterBase.SplitBy(String, Int32) OracleQuoterBase.FormatDateTime(DateTime) OracleQuoterBase.FromTimeSpan(TimeSpan) OracleQuoterBase.FormatGuid(Guid) OracleQuoterBase.FormatSystemMethods(SystemMethods) OracleQuoterBase.FormatAnsiString(String) OracleQuoterBase.FormatNationalString(String) GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoter : OracleQuoterQuotedIdentifier, IQuoter Methods | Improve this Doc View Source Quote(String) Declaration public override string Quote(string name) Parameters Type Name Description String name Returns Type Description String Overrides GenericQuoter.Quote(String) | Improve this Doc View Source QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides OracleQuoterBase.QuoteIndexName(String, String) | Improve this Doc View Source QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) | Improve this Doc View Source QuoteTableName(String, String) Declaration public override string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteTableName(String, String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterBase.html",
    "title": "Class OracleQuoterBase | FluentMigrator documentation",
    "keywords": "Class OracleQuoterBase Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoterBase : GenericQuoter, IQuoter Fields | Improve this Doc View Source EscapeCharacters Declaration public static readonly char[] EscapeCharacters Field Value Type Description Char [] | Improve this Doc View Source MaxChunkLength Declaration public const int MaxChunkLength = 3900 Field Value Type Description Int32 Methods | Improve this Doc View Source FormatAnsiString(String) Declaration public override string FormatAnsiString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatAnsiString(String) | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatGuid(Guid) Declaration public override string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String Overrides GenericQuoter.FormatGuid(Guid) | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) | Improve this Doc View Source SplitBy(String, Int32) Declaration public static IEnumerable<string> SplitBy(string str, int maxChunkLength) Parameters Type Name Description String str Int32 maxChunkLength Returns Type Description IEnumerable < String > Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html",
    "title": "Class OracleQuoterQuotedIdentifier | FluentMigrator documentation",
    "keywords": "Class OracleQuoterQuotedIdentifier Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleQuoter OracleQuoter Implements IQuoter Inherited Members OracleQuoterBase.MaxChunkLength OracleQuoterBase.EscapeCharacters OracleQuoterBase.SplitBy(String, Int32) OracleQuoterBase.FormatDateTime(DateTime) OracleQuoterBase.QuoteIndexName(String, String) OracleQuoterBase.FromTimeSpan(TimeSpan) OracleQuoterBase.FormatGuid(Guid) OracleQuoterBase.FormatSystemMethods(SystemMethods) OracleQuoterBase.FormatAnsiString(String) OracleQuoterBase.FormatNationalString(String) GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoterQuotedIdentifier : OracleQuoterBase, IQuoter Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html",
    "title": "Class OracleTypeMap | FluentMigrator documentation",
    "keywords": "Class OracleTypeMap Inheritance Object TypeMapBase OracleTypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleTypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source BlobCapacity Declaration public const int BlobCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source CharStringCapacity Declaration public const int CharStringCapacity = 2000 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source RawCapacity Declaration public const int RawCapacity = 2000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 2147483647 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Postgres Classes Postgres10_0Generator Postgres11_0Generator PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description PostgresGenerator PostgresQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.Postgres10_0Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.Postgres10_0Generator.html",
    "title": "Class Postgres10_0Generator | FluentMigrator documentation",
    "keywords": "Class Postgres10_0Generator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Postgres10_0Generator Implements IMigrationGenerator Inherited Members PostgresGenerator.CreateTable PostgresGenerator.DropTable PostgresGenerator.AddColumn PostgresGenerator.DropColumn PostgresGenerator.AlterColumn PostgresGenerator.RenameColumn PostgresGenerator.Generate(AlterTableExpression) PostgresGenerator.Generate(CreateSchemaExpression) PostgresGenerator.Generate(DeleteSchemaExpression) PostgresGenerator.Generate(CreateTableExpression) PostgresGenerator.Generate(AlterColumnExpression) PostgresGenerator.Generate(CreateColumnExpression) PostgresGenerator.Generate(DeleteColumnExpression) PostgresGenerator.Generate(CreateForeignKeyExpression) PostgresGenerator.Generate(DeleteForeignKeyExpression) PostgresGenerator.GetIncludeString(CreateIndexExpression) PostgresGenerator.GetUsingAlgorithm(CreateIndexExpression) PostgresGenerator.GetFilter(CreateIndexExpression) PostgresGenerator.GetAsConcurrently(CreateIndexExpression) PostgresGenerator.GetAsOnly(CreateIndexExpression) PostgresGenerator.Generate(CreateIndexExpression) PostgresGenerator.Generate(DeleteIndexExpression) PostgresGenerator.Generate(RenameTableExpression) PostgresGenerator.Generate(RenameColumnExpression) PostgresGenerator.Generate(InsertDataExpression) PostgresGenerator.Generate(AlterDefaultConstraintExpression) PostgresGenerator.Generate(DeleteDataExpression) PostgresGenerator.Generate(UpdateDataExpression) PostgresGenerator.Generate(AlterSchemaExpression) PostgresGenerator.Generate(DeleteDefaultConstraintExpression) PostgresGenerator.Generate(DeleteConstraintExpression) PostgresGenerator.Generate(CreateConstraintExpression) PostgresGenerator.GetColumnList(IEnumerable<String>) PostgresGenerator.GetDataList(List<Object>) PostgresGenerator.Generate(CreateSequenceExpression) PostgresGenerator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class Postgres10_0Generator : PostgresGenerator Constructors | Improve this Doc View Source Postgres10_0Generator(PostgresQuoter) Declaration public Postgres10_0Generator(PostgresQuoter quoter) Parameters Type Name Description PostgresQuoter quoter | Improve this Doc View Source Postgres10_0Generator(PostgresQuoter, IOptions<GeneratorOptions>) Declaration public Postgres10_0Generator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source Postgres10_0Generator(PostgresQuoter, IOptions<GeneratorOptions>, ITypeMap) Declaration protected Postgres10_0Generator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions, ITypeMap typeMap) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions ITypeMap typeMap Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.Postgres11_0Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.Postgres11_0Generator.html",
    "title": "Class Postgres11_0Generator | FluentMigrator documentation",
    "keywords": "Class Postgres11_0Generator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Postgres11_0Generator Implements IMigrationGenerator Inherited Members PostgresGenerator.CreateTable PostgresGenerator.DropTable PostgresGenerator.AddColumn PostgresGenerator.DropColumn PostgresGenerator.AlterColumn PostgresGenerator.RenameColumn PostgresGenerator.Generate(AlterTableExpression) PostgresGenerator.Generate(CreateSchemaExpression) PostgresGenerator.Generate(DeleteSchemaExpression) PostgresGenerator.Generate(CreateTableExpression) PostgresGenerator.Generate(AlterColumnExpression) PostgresGenerator.Generate(CreateColumnExpression) PostgresGenerator.Generate(DeleteColumnExpression) PostgresGenerator.Generate(CreateForeignKeyExpression) PostgresGenerator.Generate(DeleteForeignKeyExpression) PostgresGenerator.GetUsingAlgorithm(CreateIndexExpression) PostgresGenerator.GetFilter(CreateIndexExpression) PostgresGenerator.GetAsConcurrently(CreateIndexExpression) PostgresGenerator.Generate(CreateIndexExpression) PostgresGenerator.Generate(DeleteIndexExpression) PostgresGenerator.Generate(RenameTableExpression) PostgresGenerator.Generate(RenameColumnExpression) PostgresGenerator.Generate(InsertDataExpression) PostgresGenerator.Generate(AlterDefaultConstraintExpression) PostgresGenerator.Generate(DeleteDataExpression) PostgresGenerator.Generate(UpdateDataExpression) PostgresGenerator.Generate(AlterSchemaExpression) PostgresGenerator.Generate(DeleteDefaultConstraintExpression) PostgresGenerator.Generate(DeleteConstraintExpression) PostgresGenerator.Generate(CreateConstraintExpression) PostgresGenerator.GetColumnList(IEnumerable<String>) PostgresGenerator.GetDataList(List<Object>) PostgresGenerator.Generate(CreateSequenceExpression) PostgresGenerator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class Postgres11_0Generator : PostgresGenerator Constructors | Improve this Doc View Source Postgres11_0Generator(PostgresQuoter) Declaration public Postgres11_0Generator(PostgresQuoter quoter) Parameters Type Name Description PostgresQuoter quoter | Improve this Doc View Source Postgres11_0Generator(PostgresQuoter, IOptions<GeneratorOptions>) Declaration public Postgres11_0Generator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source Postgres11_0Generator(PostgresQuoter, IOptions<GeneratorOptions>, ITypeMap) Declaration protected Postgres11_0Generator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions, ITypeMap typeMap) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions ITypeMap typeMap Methods | Improve this Doc View Source GetAsOnly(CreateIndexExpression) Declaration protected override string GetAsOnly(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides PostgresGenerator.GetAsOnly(CreateIndexExpression) | Improve this Doc View Source GetIncludeString(CreateIndexExpression) Declaration protected override string GetIncludeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String Overrides PostgresGenerator.GetIncludeString(CreateIndexExpression) Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html",
    "title": "Class PostgresDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator PostgresDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors | Improve this Doc View Source PostgresDescriptionGenerator(PostgresQuoter) Declaration public PostgresDescriptionGenerator(PostgresQuoter quoter) Parameters Type Name Description PostgresQuoter quoter Properties | Improve this Doc View Source Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html",
    "title": "Class PostgresGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresGenerator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Postgres10_0Generator Postgres11_0Generator Postgres92Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresGenerator : GenericGenerator Constructors | Improve this Doc View Source PostgresGenerator(IColumn, PostgresQuoter, IOptions<GeneratorOptions>) Declaration protected PostgresGenerator(IColumn column, PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source PostgresGenerator(PostgresQuoter) Declaration public PostgresGenerator(PostgresQuoter quoter) Parameters Type Name Description PostgresQuoter quoter | Improve this Doc View Source PostgresGenerator(PostgresQuoter, IOptions<GeneratorOptions>) Declaration public PostgresGenerator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source PostgresGenerator(PostgresQuoter, IOptions<GeneratorOptions>, ITypeMap) Declaration protected PostgresGenerator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions, ITypeMap typeMap) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions ITypeMap typeMap Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source CreateTable Declaration public override string CreateTable { get; } Property Value Type Description String Overrides GenericGenerator.CreateTable | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String | Improve this Doc View Source GetAsConcurrently(CreateIndexExpression) Declaration protected virtual string GetAsConcurrently(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source GetAsOnly(CreateIndexExpression) Declaration protected virtual string GetAsOnly(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String | Improve this Doc View Source GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String | Improve this Doc View Source GetFilter(CreateIndexExpression) Declaration protected virtual string GetFilter(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source GetIncludeString(CreateIndexExpression) Declaration protected virtual string GetIncludeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetUsingAlgorithm(CreateIndexExpression) Declaration protected virtual string GetUsingAlgorithm(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html",
    "title": "Class PostgresQuoter | FluentMigrator documentation",
    "keywords": "Class PostgresQuoter Inheritance Object GenericQuoter PostgresQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresQuoter : GenericQuoter, IQuoter Constructors | Improve this Doc View Source PostgresQuoter(PostgresOptions) Declaration public PostgresQuoter(PostgresOptions options) Parameters Type Name Description PostgresOptions options Properties | Improve this Doc View Source Options Declaration public PostgresOptions Options { get; } Property Value Type Description PostgresOptions Methods | Improve this Doc View Source FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) | Improve this Doc View Source ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) | Improve this Doc View Source UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres92.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres92.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Postgres92 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Postgres92 Classes Postgres92Generator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Postgres92.Postgres92Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Postgres92.Postgres92Generator.html",
    "title": "Class Postgres92Generator | FluentMigrator documentation",
    "keywords": "Class Postgres92Generator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Postgres92Generator Implements IMigrationGenerator Inherited Members PostgresGenerator.CreateTable PostgresGenerator.DropTable PostgresGenerator.AddColumn PostgresGenerator.DropColumn PostgresGenerator.AlterColumn PostgresGenerator.RenameColumn PostgresGenerator.Generate(AlterTableExpression) PostgresGenerator.Generate(CreateSchemaExpression) PostgresGenerator.Generate(DeleteSchemaExpression) PostgresGenerator.Generate(CreateTableExpression) PostgresGenerator.Generate(AlterColumnExpression) PostgresGenerator.Generate(CreateColumnExpression) PostgresGenerator.Generate(DeleteColumnExpression) PostgresGenerator.Generate(CreateForeignKeyExpression) PostgresGenerator.Generate(DeleteForeignKeyExpression) PostgresGenerator.GetIncludeString(CreateIndexExpression) PostgresGenerator.GetUsingAlgorithm(CreateIndexExpression) PostgresGenerator.GetFilter(CreateIndexExpression) PostgresGenerator.GetAsConcurrently(CreateIndexExpression) PostgresGenerator.GetAsOnly(CreateIndexExpression) PostgresGenerator.Generate(CreateIndexExpression) PostgresGenerator.Generate(DeleteIndexExpression) PostgresGenerator.Generate(RenameTableExpression) PostgresGenerator.Generate(RenameColumnExpression) PostgresGenerator.Generate(InsertDataExpression) PostgresGenerator.Generate(AlterDefaultConstraintExpression) PostgresGenerator.Generate(DeleteDataExpression) PostgresGenerator.Generate(UpdateDataExpression) PostgresGenerator.Generate(AlterSchemaExpression) PostgresGenerator.Generate(DeleteDefaultConstraintExpression) PostgresGenerator.Generate(DeleteConstraintExpression) PostgresGenerator.Generate(CreateConstraintExpression) PostgresGenerator.GetColumnList(IEnumerable<String>) PostgresGenerator.GetDataList(List<Object>) PostgresGenerator.Generate(CreateSequenceExpression) PostgresGenerator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres92 Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class Postgres92Generator : PostgresGenerator Constructors | Improve this Doc View Source Postgres92Generator(PostgresQuoter, IOptions<GeneratorOptions>) Declaration public Postgres92Generator(PostgresQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Redshift.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Redshift Classes RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description RedshiftGenerator RedshiftQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html",
    "title": "Class RedshiftDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator RedshiftDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors | Improve this Doc View Source RedshiftDescriptionGenerator() Declaration public RedshiftDescriptionGenerator() Properties | Improve this Doc View Source Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html",
    "title": "Class RedshiftGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftGenerator Inheritance Object GeneratorBase GenericGenerator RedshiftGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftGenerator : GenericGenerator Constructors | Improve this Doc View Source RedshiftGenerator() Declaration public RedshiftGenerator() | Improve this Doc View Source RedshiftGenerator(RedshiftQuoter) Declaration public RedshiftGenerator(RedshiftQuoter quoter) Parameters Type Name Description RedshiftQuoter quoter | Improve this Doc View Source RedshiftGenerator(RedshiftQuoter, IOptions<GeneratorOptions>) Declaration public RedshiftGenerator(RedshiftQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description RedshiftQuoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String | Improve this Doc View Source GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String | Improve this Doc View Source GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html",
    "title": "Class RedshiftQuoter | FluentMigrator documentation",
    "keywords": "Class RedshiftQuoter Inheritance Object GenericQuoter RedshiftQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SelectingGeneratorAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SelectingGeneratorAccessor.html",
    "title": "Class SelectingGeneratorAccessor | FluentMigrator documentation",
    "keywords": "Class SelectingGeneratorAccessor An IGeneratorAccessor implementation that selects one generator by name Inheritance Object SelectingGeneratorAccessor Implements IGeneratorAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingGeneratorAccessor : IGeneratorAccessor Constructors | Improve this Doc View Source SelectingGeneratorAccessor(IEnumerable<IMigrationGenerator>, IOptionsSnapshot<SelectingGeneratorAccessorOptions>, IOptionsSnapshot<SelectingProcessorAccessorOptions>) Initializes a new instance of the SelectingGeneratorAccessor class. Declaration public SelectingGeneratorAccessor(IEnumerable<IMigrationGenerator> generators, IOptionsSnapshot<SelectingGeneratorAccessorOptions> options, IOptionsSnapshot<SelectingProcessorAccessorOptions> processorSelectorOptions) Parameters Type Name Description IEnumerable < IMigrationGenerator > generators The generators to select from IOptionsSnapshot < SelectingGeneratorAccessorOptions > options The options used to determine the generator to be returned IOptionsSnapshot < SelectingProcessorAccessorOptions > processorSelectorOptions The processor selector options Properties | Improve this Doc View Source Generator Gets the selected migration generator Declaration public IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator Implements IGeneratorAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SelectingGeneratorAccessorOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SelectingGeneratorAccessorOptions.html",
    "title": "Class SelectingGeneratorAccessorOptions | FluentMigrator documentation",
    "keywords": "Class SelectingGeneratorAccessorOptions The options for the SelectingGeneratorAccessor Inheritance Object SelectingGeneratorAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingGeneratorAccessorOptions Properties | Improve this Doc View Source GeneratorId The ID of the generator to be returned by the SelectingGeneratorAccessor Declaration public string GeneratorId { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere Classes SqlAnywhere16Generator SqlAnywhere16TypeMap SqlAnywhereQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html",
    "title": "Class SqlAnywhere16Generator | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16Generator Inheritance Object GeneratorBase GenericGenerator SqlAnywhere16Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16Generator : GenericGenerator Constructors | Improve this Doc View Source SqlAnywhere16Generator() Declaration public SqlAnywhere16Generator() | Improve this Doc View Source SqlAnywhere16Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlAnywhere16Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlAnywhere16Generator(SqlAnywhereQuoter) Declaration public SqlAnywhere16Generator(SqlAnywhereQuoter quoter) Parameters Type Name Description SqlAnywhereQuoter quoter | Improve this Doc View Source SqlAnywhere16Generator(SqlAnywhereQuoter, IOptions<GeneratorOptions>) Declaration public SqlAnywhere16Generator(SqlAnywhereQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlAnywhereQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint | Improve this Doc View Source CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint | Improve this Doc View Source CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex | Improve this Doc View Source CreateSchema Declaration public override string CreateSchema { get; } Property Value Type Description String Overrides GenericGenerator.CreateSchema | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex | Improve this Doc View Source DropSchema Declaration public override string DropSchema { get; } Property Value Type Description String Overrides GenericGenerator.DropSchema | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String | Improve this Doc View Source GetWithNullsDistinctString(IndexDefinition) Declaration protected virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html",
    "title": "Class SqlAnywhere16TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16TypeMap Inheritance Object TypeMapBase SqlAnywhere16TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16TypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html",
    "title": "Class SqlAnywhereQuoter | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereQuoter Inheritance Object GenericQuoter SqlAnywhereQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SQLite.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SQLite Classes SQLiteGenerator SQLiteQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html",
    "title": "Class SQLiteGenerator | FluentMigrator documentation",
    "keywords": "Class SQLiteGenerator Inheritance Object GeneratorBase GenericGenerator SQLiteGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteGenerator : GenericGenerator Constructors | Improve this Doc View Source SQLiteGenerator() Declaration public SQLiteGenerator() | Improve this Doc View Source SQLiteGenerator(SQLiteQuoter) Declaration public SQLiteGenerator(SQLiteQuoter quoter) Parameters Type Name Description SQLiteQuoter quoter | Improve this Doc View Source SQLiteGenerator(SQLiteQuoter, IOptions<GeneratorOptions>) Declaration public SQLiteGenerator(SQLiteQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SQLiteQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html",
    "title": "Class SQLiteQuoter | FluentMigrator documentation",
    "keywords": "Class SQLiteQuoter Inheritance Object GenericQuoter SQLiteQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] value) Parameters Type Name Description Byte [] value Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlServer Classes SqlServer2000Generator SqlServer2000Quoter SqlServer2000TypeMap SqlServer2005DescriptionGenerator SqlServer2005Generator SqlServer2005Quoter SqlServer2005TypeMap SqlServer2008Generator SqlServer2008Quoter SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator SqlServerCeGenerator SqlServerCeTypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html",
    "title": "Class SqlServer2000Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2005Generator SqlServerCeGenerator SqlServerCeGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Generator : GenericGenerator Constructors | Improve this Doc View Source SqlServer2000Generator() Declaration public SqlServer2000Generator() | Improve this Doc View Source SqlServer2000Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2000Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2000Generator(SqlServer2000Quoter) Declaration public SqlServer2000Generator(SqlServer2000Quoter quoter) Parameters Type Name Description SqlServer2000Quoter quoter | Improve this Doc View Source SqlServer2000Generator(SqlServer2000Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2000Generator(SqlServer2000Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2000Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex | Improve this Doc View Source IdentityInsert Declaration public virtual string IdentityInsert { get; } Property Value Type Description String | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source BuildDelete(DeleteColumnExpression, String, StringBuilder) Declaration protected virtual void BuildDelete(DeleteColumnExpression expression, string columnName, StringBuilder builder) Parameters Type Name Description DeleteColumnExpression expression String columnName StringBuilder builder | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected virtual string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) | Improve this Doc View Source IsUsingIdentityInsert(InsertDataExpression) Declaration protected static bool IsUsingIdentityInsert(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html",
    "title": "Class SqlServer2000Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2005Quoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Quoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html",
    "title": "Class SqlServer2000TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2000TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000TypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html",
    "title": "Class SqlServer2005DescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005DescriptionGenerator Inheritance Object GenericDescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005DescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public override string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public override string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html",
    "title": "Class SqlServer2005Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2008Generator Implements IMigrationGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Generator : SqlServer2000Generator Constructors | Improve this Doc View Source SqlServer2005Generator() Declaration public SqlServer2005Generator() | Improve this Doc View Source SqlServer2005Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2005Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2005Generator(SqlServer2005Quoter) Declaration public SqlServer2005Generator(SqlServer2005Quoter quoter) Parameters Type Name Description SqlServer2005Quoter quoter | Improve this Doc View Source SqlServer2005Generator(SqlServer2005Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2005Generator(SqlServer2005Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2005Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides SqlServer2000Generator.AddColumn | Improve this Doc View Source CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint | Improve this Doc View Source CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex | Improve this Doc View Source CreateSchema Declaration public override string CreateSchema { get; } Property Value Type Description String Overrides GenericGenerator.CreateSchema | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides SqlServer2000Generator.DropIndex | Improve this Doc View Source IdentityInsert Declaration public override string IdentityInsert { get; } Property Value Type Description String Overrides SqlServer2000Generator.IdentityInsert Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source GetFilterString(CreateIndexExpression) Declaration public virtual string GetFilterString(CreateIndexExpression createIndexExpression) Parameters Type Name Description CreateIndexExpression createIndexExpression Returns Type Description String | Improve this Doc View Source GetIncludeString(CreateIndexExpression) Declaration public virtual string GetIncludeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetWithOptions(ISupportAdditionalFeatures) Declaration public virtual string GetWithOptions(ISupportAdditionalFeatures expression) Parameters Type Name Description ISupportAdditionalFeatures expression Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2000Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html",
    "title": "Class SqlServer2005Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) SqlServer2000Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Quoter : SqlServer2000Quoter, IQuoter Methods | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides SqlServer2000Quoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html",
    "title": "Class SqlServer2005TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2005TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members SqlServer2000TypeMap.AnsiStringCapacity SqlServer2000TypeMap.AnsiTextCapacity SqlServer2000TypeMap.UnicodeStringCapacity SqlServer2000TypeMap.UnicodeTextCapacity SqlServer2000TypeMap.ImageCapacity SqlServer2000TypeMap.DecimalCapacity TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005TypeMap : SqlServer2000TypeMap, ITypeMap Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides SqlServer2000TypeMap.SetupTypeMaps() Implements ITypeMap"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html",
    "title": "Class SqlServer2008Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2012Generator Implements IMigrationGenerator Inherited Members SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Generator : SqlServer2005Generator Constructors | Improve this Doc View Source SqlServer2008Generator() Declaration public SqlServer2008Generator() | Improve this Doc View Source SqlServer2008Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2008Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2008Generator(SqlServer2008Quoter) Declaration public SqlServer2008Generator(SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2008Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2008Generator(SqlServer2008Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides SqlServer2005Generator.Generate(CreateIndexExpression) | Improve this Doc View Source GetFilterString(CreateIndexExpression) Declaration public override string GetFilterString(CreateIndexExpression createIndexExpression) Parameters Type Name Description CreateIndexExpression createIndexExpression Returns Type Description String Overrides SqlServer2005Generator.GetFilterString(CreateIndexExpression) | Improve this Doc View Source GetWithNullsDistinctString(IndexDefinition) Declaration public virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String | Improve this Doc View Source GetWithOptions(ISupportAdditionalFeatures) Declaration public override string GetWithOptions(ISupportAdditionalFeatures expression) Parameters Type Name Description ISupportAdditionalFeatures expression Returns Type Description String Overrides SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2005Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html",
    "title": "Class SqlServer2008Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2005Quoter.QuoteSchemaName(String) SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Quoter : SqlServer2005Quoter, IQuoter Methods | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides SqlServer2000Quoter.FormatSystemMethods(SystemMethods) Implements IQuoter"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html",
    "title": "Class SqlServer2012Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2012Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2014Generator Implements IMigrationGenerator Inherited Members SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2008Generator.GetFilterString(CreateIndexExpression) SqlServer2008Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012Generator : SqlServer2008Generator Constructors | Improve this Doc View Source SqlServer2012Generator() Declaration public SqlServer2012Generator() | Improve this Doc View Source SqlServer2012Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2012Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2012Generator(SqlServer2008Quoter) Declaration public SqlServer2012Generator(SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2012Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2012Generator(SqlServer2008Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(Expressions.CreateSequenceExpression) Declaration public override string Generate(Expressions.CreateSequenceExpression expression) Parameters Type Name Description Expressions.CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(Expressions.DeleteSequenceExpression) Declaration public override string Generate(Expressions.DeleteSequenceExpression expression) Parameters Type Name Description Expressions.DeleteSequenceExpression expression Returns Type Description String Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html",
    "title": "Class SqlServer2014Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2014Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(Expressions.CreateSequenceExpression) SqlServer2012Generator.Generate(Expressions.DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2008Generator.GetFilterString(CreateIndexExpression) SqlServer2008Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014Generator : SqlServer2012Generator Constructors | Improve this Doc View Source SqlServer2014Generator() Declaration public SqlServer2014Generator() | Improve this Doc View Source SqlServer2014Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2014Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2014Generator(SqlServer2008Quoter) Declaration public SqlServer2014Generator(SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2014Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2014Generator(SqlServer2008Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html",
    "title": "Class SqlServer2016Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2016Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(Expressions.CreateSequenceExpression) SqlServer2012Generator.Generate(Expressions.DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2008Generator.GetFilterString(CreateIndexExpression) SqlServer2008Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016Generator : SqlServer2014Generator Constructors | Improve this Doc View Source SqlServer2016Generator() Declaration public SqlServer2016Generator() | Improve this Doc View Source SqlServer2016Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2016Generator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2016Generator(SqlServer2008Quoter) Declaration public SqlServer2016Generator(SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2016Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2016Generator(SqlServer2008Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html",
    "title": "Class SqlServerCeGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServerCeGenerator Inheritance Object SqlServer2000Generator SqlServerCeGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.DropIndex SqlServer2000Generator.AddColumn SqlServer2000Generator.IdentityInsert SqlServer2000Generator.CreateConstraint SqlServer2000Generator.Generate(CreateConstraintExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) SqlServer2000Generator.IsAdditionalFeatureSupported(String) Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeGenerator : SqlServer2000Generator Constructors | Improve this Doc View Source SqlServerCeGenerator() Declaration public SqlServerCeGenerator() | Improve this Doc View Source SqlServerCeGenerator(SqlServer2000Quoter) Declaration public SqlServerCeGenerator(SqlServer2000Quoter quoter) Parameters Type Name Description SqlServer2000Quoter quoter | Improve this Doc View Source SqlServerCeGenerator(SqlServer2000Quoter, IOptions<GeneratorOptions>) Declaration public SqlServerCeGenerator(SqlServer2000Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2000Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source InsertData Declaration public override string InsertData { get; } Property Value Type Description String Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected override string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html",
    "title": "Class SqlServerCeTypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServerCeTypeMap Inheritance Object SqlServerCeTypeMap Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeTypeMap : TypeMapBase Fields | Improve this Doc View Source BinaryCapacity Declaration public const int BinaryCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 1073741823 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps()"
  },
  "api/v3.x/FluentMigrator.Runner.HanaRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.HanaRunnerBuilderExtensions.html",
    "title": "Class HanaRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class HanaRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object HanaRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Hana.dll Syntax public static class HanaRunnerBuilderExtensions Methods | Improve this Doc View Source AddHana(IMigrationRunnerBuilder) Adds SAP Hana support Declaration public static IMigrationRunnerBuilder AddHana(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP Hana-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.Helpers.FormatHelper.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Helpers.FormatHelper.html",
    "title": "Class FormatHelper | FluentMigrator documentation",
    "keywords": "Class FormatHelper Inheritance Object FormatHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Helpers Assembly : FluentMigrator.Runner.Core.dll Syntax public class FormatHelper Methods | Improve this Doc View Source FormatSqlEscape(String) Declaration public static string FormatSqlEscape(string sql) Parameters Type Name Description String sql Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Helpers.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Helpers.html",
    "title": "Namespace FluentMigrator.Runner.Helpers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Helpers Classes FormatHelper"
  },
  "api/v3.x/FluentMigrator.Runner.html": {
    "href": "api/v3.x/FluentMigrator.Runner.html",
    "title": "Namespace FluentMigrator.Runner | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner Classes AnnouncerExtensions Extension methods for an IAnnouncer ConnectionlessVersionLoader ConsoleUtilities Console helper methods ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. Db2RunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder DefaultConventionSet DefaultMigrationInformationLoader FirebirdRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder FluentMigratorLoggerOptions Options for the FluentMigratorLogger FluentMigratorLoggingExtensions Extension methods for and HanaRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder JetRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder LoggingUtilities Utility functions around logging MaintenanceLoader MigrationConventionsExtensions Extension methods for IMigrationRunnerConventions . MigrationRunner The default IMigrationRunner implementation MigrationRunnerBuilderExtensions Extension methods for the IMigrationRunnerBuilder interface MigrationRunnerConventions MigrationScopeHandler MigrationValidator MySqlRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder NoOpMigrationScope A \"no-operation\" migration scope OracleRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder PostgresRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder ProfileLoader The default implementation of the IProfileLoader RedshiftRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder RunnerEventIds The default runner event IDs SqlAnywhereRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder SQLiteRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder SqlServerCeRunnerBuilderExtensions Extension methods for SqlServerRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder StopWatch TrackingMigrationScope A migration scope that encapsulates database changes in a transaction TransactionalMigrationScope A migration scope encapsulating migrations in a transaction VersionLoader Interfaces IAnnouncer IMaintenanceLoader IMigrationInformationLoader IMigrationRunner The migration runner IMigrationRunnerBuilder An interface for configuring migration runner services IMigrationRunnerConventions IMigrationScope A migration scope that encapsulates database changes in a transaction IMigrationScopeManager Handler for IMigrationScope IMigrationScopeStarter Manually start a migration scope IProfileLoader Interface to load migrations tagged with a profile name IStopWatch IVersionLoader Manages the version table and the stored versions Enums CompatabilityMode The old compatibility mode CompatibilityMode Sets the compatibility mode"
  },
  "api/v3.x/FluentMigrator.Runner.IAnnouncer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IAnnouncer.html",
    "title": "Interface IAnnouncer | FluentMigrator documentation",
    "keywords": "Interface IAnnouncer Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IAnnouncer Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration [Obsolete] void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Extension Methods AnnouncerExtensions.Heading(IAnnouncer, String, Object[]) AnnouncerExtensions.Say(IAnnouncer, String, Object[]) AnnouncerExtensions.Error(IAnnouncer, String, Object[])"
  },
  "api/v3.x/FluentMigrator.Runner.IMaintenanceLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMaintenanceLoader.html",
    "title": "Interface IMaintenanceLoader | FluentMigrator documentation",
    "keywords": "Interface IMaintenanceLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMaintenanceLoader Methods | Improve this Doc View Source LoadMaintenance(MigrationStage) Declaration IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo >"
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationInformationLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationInformationLoader.html",
    "title": "Interface IMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Interface IMigrationInformationLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationInformationLoader Methods | Improve this Doc View Source LoadMigrations() Declaration SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo >"
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationRunner.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationRunner.html",
    "title": "Interface IMigrationRunner | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunner The migration runner Inherited Members IMigrationScopeStarter.BeginScope() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationRunner : IMigrationScopeStarter Properties | Improve this Doc View Source MigrationAssemblies Gets the assemblies searched for migrations, profile migrations, etc... Declaration [Obsolete] IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source MigrationLoader Gets or sets the migration loader to be used by this migration runner Declaration IMigrationInformationLoader MigrationLoader { get; } Property Value Type Description IMigrationInformationLoader | Improve this Doc View Source Processor Gets the migration processor used by this runner Declaration IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor | Improve this Doc View Source RunnerContext Gets the runner context Declaration [Obsolete] IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext Methods | Improve this Doc View Source Down(IMigration) Executes an Down migration Declaration void Down(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source HasMigrationsToApplyDown(Int64) Returns true when there are migrations to revert Declaration bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version The target version Returns Type Description Boolean true when there are migrations to revert | Improve this Doc View Source HasMigrationsToApplyRollback() Are there migrations available for a rollback? Declaration bool HasMigrationsToApplyRollback() Returns Type Description Boolean true when there are migrations available for a rollback | Improve this Doc View Source HasMigrationsToApplyUp(Nullable<Int64>) Returns true when there are migrations to apply Declaration bool HasMigrationsToApplyUp(long? version = null) Parameters Type Name Description Nullable < Int64 > version The target version (or null if the last one should be used) Returns Type Description Boolean true when there are migrations to apply | Improve this Doc View Source ListMigrations() List all migrations to the logger Declaration void ListMigrations() | Improve this Doc View Source MigrateDown(Int64) Migrate down to the given version Declaration void MigrateDown(long version) Parameters Type Name Description Int64 version The version to migrate down to | Improve this Doc View Source MigrateUp() Executes all found (and unapplied) migrations Declaration void MigrateUp() | Improve this Doc View Source MigrateUp(Int64) Executes all found (and unapplied) migrations up to the given version Declaration void MigrateUp(long version) Parameters Type Name Description Int64 version The target version to migrate to (inclusive) | Improve this Doc View Source Rollback(Int32) Rollback the given number of steps Declaration void Rollback(int steps) Parameters Type Name Description Int32 steps The number of steps to rollback | Improve this Doc View Source RollbackToVersion(Int64) Rollback to a given version Declaration void RollbackToVersion(long version) Parameters Type Name Description Int64 version The target version to rollback to | Improve this Doc View Source Up(IMigration) Executes an Up migration Declaration void Up(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ValidateVersionOrder() Validate that there were no missing migration versions Declaration void ValidateVersionOrder() Remarks Throws an exception if a missing migration was found."
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationRunnerBuilder.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationRunnerBuilder.html",
    "title": "Interface IMigrationRunnerBuilder | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerBuilder An interface for configuring migration runner services Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerBuilder Properties | Improve this Doc View Source Services Gets the where the migration runner services are configured Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Extension Methods PostgresRunnerBuilderExtensions.AddPostgres(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres92(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres10_0(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres11_0(IMigrationRunnerBuilder) RedshiftRunnerBuilderExtensions.AddRedshift(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder, FirebirdOptions) Db2RunnerBuilderExtensions.AddDb2(IMigrationRunnerBuilder) Db2RunnerBuilderExtensions.AddDb2ISeries(IMigrationRunnerBuilder) SQLiteRunnerBuilderExtensions.AddSQLite(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql4(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql5(IMigrationRunnerBuilder) MigrationRunnerBuilderExtensions.ConfigureGlobalProcessorOptions(IMigrationRunnerBuilder, Action<ProcessorOptions>) MigrationRunnerBuilderExtensions.WithGlobalConnectionString(IMigrationRunnerBuilder, String) MigrationRunnerBuilderExtensions.WithGlobalConnectionString(IMigrationRunnerBuilder, Func<IServiceProvider, String>) MigrationRunnerBuilderExtensions.WithGlobalCommandTimeout(IMigrationRunnerBuilder, TimeSpan) MigrationRunnerBuilderExtensions.WithGlobalStripComments(IMigrationRunnerBuilder, Boolean) MigrationRunnerBuilderExtensions.AsGlobalPreview(IMigrationRunnerBuilder, Boolean) MigrationRunnerBuilderExtensions.WithVersionTable(IMigrationRunnerBuilder, IVersionTableMetaData) MigrationRunnerBuilderExtensions.WithRunnerConventions(IMigrationRunnerBuilder, IMigrationRunnerConventions) MigrationRunnerBuilderExtensions.WithMigrationsIn(IMigrationRunnerBuilder, Assembly[]) MigrationRunnerBuilderExtensions.ScanIn(IMigrationRunnerBuilder, Assembly[]) OracleRunnerBuilderExtensions.AddOracle(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracleManaged(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddDotConnectOracle(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracle12C(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracle12CManaged(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddDotConnectOracle12C(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2000(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2005(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2008(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2012(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2014(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2016(IMigrationRunnerBuilder) JetRunnerBuilderExtensions.AddJet(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere16(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere(IMigrationRunnerBuilder) HanaRunnerBuilderExtensions.AddHana(IMigrationRunnerBuilder)"
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationRunnerConventions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationRunnerConventions.html",
    "title": "Interface IMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerConventions Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerConventions Properties | Improve this Doc View Source GetMaintenanceStage Declaration Func<Type, MigrationStage?> GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Create an IMigrationInfo instance for a given IMigration Declaration Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source TypeHasMatchingTags Declaration Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean > Extension Methods MigrationConventionsExtensions.HasRequestedTags(IMigrationRunnerConventions, Type, String[], Boolean)"
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationScope.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationScope.html",
    "title": "Interface IMigrationScope | FluentMigrator documentation",
    "keywords": "Interface IMigrationScope A migration scope that encapsulates database changes in a transaction Inherited Members IDisposable.Dispose() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScope : IDisposable Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration void Complete() Remarks This usually involves the commit a transaction."
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationScopeManager.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationScopeManager.html",
    "title": "Interface IMigrationScopeManager | FluentMigrator documentation",
    "keywords": "Interface IMigrationScopeManager Handler for IMigrationScope Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScopeManager Properties | Improve this Doc View Source CurrentScope Gets migration scope for the runner Declaration IMigrationScope CurrentScope { get; } Property Value Type Description IMigrationScope Methods | Improve this Doc View Source BeginScope() Creates new migration scope Declaration IMigrationScope BeginScope() Returns Type Description IMigrationScope Newly created scope | Improve this Doc View Source CreateOrWrapMigrationScope(Boolean) Creates new migrations scope or reuses existing one Declaration IMigrationScope CreateOrWrapMigrationScope(bool transactional = true) Parameters Type Name Description Boolean transactional Defines if transactions should be used Returns Type Description IMigrationScope Migration scope"
  },
  "api/v3.x/FluentMigrator.Runner.IMigrationScopeStarter.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IMigrationScopeStarter.html",
    "title": "Interface IMigrationScopeStarter | FluentMigrator documentation",
    "keywords": "Interface IMigrationScopeStarter Manually start a migration scope Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScopeStarter Remarks This is handles nested scopes gracefully. Methods | Improve this Doc View Source BeginScope() Starts a new migration scope Declaration IMigrationScope BeginScope() Returns Type Description IMigrationScope A new migration scope"
  },
  "api/v3.x/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html",
    "title": "Class DefaultMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationRunnerConventions Inheritance Object DefaultMigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultMigrationRunnerConventions : IMigrationRunnerConventions Properties | Improve this Doc View Source GetMaintenanceStage Declaration public Func<Type, MigrationStage?> GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] public Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Create an IMigrationInfo instance for a given IMigration Declaration public Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source Instance Declaration public static DefaultMigrationRunnerConventions Instance { get; } Property Value Type Description DefaultMigrationRunnerConventions | Improve this Doc View Source TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions Extension Methods MigrationConventionsExtensions.HasRequestedTags(IMigrationRunnerConventions, Type, String[], Boolean)"
  },
  "api/v3.x/FluentMigrator.Runner.Infrastructure.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Infrastructure.html",
    "title": "Namespace FluentMigrator.Runner.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Infrastructure Classes DefaultMigrationRunnerConventions RuntimeHost Interfaces IHostAbstraction"
  },
  "api/v3.x/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html",
    "title": "Interface IHostAbstraction | FluentMigrator documentation",
    "keywords": "Interface IHostAbstraction Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IHostAbstraction Properties | Improve this Doc View Source BaseDirectory Declaration string BaseDirectory { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateInstance(IServiceProvider, String, String) Declaration object CreateInstance(IServiceProvider serviceProvider, string assemblyName, string typeName) Parameters Type Name Description IServiceProvider serviceProvider String assemblyName String typeName Returns Type Description Object | Improve this Doc View Source GetLoadedAssemblies() Declaration IEnumerable<Assembly> GetLoadedAssemblies() Returns Type Description IEnumerable < Assembly >"
  },
  "api/v3.x/FluentMigrator.Runner.Infrastructure.RuntimeHost.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Infrastructure.RuntimeHost.html",
    "title": "Class RuntimeHost | FluentMigrator documentation",
    "keywords": "Class RuntimeHost Inheritance Object RuntimeHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public static class RuntimeHost Properties | Improve this Doc View Source Current Declaration public static IHostAbstraction Current { get; } Property Value Type Description IHostAbstraction Methods | Improve this Doc View Source FindAssemblies() Declaration public static IEnumerable<AssemblyName> FindAssemblies() Returns Type Description IEnumerable < AssemblyName > | Improve this Doc View Source FindAssemblies(String) Declaration public static IEnumerable<AssemblyName> FindAssemblies(string name) Parameters Type Name Description String name Returns Type Description IEnumerable < AssemblyName >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyCollectionService.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyCollectionService.html",
    "title": "Class AssemblyCollectionService | FluentMigrator documentation",
    "keywords": "Class AssemblyCollectionService A compatibility service to get the assembly collection from the found migrations Inheritance Object AssemblyCollectionService Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete(\"Exists only to simplify the migration to the new FluentMigration version\")] public class AssemblyCollectionService : IAssemblyCollection Constructors | Improve this Doc View Source AssemblyCollectionService(IAssemblySource) Initializes a new instance of the AssemblyCollectionService class. Declaration public AssemblyCollectionService(IAssemblySource source) Parameters Type Name Description IAssemblySource source The source assemblies used to search for types with given traits Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyFileLoadEngine.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyFileLoadEngine.html",
    "title": "Class AssemblyFileLoadEngine | FluentMigrator documentation",
    "keywords": "Class AssemblyFileLoadEngine Tries to load the assembly from a file Inheritance Object AssemblyFileLoadEngine Implements IAssemblyLoadEngine Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyFileLoadEngine : IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration public bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded Implements IAssemblyLoadEngine"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html",
    "title": "Class AssemblyLoaderFactory | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFactory Class that creates an IAssemblyLoader for a given assembly name Inheritance Object AssemblyLoaderFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFactory Methods | Improve this Doc View Source GetAssemblyLoader(String) Returns an assembly loader for an assembly with the given name Declaration public virtual IAssemblyLoader GetAssemblyLoader(string name) Parameters Type Name Description String name The assembly name (can be an assembly name or file name) Returns Type Description IAssemblyLoader The new assembly loader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html",
    "title": "Class AssemblyLoaderFromFile | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromFile Inheritance Object AssemblyLoaderFromFile Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromFile : IAssemblyLoader Constructors | Improve this Doc View Source AssemblyLoaderFromFile(String) Declaration public AssemblyLoaderFromFile(string name) Parameters Type Name Description String name Methods | Improve this Doc View Source Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html",
    "title": "Class AssemblyLoaderFromName | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromName Inheritance Object AssemblyLoaderFromName Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromName : IAssemblyLoader Constructors | Improve this Doc View Source AssemblyLoaderFromName(String) Declaration public AssemblyLoaderFromName(string name) Parameters Type Name Description String name Methods | Improve this Doc View Source Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.html",
    "title": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader Classes AssemblyLoaderFactory Class that creates an IAssemblyLoader for a given assembly name AssemblyLoaderFromFile AssemblyLoaderFromName Interfaces IAssemblyLoader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html",
    "title": "Interface IAssemblyLoader | FluentMigrator documentation",
    "keywords": "Interface IAssemblyLoader Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public interface IAssemblyLoader Methods | Improve this Doc View Source Load() Declaration Assembly Load() Returns Type Description Assembly"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyMigrationSourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyMigrationSourceItem.html",
    "title": "Class AssemblyMigrationSourceItem | FluentMigrator documentation",
    "keywords": "Class AssemblyMigrationSourceItem Implementation of IMigrationSourceItem that accepts a collection of assemblies Inheritance Object AssemblyMigrationSourceItem Implements IMigrationSourceItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyMigrationSourceItem : IMigrationSourceItem Constructors | Improve this Doc View Source AssemblyMigrationSourceItem(IReadOnlyCollection<Assembly>) Initializes a new instance of the AssemblyMigrationSourceItem class. Declaration public AssemblyMigrationSourceItem(IReadOnlyCollection<Assembly> assemblies) Parameters Type Name Description IReadOnlyCollection < Assembly > assemblies The assemblies to get the candidate types from Properties | Improve this Doc View Source MigrationTypeCandidates Gets all migration type candidates (unfiltered) Declaration public IEnumerable<Type> MigrationTypeCandidates { get; } Property Value Type Description IEnumerable < Type > Implements IMigrationSourceItem"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyNameLoadEngine.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyNameLoadEngine.html",
    "title": "Class AssemblyNameLoadEngine | FluentMigrator documentation",
    "keywords": "Class AssemblyNameLoadEngine Tries to load the assembly by name Inheritance Object AssemblyNameLoadEngine Implements IAssemblyLoadEngine Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyNameLoadEngine : IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration public bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded Implements IAssemblyLoadEngine"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySource.html",
    "title": "Class AssemblySource | FluentMigrator documentation",
    "keywords": "Class AssemblySource Provides access to delay-loaded assemblies Inheritance Object AssemblySource Implements IAssemblySource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySource : IAssemblySource Constructors | Improve this Doc View Source AssemblySource(IOptions<AssemblySourceOptions>, IEnumerable<IAssemblyLoadEngine>, IEnumerable<IAssemblySourceItem>) Initializes a new instance of the AssemblySource class. Declaration public AssemblySource(IOptions<AssemblySourceOptions> options, IEnumerable<IAssemblyLoadEngine> loadEngines, IEnumerable<IAssemblySourceItem> sourceItems) Parameters Type Name Description IOptions < AssemblySourceOptions > options The options IEnumerable < IAssemblyLoadEngine > loadEngines The assembly load engines IEnumerable < IAssemblySourceItem > sourceItems The additional source items | Improve this Doc View Source AssemblySource(Func<IAssemblyCollection>) Initializes a new instance of the AssemblySource class. Declaration [Obsolete] public AssemblySource(Func<IAssemblyCollection> assemblyCollectionFunc) Parameters Type Name Description Func < IAssemblyCollection > assemblyCollectionFunc Function to get the assembly collection Properties | Improve this Doc View Source Assemblies Gets the assemblies Declaration public IReadOnlyCollection<Assembly> Assemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > Implements IAssemblySource"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceConventionSetAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceConventionSetAccessor.html",
    "title": "Class AssemblySourceConventionSetAccessor | FluentMigrator documentation",
    "keywords": "Class AssemblySourceConventionSetAccessor Inheritance Object AssemblySourceConventionSetAccessor Implements IConventionSetAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceConventionSetAccessor : IConventionSetAccessor Constructors | Improve this Doc View Source AssemblySourceConventionSetAccessor(IOptionsSnapshot<TypeFilterOptions>, IEnumerable<ITypeSourceItem<IConventionSet>>, IServiceProvider, IAssemblySource) Initializes a new instance of the AssemblySourceVersionTableMetaDataAccessor class. Declaration public AssemblySourceConventionSetAccessor(IOptionsSnapshot<TypeFilterOptions> typeFilterOptions, IEnumerable<ITypeSourceItem<IConventionSet>> sources, IServiceProvider serviceProvider, IAssemblySource assemblySource = null) Parameters Type Name Description IOptionsSnapshot < TypeFilterOptions > typeFilterOptions The type filter options IEnumerable < ITypeSourceItem < IConventionSet >> sources The sources to get type candidates IServiceProvider serviceProvider The service provider used to instantiate the found IConventionSet implementation IAssemblySource assemblySource The assemblies used to search for the IConventionSet implementation Methods | Improve this Doc View Source GetConventionSet() Get the convention set to use. Declaration public IConventionSet GetConventionSet() Returns Type Description IConventionSet The convention set. Implements IConventionSetAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceItem.html",
    "title": "Class AssemblySourceItem | FluentMigrator documentation",
    "keywords": "Class AssemblySourceItem The default implementation of an IAssemblySourceItem Inheritance Object AssemblySourceItem Implements IAssemblySourceItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceItem : IAssemblySourceItem Constructors | Improve this Doc View Source AssemblySourceItem(Assembly[]) Initializes a new instance of the AssemblySourceItem class. Declaration public AssemblySourceItem(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to be returned by Assemblies Properties | Improve this Doc View Source Assemblies Gets all assemblies covered by this item Declaration public IEnumerable<Assembly> Assemblies { get; } Property Value Type Description IEnumerable < Assembly > Implements IAssemblySourceItem"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceItem-1.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceItem-1.html",
    "title": "Class AssemblySourceItem<T> | FluentMigrator documentation",
    "keywords": "Class AssemblySourceItem<T> Inheritance Object AssemblySourceItem<T> Implements ITypeSourceItem <T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceItem<T> : ITypeSourceItem<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source AssemblySourceItem(Assembly[]) Initializes a new instance of the AssemblySourceItem class. Declaration public AssemblySourceItem(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to load the type from Methods | Improve this Doc View Source GetCandidates(Predicate<Type>) Gets all type candidates that implement T . Declaration public IEnumerable<Type> GetCandidates(Predicate<Type> predicate) Parameters Type Name Description Predicate < Type > predicate The predicate to filter the types Returns Type Description IEnumerable < Type > Implements ITypeSourceItem<T>"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceMigrationRunnerConventionsAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceMigrationRunnerConventionsAccessor.html",
    "title": "Class AssemblySourceMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Class AssemblySourceMigrationRunnerConventionsAccessor Searches for a IMigrationRunnerConventions implementation in the given assemblies Inheritance Object AssemblySourceMigrationRunnerConventionsAccessor Implements IMigrationRunnerConventionsAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceMigrationRunnerConventionsAccessor : IMigrationRunnerConventionsAccessor Constructors | Improve this Doc View Source AssemblySourceMigrationRunnerConventionsAccessor(IServiceProvider, IAssemblySource) Initializes a new instance of the AssemblySourceMigrationRunnerConventionsAccessor class. Declaration public AssemblySourceMigrationRunnerConventionsAccessor(IServiceProvider serviceProvider, IAssemblySource assemblySource = null) Parameters Type Name Description IServiceProvider serviceProvider The service provider used to instantiate the found IMigrationRunnerConventions implementation IAssemblySource assemblySource The assemblies used to search for the IMigrationRunnerConventions implementation Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration public IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions Implements IMigrationRunnerConventionsAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceOptions.html",
    "title": "Class AssemblySourceOptions | FluentMigrator documentation",
    "keywords": "Class AssemblySourceOptions Options for the assembly loader Inheritance Object AssemblySourceOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceOptions Properties | Improve this Doc View Source AssemblyNames Gets or sets the assembly names Declaration public string[] AssemblyNames { get; set; } Property Value Type Description String []"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceVersionTableMetaDataAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblySourceVersionTableMetaDataAccessor.html",
    "title": "Class AssemblySourceVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Class AssemblySourceVersionTableMetaDataAccessor Scans the given source assemblies and returns a found IVersionTableMetaData implementation Inheritance Object AssemblySourceVersionTableMetaDataAccessor Implements IVersionTableMetaDataAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceVersionTableMetaDataAccessor : IVersionTableMetaDataAccessor Constructors | Improve this Doc View Source AssemblySourceVersionTableMetaDataAccessor(IOptionsSnapshot<TypeFilterOptions>, IEnumerable<IVersionTableMetaDataSourceItem>, IServiceProvider, IAssemblySource) Initializes a new instance of the AssemblySourceVersionTableMetaDataAccessor class. Declaration public AssemblySourceVersionTableMetaDataAccessor(IOptionsSnapshot<TypeFilterOptions> typeFilterOptions, IEnumerable<IVersionTableMetaDataSourceItem> sources, IServiceProvider serviceProvider, IAssemblySource assemblySource = null) Parameters Type Name Description IOptionsSnapshot < TypeFilterOptions > typeFilterOptions The type filter options IEnumerable < IVersionTableMetaDataSourceItem > sources The sources to get type candidates IServiceProvider serviceProvider The service provider used to instantiate the found IVersionTableMetaData implementation IAssemblySource assemblySource The assemblies used to search for the IVersionTableMetaData implementation Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Implements IVersionTableMetaDataAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyVersionTableMetaDataSourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.AssemblyVersionTableMetaDataSourceItem.html",
    "title": "Class AssemblyVersionTableMetaDataSourceItem | FluentMigrator documentation",
    "keywords": "Class AssemblyVersionTableMetaDataSourceItem Implementation of IVersionTableMetaDataSourceItem that uses assemblies as source Inheritance Object AssemblyVersionTableMetaDataSourceItem Implements IVersionTableMetaDataSourceItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyVersionTableMetaDataSourceItem : IVersionTableMetaDataSourceItem Constructors | Improve this Doc View Source AssemblyVersionTableMetaDataSourceItem(Assembly[]) Initializes a new instance of the AssemblyVersionTableMetaDataSourceItem class. Declaration public AssemblyVersionTableMetaDataSourceItem(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to load the type from Methods | Improve this Doc View Source GetCandidates(Predicate<Type>) Gets all version table metadata type candidates Declaration public IEnumerable<Type> GetCandidates(Predicate<Type> predicate) Parameters Type Name Description Predicate < Type > predicate The predicate to filter the types Returns Type Description IEnumerable < Type > Implements IVersionTableMetaDataSourceItem"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.ConfigurationConnectionStringReader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.ConfigurationConnectionStringReader.html",
    "title": "Class ConfigurationConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class ConfigurationConnectionStringReader Implementation of IConnectionStringReader that interprets tries to get the connection string from an or . Inheritance Object ConfigurationConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConfigurationConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source ConfigurationConnectionStringReader(IServiceProvider) Initializes a new instance of the ConfigurationConnectionStringReader class. Declaration public ConfigurationConnectionStringReader(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider to get the configuration interface from Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringOrName) Parameters Type Name Description String connectionStringOrName The name of the connection string Returns Type Description String Implements IConnectionStringReader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.ConnectionStringAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.ConnectionStringAccessor.html",
    "title": "Class ConnectionStringAccessor | FluentMigrator documentation",
    "keywords": "Class ConnectionStringAccessor Default implementation of IConnectionStringAccessor Inheritance Object ConnectionStringAccessor Implements IConnectionStringAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConnectionStringAccessor : IConnectionStringAccessor Constructors | Improve this Doc View Source ConnectionStringAccessor(IOptionsSnapshot<ProcessorOptions>, IOptionsSnapshot<SelectingProcessorAccessorOptions>, IEnumerable<IConnectionStringReader>) Initializes a new instance of the ConnectionStringAccessor class. Declaration public ConnectionStringAccessor(IOptionsSnapshot<ProcessorOptions> processorOptions, IOptionsSnapshot<SelectingProcessorAccessorOptions> processorSelectorOptions, IEnumerable<IConnectionStringReader> readers) Parameters Type Name Description IOptionsSnapshot < ProcessorOptions > processorOptions The processor options containing the connection string or name IOptionsSnapshot < SelectingProcessorAccessorOptions > processorSelectorOptions The selected processor (its ID is used as connection string name) IEnumerable < IConnectionStringReader > readers The registered connection string readers Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration public string ConnectionString { get; } Property Value Type Description String Implements IConnectionStringAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html",
    "title": "Class DefaultConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Class DefaultConnectionStringProvider Inheritance Object DefaultConnectionStringProvider Implements IConnectionStringProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class DefaultConnectionStringProvider : IConnectionStringProvider Constructors | Improve this Doc View Source DefaultConnectionStringProvider() Declaration [Obsolete] public DefaultConnectionStringProvider() | Improve this Doc View Source DefaultConnectionStringProvider(IEnumerable<IConnectionStringReader>) Declaration public DefaultConnectionStringProvider(IEnumerable<IConnectionStringReader> accessors) Parameters Type Name Description IEnumerable < IConnectionStringReader > accessors Methods | Improve this Doc View Source GetConnectionString(IAnnouncer, String, String, String, String) Declaration public string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String Implements IConnectionStringProvider"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.html",
    "title": "Namespace FluentMigrator.Runner.Initialization | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization Classes AssemblyCollectionService A compatibility service to get the assembly collection from the found migrations AssemblyFileLoadEngine Tries to load the assembly from a file AssemblyMigrationSourceItem Implementation of IMigrationSourceItem that accepts a collection of assemblies AssemblyNameLoadEngine Tries to load the assembly by name AssemblySource Provides access to delay-loaded assemblies AssemblySourceConventionSetAccessor AssemblySourceItem The default implementation of an IAssemblySourceItem AssemblySourceItem<T> AssemblySourceMigrationRunnerConventionsAccessor Searches for a IMigrationRunnerConventions implementation in the given assemblies AssemblySourceOptions Options for the assembly loader AssemblySourceVersionTableMetaDataAccessor Scans the given source assemblies and returns a found IVersionTableMetaData implementation AssemblyVersionTableMetaDataSourceItem Implementation of IVersionTableMetaDataSourceItem that uses assemblies as source ConfigurationConnectionStringReader Implementation of IConnectionStringReader that interprets tries to get the connection string from an or . ConnectionStringAccessor Default implementation of IConnectionStringAccessor DefaultConnectionStringProvider MigrationSource The default implementation of a IFilteringMigrationSource . PassThroughConnectionStringReader A connection string provider that just passes through the given connection string PassThroughMigrationRunnerConventionsAccessor Implementation of IMigrationRunnerConventionsAccessor that just passes through the given IMigrationRunnerConventions PassThroughVersionTableMetaDataAccessor Passes through the given version table metadata ProfileSource The default implementation of IProfileSource RunnerContext RunnerOptions The options for a migration runner TaskExecutor TypeFilterOptions Type filtering options Interfaces IAssemblyLoadEngine Assembly loader engine IAssemblySource Interface for an assembly provider IAssemblySourceItem Represents an item for the AssemblySource IConnectionStringAccessor Interface to get the connection string IConnectionStringProvider IConnectionStringReader Interface to access the connection string IConventionSetAccessor Accessor for an IConventionSet IFilteringMigrationSource This is a specialization of IMigrationSource that allows filtering the types beforehand IMigrationRunnerConventionsAccessor Access to the IMigrationRunnerConventions IMigrationSource The source for all types implementing IMigration and having the MigrationAttribute IMigrationSourceItem Interface to get the candidate types for MigrationSource IProfileSource Gets all types IRunnerContext IScanIn Interface to store the current source item IScanInBuilder Interface to define how the scanned assemblies are used IScanInForBuilder Defines how the scanned assemblies are used ITypeSourceItem<T> The source of types implementing the interface of type T . IVersionTableMetaDataAccessor Accessor for the IVersionTableMetaData IVersionTableMetaDataSourceItem The source of types implementing the IVersionTableMetaData interface."
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblyLoadEngine.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblyLoadEngine.html",
    "title": "Interface IAssemblyLoadEngine | FluentMigrator documentation",
    "keywords": "Interface IAssemblyLoadEngine Assembly loader engine Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblySource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblySource.html",
    "title": "Interface IAssemblySource | FluentMigrator documentation",
    "keywords": "Interface IAssemblySource Interface for an assembly provider Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblySource Remarks This will be used to find some user-defined interface implementations of out-of-process runners Properties | Improve this Doc View Source Assemblies Gets the assemblies Declaration IReadOnlyCollection<Assembly> Assemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblySourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IAssemblySourceItem.html",
    "title": "Interface IAssemblySourceItem | FluentMigrator documentation",
    "keywords": "Interface IAssemblySourceItem Represents an item for the AssemblySource Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblySourceItem Properties | Improve this Doc View Source Assemblies Gets all assemblies covered by this item Declaration IEnumerable<Assembly> Assemblies { get; } Property Value Type Description IEnumerable < Assembly >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringAccessor.html",
    "title": "Interface IConnectionStringAccessor | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringAccessor Interface to get the connection string Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConnectionStringAccessor Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration string ConnectionString { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html",
    "title": "Interface IConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringProvider Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IConnectionStringProvider Methods | Improve this Doc View Source GetConnectionString(IAnnouncer, String, String, String, String) Declaration string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringReader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IConnectionStringReader.html",
    "title": "Interface IConnectionStringReader | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringReader Interface to access the connection string Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConnectionStringReader Properties | Improve this Doc View Source Priority Gets the priority Declaration int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration string GetConnectionString(string connectionStringOrName) Parameters Type Name Description String connectionStringOrName The name of the connection string Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IConventionSetAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IConventionSetAccessor.html",
    "title": "Interface IConventionSetAccessor | FluentMigrator documentation",
    "keywords": "Interface IConventionSetAccessor Accessor for an IConventionSet Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConventionSetAccessor Methods | Improve this Doc View Source GetConventionSet() Get the convention set to use. Declaration IConventionSet GetConventionSet() Returns Type Description IConventionSet The convention set."
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IFilteringMigrationSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IFilteringMigrationSource.html",
    "title": "Interface IFilteringMigrationSource | FluentMigrator documentation",
    "keywords": "Interface IFilteringMigrationSource This is a specialization of IMigrationSource that allows filtering the types beforehand Inherited Members IMigrationSource.GetMigrations() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IFilteringMigrationSource : IMigrationSource Methods | Improve this Doc View Source GetMigrations(Func<Type, Boolean>) Returns the instances for all found types implementing IMigration Declaration IEnumerable<IMigration> GetMigrations(Func<Type, bool> predicate) Parameters Type Name Description Func < Type , Boolean > predicate The predicate used to select the types to instantiate Returns Type Description IEnumerable < IMigration > the instances for all found types implementing IMigration"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationRunnerConventionsAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationRunnerConventionsAccessor.html",
    "title": "Interface IMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerConventionsAccessor Access to the IMigrationRunnerConventions Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerConventionsAccessor Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationSource.html",
    "title": "Interface IMigrationSource | FluentMigrator documentation",
    "keywords": "Interface IMigrationSource The source for all types implementing IMigration and having the MigrationAttribute Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete(\"Use IFilteringMigrationSource to get optimal performance\")] public interface IMigrationSource Methods | Improve this Doc View Source GetMigrations() Returns the instances for all found types implementing IMigration and having the MigrationAttribute Declaration IEnumerable<IMigration> GetMigrations() Returns Type Description IEnumerable < IMigration > the instances for all found types implementing IMigration and having the MigrationAttribute"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationSourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IMigrationSourceItem.html",
    "title": "Interface IMigrationSourceItem | FluentMigrator documentation",
    "keywords": "Interface IMigrationSourceItem Interface to get the candidate types for MigrationSource Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationSourceItem Properties | Improve this Doc View Source MigrationTypeCandidates Gets all migration type candidates (unfiltered) Declaration IEnumerable<Type> MigrationTypeCandidates { get; } Property Value Type Description IEnumerable < Type >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IProfileSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IProfileSource.html",
    "title": "Interface IProfileSource | FluentMigrator documentation",
    "keywords": "Interface IProfileSource Gets all types Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IProfileSource Methods | Improve this Doc View Source GetProfiles(String) Declaration IEnumerable<IMigration> GetProfiles(string profile) Parameters Type Name Description String profile Returns Type Description IEnumerable < IMigration >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IRunnerContext.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IRunnerContext.html",
    "title": "Interface IRunnerContext | FluentMigrator documentation",
    "keywords": "Interface IRunnerContext Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IRunnerContext Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Remarks The option is now stored in AllowBreakingChange . | Improve this Doc View Source Announcer Gets or sets the announcer to use Declaration IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete(\"Use dependency injection to access 'application state'.\")] object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string (or name) Declaration string Connection { get; set; } Property Value Type Description String Remarks Will not be used when PreviewOnly is active. The option is now directly stored in ConnectionString | Improve this Doc View Source ConnectionStringConfigPath Gets or sets the path to an app.config/web.config to load the connection string from Declaration string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source Database Gets or sets the identifier of the processor to use Declaration [Obsolete(\"A preselection must happen during the migration runner configuration\")] string Database { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultSchemaName Gets or sets the default schema name Declaration string DefaultSchemaName { get; set; } Property Value Type Description String Remarks The default schema name must be set using the SchemaConvention | Improve this Doc View Source Namespace Gets or sets the root namespace for filtering Declaration string Namespace { get; set; } Property Value Type Description String Remarks The option is now directly stored in Namespace . | Improve this Doc View Source NestedNamespaces Gets or sets the value indicating whether all sub-namespaces should be included Declaration bool NestedNamespaces { get; set; } Property Value Type Description Boolean Remarks The option is now directly stored in NestedNamespaces . | Improve this Doc View Source NoConnection Gets or sets a value indicating whether no connection should be used Declaration bool NoConnection { get; set; } Property Value Type Description Boolean Remarks The difference between this and PreviewOnly is, that the preview-only mode uses the connection to determine the current state of the database. | Improve this Doc View Source PreviewOnly Gets or sets a value indicating whether a preview-only mode is active Declaration bool PreviewOnly { get; set; } Property Value Type Description Boolean Remarks The option is now directly stored in PreviewOnly | Improve this Doc View Source Profile Gets or sets the profile migrations to apply Declaration string Profile { get; set; } Property Value Type Description String Remarks The option is now stored in Profile . | Improve this Doc View Source ProviderSwitches Gets or sets the provider switches Declaration string ProviderSwitches { get; set; } Property Value Type Description String Remarks The option is now stored in PreviewOnly . | Improve this Doc View Source StartVersion Gets or sets the start version Declaration long StartVersion { get; set; } Property Value Type Description Int64 Remarks The option is now stored in StartVersion . | Improve this Doc View Source Steps Gets or sets the number of versions to apply Declaration int Steps { get; set; } Property Value Type Description Int32 Remarks The option is now stored in Steps . | Improve this Doc View Source StopWatch Gets or sets the stopwatch to use Declaration IStopWatch StopWatch { get; } Property Value Type Description IStopWatch | Improve this Doc View Source StripComments Gets or sets a value indicating whether the comments should be stripped Declaration bool StripComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Tags Gets or sets the tags the migrations must match Declaration IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > Remarks All migrations are matched when no tags were specified. The option is now stored in Tags . | Improve this Doc View Source Targets Gets or sets the assembly names Declaration string[] Targets { get; set; } Property Value Type Description String [] Remarks The option is now stored in AssemblyNames | Improve this Doc View Source Task Gets or sets the task to execute Declaration string Task { get; set; } Property Value Type Description String Remarks The option is now stored in Task . | Improve this Doc View Source Timeout Gets or sets the default command timeout in seconds Declaration int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TransactionPerSession Use one transaction for the whole session Declaration bool TransactionPerSession { get; set; } Property Value Type Description Boolean Remarks The default transaction behavior is to use one transaction per migration. The option is now stored in TransactionPerSession . | Improve this Doc View Source Version Gets or sets the target version Declaration long Version { get; set; } Property Value Type Description Int64 Remarks The option is now stored in Version . | Improve this Doc View Source WorkingDirectory Gets or sets the working directory Declaration string WorkingDirectory { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IScanIn.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IScanIn.html",
    "title": "Interface IScanIn | FluentMigrator documentation",
    "keywords": "Interface IScanIn Interface to store the current source item Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public interface IScanIn"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IScanInBuilder.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IScanInBuilder.html",
    "title": "Interface IScanInBuilder | FluentMigrator documentation",
    "keywords": "Interface IScanInBuilder Interface to define how the scanned assemblies are used Inherited Members IMigrationRunnerBuilder.Services Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public interface IScanInBuilder : IMigrationRunnerBuilder, IScanIn Properties | Improve this Doc View Source For Gets the next step Declaration IScanInForBuilder For { get; } Property Value Type Description IScanInForBuilder Extension Methods PostgresRunnerBuilderExtensions.AddPostgres(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres92(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres10_0(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres11_0(IMigrationRunnerBuilder) RedshiftRunnerBuilderExtensions.AddRedshift(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder, FirebirdOptions) Db2RunnerBuilderExtensions.AddDb2(IMigrationRunnerBuilder) Db2RunnerBuilderExtensions.AddDb2ISeries(IMigrationRunnerBuilder) SQLiteRunnerBuilderExtensions.AddSQLite(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql4(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql5(IMigrationRunnerBuilder) MigrationRunnerBuilderExtensions.ConfigureGlobalProcessorOptions(IMigrationRunnerBuilder, Action<ProcessorOptions>) MigrationRunnerBuilderExtensions.WithGlobalConnectionString(IMigrationRunnerBuilder, String) MigrationRunnerBuilderExtensions.WithGlobalConnectionString(IMigrationRunnerBuilder, Func<IServiceProvider, String>) MigrationRunnerBuilderExtensions.WithGlobalCommandTimeout(IMigrationRunnerBuilder, TimeSpan) MigrationRunnerBuilderExtensions.WithGlobalStripComments(IMigrationRunnerBuilder, Boolean) MigrationRunnerBuilderExtensions.AsGlobalPreview(IMigrationRunnerBuilder, Boolean) MigrationRunnerBuilderExtensions.WithVersionTable(IMigrationRunnerBuilder, IVersionTableMetaData) MigrationRunnerBuilderExtensions.WithRunnerConventions(IMigrationRunnerBuilder, IMigrationRunnerConventions) MigrationRunnerBuilderExtensions.WithMigrationsIn(IMigrationRunnerBuilder, Assembly[]) MigrationRunnerBuilderExtensions.ScanIn(IMigrationRunnerBuilder, Assembly[]) OracleRunnerBuilderExtensions.AddOracle(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracleManaged(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddDotConnectOracle(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracle12C(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracle12CManaged(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddDotConnectOracle12C(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2000(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2005(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2008(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2012(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2014(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2016(IMigrationRunnerBuilder) JetRunnerBuilderExtensions.AddJet(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere16(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere(IMigrationRunnerBuilder) HanaRunnerBuilderExtensions.AddHana(IMigrationRunnerBuilder)"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IScanInForBuilder.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IScanInForBuilder.html",
    "title": "Interface IScanInForBuilder | FluentMigrator documentation",
    "keywords": "Interface IScanInForBuilder Defines how the scanned assemblies are used Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public interface IScanInForBuilder : IScanIn Methods | Improve this Doc View Source All() Use the scanned assemblies for everything (migrations, etc...) Declaration IMigrationRunnerBuilder All() Returns Type Description IMigrationRunnerBuilder The next step | Improve this Doc View Source ConventionSet() Use the scanned assemblies to search for types implementing IConventionSet Declaration IScanInBuilder ConventionSet() Returns Type Description IScanInBuilder | Improve this Doc View Source EmbeddedResources() Use the scanned assemblies for embedded resources Declaration IScanInBuilder EmbeddedResources() Returns Type Description IScanInBuilder The next step | Improve this Doc View Source Migrations() Use the scanned assemblies for migrations Declaration IScanInBuilder Migrations() Returns Type Description IScanInBuilder The next step | Improve this Doc View Source VersionTableMetaData() Use the scanned assemblies for version table metadata Declaration IScanInBuilder VersionTableMetaData() Returns Type Description IScanInBuilder The next step"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.ITypeSourceItem-1.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.ITypeSourceItem-1.html",
    "title": "Interface ITypeSourceItem<T> | FluentMigrator documentation",
    "keywords": "Interface ITypeSourceItem<T> The source of types implementing the interface of type T . Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITypeSourceItem<T> where T : class Type Parameters Name Description T The type of the interface to implement Methods | Improve this Doc View Source GetCandidates(Predicate<Type>) Gets all type candidates that implement T . Declaration IEnumerable<Type> GetCandidates(Predicate<Type> predicate) Parameters Type Name Description Predicate < Type > predicate The predicate to filter the types Returns Type Description IEnumerable < Type >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IVersionTableMetaDataAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IVersionTableMetaDataAccessor.html",
    "title": "Interface IVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaDataAccessor Accessor for the IVersionTableMetaData Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IVersionTableMetaDataAccessor Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.IVersionTableMetaDataSourceItem.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.IVersionTableMetaDataSourceItem.html",
    "title": "Interface IVersionTableMetaDataSourceItem | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaDataSourceItem The source of types implementing the IVersionTableMetaData interface. Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IVersionTableMetaDataSourceItem Methods | Improve this Doc View Source GetCandidates(Predicate<Type>) Gets all version table metadata type candidates Declaration IEnumerable<Type> GetCandidates(Predicate<Type> predicate) Parameters Type Name Description Predicate < Type > predicate The predicate to filter the types Returns Type Description IEnumerable < Type >"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.MigrationSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.MigrationSource.html",
    "title": "Class MigrationSource | FluentMigrator documentation",
    "keywords": "Class MigrationSource The default implementation of a IFilteringMigrationSource . Inheritance Object MigrationSource Implements IFilteringMigrationSource IMigrationSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class MigrationSource : IFilteringMigrationSource, IMigrationSource Constructors | Improve this Doc View Source MigrationSource(IAssemblySource, IMigrationRunnerConventions) Initializes a new instance of the ProfileSource class. Declaration [Obsolete] public MigrationSource(IAssemblySource source, IMigrationRunnerConventions conventions) Parameters Type Name Description IAssemblySource source The assembly source IMigrationRunnerConventions conventions The migration runner conventions | Improve this Doc View Source MigrationSource(IAssemblySource, IMigrationRunnerConventions, IServiceProvider, IEnumerable<IMigrationSourceItem>) Initializes a new instance of the ProfileSource class. Declaration public MigrationSource(IAssemblySource source, IMigrationRunnerConventions conventions, IServiceProvider serviceProvider, IEnumerable<IMigrationSourceItem> sourceItems) Parameters Type Name Description IAssemblySource source The assembly source IMigrationRunnerConventions conventions The migration runner conventios IServiceProvider serviceProvider The service provider IEnumerable < IMigrationSourceItem > sourceItems The additional migration source items Methods | Improve this Doc View Source GetMigrations() Returns the instances for all found types implementing IMigration and having the MigrationAttribute Declaration public IEnumerable<IMigration> GetMigrations() Returns Type Description IEnumerable < IMigration > the instances for all found types implementing IMigration and having the MigrationAttribute | Improve this Doc View Source GetMigrations(Func<Type, Boolean>) Returns the instances for all found types implementing IMigration Declaration public IEnumerable<IMigration> GetMigrations(Func<Type, bool> predicate) Parameters Type Name Description Func < Type , Boolean > predicate The predicate used to select the types to instantiate Returns Type Description IEnumerable < IMigration > the instances for all found types implementing IMigration Implements IFilteringMigrationSource IMigrationSource"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringAccessorOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringAccessorOptions.html",
    "title": "Class AppConfigConnectionStringAccessorOptions | FluentMigrator documentation",
    "keywords": "Class AppConfigConnectionStringAccessorOptions Options for the AppConfigConnectionStringReader Inheritance Object AppConfigConnectionStringAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class AppConfigConnectionStringAccessorOptions Properties | Improve this Doc View Source ConnectionStringConfigPath Gets or sets the path where the config file can be found Declaration public string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source MachineName Gets or sets the machine name Declaration public string MachineName { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringReader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringReader.html",
    "title": "Class AppConfigConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class AppConfigConnectionStringReader A IConnectionStringReader implementation that uses the app or machine config Inheritance Object AppConfigConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class AppConfigConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source AppConfigConnectionStringReader(INetConfigManager, IAssemblySource, ILogger<AppConfigConnectionStringReader>, IOptions<AppConfigConnectionStringAccessorOptions>) Declaration public AppConfigConnectionStringReader(INetConfigManager configManager, IAssemblySource assemblySource, ILogger<AppConfigConnectionStringReader> logger, IOptions<AppConfigConnectionStringAccessorOptions> options) Parameters Type Name Description INetConfigManager configManager IAssemblySource assemblySource ILogger < AppConfigConnectionStringReader > logger IOptions < AppConfigConnectionStringAccessorOptions > options | Improve this Doc View Source AppConfigConnectionStringReader(INetConfigManager, String, IAnnouncer, IOptions<AppConfigConnectionStringAccessorOptions>) Declaration [Obsolete] public AppConfigConnectionStringReader(INetConfigManager configManager, string assemblyLocation, IAnnouncer announcer, IOptions<AppConfigConnectionStringAccessorOptions> options) Parameters Type Name Description INetConfigManager configManager String assemblyLocation IAnnouncer announcer IOptions < AppConfigConnectionStringAccessorOptions > options Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringOrName) Parameters Type Name Description String connectionStringOrName The name of the connection string Returns Type Description String Implements IConnectionStringReader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.html",
    "title": "Namespace FluentMigrator.Runner.Initialization.NetFramework | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization.NetFramework Classes AppConfigConnectionStringAccessorOptions Options for the AppConfigConnectionStringReader AppConfigConnectionStringReader A IConnectionStringReader implementation that uses the app or machine config Interfaces INetConfigManager Understand .NET config mechanism and provides access to Configuration sections"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.INetConfigManager.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.NetFramework.INetConfigManager.html",
    "title": "Interface INetConfigManager | FluentMigrator documentation",
    "keywords": "Interface INetConfigManager Understand .NET config mechanism and provides access to Configuration sections Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax public interface INetConfigManager Methods | Improve this Doc View Source LoadFromFile(String) Declaration Configuration LoadFromFile(string path) Parameters Type Name Description String path Returns Type Description Configuration | Improve this Doc View Source LoadFromMachineConfiguration() Declaration Configuration LoadFromMachineConfiguration() Returns Type Description Configuration"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughConnectionStringReader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughConnectionStringReader.html",
    "title": "Class PassThroughConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class PassThroughConnectionStringReader A connection string provider that just passes through the given connection string Inheritance Object PassThroughConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source PassThroughConnectionStringReader(String) Initializes a new instance of the PassThroughConnectionStringReader class. Declaration public PassThroughConnectionStringReader(string connectionString) Parameters Type Name Description String connectionString The connection string Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringName) Parameters Type Name Description String connectionStringName Returns Type Description String Implements IConnectionStringReader"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughMigrationRunnerConventionsAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughMigrationRunnerConventionsAccessor.html",
    "title": "Class PassThroughMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Class PassThroughMigrationRunnerConventionsAccessor Implementation of IMigrationRunnerConventionsAccessor that just passes through the given IMigrationRunnerConventions Inheritance Object PassThroughMigrationRunnerConventionsAccessor Implements IMigrationRunnerConventionsAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughMigrationRunnerConventionsAccessor : IMigrationRunnerConventionsAccessor Constructors | Improve this Doc View Source PassThroughMigrationRunnerConventionsAccessor(IMigrationRunnerConventions) Initializes a new instance of the PassThroughMigrationRunnerConventionsAccessor class. Declaration public PassThroughMigrationRunnerConventionsAccessor(IMigrationRunnerConventions conventions = null) Parameters Type Name Description IMigrationRunnerConventions conventions The conventions to return Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration public IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions Implements IMigrationRunnerConventionsAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughVersionTableMetaDataAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.PassThroughVersionTableMetaDataAccessor.html",
    "title": "Class PassThroughVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Class PassThroughVersionTableMetaDataAccessor Passes through the given version table metadata Inheritance Object PassThroughVersionTableMetaDataAccessor Implements IVersionTableMetaDataAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughVersionTableMetaDataAccessor : IVersionTableMetaDataAccessor Constructors | Improve this Doc View Source PassThroughVersionTableMetaDataAccessor(IVersionTableMetaData) Initializes a new instance of the PassThroughVersionTableMetaDataAccessor class. Declaration public PassThroughVersionTableMetaDataAccessor(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Implements IVersionTableMetaDataAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.ProfileSource.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.ProfileSource.html",
    "title": "Class ProfileSource | FluentMigrator documentation",
    "keywords": "Class ProfileSource The default implementation of IProfileSource Inheritance Object ProfileSource Implements IProfileSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ProfileSource : IProfileSource Constructors | Improve this Doc View Source ProfileSource(IFilteringMigrationSource, IMigrationRunnerConventions) Initializes a new instance of the ProfileSource class. Declaration public ProfileSource(IFilteringMigrationSource source, IMigrationRunnerConventions conventions) Parameters Type Name Description IFilteringMigrationSource source The assembly source IMigrationRunnerConventions conventions The migration runner conventions Methods | Improve this Doc View Source GetProfiles(String) Declaration public IEnumerable<IMigration> GetProfiles(string profile) Parameters Type Name Description String profile Returns Type Description IEnumerable < IMigration > Implements IProfileSource"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.RunnerContext.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.RunnerContext.html",
    "title": "Class RunnerContext | FluentMigrator documentation",
    "keywords": "Class RunnerContext Inheritance Object RunnerContext Implements IRunnerContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class RunnerContext : IRunnerContext Constructors | Improve this Doc View Source RunnerContext(IAnnouncer) Declaration public RunnerContext(IAnnouncer announcer) Parameters Type Name Description IAnnouncer announcer Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration public bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Remarks The option is now stored in AllowBreakingChange . | Improve this Doc View Source Announcer Declaration public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete(\"Use dependency injection to access 'application state'.\")] public object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Declaration public string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source ConnectionStringConfigPath Declaration public string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source Database Declaration public string Database { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultSchemaName Gets or sets the default schema name Declaration public string DefaultSchemaName { get; set; } Property Value Type Description String Remarks The default schema name must be set using the SchemaConvention | Improve this Doc View Source Namespace Declaration public string Namespace { get; set; } Property Value Type Description String | Improve this Doc View Source NestedNamespaces Declaration public bool NestedNamespaces { get; set; } Property Value Type Description Boolean | Improve this Doc View Source NoConnection Declaration public bool NoConnection { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PreviewOnly Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Profile Declaration public string Profile { get; set; } Property Value Type Description String | Improve this Doc View Source ProviderSwitches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String | Improve this Doc View Source StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Steps Declaration public int Steps { get; set; } Property Value Type Description Int32 | Improve this Doc View Source StopWatch Declaration public IStopWatch StopWatch { get; } Property Value Type Description IStopWatch | Improve this Doc View Source StripComments Declaration public bool StripComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Tags Declaration public IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Targets Declaration public string[] Targets { get; set; } Property Value Type Description String [] | Improve this Doc View Source Task Declaration public string Task { get; set; } Property Value Type Description String | Improve this Doc View Source Timeout Declaration public int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TransactionPerSession Declaration public bool TransactionPerSession { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Version Declaration public long Version { get; set; } Property Value Type Description Int64 | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Implements IRunnerContext"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.RunnerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.RunnerOptions.html",
    "title": "Class RunnerOptions | FluentMigrator documentation",
    "keywords": "Class RunnerOptions The options for a migration runner Inheritance Object RunnerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class RunnerOptions Constructors | Improve this Doc View Source RunnerOptions() Initializes a new instance of the RunnerOptions class. Declaration public RunnerOptions() | Improve this Doc View Source RunnerOptions(IRunnerContext) Initializes a new instance of the RunnerOptions class. Declaration [Obsolete] public RunnerOptions(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration public bool AllowBreakingChange { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete(\"Use dependency injection to access 'application state'.\")] public object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source IncludeUntaggedMaintenances Gets or sets a value indicating whether untagged maintenance items should always be loaded/executed. Declaration public bool IncludeUntaggedMaintenances { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeUntaggedMigrations Gets or sets a value indicating whether untagged migrations should always be loaded/executed. Declaration public bool IncludeUntaggedMigrations { get; set; } Property Value Type Description Boolean | Improve this Doc View Source NoConnection Gets or sets a value indicating whether no connection should be used Declaration public bool NoConnection { get; set; } Property Value Type Description Boolean Remarks The difference between this and PreviewOnly is, that the preview-only mode uses the connection to determine the current state of the database. | Improve this Doc View Source Profile Gets or sets the profile migrations to apply Declaration public string Profile { get; set; } Property Value Type Description String | Improve this Doc View Source StartVersion Gets or sets the start version Declaration public long StartVersion { get; set; } Property Value Type Description Int64 Remarks This will be used only if NoConnection is set to true. Otherwise current state of target database will determine which migrations are needed. | Improve this Doc View Source Steps Gets or sets the number of versions to apply Declaration public int Steps { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Tags Gets or sets the tags the migrations must match Declaration public string[] Tags { get; set; } Property Value Type Description String [] Remarks All migrations are matched when no tags were specified | Improve this Doc View Source Task Gets or sets the task to execute Declaration public string Task { get; set; } Property Value Type Description String | Improve this Doc View Source TransactionPerSession Use one transaction for the whole session Declaration public bool TransactionPerSession { get; set; } Property Value Type Description Boolean Remarks The default transaction behavior is to use one transaction per migration. | Improve this Doc View Source Version Gets or sets the target version Declaration public long Version { get; set; } Property Value Type Description Int64 Methods | Improve this Doc View Source SetValuesFrom(IRunnerContext) Sets the values from the given runner context Declaration [Obsolete] public void SetValuesFrom(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context"
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.TaskExecutor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.TaskExecutor.html",
    "title": "Class TaskExecutor | FluentMigrator documentation",
    "keywords": "Class TaskExecutor Inheritance Object TaskExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public class TaskExecutor Constructors | Improve this Doc View Source TaskExecutor(IRunnerContext) Declaration [Obsolete] public TaskExecutor(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext | Improve this Doc View Source TaskExecutor(IRunnerContext, AssemblyLoaderFactory, IConnectionStringProvider) Declaration [Obsolete] public TaskExecutor(IRunnerContext runnerContext, AssemblyLoaderFactory assemblyLoaderFactory, IConnectionStringProvider connectionStringProvider = null) Parameters Type Name Description IRunnerContext runnerContext AssemblyLoaderFactory assemblyLoaderFactory IConnectionStringProvider connectionStringProvider | Improve this Doc View Source TaskExecutor(IRunnerContext, IConnectionStringProvider, AssemblyLoaderFactory, MigrationProcessorFactoryProvider) Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public TaskExecutor(IRunnerContext runnerContext, IConnectionStringProvider connectionStringProvider, AssemblyLoaderFactory assemblyLoaderFactory, MigrationProcessorFactoryProvider factoryProvider) Parameters Type Name Description IRunnerContext runnerContext IConnectionStringProvider connectionStringProvider AssemblyLoaderFactory assemblyLoaderFactory MigrationProcessorFactoryProvider factoryProvider | Improve this Doc View Source TaskExecutor(ILogger<TaskExecutor>, IAssemblySource, IOptions<RunnerOptions>, IServiceProvider) Declaration public TaskExecutor(ILogger<TaskExecutor> logger, IAssemblySource assemblySource, IOptions<RunnerOptions> runnerOptions, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < TaskExecutor > logger IAssemblySource assemblySource IOptions < RunnerOptions > runnerOptions IServiceProvider serviceProvider Properties | Improve this Doc View Source ConnectionStringProvider Gets the connection string provider Declaration [Obsolete] protected IConnectionStringProvider ConnectionStringProvider { get; } Property Value Type Description IConnectionStringProvider | Improve this Doc View Source Runner Gets the current migration runner Declaration protected IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner Remarks This will only be set during a migration operation | Improve this Doc View Source ServiceProvider Gets the service provider used to instantiate all migration services Declaration protected IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Methods | Improve this Doc View Source Execute() Declaration public void Execute() | Improve this Doc View Source GetTargetAssemblies() Declaration [Obsolete] protected virtual IEnumerable<Assembly> GetTargetAssemblies() Returns Type Description IEnumerable < Assembly > | Improve this Doc View Source HasMigrationsToApply() Checks whether the current task will actually run any migrations. Can be used to decide whether it's necessary perform a backup before the migrations are executed. Declaration public bool HasMigrationsToApply() Returns Type Description Boolean | Improve this Doc View Source Initialize() Will be called during the runner scope initialization Declaration protected virtual void Initialize() Remarks The Runner isn't initialized yet."
  },
  "api/v3.x/FluentMigrator.Runner.Initialization.TypeFilterOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Initialization.TypeFilterOptions.html",
    "title": "Class TypeFilterOptions | FluentMigrator documentation",
    "keywords": "Class TypeFilterOptions Type filtering options Inheritance Object TypeFilterOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class TypeFilterOptions Properties | Improve this Doc View Source Namespace Gets or sets the root namespace for filtering Declaration public string Namespace { get; set; } Property Value Type Description String | Improve this Doc View Source NestedNamespaces Gets or sets the value indicating whether all sub-namespaces should be included Declaration public bool NestedNamespaces { get; set; } Property Value Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.IProfileLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IProfileLoader.html",
    "title": "Interface IProfileLoader | FluentMigrator documentation",
    "keywords": "Interface IProfileLoader Interface to load migrations tagged with a profile name Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IProfileLoader Properties | Improve this Doc View Source SupportsParameterlessApplyProfile Gets a value indicating whether this instance allows a call to ApplyProfiles() Declaration [Obsolete] bool SupportsParameterlessApplyProfile { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProfiles() Apply all loaded profiles Declaration [Obsolete] void ApplyProfiles() | Improve this Doc View Source ApplyProfiles(IMigrationRunner) Apply all loaded profiles with the given runner Declaration void ApplyProfiles(IMigrationRunner runner) Parameters Type Name Description IMigrationRunner runner The migration runner | Improve this Doc View Source FindProfilesIn(IAssemblyCollection, String) Find all profile name tagged migrations in the given assembly collection Declaration [Obsolete] IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies The assemblies to load the profile tagged migrations from String profile The profile name to search the migrations for Returns Type Description IEnumerable < IMigration > The found migrations"
  },
  "api/v3.x/FluentMigrator.Runner.IStopWatch.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IStopWatch.html",
    "title": "Interface IStopWatch | FluentMigrator documentation",
    "keywords": "Interface IStopWatch Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IStopWatch Methods | Improve this Doc View Source ElapsedTime() Declaration TimeSpan ElapsedTime() Returns Type Description TimeSpan | Improve this Doc View Source Start() Declaration void Start() | Improve this Doc View Source Stop() Declaration void Stop() | Improve this Doc View Source Time(Action) Declaration TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan"
  },
  "api/v3.x/FluentMigrator.Runner.IVersionLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.IVersionLoader.html",
    "title": "Interface IVersionLoader | FluentMigrator documentation",
    "keywords": "Interface IVersionLoader Manages the version table and the stored versions Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionLoader Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Gets a value indicating whether the schema for the version table has been created (or already exited) Declaration bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Gets a value indicating whether the version table has been created (or already exited) Declaration bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source Runner The runner this version loader belongs to Declaration IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source VersionInfo Gets an interface to query/update the status of migrations Declaration IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionTableMetaData Gets the version table meta data Declaration IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Methods | Improve this Doc View Source DeleteVersion(Int64) Deletes a version from the version table Declaration void DeleteVersion(long version) Parameters Type Name Description Int64 version The version to delete from the version table | Improve this Doc View Source GetVersionTableMetaData() Get the version table metadata Declaration IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData The version table metadata | Improve this Doc View Source LoadVersionInfo() Loads all version data stored in the version table Declaration void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Removes the version table Declaration void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Adds the version information Declaration void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version The version number | Improve this Doc View Source UpdateVersionInfo(Int64, String) Adds the version information Declaration void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version The version number String description The version description"
  },
  "api/v3.x/FluentMigrator.Runner.JetRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.JetRunnerBuilderExtensions.html",
    "title": "Class JetRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class JetRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object JetRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Jet.dll Syntax public static class JetRunnerBuilderExtensions Methods | Improve this Doc View Source AddJet(IMigrationRunnerBuilder) Adds JET engine (Access) support Declaration public static IMigrationRunnerBuilder AddJet(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the JET engine (Access)-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.AnnouncerFluentMigratorLogger.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.AnnouncerFluentMigratorLogger.html",
    "title": "Class AnnouncerFluentMigratorLogger | FluentMigrator documentation",
    "keywords": "Class AnnouncerFluentMigratorLogger A implementation that redirects all messages to a IAnnouncer Inheritance Object FluentMigratorLogger AnnouncerFluentMigratorLogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class AnnouncerFluentMigratorLogger : FluentMigratorLogger Constructors | Improve this Doc View Source AnnouncerFluentMigratorLogger(IAnnouncer) Initializes a new instance of the AnnouncerFluentMigratorLogger class. Declaration public AnnouncerFluentMigratorLogger(IAnnouncer announcer) Parameters Type Name Description IAnnouncer announcer The announcer to send all messages to Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorLogger.WriteSql(String)"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorConsoleLogger.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorConsoleLogger.html",
    "title": "Class FluentMigratorConsoleLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorConsoleLogger The default fluent migrator console logger Inheritance Object FluentMigratorLogger FluentMigratorRunnerLogger FluentMigratorConsoleLogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public class FluentMigratorConsoleLogger : FluentMigratorRunnerLogger Constructors | Improve this Doc View Source FluentMigratorConsoleLogger(FluentMigratorLoggerOptions) Initializes a new instance of the FluentMigratorConsoleLogger class. Declaration public FluentMigratorConsoleLogger(FluentMigratorLoggerOptions options) Parameters Type Name Description FluentMigratorLoggerOptions options The logger options Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorRunnerLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorRunnerLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorRunnerLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorRunnerLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorRunnerLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorRunnerLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorRunnerLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorRunnerLogger.WriteSql(String)"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorConsoleLoggerProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorConsoleLoggerProvider.html",
    "title": "Class FluentMigratorConsoleLoggerProvider | FluentMigrator documentation",
    "keywords": "Class FluentMigratorConsoleLoggerProvider The default FluentMigrator console output Inheritance Object FluentMigratorConsoleLoggerProvider Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public class FluentMigratorConsoleLoggerProvider : ILoggerProvider Constructors | Improve this Doc View Source FluentMigratorConsoleLoggerProvider(IOptions<FluentMigratorLoggerOptions>) Initializes a new instance of the FluentMigratorConsoleLoggerProvider class. Declaration public FluentMigratorConsoleLoggerProvider(IOptions<FluentMigratorLoggerOptions> options) Parameters Type Name Description IOptions < FluentMigratorLoggerOptions > options The logger options Methods | Improve this Doc View Source CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Returns Type Description ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose()"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorLogger.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorLogger.html",
    "title": "Class FluentMigratorLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLogger The base class for FluentMigrator-style implementations Inheritance Object FluentMigratorLogger AnnouncerFluentMigratorLogger FluentMigratorRunnerLogger Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class FluentMigratorLogger : ILogger Constructors | Improve this Doc View Source FluentMigratorLogger(FluentMigratorLoggerOptions) Initializes a new instance of the FluentMigratorLogger class. Declaration protected FluentMigratorLogger(FluentMigratorLoggerOptions options) Parameters Type Name Description FluentMigratorLoggerOptions options The logger options Methods | Improve this Doc View Source BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState | Improve this Doc View Source IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel Returns Type Description Boolean | Improve this Doc View Source Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description LogLevel logLevel EventId eventId TState state Exception exception Func <TState, Exception , String > formatter Type Parameters Name Description TState | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected abstract void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected abstract void WriteEmphasize(string message) Parameters Type Name Description String message The message to write | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected abstract void WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected abstract void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected abstract void WriteError(string message) Parameters Type Name Description String message The error message | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected abstract void WriteHeading(string message) Parameters Type Name Description String message The heading message | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected abstract void WriteSay(string message) Parameters Type Name Description String message The message | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected abstract void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorRunnerLogger.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.FluentMigratorRunnerLogger.html",
    "title": "Class FluentMigratorRunnerLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorRunnerLogger Logger that provides some default formatting Inheritance Object FluentMigratorLogger FluentMigratorRunnerLogger FluentMigratorConsoleLogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class FluentMigratorRunnerLogger : FluentMigratorLogger Constructors | Improve this Doc View Source FluentMigratorRunnerLogger(TextWriter, TextWriter, FluentMigratorLoggerOptions) Declaration public FluentMigratorRunnerLogger(TextWriter output, TextWriter error, FluentMigratorLoggerOptions options) Parameters Type Name Description TextWriter output TextWriter error FluentMigratorLoggerOptions options Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorLogger.WriteSql(String)"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.html",
    "title": "Namespace FluentMigrator.Runner.Logging | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Logging Classes AnnouncerFluentMigratorLogger A implementation that redirects all messages to a IAnnouncer FluentMigratorConsoleLogger The default fluent migrator console logger FluentMigratorConsoleLoggerProvider The default FluentMigrator console output FluentMigratorLogger The base class for FluentMigrator-style implementations FluentMigratorRunnerLogger Logger that provides some default formatting LogFileFluentMigratorLoggerOptions The configuration for a LogFileFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Outputs the SQL statements to a log file PasswordMaskUtility SqlScriptFluentMigratorLoggerOptions The configuration for a SqlScriptFluentMigratorLoggerProvider SqlScriptFluentMigratorLoggerProvider The base class for writing SQL scripts produced by the IMigrationGenerator implementations Interfaces IPasswordMaskUtility"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.IPasswordMaskUtility.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.IPasswordMaskUtility.html",
    "title": "Interface IPasswordMaskUtility | FluentMigrator documentation",
    "keywords": "Interface IPasswordMaskUtility Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public interface IPasswordMaskUtility Methods | Improve this Doc View Source ApplyMask(String) Declaration string ApplyMask(string connectionString) Parameters Type Name Description String connectionString Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerOptions.html",
    "title": "Class LogFileFluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class LogFileFluentMigratorLoggerOptions The configuration for a LogFileFluentMigratorLoggerProvider Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions LogFileFluentMigratorLoggerOptions Inherited Members SqlScriptFluentMigratorLoggerOptions.OutputGoBetweenStatements SqlScriptFluentMigratorLoggerOptions.OutputSemicolonDelimiter FluentMigratorLoggerOptions.ShowSql FluentMigratorLoggerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class LogFileFluentMigratorLoggerOptions : SqlScriptFluentMigratorLoggerOptions Properties | Improve this Doc View Source OutputFileName Gets or sets the full path to the output file name Declaration public string OutputFileName { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerProvider.html",
    "title": "Class LogFileFluentMigratorLoggerProvider | FluentMigrator documentation",
    "keywords": "Class LogFileFluentMigratorLoggerProvider Outputs the SQL statements to a log file Inheritance Object SqlScriptFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Inherited Members SqlScriptFluentMigratorLoggerProvider.CreateLogger(String) SqlScriptFluentMigratorLoggerProvider.Dispose() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class LogFileFluentMigratorLoggerProvider : SqlScriptFluentMigratorLoggerProvider Constructors | Improve this Doc View Source LogFileFluentMigratorLoggerProvider(IAssemblySource, IOptions<LogFileFluentMigratorLoggerOptions>) Initializes a new instance of the LogFileFluentMigratorLoggerProvider class. Declaration public LogFileFluentMigratorLoggerProvider(IAssemblySource assemblySource, IOptions<LogFileFluentMigratorLoggerOptions> options) Parameters Type Name Description IAssemblySource assemblySource The assembly source IOptions < LogFileFluentMigratorLoggerOptions > options The log file logger options"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.PasswordMaskUtility.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.PasswordMaskUtility.html",
    "title": "Class PasswordMaskUtility | FluentMigrator documentation",
    "keywords": "Class PasswordMaskUtility Inheritance Object PasswordMaskUtility Implements IPasswordMaskUtility Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public class PasswordMaskUtility : IPasswordMaskUtility Methods | Improve this Doc View Source ApplyMask(String) Declaration public string ApplyMask(string connectionString) Parameters Type Name Description String connectionString Returns Type Description String Implements IPasswordMaskUtility"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerOptions.html",
    "title": "Class SqlScriptFluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class SqlScriptFluentMigratorLoggerOptions The configuration for a SqlScriptFluentMigratorLoggerProvider Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions LogFileFluentMigratorLoggerOptions Inherited Members FluentMigratorLoggerOptions.ShowSql FluentMigratorLoggerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlScriptFluentMigratorLoggerOptions : FluentMigratorLoggerOptions Constructors | Improve this Doc View Source SqlScriptFluentMigratorLoggerOptions() Initializes a new instance of the SqlScriptFluentMigratorLoggerOptions class. Declaration public SqlScriptFluentMigratorLoggerOptions() Properties | Improve this Doc View Source OutputGoBetweenStatements Gets or sets a value indicating whether a GO statement should be output between the SQL statements Declaration public bool OutputGoBetweenStatements { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OutputSemicolonDelimiter Gets or sets a value indicating whether a semicolon (;) delimiter should be output on end the SQL statements Declaration public bool OutputSemicolonDelimiter { get; set; } Property Value Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerProvider.html",
    "title": "Class SqlScriptFluentMigratorLoggerProvider | FluentMigrator documentation",
    "keywords": "Class SqlScriptFluentMigratorLoggerProvider The base class for writing SQL scripts produced by the IMigrationGenerator implementations Inheritance Object SqlScriptFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlScriptFluentMigratorLoggerProvider : ILoggerProvider Constructors | Improve this Doc View Source SqlScriptFluentMigratorLoggerProvider(TextWriter, SqlScriptFluentMigratorLoggerOptions, Boolean) Initializes a new instance of the SqlScriptFluentMigratorLoggerProvider class. Declaration public SqlScriptFluentMigratorLoggerProvider(TextWriter output, SqlScriptFluentMigratorLoggerOptions options = null, bool disposeWriter = true) Parameters Type Name Description TextWriter output The writer to write the SQL script to SqlScriptFluentMigratorLoggerOptions options The log file logger options Boolean disposeWriter A value indicating whether the output writer should be disposed by this logger provider Methods | Improve this Doc View Source CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Returns Type Description ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose()"
  },
  "api/v3.x/FluentMigrator.Runner.LoggingUtilities.html": {
    "href": "api/v3.x/FluentMigrator.Runner.LoggingUtilities.html",
    "title": "Class LoggingUtilities | FluentMigrator documentation",
    "keywords": "Class LoggingUtilities Utility functions around logging Inheritance Object LoggingUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class LoggingUtilities Methods | Improve this Doc View Source LogElapsedTime(ILogger, TimeSpan) Log elapsed time Declaration public static void LogElapsedTime(this ILogger logger, TimeSpan timeSpan) Parameters Type Name Description ILogger logger The logger TimeSpan timeSpan The elapsed time | Improve this Doc View Source LogEmphasized(ILogger, String) Log emphasized message Declaration public static void LogEmphasized(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogHeader(ILogger, String) Log header message Declaration public static void LogHeader(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogSay(ILogger, String) Log an informational message Declaration public static void LogSay(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogSql(ILogger, String) Log SQL code Declaration public static void LogSql(this ILogger logger, string sql) Parameters Type Name Description ILogger logger The logger String sql The SQL code | Improve this Doc View Source WriteException(TextWriter, Exception, Int32) Writes the exception (and all its inner exceptions) to the given writer Declaration public static void WriteException(this TextWriter writer, Exception exception, int level = 0) Parameters Type Name Description TextWriter writer The TextWriter to write the text to Exception exception The exception containing the message Int32 level A value > 0 when this exception is an inner exception | Improve this Doc View Source WriteExceptionMessage(TextWriter, String, Int32) Writes the exception message to the given writer Declaration public static void WriteExceptionMessage(this TextWriter writer, string message, int level = 0) Parameters Type Name Description TextWriter writer The TextWriter to write the text to String message The exception message Int32 level A value > 0 when this exception is an inner exception | Improve this Doc View Source WriteHeader(TextWriter) Writes the header to the given writer Declaration public static void WriteHeader(this TextWriter writer) Parameters Type Name Description TextWriter writer The TextWriter to write the text to | Improve this Doc View Source WriteHorizontalRuler(TextWriter) Writes a horizontal ruler to the given writer Declaration public static void WriteHorizontalRuler(this TextWriter writer) Parameters Type Name Description TextWriter writer The TextWriter to write the text to"
  },
  "api/v3.x/FluentMigrator.Runner.MaintenanceLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MaintenanceLoader.html",
    "title": "Class MaintenanceLoader | FluentMigrator documentation",
    "keywords": "Class MaintenanceLoader Inheritance Object MaintenanceLoader Implements IMaintenanceLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MaintenanceLoader : IMaintenanceLoader Constructors | Improve this Doc View Source MaintenanceLoader(IAssemblySource, IOptions<RunnerOptions>, IMigrationRunnerConventions, IServiceProvider) Declaration public MaintenanceLoader(IAssemblySource assemblySource, IOptions<RunnerOptions> options, IMigrationRunnerConventions conventions, IServiceProvider serviceProvider) Parameters Type Name Description IAssemblySource assemblySource IOptions < RunnerOptions > options IMigrationRunnerConventions conventions IServiceProvider serviceProvider | Improve this Doc View Source MaintenanceLoader(IAssemblyCollection, IEnumerable<String>, IMigrationRunnerConventions) Declaration [Obsolete] public MaintenanceLoader(IAssemblyCollection assemblyCollection, IEnumerable<string> tags, IMigrationRunnerConventions conventions) Parameters Type Name Description IAssemblyCollection assemblyCollection IEnumerable < String > tags IMigrationRunnerConventions conventions Methods | Improve this Doc View Source LoadMaintenance(MigrationStage) Declaration public IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo > Implements IMaintenanceLoader"
  },
  "api/v3.x/FluentMigrator.Runner.MigrationConventionsExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationConventionsExtensions.html",
    "title": "Class MigrationConventionsExtensions | FluentMigrator documentation",
    "keywords": "Class MigrationConventionsExtensions Extension methods for IMigrationRunnerConventions . Inheritance Object MigrationConventionsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class MigrationConventionsExtensions Methods | Improve this Doc View Source HasRequestedTags(IMigrationRunnerConventions, Type, String[], Boolean) Returns a value indicating whether the type matches the given tag list. Declaration public static bool HasRequestedTags(this IMigrationRunnerConventions conventions, Type type, string[] tagsList, bool includeUntagged) Parameters Type Name Description IMigrationRunnerConventions conventions The conventions to use. Type type The type to validate. String [] tagsList The list of tags to check against. Boolean includeUntagged Allow untagged entries. Returns Type Description Boolean true when the requested tags match the tags attached to the type."
  },
  "api/v3.x/FluentMigrator.Runner.MigrationRunner.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationRunner.html",
    "title": "Class MigrationRunner | FluentMigrator documentation",
    "keywords": "Class MigrationRunner The default IMigrationRunner implementation Inheritance Object MigrationRunner Implements IMigrationRunner IMigrationScopeStarter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunner : IMigrationRunner, IMigrationScopeStarter Constructors | Improve this Doc View Source MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner(IAssemblyCollection assemblies, IRunnerContext runnerContext, IMigrationProcessor processor, IVersionTableMetaData versionTableMetaData = null, IMigrationRunnerConventions migrationRunnerConventions = null) Parameters Type Name Description IAssemblyCollection assemblies The collection of assemblies to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IVersionTableMetaData versionTableMetaData The version table metadata IMigrationRunnerConventions migrationRunnerConventions The custom migration runner conventions | Improve this Doc View Source MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions, IConventionSet, IMigrationScopeManager) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner(IAssemblyCollection assemblies, IRunnerContext runnerContext, IMigrationProcessor processor, IVersionTableMetaData versionTableMetaData, IMigrationRunnerConventions migrationRunnerConventions, IConventionSet conventionSet, IMigrationScopeManager migrationScopeHandler = null) Parameters Type Name Description IAssemblyCollection assemblies The collection of assemblies to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IVersionTableMetaData versionTableMetaData The version table metadata IMigrationRunnerConventions migrationRunnerConventions The custom migration runner conventions IConventionSet conventionSet The expression convention set IMigrationScopeManager migrationScopeHandler The migration scope handler | Improve this Doc View Source MigrationRunner(IOptions<RunnerOptions>, IOptionsSnapshot<ProcessorOptions>, IProfileLoader, IProcessorAccessor, IMaintenanceLoader, IMigrationInformationLoader, ILogger<MigrationRunner>, IStopWatch, IMigrationRunnerConventionsAccessor, IAssemblySource, MigrationValidator, IServiceProvider) Initializes a new instance of the MigrationRunner class. Declaration public MigrationRunner(IOptions<RunnerOptions> options, IOptionsSnapshot<ProcessorOptions> processorOptions, IProfileLoader profileLoader, IProcessorAccessor processorAccessor, IMaintenanceLoader maintenanceLoader, IMigrationInformationLoader migrationLoader, ILogger<MigrationRunner> logger, IStopWatch stopWatch, IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor, IAssemblySource assemblySource, MigrationValidator migrationValidator, IServiceProvider serviceProvider) Parameters Type Name Description IOptions < RunnerOptions > options The migration runner options IOptionsSnapshot < ProcessorOptions > processorOptions The migration processor options IProfileLoader profileLoader The profile loader IProcessorAccessor processorAccessor The migration processor accessor IMaintenanceLoader maintenanceLoader The maintenance loader IMigrationInformationLoader migrationLoader The migration loader ILogger < MigrationRunner > logger The logger IStopWatch stopWatch The stopwatch IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor The accessor for migration runner conventions IAssemblySource assemblySource The assemblies to scan for migrations, etc... MigrationValidator migrationValidator The validator for migrations IServiceProvider serviceProvider The service provider | Improve this Doc View Source MigrationRunner(IOptions<RunnerOptions>, IOptionsSnapshot<ProcessorOptions>, IProfileLoader, IProcessorAccessor, IMaintenanceLoader, IMigrationInformationLoader, ILogger<MigrationRunner>, IStopWatch, IMigrationRunnerConventionsAccessor, IAssemblySource, MigrationValidator, IServiceProvider, IMigrationScopeManager) Initializes a new instance of the MigrationRunner class. Declaration public MigrationRunner(IOptions<RunnerOptions> options, IOptionsSnapshot<ProcessorOptions> processorOptions, IProfileLoader profileLoader, IProcessorAccessor processorAccessor, IMaintenanceLoader maintenanceLoader, IMigrationInformationLoader migrationLoader, ILogger<MigrationRunner> logger, IStopWatch stopWatch, IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor, IAssemblySource assemblySource, MigrationValidator migrationValidator, IServiceProvider serviceProvider, IMigrationScopeManager migrationScopeHandler) Parameters Type Name Description IOptions < RunnerOptions > options The migration runner options IOptionsSnapshot < ProcessorOptions > processorOptions The migration processor options IProfileLoader profileLoader The profile loader IProcessorAccessor processorAccessor The migration processor accessor IMaintenanceLoader maintenanceLoader The maintenance loader IMigrationInformationLoader migrationLoader The migration loader ILogger < MigrationRunner > logger The logger IStopWatch stopWatch The stopwatch IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor The accessor for migration runner conventions IAssemblySource assemblySource The assemblies to scan for migrations, etc... MigrationValidator migrationValidator The validator for migrations IServiceProvider serviceProvider The service provider IMigrationScopeManager migrationScopeHandler THe migration scope handler | Improve this Doc View Source MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner(Assembly assembly, IRunnerContext runnerContext, IMigrationProcessor processor) Parameters Type Name Description Assembly assembly The assembly to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor | Improve this Doc View Source MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor, IConventionSet) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner(Assembly assembly, IRunnerContext runnerContext, IMigrationProcessor processor, IConventionSet conventionSet) Parameters Type Name Description Assembly assembly The assembly to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IConventionSet conventionSet The expression convention set Properties | Improve this Doc View Source CaughtExceptions Gets the caught exceptions when SilentlyFail is true Declaration public IReadOnlyList<Exception> CaughtExceptions { get; } Property Value Type Description IReadOnlyList < Exception > | Improve this Doc View Source Conventions Gets the migration runner conventions Declaration public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source CurrentScope Gets or sets the currently active migration scope. Setter for IMigrationScopeManager was removed. Setter for this property will throw exception when custom migration scope handler is used Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope Exceptions Type Condition NotSupportedException Thrown when custom IMigrationScopeManager implementation is used | Improve this Doc View Source MaintenanceLoader Gets the maintenance loader Declaration public IMaintenanceLoader MaintenanceLoader { get; } Property Value Type Description IMaintenanceLoader | Improve this Doc View Source MigrationAssemblies Gets the assemblies searched for migrations, profile migrations, etc... Declaration [Obsolete] public IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source MigrationLoader Gets or sets the migration loader to be used by this migration runner Declaration public IMigrationInformationLoader MigrationLoader { get; set; } Property Value Type Description IMigrationInformationLoader | Improve this Doc View Source Processor Gets the migration processor used by this runner Declaration public IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor | Improve this Doc View Source ProfileLoader Gets or sets the profile loader Declaration public IProfileLoader ProfileLoader { get; set; } Property Value Type Description IProfileLoader | Improve this Doc View Source RunnerContext Gets the runner context Declaration [Obsolete] public IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext | Improve this Doc View Source SilentlyFail Gets a value indicating whether exceptions should be caught Declaration public bool SilentlyFail { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TransactionPerSession Gets a value indicating whether a single transaction for the whole session should be used Declaration public bool TransactionPerSession { get; } Property Value Type Description Boolean | Improve this Doc View Source VersionLoader Gets or sets the version loader Declaration public IVersionLoader VersionLoader { get; set; } Property Value Type Description IVersionLoader Methods | Improve this Doc View Source ApplyMaintenance(MigrationStage, Boolean) Apply maintenance changes Declaration public void ApplyMaintenance(MigrationStage stage, bool useAutomaticTransactionManagement) Parameters Type Name Description MigrationStage stage The maintenance stage Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source ApplyMigrationDown(IMigrationInfo, Boolean) Revert the migration using the given migration information Declaration public virtual void ApplyMigrationDown(IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo The migration information Boolean useTransaction true when a transaction for this operation should be used | Improve this Doc View Source ApplyMigrationUp(IMigrationInfo, Boolean) Apply the migration using the given migration information Declaration public virtual void ApplyMigrationUp(IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo The migration information Boolean useTransaction true when a transaction for this migration should be used | Improve this Doc View Source ApplyProfiles() Apply all matching profiles Declaration public void ApplyProfiles() | Improve this Doc View Source BeginScope() Starts a new migration scope Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope A new migration scope | Improve this Doc View Source Down(IMigration) Executes an Down migration Declaration public void Down(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ExecuteExpressions(ICollection<IMigrationExpression>) Execute each migration expression in the expression collection Declaration protected void ExecuteExpressions(ICollection<IMigrationExpression> expressions) Parameters Type Name Description ICollection < IMigrationExpression > expressions The expressions to execute | Improve this Doc View Source HasMigrationsToApplyDown(Int64) Returns true when there are migrations to revert Declaration public bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version The target version Returns Type Description Boolean true when there are migrations to revert | Improve this Doc View Source HasMigrationsToApplyRollback() Are there migrations available for a rollback? Declaration public bool HasMigrationsToApplyRollback() Returns Type Description Boolean true when there are migrations available for a rollback | Improve this Doc View Source HasMigrationsToApplyUp(Nullable<Int64>) Returns true when there are migrations to apply Declaration public bool HasMigrationsToApplyUp(long? version = null) Parameters Type Name Description Nullable < Int64 > version The target version (or null if the last one should be used) Returns Type Description Boolean true when there are migrations to apply | Improve this Doc View Source ListMigrations() List all migrations to the logger Declaration public void ListMigrations() | Improve this Doc View Source MigrateDown(Int64) Migrate down to the given version Declaration public void MigrateDown(long targetVersion) Parameters Type Name Description Int64 targetVersion | Improve this Doc View Source MigrateDown(Int64, Boolean) Revert migrations down to the given targetVersion Declaration public void MigrateDown(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion The target version that should become the last applied migration version Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source MigrateUp() Executes all found (and unapplied) migrations Declaration public void MigrateUp() | Improve this Doc View Source MigrateUp(Boolean) Apply migrations Declaration public void MigrateUp(bool useAutomaticTransactionManagement) Parameters Type Name Description Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source MigrateUp(Int64) Executes all found (and unapplied) migrations up to the given version Declaration public void MigrateUp(long targetVersion) Parameters Type Name Description Int64 targetVersion | Improve this Doc View Source MigrateUp(Int64, Boolean) Apply migrations up to the given targetVersion Declaration public void MigrateUp(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion The target migration version Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source Rollback(Int32) Rollback the given number of steps Declaration public void Rollback(int steps) Parameters Type Name Description Int32 steps The number of steps to rollback | Improve this Doc View Source Rollback(Int32, Boolean) Rollback the last steps Declaration public void Rollback(int steps, bool useAutomaticTransactionManagement) Parameters Type Name Description Int32 steps The number of migrations to rollback Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source RollbackToVersion(Int64) Rollback to a given version Declaration public void RollbackToVersion(long version) Parameters Type Name Description Int64 version The target version to rollback to | Improve this Doc View Source RollbackToVersion(Int64, Boolean) Rollback to a given version Declaration public void RollbackToVersion(long version, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 version The version to rollback to (exclusive) Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source Up(IMigration) Executes an Up migration Declaration public void Up(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ValidateVersionOrder() Validate that there were no missing migration versions Declaration public void ValidateVersionOrder() Remarks Throws an exception if a missing migration was found. Implements IMigrationRunner IMigrationScopeStarter"
  },
  "api/v3.x/FluentMigrator.Runner.MigrationRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationRunnerBuilderExtensions.html",
    "title": "Class MigrationRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class MigrationRunnerBuilderExtensions Extension methods for the IMigrationRunnerBuilder interface Inheritance Object MigrationRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public static class MigrationRunnerBuilderExtensions Methods | Improve this Doc View Source AsGlobalPreview(IMigrationRunnerBuilder, Boolean) Sets the global preview mode Declaration public static IMigrationRunnerBuilder AsGlobalPreview(this IMigrationRunnerBuilder builder, bool preview = true) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Boolean preview The global preview mode Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source ConfigureGlobalProcessorOptions(IMigrationRunnerBuilder, Action<ProcessorOptions>) Sets configuration action for global processor options Declaration public static IMigrationRunnerBuilder ConfigureGlobalProcessorOptions(this IMigrationRunnerBuilder builder, Action<ProcessorOptions> configureAction) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Action < ProcessorOptions > configureAction The configuration action Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source ScanIn(IMigrationRunnerBuilder, Assembly[]) Scans for types in the given assemblies Declaration public static IScanInBuilder ScanIn(this IMigrationRunnerBuilder builder, params Assembly[] assemblies) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Assembly [] assemblies The assemblies to scan Returns Type Description IScanInBuilder The next step | Improve this Doc View Source WithGlobalCommandTimeout(IMigrationRunnerBuilder, TimeSpan) Sets the global command timeout Declaration public static IMigrationRunnerBuilder WithGlobalCommandTimeout(this IMigrationRunnerBuilder builder, TimeSpan commandTimeout) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder TimeSpan commandTimeout The global command timeout Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithGlobalConnectionString(IMigrationRunnerBuilder, Func<IServiceProvider, String>) Sets the global connection string Declaration public static IMigrationRunnerBuilder WithGlobalConnectionString(this IMigrationRunnerBuilder builder, Func<IServiceProvider, string> configureConnectionString) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Func < IServiceProvider , String > configureConnectionString The function that creates the connection string. Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithGlobalConnectionString(IMigrationRunnerBuilder, String) Sets the global connection string Declaration public static IMigrationRunnerBuilder WithGlobalConnectionString(this IMigrationRunnerBuilder builder, string connectionStringOrName) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder String connectionStringOrName The connection string or name to use Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithGlobalStripComments(IMigrationRunnerBuilder, Boolean) Sets the global strip comment Declaration public static IMigrationRunnerBuilder WithGlobalStripComments(this IMigrationRunnerBuilder builder, bool stripComments) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Boolean stripComments The global strip comments Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithMigrationsIn(IMigrationRunnerBuilder, Assembly[]) Adds the migrations Declaration public static IMigrationRunnerBuilder WithMigrationsIn(this IMigrationRunnerBuilder builder, params Assembly[] assemblies) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Assembly [] assemblies The target assemblies Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithRunnerConventions(IMigrationRunnerBuilder, IMigrationRunnerConventions) Sets the migration runner conventions Declaration public static IMigrationRunnerBuilder WithRunnerConventions(this IMigrationRunnerBuilder builder, IMigrationRunnerConventions conventions) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder IMigrationRunnerConventions conventions The migration runner conventions Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithVersionTable(IMigrationRunnerBuilder, IVersionTableMetaData) Sets the version table meta data Declaration public static IMigrationRunnerBuilder WithVersionTable(this IMigrationRunnerBuilder builder, IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder IVersionTableMetaData versionTableMetaData The version table meta data Returns Type Description IMigrationRunnerBuilder The runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.MigrationRunnerConventions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationRunnerConventions.html",
    "title": "Class MigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class MigrationRunnerConventions Inheritance Object MigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunnerConventions : IMigrationRunnerConventions Constructors | Improve this Doc View Source MigrationRunnerConventions() Declaration public MigrationRunnerConventions() Properties | Improve this Doc View Source GetMaintenanceStage Declaration public Func<Type, MigrationStage?> GetMaintenanceStage { get; set; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] public Func<Type, IMigrationInfo> GetMigrationInfo { get; set; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Declaration public Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; set; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; set; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions"
  },
  "api/v3.x/FluentMigrator.Runner.MigrationScopeHandler.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationScopeHandler.html",
    "title": "Class MigrationScopeHandler | FluentMigrator documentation",
    "keywords": "Class MigrationScopeHandler Inheritance Object MigrationScopeHandler Implements IMigrationScopeManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationScopeHandler : IMigrationScopeManager Constructors | Improve this Doc View Source MigrationScopeHandler(IMigrationProcessor) Declaration [Obsolete] public MigrationScopeHandler(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor | Improve this Doc View Source MigrationScopeHandler(IMigrationProcessor, ProcessorOptions) Declaration public MigrationScopeHandler(IMigrationProcessor processor, ProcessorOptions processorOptions) Parameters Type Name Description IMigrationProcessor processor ProcessorOptions processorOptions Properties | Improve this Doc View Source CurrentScope Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope Methods | Improve this Doc View Source BeginScope() Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope | Improve this Doc View Source CreateOrWrapMigrationScope(Boolean) Declaration public IMigrationScope CreateOrWrapMigrationScope(bool transactional = true) Parameters Type Name Description Boolean transactional Returns Type Description IMigrationScope Implements IMigrationScopeManager"
  },
  "api/v3.x/FluentMigrator.Runner.MigrationValidator.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MigrationValidator.html",
    "title": "Class MigrationValidator | FluentMigrator documentation",
    "keywords": "Class MigrationValidator Inheritance Object MigrationValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationValidator Constructors | Improve this Doc View Source MigrationValidator() Declaration [Obsolete] public MigrationValidator() | Improve this Doc View Source MigrationValidator(IAnnouncer, IConventionSet) Declaration [Obsolete] public MigrationValidator(IAnnouncer announcer, IConventionSet conventions) Parameters Type Name Description IAnnouncer announcer IConventionSet conventions | Improve this Doc View Source MigrationValidator(ILogger<MigrationValidator>, IConventionSet, IMigrationExpressionValidator) Declaration public MigrationValidator(ILogger<MigrationValidator> logger, IConventionSet conventions, IMigrationExpressionValidator validator = null) Parameters Type Name Description ILogger < MigrationValidator > logger IConventionSet conventions IMigrationExpressionValidator validator Methods | Improve this Doc View Source ApplyConventionsToAndValidateExpressions(IMigration, IEnumerable<IMigrationExpression>) Validates each migration expression that has implemented the ICanBeValidated interface. It throws an InvalidMigrationException exception if validation fails. Declaration public void ApplyConventionsToAndValidateExpressions(IMigration migration, IEnumerable<IMigrationExpression> expressions) Parameters Type Name Description IMigration migration The current migration being run IEnumerable < IMigrationExpression > expressions All the expressions contained in the up or down action"
  },
  "api/v3.x/FluentMigrator.Runner.MySqlRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.MySqlRunnerBuilderExtensions.html",
    "title": "Class MySqlRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class MySqlRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object MySqlRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.MySql.dll Syntax public static class MySqlRunnerBuilderExtensions Methods | Improve this Doc View Source AddMySql4(IMigrationRunnerBuilder) Adds MySQL 4 support Declaration public static IMigrationRunnerBuilder AddMySql4(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the MySQL 4-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddMySql5(IMigrationRunnerBuilder) Adds MySQL 5 support Declaration public static IMigrationRunnerBuilder AddMySql5(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the MySQL 5-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.NoOpMigrationScope.html": {
    "href": "api/v3.x/FluentMigrator.Runner.NoOpMigrationScope.html",
    "title": "Class NoOpMigrationScope | FluentMigrator documentation",
    "keywords": "Class NoOpMigrationScope A \"no-operation\" migration scope Inheritance Object NoOpMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class NoOpMigrationScope : IMigrationScope, IDisposable Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration public bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration public void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration public void Complete() Remarks This usually involves the commit a transaction. | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IMigrationScope System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.OracleRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.OracleRunnerBuilderExtensions.html",
    "title": "Class OracleRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class OracleRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object OracleRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Oracle.dll Syntax public static class OracleRunnerBuilderExtensions Methods | Improve this Doc View Source AddDotConnectOracle(IMigrationRunnerBuilder) Adds .Connect Oracle support Declaration public static IMigrationRunnerBuilder AddDotConnectOracle(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the .Connect Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddDotConnectOracle12C(IMigrationRunnerBuilder) Adds .Connect Oracle 12c support Declaration public static IMigrationRunnerBuilder AddDotConnectOracle12C(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the .Connect Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracle(IMigrationRunnerBuilder) Adds Oracle support Declaration public static IMigrationRunnerBuilder AddOracle(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracle12C(IMigrationRunnerBuilder) Adds Oracle 12c support Declaration public static IMigrationRunnerBuilder AddOracle12C(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracle12CManaged(IMigrationRunnerBuilder) Adds managed Oracle 12c support Declaration public static IMigrationRunnerBuilder AddOracle12CManaged(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the managed Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracleManaged(IMigrationRunnerBuilder) Adds managed Oracle support Declaration public static IMigrationRunnerBuilder AddOracleManaged(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the managed Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.PostgresRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.PostgresRunnerBuilderExtensions.html",
    "title": "Class PostgresRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class PostgresRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object PostgresRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Postgres.dll Syntax public static class PostgresRunnerBuilderExtensions Methods | Improve this Doc View Source AddPostgres(IMigrationRunnerBuilder) Adds Postgres support Declaration public static IMigrationRunnerBuilder AddPostgres(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Postgres-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddPostgres10_0(IMigrationRunnerBuilder) Adds Postgres 10.0 support Declaration public static IMigrationRunnerBuilder AddPostgres10_0(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Postgres-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddPostgres11_0(IMigrationRunnerBuilder) Adds Postgres 11.0 support Declaration public static IMigrationRunnerBuilder AddPostgres11_0(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Postgres-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddPostgres92(IMigrationRunnerBuilder) Adds Postgres 9.2 support Declaration public static IMigrationRunnerBuilder AddPostgres92(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Postgres-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html",
    "title": "Class ConnectionlessProcessor | FluentMigrator documentation",
    "keywords": "Class ConnectionlessProcessor Inheritance Object ConnectionlessProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConnectionlessProcessor : IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source ConnectionlessProcessor(IMigrationGenerator, IRunnerContext, IMigrationProcessorOptions) Declaration [Obsolete] public ConnectionlessProcessor(IMigrationGenerator generator, IRunnerContext context, IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IRunnerContext context IMigrationProcessorOptions options | Improve this Doc View Source ConnectionlessProcessor(IGeneratorAccessor, ILogger, IOptionsSnapshot<ProcessorOptions>, IOptions<SelectingProcessorAccessorOptions>) Declaration public ConnectionlessProcessor(IGeneratorAccessor generatorAccessor, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IOptions<SelectingProcessorAccessorOptions> accessorOptions) Parameters Type Name Description IGeneratorAccessor generatorAccessor ILogger logger IOptionsSnapshot < ProcessorOptions > options IOptions < SelectingProcessorAccessorOptions > accessorOptions | Improve this Doc View Source ConnectionlessProcessor(IGeneratorAccessor, ILogger, IOptionsSnapshot<ProcessorOptions>, IReadOnlyCollection<String>) Declaration public ConnectionlessProcessor(IGeneratorAccessor generatorAccessor, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IReadOnlyCollection<string> processorIds) Parameters Type Name Description IGeneratorAccessor generatorAccessor ILogger logger IOptionsSnapshot < ProcessorOptions > options IReadOnlyCollection < String > processorIds Properties | Improve this Doc View Source Announcer Declaration [Obsolete] public IAnnouncer Announcer { get; set; } Property Value Type Description IAnnouncer | Improve this Doc View Source ConnectionString Declaration [Obsolete(\"Will change from public to protected\")] public string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source DatabaseType Declaration public string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Declaration public IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > | Improve this Doc View Source Generator Declaration public IMigrationGenerator Generator { get; set; } Property Value Type Description IMigrationGenerator | Improve this Doc View Source Options Declaration public ProcessorOptions Options { get; set; } Property Value Type Description ProcessorOptions Methods | Improve this Doc View Source BeginTransaction() Declaration public void BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source CommitTransaction() Declaration public void CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration public void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Declaration public void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args | Improve this Doc View Source Exists(String, Object[]) Declaration public bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean | Improve this Doc View Source IndexExists(String, String, String) Declaration public bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean | Improve this Doc View Source Process(AlterColumnExpression) Declaration public void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Process(AlterTableExpression) Declaration public void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Process(CreateColumnExpression) Declaration public void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Process(CreateIndexExpression) Declaration public void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Process(CreateTableExpression) Declaration public void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Process(DeleteDataExpression) Declaration public void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Process(DeleteTableExpression) Declaration public void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Process(InsertDataExpression) Declaration public void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(RenameTableExpression) Declaration public void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Process(UpdateDataExpression) Declaration public void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Process(String) Declaration protected void Process(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Read(String, Object[]) Declaration public DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet | Improve this Doc View Source ReadTableData(String, String) Declaration public DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet | Improve this Doc View Source RollbackTransaction() Declaration public void RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean | Improve this Doc View Source SequenceExists(String, String) Declaration public bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean | Improve this Doc View Source TableExists(String, String) Declaration public bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessor.Options Declaration [Obsolete] IMigrationProcessorOptions IMigrationProcessor.Options { get; } Returns Type Description IMigrationProcessorOptions Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ConnectionlessProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ConnectionlessProcessorFactory.html",
    "title": "Class ConnectionlessProcessorFactory | FluentMigrator documentation",
    "keywords": "Class ConnectionlessProcessorFactory A processor factory to create SQL statements only (without executing them) Inheritance Object ConnectionlessProcessorFactory Implements IMigrationProcessorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class ConnectionlessProcessorFactory : IMigrationProcessorFactory Constructors | Improve this Doc View Source ConnectionlessProcessorFactory(IGeneratorAccessor, IRunnerContext) Initializes a new instance of the ConnectionlessProcessorFactory class. Declaration [Obsolete] public ConnectionlessProcessorFactory(IGeneratorAccessor generatorAccessor, IRunnerContext runnerContext) Parameters Type Name Description IGeneratorAccessor generatorAccessor The accessor to get the migration generator to use IRunnerContext runnerContext The runner context Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Returns a value indicating whether this processor factory can use the given DB provider Declaration public bool IsForProvider(string provider) Parameters Type Name Description String provider The DB provider name Returns Type Description Boolean true when this processor factory can use the given DB provider Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DataReaderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DataReaderExtensions.html",
    "title": "Class DataReaderExtensions | FluentMigrator documentation",
    "keywords": "Class DataReaderExtensions Inheritance Object DataReaderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public static class DataReaderExtensions Methods | Improve this Doc View Source ReadDataSet(IDataReader) Declaration public static DataSet ReadDataSet(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataSet | Improve this Doc View Source ReadTable(IDataReader) Declaration public static DataTable ReadTable(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataTable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html",
    "title": "Class Db2DbFactory | FluentMigrator documentation",
    "keywords": "Class Db2DbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2DbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source Db2DbFactory() Declaration [Obsolete] public Db2DbFactory() | Improve this Doc View Source Db2DbFactory(IServiceProvider) Declaration public Db2DbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2Processor.html",
    "title": "Class Db2Processor | FluentMigrator documentation",
    "keywords": "Class Db2Processor Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Processor : GenericProcessorBase Constructors | Improve this Doc View Source Db2Processor(Db2DbFactory, Db2Generator, Db2Quoter, ILogger<Db2Processor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public Db2Processor(Db2DbFactory factory, Db2Generator generator, Db2Quoter quoter, ILogger<Db2Processor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Db2DbFactory factory Db2Generator generator Db2Quoter quoter ILogger < Db2Processor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source Db2Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public Db2Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html",
    "title": "Class Db2ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax [Obsolete] public class Db2ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source Db2ProcessorFactory() Declaration [Obsolete] public Db2ProcessorFactory() | Improve this Doc View Source Db2ProcessorFactory(IServiceProvider) Declaration public Db2ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2 Classes Db2DbFactory Db2Processor Db2ProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html",
    "title": "Class Db2ISeriesDbFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2ISeriesDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source Db2ISeriesDbFactory() Declaration [Obsolete] public Db2ISeriesDbFactory() | Improve this Doc View Source Db2ISeriesDbFactory(IServiceProvider) Declaration public Db2ISeriesDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html",
    "title": "Class Db2ISeriesProcessor | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessor Inheritance Object ProcessorBase GenericProcessorBase Db2ISeriesProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesProcessor : GenericProcessorBase Constructors | Improve this Doc View Source Db2ISeriesProcessor(Db2ISeriesDbFactory, Db2ISeriesGenerator, Db2ISeriesQuoter, ILogger<Db2ISeriesProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public Db2ISeriesProcessor(Db2ISeriesDbFactory factory, Db2ISeriesGenerator generator, Db2ISeriesQuoter quoter, ILogger<Db2ISeriesProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Db2ISeriesDbFactory factory Db2ISeriesGenerator generator Db2ISeriesQuoter quoter ILogger < Db2ISeriesProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source Db2ISeriesProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public Db2ISeriesProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html",
    "title": "Class Db2ISeriesProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessorFactory Inheritance Object MigrationProcessorFactory Db2ISeriesProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax [Obsolete] public class Db2ISeriesProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source Db2ISeriesProcessorFactory() Declaration [Obsolete] public Db2ISeriesProcessorFactory() | Improve this Doc View Source Db2ISeriesProcessorFactory(IServiceProvider) Declaration public Db2ISeriesProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries Classes Db2ISeriesDbFactory Db2ISeriesProcessor Db2ISeriesProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DbFactoryBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DbFactoryBase.html",
    "title": "Class DbFactoryBase | FluentMigrator documentation",
    "keywords": "Class DbFactoryBase Inheritance Object DbFactoryBase ReflectionBasedDbFactory ReflectionBasedDbFactory SqlAnywhereDbFactory SqlServerDbFactory SqlServerDbFactory Implements IDbFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class DbFactoryBase : IDbFactory Constructors | Improve this Doc View Source DbFactoryBase() Declaration protected DbFactoryBase() | Improve this Doc View Source DbFactoryBase(DbProviderFactory) Declaration protected DbFactoryBase(DbProviderFactory factory) Parameters Type Name Description DbProviderFactory factory Properties | Improve this Doc View Source Factory Gets the DB provider factory Declaration public virtual DbProviderFactory Factory { get; } Property Value Type Description DbProviderFactory Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] public virtual IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand | Improve this Doc View Source CreateConnection(String) Declaration [Obsolete] public IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection | Improve this Doc View Source CreateFactory() Declaration protected abstract DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracle12CProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracle12CProcessor.html",
    "title": "Class DotConnectOracle12CProcessor | FluentMigrator documentation",
    "keywords": "Class DotConnectOracle12CProcessor A processor for Oracle 12c using the DotConnect database access library Inheritance Object ProcessorBase GenericProcessorBase DotConnectOracleProcessor DotConnectOracle12CProcessor Implements IMigrationProcessor Inherited Members DotConnectOracleProcessor.SchemaExists(String) DotConnectOracleProcessor.TableExists(String, String) DotConnectOracleProcessor.ColumnExists(String, String, String) DotConnectOracleProcessor.ConstraintExists(String, String, String) DotConnectOracleProcessor.IndexExists(String, String, String) DotConnectOracleProcessor.SequenceExists(String, String) DotConnectOracleProcessor.DefaultValueExists(String, String, String, Object) DotConnectOracleProcessor.Execute(String, Object[]) DotConnectOracleProcessor.Exists(String, Object[]) DotConnectOracleProcessor.ReadTableData(String, String) DotConnectOracleProcessor.Read(String, Object[]) DotConnectOracleProcessor.Process(PerformDBOperationExpression) DotConnectOracleProcessor.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracle12CProcessor : DotConnectOracleProcessor Constructors | Improve this Doc View Source DotConnectOracle12CProcessor(DotConnectOracleDbFactory, IOracle12CGenerator, ILogger<DotConnectOracle12CProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Initializes a new instance of the DotConnectOracle12CProcessor class. Declaration public DotConnectOracle12CProcessor(DotConnectOracleDbFactory factory, IOracle12CGenerator generator, ILogger<DotConnectOracle12CProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description DotConnectOracleDbFactory factory The DB object factory IOracle12CGenerator generator The SQL generator ILogger < DotConnectOracle12CProcessor > logger The logger IOptionsSnapshot < ProcessorOptions > options The processor options IConnectionStringAccessor connectionStringAccessor The accessor for the connection strings Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides DotConnectOracleProcessor.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides DotConnectOracleProcessor.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html",
    "title": "Class DotConnectOracleDbFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory DotConnectOracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source DotConnectOracleDbFactory() Declaration [Obsolete] public DotConnectOracleDbFactory() | Improve this Doc View Source DotConnectOracleDbFactory(IServiceProvider) Declaration public DotConnectOracleDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html",
    "title": "Class DotConnectOracleProcessor | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessor Inheritance Object ProcessorBase GenericProcessorBase DotConnectOracleProcessor DotConnectOracle12CProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleProcessor : GenericProcessorBase Constructors | Improve this Doc View Source DotConnectOracleProcessor(DotConnectOracleDbFactory, IOracleGenerator, ILogger<DotConnectOracleProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public DotConnectOracleProcessor(DotConnectOracleDbFactory factory, IOracleGenerator generator, ILogger<DotConnectOracleProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description DotConnectOracleDbFactory factory IOracleGenerator generator ILogger < DotConnectOracleProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source DotConnectOracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, DotConnectOracleDbFactory) Declaration [Obsolete] public DotConnectOracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, DotConnectOracleDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options DotConnectOracleDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html",
    "title": "Class DotConnectOracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessorFactory Inheritance Object MigrationProcessorFactory DotConnectOracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class DotConnectOracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source DotConnectOracleProcessorFactory() Declaration [Obsolete] public DotConnectOracleProcessorFactory() | Improve this Doc View Source DotConnectOracleProcessorFactory(IServiceProvider) Declaration public DotConnectOracleProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.DotConnectOracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle Classes DotConnectOracle12CProcessor A processor for Oracle 12c using the DotConnect database access library DotConnectOracleDbFactory DotConnectOracleProcessor DotConnectOracleProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html",
    "title": "Class AdoHelper | FluentMigrator documentation",
    "keywords": "Class AdoHelper Inheritance Object AdoHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public static class AdoHelper Methods | Improve this Doc View Source FormatValue(String) Declaration public static string FormatValue(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source GetIntValue(Object) Declaration public static int? GetIntValue(object val) Parameters Type Name Description Object val Returns Type Description Nullable < Int32 > | Improve this Doc View Source GetStringValue(Object) Declaration public static string GetStringValue(object val) Parameters Type Name Description Object val Returns Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html",
    "title": "Class ColumnInfo | FluentMigrator documentation",
    "keywords": "Class ColumnInfo Inheritance Object ColumnInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ColumnInfo Properties | Improve this Doc View Source CharacterLength Declaration public int? CharacterLength { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source CustomType Declaration public string CustomType { get; } Property Value Type Description String | Improve this Doc View Source DBType Declaration public DbType? DBType { get; } Property Value Type Description Nullable < DbType > | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; } Property Value Type Description Object | Improve this Doc View Source FieldSubType Declaration public int? FieldSubType { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source FieldType Declaration public int? FieldType { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source FieldTypeName Declaration public string FieldTypeName { get; } Property Value Type Description String | Improve this Doc View Source IsNullable Declaration public bool IsNullable { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description Int32 | Improve this Doc View Source Precision Declaration public int? Precision { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TableName Declaration public string TableName { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<ColumnInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ColumnInfo >"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html",
    "title": "Class ConstraintInfo | FluentMigrator documentation",
    "keywords": "Class ConstraintInfo Inheritance Object ConstraintInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ConstraintInfo Properties | Improve this Doc View Source DeleteRule Declaration public Rule DeleteRule { get; } Property Value Type Description Rule | Improve this Doc View Source ForeignIndex Declaration public IndexInfo ForeignIndex { get; } Property Value Type Description IndexInfo | Improve this Doc View Source IndexName Declaration public string IndexName { get; } Property Value Type Description String | Improve this Doc View Source IsForeignKey Declaration public bool IsForeignKey { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNotNull Declaration public bool IsNotNull { get; } Property Value Type Description Boolean | Improve this Doc View Source IsPrimaryKey Declaration public bool IsPrimaryKey { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source UpdateRule Declaration public Rule UpdateRule { get; } Property Value Type Description Rule Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<ConstraintInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ConstraintInfo >"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html",
    "title": "Class FirebirdDbFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory FirebirdDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source FirebirdDbFactory() Declaration [Obsolete] public FirebirdDbFactory() | Improve this Doc View Source FirebirdDbFactory(IServiceProvider) Declaration public FirebirdDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDDLLockTracker.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdDDLLockTracker.html",
    "title": "Class FirebirdDDLLockTracker | FluentMigrator documentation",
    "keywords": "Class FirebirdDDLLockTracker Tracks virtual locks caused by DDL statements Inheritance Object FirebirdDDLLockTracker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdDDLLockTracker Constructors | Improve this Doc View Source FirebirdDDLLockTracker(IQuoter) Initializes a new instance of the FirebirdDDLLockTracker class. Declaration public FirebirdDDLLockTracker(IQuoter quoter) Parameters Type Name Description IQuoter quoter The Firebird quoter Methods | Improve this Doc View Source Clear() Clears all virtual locks Declaration public void Clear() | Improve this Doc View Source IsColumnRegistered(String, String) Returns a value indicating whether the column was locked Declaration public bool IsColumnRegistered(string quotedTableName, string quotedColumnName) Parameters Type Name Description String quotedTableName The quoted table name String quotedColumnName The quoted column name Returns Type Description Boolean true when the column is locked | Improve this Doc View Source IsTableRegistered(String) Returns a value indicating whether the table was locked Declaration public bool IsTableRegistered(string quotedTableName) Parameters Type Name Description String quotedTableName The quoted table name Returns Type Description Boolean true when the table is locked | Improve this Doc View Source TryRegisterColumn(String, String) Registers a column as locked Declaration public bool TryRegisterColumn(string quotedTableName, string quotedColumnName) Parameters Type Name Description String quotedTableName The quoted table name String quotedColumnName The quoted column name Returns Type Description Boolean true when the column wasn't locked | Improve this Doc View Source TryRegisterTable(String) Registers a table as locked Declaration public bool TryRegisterTable(string quotedTableName) Parameters Type Name Description String quotedTableName The quoted table name Returns Type Description Boolean true when the table wasn't locked"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdIdentifierComparer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdIdentifierComparer.html",
    "title": "Class FirebirdIdentifierComparer | FluentMigrator documentation",
    "keywords": "Class FirebirdIdentifierComparer A custom IEqualityComparer<T> for Firebird identifiers Inheritance Object FirebirdIdentifierComparer Implements IEqualityComparer < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdIdentifierComparer : IEqualityComparer<string> Constructors | Improve this Doc View Source FirebirdIdentifierComparer(IQuoter) Initializes a new instance of the FirebirdIdentifierComparer class. Declaration public FirebirdIdentifierComparer(IQuoter quoter) Parameters Type Name Description IQuoter quoter The quoted used to unquote the quoted identifiers Methods | Improve this Doc View Source Equals(String, String) Declaration public bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean | Improve this Doc View Source GetHashCode(String) Declaration public int GetHashCode(string obj) Parameters Type Name Description String obj Returns Type Description Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html",
    "title": "Class FirebirdOptions | FluentMigrator documentation",
    "keywords": "Class FirebirdOptions Inheritance Object FirebirdOptions Implements ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdOptions : ICloneable Constructors | Improve this Doc View Source FirebirdOptions() Declaration public FirebirdOptions() Fields | Improve this Doc View Source MaxNameLength Maximum internal length of names in firebird is 31 characters Declaration public static readonly int MaxNameLength Field Value Type Description Int32 Properties | Improve this Doc View Source ForceQuote Gets or sets a value indicating whether all names should be quoted unconditionally. Declaration public bool ForceQuote { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PackKeyNames Declaration public bool PackKeyNames { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TransactionModel Which transaction model to use if any to work around firebird's DDL restrictions Declaration public FirebirdTransactionModel TransactionModel { get; set; } Property Value Type Description FirebirdTransactionModel | Improve this Doc View Source TruncateLongNames Firebird only supports constraint, table, column, etc. names up to 31 characters Declaration public bool TruncateLongNames { get; set; } Property Value Type Description Boolean | Improve this Doc View Source VirtualLock Virtually lock tables and columns touched by DDL statements in a transaction Declaration public bool VirtualLock { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProviderSwitches(String) Declaration public FirebirdOptions ApplyProviderSwitches(string providerSwitches) Parameters Type Name Description String providerSwitches Returns Type Description FirebirdOptions | Improve this Doc View Source AutoCommitBehaviour() Declaration public static FirebirdOptions AutoCommitBehaviour() Returns Type Description FirebirdOptions | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CommitOnCheckFailBehaviour() Declaration public static FirebirdOptions CommitOnCheckFailBehaviour() Returns Type Description FirebirdOptions | Improve this Doc View Source StandardBehaviour() Declaration public static FirebirdOptions StandardBehaviour() Returns Type Description FirebirdOptions Implements System.ICloneable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html",
    "title": "Class FirebirdProcessor | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessor Inheritance Object ProcessorBase GenericProcessorBase FirebirdProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdProcessor : GenericProcessorBase Constructors | Improve this Doc View Source FirebirdProcessor(FirebirdDbFactory, FirebirdGenerator, FirebirdQuoter, ILogger<FirebirdProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, FirebirdOptions) Declaration public FirebirdProcessor(FirebirdDbFactory factory, FirebirdGenerator generator, FirebirdQuoter quoter, ILogger<FirebirdProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, FirebirdOptions fbOptions) Parameters Type Name Description FirebirdDbFactory factory FirebirdGenerator generator FirebirdQuoter quoter ILogger < FirebirdProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor FirebirdOptions fbOptions | Improve this Doc View Source FirebirdProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory, FirebirdOptions) Declaration [Obsolete] public FirebirdProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory, FirebirdOptions fbOptions) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory FirebirdOptions fbOptions Fields | Improve this Doc View Source DDLCreatedColumns Declaration protected Dictionary<string, List<string>> DDLCreatedColumns Field Value Type Description Dictionary < String , List < String >> | Improve this Doc View Source DDLCreatedTables Declaration protected List<string> DDLCreatedTables Field Value Type Description List < String > | Improve this Doc View Source DDLTouchedColumns Declaration protected Dictionary<string, List<string>> DDLTouchedColumns Field Value Type Description Dictionary < String , List < String >> | Improve this Doc View Source DDLTouchedTables Declaration protected List<string> DDLTouchedTables Field Value Type Description List < String > | Improve this Doc View Source truncator Declaration [Obsolete(\"Use the Truncator property\")] protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties | Improve this Doc View Source Announcer Declaration [Obsolete] public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source FBOptions Declaration public FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions | Improve this Doc View Source Generator Declaration public IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator | Improve this Doc View Source IsFirebird3 Declaration public bool IsFirebird3 { get; } Property Value Type Description Boolean | Improve this Doc View Source Truncator Declaration public FirebirdTruncator Truncator { get; } Property Value Type Description FirebirdTruncator Methods | Improve this Doc View Source AutoCommit() Declaration public virtual void AutoCommit() | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source CheckColumn(String, IEnumerable<String>) Declaration public void CheckColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns | Improve this Doc View Source CheckColumn(String, String) Declaration public void CheckColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source CheckTable(String) Declaration public void CheckTable(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source ClearDDLFollowers() Declaration protected void ClearDDLFollowers() | Improve this Doc View Source ClearLocks() Declaration protected void ClearLocks() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitRetaining() Declaration public virtual void CommitRetaining() | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source CreateTriggerExpression(String, TriggerInfo) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, TriggerInfo trigger) Parameters Type Name Description String tableName TriggerInfo trigger Returns Type Description PerformDBOperationExpression | Improve this Doc View Source CreateTriggerExpression(String, String, Boolean, TriggerEvent, String) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, string triggerName, bool onBefore, TriggerEvent onEvent, string triggerBody) Parameters Type Name Description String tableName String triggerName Boolean onBefore TriggerEvent onEvent String triggerBody Returns Type Description PerformDBOperationExpression | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source DeleteTriggerExpression(String, String) Declaration public PerformDBOperationExpression DeleteTriggerExpression(string tableName, string triggerName) Parameters Type Name Description String tableName String triggerName Returns Type Description PerformDBOperationExpression | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source InternalProcess(String) Declaration protected void InternalProcess(string sql) Parameters Type Name Description String sql | Improve this Doc View Source IsColumnCreated(String, String) Declaration protected bool IsColumnCreated(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source IsRunningOutOfMigrationScope() Declaration public bool IsRunningOutOfMigrationScope() Returns Type Description Boolean | Improve this Doc View Source IsTableCreated(String) Declaration protected bool IsTableCreated(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean | Improve this Doc View Source LockColumn(String, IEnumerable<String>) Declaration public void LockColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns | Improve this Doc View Source LockColumn(String, String) Declaration public void LockColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source LockTable(String) Declaration public void LockTable(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source Process(AlterColumnExpression) Declaration public override void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public override void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public override void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Process(AlterTableExpression) Declaration public override void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Process(CreateColumnExpression) Declaration public override void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public override void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public override void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Process(CreateIndexExpression) Declaration public override void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public override void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Process(CreateTableExpression) Declaration public override void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public override void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public override void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Process(DeleteDataExpression) Declaration public override void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public override void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public override void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public override void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public override void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public override void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Process(DeleteTableExpression) Declaration public override void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Process(InsertDataExpression) Declaration public override void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public override void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(RenameTableExpression) Declaration public override void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Process(UpdateDataExpression) Declaration public override void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RegisterColumnCreation(String, String) Declaration protected void RegisterColumnCreation(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source RegisterTableCreation(String) Declaration protected void RegisterTableCreation(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) | Improve this Doc View Source TriggerExists(String, String, String) Declaration public virtual bool TriggerExists(string schemaName, string tableName, string triggerName) Parameters Type Name Description String schemaName String tableName String triggerName Returns Type Description Boolean Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html",
    "title": "Class FirebirdProcessorFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessorFactory Inheritance Object MigrationProcessorFactory FirebirdProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax [Obsolete] public class FirebirdProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source FirebirdProcessorFactory() Declaration [Obsolete] public FirebirdProcessorFactory() | Improve this Doc View Source FirebirdProcessorFactory(FirebirdOptions) Declaration [Obsolete] public FirebirdProcessorFactory(FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions | Improve this Doc View Source FirebirdProcessorFactory(IServiceProvider, IOptions<FirebirdOptions>) Declaration public FirebirdProcessorFactory(IServiceProvider serviceProvider, IOptions<FirebirdOptions> fbOptions = null) Parameters Type Name Description IServiceProvider serviceProvider IOptions < FirebirdOptions > fbOptions Properties | Improve this Doc View Source FbOptions Declaration public FirebirdOptions FbOptions { get; set; } Property Value Type Description FirebirdOptions Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html",
    "title": "Class FirebirdSchemaProvider | FluentMigrator documentation",
    "keywords": "Class FirebirdSchemaProvider Inheritance Object FirebirdSchemaProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdSchemaProvider Constructors | Improve this Doc View Source FirebirdSchemaProvider(FirebirdProcessor, FirebirdQuoter) Declaration public FirebirdSchemaProvider(FirebirdProcessor processor, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor FirebirdQuoter quoter Properties | Improve this Doc View Source Processor Declaration public FirebirdProcessor Processor { get; protected set; } Property Value Type Description FirebirdProcessor Methods | Improve this Doc View Source GetColumnDefinition(String, String) Declaration public ColumnDefinition GetColumnDefinition(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description ColumnDefinition | Improve this Doc View Source GetIndex(String, String) Declaration public IndexDefinition GetIndex(string tableName, string indexName) Parameters Type Name Description String tableName String indexName Returns Type Description IndexDefinition | Improve this Doc View Source GetSequence(String) Declaration public SequenceInfo GetSequence(string sequenceName) Parameters Type Name Description String sequenceName Returns Type Description SequenceInfo"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html",
    "title": "Enum FirebirdTransactionModel | FluentMigrator documentation",
    "keywords": "Enum FirebirdTransactionModel Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum FirebirdTransactionModel Fields Name Description AutoCommit Automaticaly commits every processed statement AutoCommitOnCheckFail Automatically starts a new transaction when a virtual lock check fails None Don't manage transactions"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Firebird Classes AdoHelper ColumnInfo ConstraintInfo FirebirdDbFactory FirebirdDDLLockTracker Tracks virtual locks caused by DDL statements FirebirdIdentifierComparer A custom IEqualityComparer<T> for Firebird identifiers FirebirdOptions FirebirdProcessor FirebirdProcessorFactory FirebirdSchemaProvider IndexInfo SequenceInfo TableInfo TriggerInfo Enums FirebirdTransactionModel TriggerEvent"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html",
    "title": "Class IndexInfo | FluentMigrator documentation",
    "keywords": "Class IndexInfo Inheritance Object IndexInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class IndexInfo Properties | Improve this Doc View Source Columns Declaration public List<string> Columns { get; } Property Value Type Description List < String > | Improve this Doc View Source IsAscending Declaration public bool IsAscending { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public string TableName { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<IndexInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < IndexInfo > | Improve this Doc View Source Read(FirebirdProcessor, String) Declaration public static IndexInfo Read(FirebirdProcessor processor, string indexName) Parameters Type Name Description FirebirdProcessor processor String indexName Returns Type Description IndexInfo"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html",
    "title": "Class SequenceInfo | FluentMigrator documentation",
    "keywords": "Class SequenceInfo Inheritance Object SequenceInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class SequenceInfo Properties | Improve this Doc View Source CurrentValue Declaration public int CurrentValue { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static SequenceInfo Read(FirebirdProcessor processor, string sequenceName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String sequenceName FirebirdQuoter quoter Returns Type Description SequenceInfo"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TableInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TableInfo.html",
    "title": "Class TableInfo | FluentMigrator documentation",
    "keywords": "Class TableInfo Inheritance Object TableInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TableInfo Constructors | Improve this Doc View Source TableInfo(DataRow) Declaration public TableInfo(DataRow drMeta) Parameters Type Name Description DataRow drMeta | Improve this Doc View Source TableInfo(String, Boolean) Declaration public TableInfo(string name, bool exists) Parameters Type Name Description String name Boolean exists Properties | Improve this Doc View Source Exists Declaration public bool Exists { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static TableInfo Read(FirebirdProcessor processor, string tableName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String tableName FirebirdQuoter quoter Returns Type Description TableInfo"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html",
    "title": "Enum TriggerEvent | FluentMigrator documentation",
    "keywords": "Enum TriggerEvent Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum TriggerEvent Fields Name Description Delete Insert Update"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html",
    "title": "Class TriggerInfo | FluentMigrator documentation",
    "keywords": "Class TriggerInfo Inheritance Object TriggerInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TriggerInfo Properties | Improve this Doc View Source Before Declaration public bool Before { get; } Property Value Type Description Boolean | Improve this Doc View Source Body Declaration public string Body { get; } Property Value Type Description String | Improve this Doc View Source Event Declaration public TriggerEvent Event { get; } Property Value Type Description TriggerEvent | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source OnDelete Declaration public bool OnDelete { get; } Property Value Type Description Boolean | Improve this Doc View Source OnInsert Declaration public bool OnInsert { get; } Property Value Type Description Boolean | Improve this Doc View Source OnUpdate Declaration public bool OnUpdate { get; } Property Value Type Description Boolean | Improve this Doc View Source Sequence Declaration public int Sequence { get; } Property Value Type Description Int32 | Improve this Doc View Source Type Declaration public int Type { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<TriggerInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < TriggerInfo >"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.GenericProcessorBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.GenericProcessorBase.html",
    "title": "Class GenericProcessorBase | FluentMigrator documentation",
    "keywords": "Class GenericProcessorBase Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Db2Processor Db2ISeriesProcessor Db2ISeriesProcessor DotConnectOracleProcessor DotConnectOracleProcessor FirebirdProcessor FirebirdProcessor HanaProcessor HanaProcessor MySqlProcessor MySqlProcessor OracleProcessor OracleProcessorBase PostgresProcessor PostgresProcessor RedshiftProcessor RedshiftProcessor SqlAnywhereProcessor SqlAnywhereProcessor SQLiteProcessor SQLiteProcessor SqlServer2000Processor SqlServer2000Processor SqlServerProcessor SqlServerProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.DatabaseType ProcessorBase.DatabaseTypeAliases ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Process(String) ProcessorBase.ReadTableData(String, String) ProcessorBase.Read(String, Object[]) ProcessorBase.Exists(String, Object[]) ProcessorBase.Execute(String) ProcessorBase.Execute(String, Object[]) ProcessorBase.SchemaExists(String) ProcessorBase.TableExists(String, String) ProcessorBase.ColumnExists(String, String, String) ProcessorBase.ConstraintExists(String, String, String) ProcessorBase.IndexExists(String, String, String) ProcessorBase.SequenceExists(String, String) ProcessorBase.DefaultValueExists(String, String, String, Object) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericProcessorBase : ProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source GenericProcessorBase(IDbConnection, IDbFactory, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] protected GenericProcessorBase(IDbConnection connection, IDbFactory factory, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IDbFactory factory IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options | Improve this Doc View Source GenericProcessorBase(Func<DbProviderFactory>, IMigrationGenerator, ILogger, ProcessorOptions, IConnectionStringAccessor) Declaration protected GenericProcessorBase(Func<DbProviderFactory> factoryAccessor, IMigrationGenerator generator, ILogger logger, ProcessorOptions options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Func < DbProviderFactory > factoryAccessor IMigrationGenerator generator ILogger logger ProcessorOptions options IConnectionStringAccessor connectionStringAccessor Properties | Improve this Doc View Source Connection Declaration public IDbConnection Connection { get; protected set; } Property Value Type Description IDbConnection | Improve this Doc View Source ConnectionString Declaration [Obsolete(\"Will change from public to protected\")] public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString | Improve this Doc View Source DbProviderFactory Declaration protected DbProviderFactory DbProviderFactory { get; } Property Value Type Description DbProviderFactory | Improve this Doc View Source Factory Declaration [Obsolete] public IDbFactory Factory { get; protected set; } Property Value Type Description IDbFactory | Improve this Doc View Source Transaction Declaration public IDbTransaction Transaction { get; protected set; } Property Value Type Description IDbTransaction Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() | Improve this Doc View Source CreateCommand(String) Declaration protected virtual IDbCommand CreateCommand(string commandText) Parameters Type Name Description String commandText Returns Type Description IDbCommand | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction) Declaration protected virtual IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction Returns Type Description IDbCommand | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) | Improve this Doc View Source EnsureConnectionIsClosed() Declaration protected virtual void EnsureConnectionIsClosed() | Improve this Doc View Source EnsureConnectionIsOpen() Declaration protected virtual void EnsureConnectionIsOpen() | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html",
    "title": "Class HanaDbFactory | FluentMigrator documentation",
    "keywords": "Class HanaDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory HanaDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source HanaDbFactory() Declaration [Obsolete] public HanaDbFactory() | Improve this Doc View Source HanaDbFactory(IServiceProvider) Declaration public HanaDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html",
    "title": "Class HanaProcessor | FluentMigrator documentation",
    "keywords": "Class HanaProcessor Inheritance Object ProcessorBase GenericProcessorBase HanaProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaProcessor : GenericProcessorBase Constructors | Improve this Doc View Source HanaProcessor(HanaDbFactory, HanaGenerator, ILogger<HanaProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public HanaProcessor(HanaDbFactory factory, HanaGenerator generator, ILogger<HanaProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description HanaDbFactory factory HanaGenerator generator ILogger < HanaProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source HanaProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public HanaProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html",
    "title": "Class HanaProcessorFactory | FluentMigrator documentation",
    "keywords": "Class HanaProcessorFactory Inheritance Object MigrationProcessorFactory HanaProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax [Obsolete] public class HanaProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source HanaProcessorFactory() Declaration [Obsolete] public HanaProcessorFactory() | Improve this Doc View Source HanaProcessorFactory(IServiceProvider) Declaration public HanaProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Hana.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Hana Classes HanaDbFactory HanaProcessor HanaProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.html",
    "title": "Namespace FluentMigrator.Runner.Processors | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors Classes ConnectionlessProcessor ConnectionlessProcessorFactory A processor factory to create SQL statements only (without executing them) DataReaderExtensions DbFactoryBase GenericProcessorBase MigrationProcessorFactory MigrationProcessorFactoryProvider ProcessorBase ProcessorOptions Options for an IMigrationProcessor ReflectionBasedDbFactory ReflectionBasedDbFactory.TestEntry SelectingProcessorAccessor An IProcessorAccessor implementation that selects one generator by name SelectingProcessorAccessorOptions The options for the SelectingProcessorAccessor Interfaces IDbFactory IMigrationProcessorFactory IProcessorAccessor Accesses the selected migration processor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.IDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.IDbFactory.html",
    "title": "Interface IDbFactory | FluentMigrator documentation",
    "keywords": "Interface IDbFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IDbFactory Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand | Improve this Doc View Source CreateConnection(String) Declaration [Obsolete] IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html",
    "title": "Interface IMigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IMigrationProcessorFactory Properties | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Returns a value indicating whether this processor factory can use the given DB provider Declaration [Obsolete] bool IsForProvider(string provider) Parameters Type Name Description String provider The DB provider name Returns Type Description Boolean true when this processor factory can use the given DB provider"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.IProcessorAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.IProcessorAccessor.html",
    "title": "Interface IProcessorAccessor | FluentMigrator documentation",
    "keywords": "Interface IProcessorAccessor Accesses the selected migration processor Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IProcessorAccessor Remarks This is only different from using IMigrationProcessor as constructor parameter when multiple databases should be supported. Properties | Improve this Doc View Source Processor Gets the selected migration processor Declaration IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Jet.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Jet Classes JetProcessor JetProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Jet.JetProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Jet.JetProcessor.html",
    "title": "Class JetProcessor | FluentMigrator documentation",
    "keywords": "Class JetProcessor Inheritance Object ProcessorBase JetProcessor Implements IMigrationProcessor Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetProcessor : ProcessorBase Constructors | Improve this Doc View Source JetProcessor(JetGenerator, ILogger<JetProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public JetProcessor(JetGenerator generator, ILogger<JetProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description JetGenerator generator ILogger < JetProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source JetProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public JetProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options Properties | Improve this Doc View Source Connection Declaration public OleDbConnection Connection { get; } Property Value Type Description OleDbConnection | Improve this Doc View Source ConnectionString Declaration [Obsolete] public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Transaction Declaration public OleDbTransaction Transaction { get; } Property Value Type Description OleDbTransaction Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) | Improve this Doc View Source EnsureConnectionIsClosed() Declaration protected void EnsureConnectionIsClosed() | Improve this Doc View Source EnsureConnectionIsOpen() Declaration protected void EnsureConnectionIsOpen() | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html",
    "title": "Class JetProcessorFactory | FluentMigrator documentation",
    "keywords": "Class JetProcessorFactory Inheritance Object MigrationProcessorFactory JetProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax [Obsolete] public class JetProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html",
    "title": "Class MigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Db2ProcessorFactory Db2ISeriesProcessorFactory Db2ISeriesProcessorFactory DotConnectOracleProcessorFactory DotConnectOracleProcessorFactory FirebirdProcessorFactory FirebirdProcessorFactory HanaProcessorFactory HanaProcessorFactory JetProcessorFactory JetProcessorFactory MySql4ProcessorFactory MySql4ProcessorFactory MySql5ProcessorFactory MySql5ProcessorFactory OracleManagedProcessorFactory OracleManagedProcessorFactory OracleProcessorFactory OracleProcessorFactory PostgresProcessorFactory PostgresProcessorFactory RedshiftProcessorFactory RedshiftProcessorFactory SqlAnywhere16ProcessorFactory SqlAnywhere16ProcessorFactory SQLiteProcessorFactory SQLiteProcessorFactory SqlServer2000ProcessorFactory SqlServer2000ProcessorFactory SqlServer2005ProcessorFactory SqlServer2005ProcessorFactory SqlServer2008ProcessorFactory SqlServer2008ProcessorFactory SqlServer2012ProcessorFactory SqlServer2012ProcessorFactory SqlServer2014ProcessorFactory SqlServer2014ProcessorFactory SqlServer2016ProcessorFactory SqlServer2016ProcessorFactory SqlServerProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public abstract class MigrationProcessorFactory : IMigrationProcessorFactory Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public abstract IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public virtual bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html",
    "title": "Class MigrationProcessorFactoryProvider | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactoryProvider Inheritance Object MigrationProcessorFactoryProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class MigrationProcessorFactoryProvider Constructors | Improve this Doc View Source MigrationProcessorFactoryProvider() Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public MigrationProcessorFactoryProvider() Properties | Improve this Doc View Source ProcessorTypes Declaration public static IEnumerable<string> ProcessorTypes { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source RegisteredFactories Declaration public static IEnumerable<IMigrationProcessorFactory> RegisteredFactories { get; } Property Value Type Description IEnumerable < IMigrationProcessorFactory > Methods | Improve this Doc View Source GetFactory(String) Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public virtual IMigrationProcessorFactory GetFactory(string name) Parameters Type Name Description String name Returns Type Description IMigrationProcessorFactory | Improve this Doc View Source ListAvailableProcessorTypes() Declaration [Obsolete] public string ListAvailableProcessorTypes() Returns Type Description String | Improve this Doc View Source Register(IMigrationProcessorFactory) Declaration public static void Register(IMigrationProcessorFactory factory) Parameters Type Name Description IMigrationProcessorFactory factory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Processors.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.MySql Classes MySql4Processor MySql4ProcessorFactory MySql5Processor MySql5ProcessorFactory MySqlDbFactory MySqlProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql4Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql4Processor.html",
    "title": "Class MySql4Processor | FluentMigrator documentation",
    "keywords": "Class MySql4Processor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql4Processor Implements IMigrationProcessor Inherited Members MySqlProcessor.SchemaExists(String) MySqlProcessor.TableExists(String, String) MySqlProcessor.ColumnExists(String, String, String) MySqlProcessor.ConstraintExists(String, String, String) MySqlProcessor.IndexExists(String, String, String) MySqlProcessor.SequenceExists(String, String) MySqlProcessor.DefaultValueExists(String, String, String, Object) MySqlProcessor.Execute(String, Object[]) MySqlProcessor.Exists(String, Object[]) MySqlProcessor.ReadTableData(String, String) MySqlProcessor.Read(String, Object[]) MySqlProcessor.Process(String) MySqlProcessor.Process(PerformDBOperationExpression) MySqlProcessor.Process(RenameColumnExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4Processor : MySqlProcessor Constructors | Improve this Doc View Source MySql4Processor(MySqlDbFactory, MySql4Generator, ILogger<MySql4Processor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public MySql4Processor(MySqlDbFactory factory, MySql4Generator generator, ILogger<MySql4Processor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory MySql4Generator generator ILogger < MySql4Processor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides MySqlProcessor.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides MySqlProcessor.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html",
    "title": "Class MySql4ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql4ProcessorFactory Inheritance Object MigrationProcessorFactory MySql4ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax [Obsolete] public class MySql4ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source MySql4ProcessorFactory() Declaration [Obsolete] public MySql4ProcessorFactory() | Improve this Doc View Source MySql4ProcessorFactory(IServiceProvider) Declaration public MySql4ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql5Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql5Processor.html",
    "title": "Class MySql5Processor | FluentMigrator documentation",
    "keywords": "Class MySql5Processor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql5Processor Implements IMigrationProcessor Inherited Members MySqlProcessor.SchemaExists(String) MySqlProcessor.TableExists(String, String) MySqlProcessor.ColumnExists(String, String, String) MySqlProcessor.ConstraintExists(String, String, String) MySqlProcessor.IndexExists(String, String, String) MySqlProcessor.SequenceExists(String, String) MySqlProcessor.DefaultValueExists(String, String, String, Object) MySqlProcessor.Execute(String, Object[]) MySqlProcessor.Exists(String, Object[]) MySqlProcessor.ReadTableData(String, String) MySqlProcessor.Read(String, Object[]) MySqlProcessor.Process(String) MySqlProcessor.Process(PerformDBOperationExpression) MySqlProcessor.Process(RenameColumnExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5Processor : MySqlProcessor Constructors | Improve this Doc View Source MySql5Processor(MySqlDbFactory, MySql5Generator, ILogger<MySql5Processor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public MySql5Processor(MySqlDbFactory factory, MySql5Generator generator, ILogger<MySql5Processor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory MySql5Generator generator ILogger < MySql5Processor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides MySqlProcessor.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides MySqlProcessor.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html",
    "title": "Class MySql5ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql5ProcessorFactory Inheritance Object MigrationProcessorFactory MySql5ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax [Obsolete] public class MySql5ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source MySql5ProcessorFactory() Declaration [Obsolete] public MySql5ProcessorFactory() | Improve this Doc View Source MySql5ProcessorFactory(IServiceProvider) Declaration public MySql5ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html",
    "title": "Class MySqlDbFactory | FluentMigrator documentation",
    "keywords": "Class MySqlDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory MySqlDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source MySqlDbFactory() Declaration [Obsolete] public MySqlDbFactory() | Improve this Doc View Source MySqlDbFactory(IServiceProvider) Declaration public MySqlDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html",
    "title": "Class MySqlProcessor | FluentMigrator documentation",
    "keywords": "Class MySqlProcessor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql4Processor MySql5Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlProcessor : GenericProcessorBase Constructors | Improve this Doc View Source MySqlProcessor(MySqlDbFactory, IMigrationGenerator, ILogger<MySqlProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration protected MySqlProcessor(MySqlDbFactory factory, IMigrationGenerator generator, ILogger<MySqlProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory IMigrationGenerator generator ILogger < MySqlProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source MySqlProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public MySqlProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public override void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Oracle Classes Oracle12CManagedProcessor A processor for Oracle 12c using the managed database access library Oracle12CProcessor A processor for Oracle 12c using the .NET database access library OracleBaseDbFactory OracleDbFactory OracleManagedDbFactory OracleManagedProcessor OracleManagedProcessorFactory OracleProcessor OracleProcessorBase OracleProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.Oracle12CManagedProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.Oracle12CManagedProcessor.html",
    "title": "Class Oracle12CManagedProcessor | FluentMigrator documentation",
    "keywords": "Class Oracle12CManagedProcessor A processor for Oracle 12c using the managed database access library Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleManagedProcessor Oracle12CManagedProcessor Implements IMigrationProcessor Inherited Members OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class Oracle12CManagedProcessor : OracleManagedProcessor Constructors | Improve this Doc View Source Oracle12CManagedProcessor(OracleManagedDbFactory, IOracle12CGenerator, ILogger<Oracle12CManagedProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Initializes a new instance of the Oracle12CManagedProcessor class. Declaration public Oracle12CManagedProcessor(OracleManagedDbFactory factory, IOracle12CGenerator generator, ILogger<Oracle12CManagedProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleManagedDbFactory factory The DB object factory IOracle12CGenerator generator The SQL generator ILogger < Oracle12CManagedProcessor > logger The logger IOptionsSnapshot < ProcessorOptions > options The processor options IConnectionStringAccessor connectionStringAccessor The accessor for the connection strings Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides OracleProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides OracleProcessorBase.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.Oracle12CProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.Oracle12CProcessor.html",
    "title": "Class Oracle12CProcessor | FluentMigrator documentation",
    "keywords": "Class Oracle12CProcessor A processor for Oracle 12c using the .NET database access library Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleProcessor Oracle12CProcessor Implements IMigrationProcessor Inherited Members OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class Oracle12CProcessor : OracleProcessor Constructors | Improve this Doc View Source Oracle12CProcessor(OracleDbFactory, IOracle12CGenerator, ILogger<Oracle12CProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Initializes a new instance of the Oracle12CProcessor class. Declaration public Oracle12CProcessor(OracleDbFactory factory, IOracle12CGenerator generator, ILogger<Oracle12CProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleDbFactory factory The DB object factory IOracle12CGenerator generator The SQL generator ILogger < Oracle12CProcessor > logger The logger IOptionsSnapshot < ProcessorOptions > options The processor options IConnectionStringAccessor connectionStringAccessor The accessor for the connection strings Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides OracleProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides OracleProcessorBase.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleBaseDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleBaseDbFactory.html",
    "title": "Class OracleBaseDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleBaseDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleDbFactory OracleManagedDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleBaseDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleBaseDbFactory(IServiceProvider, ReflectionBasedDbFactory.TestEntry[]) Declaration protected OracleBaseDbFactory(IServiceProvider serviceProvider, params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description IServiceProvider serviceProvider ReflectionBasedDbFactory.TestEntry [] testEntries Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html",
    "title": "Class OracleDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDbFactory : OracleBaseDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleDbFactory() Declaration [Obsolete] public OracleDbFactory() | Improve this Doc View Source OracleDbFactory(IServiceProvider) Declaration public OracleDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html",
    "title": "Class OracleManagedDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleManagedDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedDbFactory : OracleBaseDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleManagedDbFactory() Declaration [Obsolete] public OracleManagedDbFactory() | Improve this Doc View Source OracleManagedDbFactory(IServiceProvider) Declaration public OracleManagedDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessor.html",
    "title": "Class OracleManagedProcessor | FluentMigrator documentation",
    "keywords": "Class OracleManagedProcessor Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleManagedProcessor Oracle12CManagedProcessor Implements IMigrationProcessor Inherited Members OracleProcessorBase.DatabaseType OracleProcessorBase.DatabaseTypeAliases OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedProcessor : OracleProcessorBase Constructors | Improve this Doc View Source OracleManagedProcessor(OracleManagedDbFactory, IOracleGenerator, ILogger<OracleManagedProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public OracleManagedProcessor(OracleManagedDbFactory factory, IOracleGenerator generator, ILogger<OracleManagedProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleManagedDbFactory factory IOracleGenerator generator ILogger < OracleManagedProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html",
    "title": "Class OracleManagedProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedProcessorFactory Inheritance Object MigrationProcessorFactory OracleManagedProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class OracleManagedProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source OracleManagedProcessorFactory() Declaration [Obsolete] public OracleManagedProcessorFactory() | Improve this Doc View Source OracleManagedProcessorFactory(IServiceProvider) Declaration public OracleManagedProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html",
    "title": "Class OracleProcessor | FluentMigrator documentation",
    "keywords": "Class OracleProcessor Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleProcessor Oracle12CProcessor Implements IMigrationProcessor Inherited Members OracleProcessorBase.DatabaseType OracleProcessorBase.DatabaseTypeAliases OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessor : OracleProcessorBase Constructors | Improve this Doc View Source OracleProcessor(OracleDbFactory, IOracleGenerator, ILogger<OracleProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public OracleProcessor(OracleDbFactory factory, IOracleGenerator generator, ILogger<OracleProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleDbFactory factory IOracleGenerator generator ILogger < OracleProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source OracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public OracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorBase.html",
    "title": "Class OracleProcessorBase | FluentMigrator documentation",
    "keywords": "Class OracleProcessorBase Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleManagedProcessor OracleProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessorBase : GenericProcessorBase Constructors | Improve this Doc View Source OracleProcessorBase(String, OracleBaseDbFactory, IMigrationGenerator, ILogger, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration protected OracleProcessorBase(string databaseType, OracleBaseDbFactory factory, IMigrationGenerator generator, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description String databaseType OracleBaseDbFactory factory IMigrationGenerator generator ILogger logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source OracleProcessorBase(String, IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] protected OracleProcessorBase(string databaseType, IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description String databaseType IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html",
    "title": "Class OracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleProcessorFactory Inheritance Object MigrationProcessorFactory OracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class OracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source OracleProcessorFactory() Declaration [Obsolete] public OracleProcessorFactory() | Improve this Doc View Source OracleProcessorFactory(IServiceProvider) Declaration public OracleProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Postgres Classes PostgresDbFactory PostgresOptions PostgresProcessor PostgresProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html",
    "title": "Class PostgresDbFactory | FluentMigrator documentation",
    "keywords": "Class PostgresDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory PostgresDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source PostgresDbFactory() Declaration [Obsolete] public PostgresDbFactory() | Improve this Doc View Source PostgresDbFactory(IServiceProvider) Declaration public PostgresDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresOptions.html",
    "title": "Class PostgresOptions | FluentMigrator documentation",
    "keywords": "Class PostgresOptions Inheritance Object PostgresOptions Implements ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresOptions : ICloneable Properties | Improve this Doc View Source ForceQuote Gets or sets a value indicating whether all names should be quoted unconditionally. Declaration public bool ForceQuote { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source ParseProviderSwitches(String) Declaration public static PostgresOptions ParseProviderSwitches(string providerSwitches) Parameters Type Name Description String providerSwitches Returns Type Description PostgresOptions Implements System.ICloneable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html",
    "title": "Class PostgresProcessor | FluentMigrator documentation",
    "keywords": "Class PostgresProcessor Inheritance Object ProcessorBase GenericProcessorBase PostgresProcessor Postgres92Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresProcessor : GenericProcessorBase Constructors | Improve this Doc View Source PostgresProcessor(PostgresDbFactory, PostgresGenerator, ILogger<PostgresProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, PostgresOptions) Declaration public PostgresProcessor(PostgresDbFactory factory, PostgresGenerator generator, ILogger<PostgresProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, PostgresOptions pgOptions) Parameters Type Name Description PostgresDbFactory factory PostgresGenerator generator ILogger < PostgresProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor PostgresOptions pgOptions | Improve this Doc View Source PostgresProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory, PostgresOptions) Declaration [Obsolete] public PostgresProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory, PostgresOptions pgOptions) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory PostgresOptions pgOptions Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html",
    "title": "Class PostgresProcessorFactory | FluentMigrator documentation",
    "keywords": "Class PostgresProcessorFactory Inheritance Object MigrationProcessorFactory PostgresProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax [Obsolete] public class PostgresProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source PostgresProcessorFactory() Declaration [Obsolete] public PostgresProcessorFactory() | Improve this Doc View Source PostgresProcessorFactory(IServiceProvider) Declaration public PostgresProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres92.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres92.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Postgres92 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Postgres92 Classes Postgres92Processor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Postgres92.Postgres92Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Postgres92.Postgres92Processor.html",
    "title": "Class Postgres92Processor | FluentMigrator documentation",
    "keywords": "Class Postgres92Processor Inheritance Object ProcessorBase GenericProcessorBase PostgresProcessor Postgres92Processor Implements IMigrationProcessor Inherited Members PostgresProcessor.Execute(String, Object[]) PostgresProcessor.SchemaExists(String) PostgresProcessor.TableExists(String, String) PostgresProcessor.ColumnExists(String, String, String) PostgresProcessor.ConstraintExists(String, String, String) PostgresProcessor.IndexExists(String, String, String) PostgresProcessor.SequenceExists(String, String) PostgresProcessor.ReadTableData(String, String) PostgresProcessor.DefaultValueExists(String, String, String, Object) PostgresProcessor.Read(String, Object[]) PostgresProcessor.Exists(String, Object[]) PostgresProcessor.Process(String) PostgresProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres92 Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class Postgres92Processor : PostgresProcessor Constructors | Improve this Doc View Source Postgres92Processor(PostgresDbFactory, Postgres92Generator, ILogger<PostgresProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, PostgresOptions) Declaration public Postgres92Processor(PostgresDbFactory factory, Postgres92Generator generator, ILogger<PostgresProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, PostgresOptions pgOptions) Parameters Type Name Description PostgresDbFactory factory Postgres92Generator generator ILogger < PostgresProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor PostgresOptions pgOptions Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides PostgresProcessor.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides PostgresProcessor.DatabaseTypeAliases Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ProcessorBase.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ProcessorBase.html",
    "title": "Class ProcessorBase | FluentMigrator documentation",
    "keywords": "Class ProcessorBase Inheritance Object ProcessorBase GenericProcessorBase GenericProcessorBase JetProcessor JetProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ProcessorBase : IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source ProcessorBase(IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] protected ProcessorBase(IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options | Improve this Doc View Source ProcessorBase(IMigrationGenerator, IAnnouncer, ProcessorOptions) Declaration [Obsolete] protected ProcessorBase(IMigrationGenerator generator, IAnnouncer announcer, ProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IAnnouncer announcer ProcessorOptions options | Improve this Doc View Source ProcessorBase(IMigrationGenerator, ILogger, ProcessorOptions) Declaration protected ProcessorBase(IMigrationGenerator generator, ILogger logger, ProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator ILogger logger ProcessorOptions options Fields | Improve this Doc View Source Announcer Declaration [Obsolete] protected readonly IAnnouncer Announcer Field Value Type Description IAnnouncer | Improve this Doc View Source Generator Declaration protected readonly IMigrationGenerator Generator Field Value Type Description IMigrationGenerator Properties | Improve this Doc View Source ConnectionString Declaration [Obsolete] public abstract string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source DatabaseType Declaration public abstract string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Declaration public abstract IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > | Improve this Doc View Source Logger Declaration protected ILogger Logger { get; } Property Value Type Description ILogger | Improve this Doc View Source Options Declaration protected ProcessorOptions Options { get; } Property Value Type Description ProcessorOptions | Improve this Doc View Source WasCommitted Declaration public bool WasCommitted { get; protected set; } Property Value Type Description Boolean Methods | Improve this Doc View Source BeginTransaction() Declaration public virtual void BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public abstract bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source CommitTransaction() Declaration public virtual void CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public abstract bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public abstract bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected abstract void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration public virtual void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Declaration public abstract void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args | Improve this Doc View Source Exists(String, Object[]) Declaration public abstract bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean | Improve this Doc View Source IndexExists(String, String, String) Declaration public abstract bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean | Improve this Doc View Source Process(AlterColumnExpression) Declaration public virtual void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public virtual void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public virtual void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Process(AlterTableExpression) Declaration public virtual void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Process(CreateColumnExpression) Declaration public virtual void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public virtual void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public virtual void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Process(CreateIndexExpression) Declaration public virtual void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public virtual void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public virtual void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Process(CreateTableExpression) Declaration public virtual void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public virtual void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public virtual void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Process(DeleteDataExpression) Declaration public virtual void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public virtual void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public virtual void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public virtual void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public virtual void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public virtual void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Process(DeleteTableExpression) Declaration public virtual void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Process(InsertDataExpression) Declaration public virtual void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public abstract void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public virtual void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(RenameTableExpression) Declaration public virtual void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Process(UpdateDataExpression) Declaration public virtual void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Process(String) Declaration protected abstract void Process(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Read(String, Object[]) Declaration public abstract DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet | Improve this Doc View Source ReadTableData(String, String) Declaration public abstract DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet | Improve this Doc View Source RollbackTransaction() Declaration public virtual void RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public abstract bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean | Improve this Doc View Source SequenceExists(String, String) Declaration public abstract bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean | Improve this Doc View Source TableExists(String, String) Declaration public abstract bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessor.Options Declaration [Obsolete] IMigrationProcessorOptions IMigrationProcessor.Options { get; } Returns Type Description IMigrationProcessorOptions Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ProcessorOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ProcessorOptions.html",
    "title": "Class ProcessorOptions | FluentMigrator documentation",
    "keywords": "Class ProcessorOptions Options for an IMigrationProcessor Inheritance Object ProcessorOptions Implements IMigrationProcessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class ProcessorOptions : IMigrationProcessorOptions Constructors | Improve this Doc View Source ProcessorOptions() Initializes a new instance of the ProcessorOptions class. Declaration public ProcessorOptions() | Improve this Doc View Source ProcessorOptions(IRunnerContext) Initializes a new instance of the ProcessorOptions class. Declaration [Obsolete] public ProcessorOptions(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context to get the values from Properties | Improve this Doc View Source ConnectionString Gets or sets the connection string (will not be used when PreviewOnly is active) Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source PreviewOnly Gets or sets a value indicating whether a preview-only mode is active Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ProviderSwitches Gets or sets the provider switches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String | Improve this Doc View Source StripComments Gets or sets a value indicating whether the comments should be stripped Declaration public bool StripComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Timeout Gets or sets the default command timeout Declaration public TimeSpan? Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Methods | Improve this Doc View Source SetValuesFrom(IRunnerContext) Sets the values from the given runner context Declaration [Obsolete] public void SetValuesFrom(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessorOptions.Timeout Gets the global timeout Declaration int? IMigrationProcessorOptions.Timeout { get; } Returns Type Description Nullable < Int32 > Implements IMigrationProcessorOptions"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Redshift.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Redshift Classes RedshiftDbFactory RedshiftProcessor RedshiftProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html",
    "title": "Class RedshiftDbFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory RedshiftDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source RedshiftDbFactory() Declaration [Obsolete] public RedshiftDbFactory() | Improve this Doc View Source RedshiftDbFactory(IServiceProvider) Declaration public RedshiftDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html",
    "title": "Class RedshiftProcessor | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessor Inheritance Object ProcessorBase GenericProcessorBase RedshiftProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftProcessor : GenericProcessorBase Constructors | Improve this Doc View Source RedshiftProcessor(RedshiftDbFactory, RedshiftGenerator, ILogger<RedshiftProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor) Declaration public RedshiftProcessor(RedshiftDbFactory factory, RedshiftGenerator generator, ILogger<RedshiftProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description RedshiftDbFactory factory RedshiftGenerator generator ILogger < RedshiftProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source RedshiftProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public RedshiftProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html",
    "title": "Class RedshiftProcessorFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessorFactory Inheritance Object MigrationProcessorFactory RedshiftProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax [Obsolete] public class RedshiftProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source RedshiftProcessorFactory() Declaration [Obsolete] public RedshiftProcessorFactory() | Improve this Doc View Source RedshiftProcessorFactory(IServiceProvider) Declaration public RedshiftProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html",
    "title": "Class ReflectionBasedDbFactory | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Db2DbFactory Db2ISeriesDbFactory Db2ISeriesDbFactory DotConnectOracleDbFactory DotConnectOracleDbFactory FirebirdDbFactory FirebirdDbFactory HanaDbFactory HanaDbFactory MySqlDbFactory MySqlDbFactory OracleBaseDbFactory OracleDbFactory OracleManagedDbFactory PostgresDbFactory PostgresDbFactory RedshiftDbFactory RedshiftDbFactory SqlAnywhereDbFactory SQLiteDbFactory SQLiteDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ReflectionBasedDbFactory : DbFactoryBase, IDbFactory Constructors | Improve this Doc View Source ReflectionBasedDbFactory(ReflectionBasedDbFactory.TestEntry[]) Declaration [Obsolete] protected ReflectionBasedDbFactory(params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry [] testEntries | Improve this Doc View Source ReflectionBasedDbFactory(IServiceProvider, ReflectionBasedDbFactory.TestEntry[]) Declaration protected ReflectionBasedDbFactory(IServiceProvider serviceProvider, params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description IServiceProvider serviceProvider ReflectionBasedDbFactory.TestEntry [] testEntries | Improve this Doc View Source ReflectionBasedDbFactory(String, String) Declaration [Obsolete] public ReflectionBasedDbFactory(string assemblyName, string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Methods | Improve this Doc View Source CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() | Improve this Doc View Source TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, out DbProviderFactory) Declaration [Obsolete] protected static bool TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry> entries, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description IEnumerable < ReflectionBasedDbFactory.TestEntry > entries ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFactory(IServiceProvider serviceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry> entries, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description IServiceProvider serviceProvider IEnumerable < ReflectionBasedDbFactory.TestEntry > entries ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration [Obsolete] protected static bool TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry entry, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, out DbProviderFactory) Declaration protected static bool TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry entry, ICollection<Exception> exceptions, IServiceProvider serviceProvider, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions IServiceProvider serviceProvider DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry entry, ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromAppDomainDirectories(string assemblyName, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean | Improve this Doc View Source TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromDirectories(IEnumerable<string> directories, string assemblyName, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description IEnumerable < String > directories String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html",
    "title": "Class ReflectionBasedDbFactory.TestEntry | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory.TestEntry Inheritance Object ReflectionBasedDbFactory.TestEntry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax protected class TestEntry Constructors | Improve this Doc View Source TestEntry(String, String) Declaration public TestEntry(string assemblyName, string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Properties | Improve this Doc View Source AssemblyName Declaration public string AssemblyName { get; } Property Value Type Description String | Improve this Doc View Source DBProviderFactoryTypeName Declaration public string DBProviderFactoryTypeName { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SelectingProcessorAccessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SelectingProcessorAccessor.html",
    "title": "Class SelectingProcessorAccessor | FluentMigrator documentation",
    "keywords": "Class SelectingProcessorAccessor An IProcessorAccessor implementation that selects one generator by name Inheritance Object SelectingProcessorAccessor Implements IProcessorAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingProcessorAccessor : IProcessorAccessor Constructors | Improve this Doc View Source SelectingProcessorAccessor(IEnumerable<IMigrationProcessor>, IOptionsSnapshot<SelectingProcessorAccessorOptions>, IOptionsSnapshot<SelectingGeneratorAccessorOptions>, IServiceProvider) Initializes a new instance of the SelectingProcessorAccessor class. Declaration public SelectingProcessorAccessor(IEnumerable<IMigrationProcessor> processors, IOptionsSnapshot<SelectingProcessorAccessorOptions> options, IOptionsSnapshot<SelectingGeneratorAccessorOptions> generatorSelectorOptions, IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < IMigrationProcessor > processors The processors to select from IOptionsSnapshot < SelectingProcessorAccessorOptions > options The options used to determine the processor to be returned IOptionsSnapshot < SelectingGeneratorAccessorOptions > generatorSelectorOptions The generator selector options IServiceProvider serviceProvider The service provider Properties | Improve this Doc View Source Processor Gets the selected migration processor Declaration public IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor Implements IProcessorAccessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SelectingProcessorAccessorOptions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SelectingProcessorAccessorOptions.html",
    "title": "Class SelectingProcessorAccessorOptions | FluentMigrator documentation",
    "keywords": "Class SelectingProcessorAccessorOptions The options for the SelectingProcessorAccessor Inheritance Object SelectingProcessorAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingProcessorAccessorOptions Properties | Improve this Doc View Source ProcessorId The ID of the generator to be returned by the SelectingProcessorAccessor Declaration public string ProcessorId { get; set; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere Classes SqlAnywhere16Processor SqlAnywhere16ProcessorFactory SqlAnywhereDbFactory SqlAnywhereProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16Processor.html",
    "title": "Class SqlAnywhere16Processor | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16Processor Inheritance Object ProcessorBase GenericProcessorBase SqlAnywhereProcessor SqlAnywhere16Processor Implements IMigrationProcessor Inherited Members SqlAnywhereProcessor.DatabaseType SqlAnywhereProcessor.DatabaseTypeAliases SqlAnywhereProcessor.SchemaExists(String) SqlAnywhereProcessor.TableExists(String, String) SqlAnywhereProcessor.ColumnExists(String, String, String) SqlAnywhereProcessor.ConstraintExists(String, String, String) SqlAnywhereProcessor.IndexExists(String, String, String) SqlAnywhereProcessor.SequenceExists(String, String) SqlAnywhereProcessor.DefaultValueExists(String, String, String, Object) SqlAnywhereProcessor.Process(CreateSchemaExpression) SqlAnywhereProcessor.Execute(String, Object[]) SqlAnywhereProcessor.Exists(String, Object[]) SqlAnywhereProcessor.ReadTableData(String, String) SqlAnywhereProcessor.Read(String, Object[]) SqlAnywhereProcessor.Process(String) SqlAnywhereProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public sealed class SqlAnywhere16Processor : SqlAnywhereProcessor Constructors | Improve this Doc View Source SqlAnywhere16Processor(SqlAnywhereDbFactory, SqlAnywhere16Generator, ILogger<SqlAnywhere16Processor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlAnywhere16Processor(SqlAnywhereDbFactory factory, SqlAnywhere16Generator generator, ILogger<SqlAnywhere16Processor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description SqlAnywhereDbFactory factory SqlAnywhere16Generator generator ILogger < SqlAnywhere16Processor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html",
    "title": "Class SqlAnywhere16ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16ProcessorFactory Inheritance Object MigrationProcessorFactory SqlAnywhere16ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax [Obsolete] public class SqlAnywhere16ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html",
    "title": "Class SqlAnywhereDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SqlAnywhereDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source SqlAnywhereDbFactory() Declaration public SqlAnywhereDbFactory() Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html",
    "title": "Class SqlAnywhereProcessor | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlAnywhereProcessor SqlAnywhere16Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereProcessor : GenericProcessorBase Constructors | Improve this Doc View Source SqlAnywhereProcessor(String, IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlAnywhereProcessor(string databaseType, IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description String databaseType IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory | Improve this Doc View Source SqlAnywhereProcessor(String, Func<DbProviderFactory>, IMigrationGenerator, ILogger, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlAnywhereProcessor(string databaseType, Func<DbProviderFactory> factoryAccessor, IMigrationGenerator generator, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description String databaseType Func < DbProviderFactory > factoryAccessor IMigrationGenerator generator ILogger logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SQLite.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SQLite Classes SQLiteDbFactory SQLiteProcessor SQLiteProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html",
    "title": "Class SQLiteDbFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SQLiteDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source SQLiteDbFactory() Declaration [Obsolete] public SQLiteDbFactory() | Improve this Doc View Source SQLiteDbFactory(IServiceProvider) Declaration public SQLiteDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html",
    "title": "Class SQLiteProcessor | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessor Inheritance Object ProcessorBase GenericProcessorBase SQLiteProcessor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteProcessor : GenericProcessorBase Constructors | Improve this Doc View Source SQLiteProcessor(SQLiteDbFactory, SQLiteGenerator, ILogger<SQLiteProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider, SQLiteQuoter) Declaration public SQLiteProcessor(SQLiteDbFactory factory, SQLiteGenerator generator, ILogger<SQLiteProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider, SQLiteQuoter quoter) Parameters Type Name Description SQLiteDbFactory factory SQLiteGenerator generator ILogger < SQLiteProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider SQLiteQuoter quoter | Improve this Doc View Source SQLiteProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory, SQLiteQuoter) Declaration [Obsolete] public SQLiteProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory, SQLiteQuoter quoter) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory SQLiteQuoter quoter Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html",
    "title": "Class SQLiteProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessorFactory Inheritance Object MigrationProcessorFactory SQLiteProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax [Obsolete] public class SQLiteProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source SQLiteProcessorFactory() Declaration [Obsolete] public SQLiteProcessorFactory() | Improve this Doc View Source SQLiteProcessorFactory(IServiceProvider) Declaration public SQLiteProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlServer Classes SqlServer2000Processor SqlServer2000ProcessorFactory SqlServer2005Processor SqlServer2005ProcessorFactory SqlServer2008Processor SqlServer2008ProcessorFactory SqlServer2012Processor SqlServer2012ProcessorFactory SqlServer2014Processor SqlServer2014ProcessorFactory SqlServer2016Processor SqlServer2016ProcessorFactory SqlServerCeDbFactory SqlServerCeProcessor SqlServerCeProcessorFactory SqlServerDbFactory SqlServerProcessor SqlServerProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html",
    "title": "Class SqlServer2000Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServer2000Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Processor : GenericProcessorBase Constructors | Improve this Doc View Source SqlServer2000Processor(ILogger<SqlServer2000Processor>, SqlServer2000Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2000Processor(ILogger<SqlServer2000Processor> logger, SqlServer2000Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2000Processor > logger SqlServer2000Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2000Processor(DbProviderFactory, ILogger, SqlServer2000Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServer2000Processor(DbProviderFactory factory, ILogger logger, SqlServer2000Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description DbProviderFactory factory ILogger logger SqlServer2000Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2000Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServer2000Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html",
    "title": "Class SqlServer2000ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2000ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2000ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2000ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005Processor.html",
    "title": "Class SqlServer2005Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2005Processor Implements IMigrationProcessor Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Processor : SqlServerProcessor Constructors | Improve this Doc View Source SqlServer2005Processor(ILogger<SqlServer2005Processor>, SqlServer2005Quoter, SqlServer2005Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2005Processor(ILogger<SqlServer2005Processor> logger, SqlServer2005Quoter quoter, SqlServer2005Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2005Processor > logger SqlServer2005Quoter quoter SqlServer2005Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html",
    "title": "Class SqlServer2005ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2005ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2005ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2005ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008Processor.html",
    "title": "Class SqlServer2008Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2008Processor Implements IMigrationProcessor Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Processor : SqlServerProcessor Constructors | Improve this Doc View Source SqlServer2008Processor(ILogger<SqlServer2008Processor>, SqlServer2008Quoter, SqlServer2008Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2008Processor(ILogger<SqlServer2008Processor> logger, SqlServer2008Quoter quoter, SqlServer2008Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2008Processor > logger SqlServer2008Quoter quoter SqlServer2008Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html",
    "title": "Class SqlServer2008ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2008ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2008ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2008ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012Processor.html",
    "title": "Class SqlServer2012Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2012Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2012Processor Implements IMigrationProcessor Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012Processor : SqlServerProcessor Constructors | Improve this Doc View Source SqlServer2012Processor(ILogger<SqlServer2012Processor>, SqlServer2008Quoter, SqlServer2012Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2012Processor(ILogger<SqlServer2012Processor> logger, SqlServer2008Quoter quoter, SqlServer2012Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2012Processor > logger SqlServer2008Quoter quoter SqlServer2012Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html",
    "title": "Class SqlServer2012ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2012ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2012ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2012ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014Processor.html",
    "title": "Class SqlServer2014Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2014Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2014Processor Implements IMigrationProcessor Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014Processor : SqlServerProcessor Constructors | Improve this Doc View Source SqlServer2014Processor(ILogger<SqlServer2014Processor>, SqlServer2008Quoter, SqlServer2014Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2014Processor(ILogger<SqlServer2014Processor> logger, SqlServer2008Quoter quoter, SqlServer2014Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2014Processor > logger SqlServer2008Quoter quoter SqlServer2014Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html",
    "title": "Class SqlServer2014ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2014ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2014ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2014ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016Processor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016Processor.html",
    "title": "Class SqlServer2016Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2016Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2016Processor Implements IMigrationProcessor Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016Processor : SqlServerProcessor Constructors | Improve this Doc View Source SqlServer2016Processor(ILogger<SqlServer2016Processor>, SqlServer2008Quoter, SqlServer2016Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2016Processor(ILogger<SqlServer2016Processor> logger, SqlServer2008Quoter quoter, SqlServer2016Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2016Processor > logger SqlServer2008Quoter quoter SqlServer2016Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2016Processor(DbProviderFactory, ILogger, SqlServer2008Quoter, SqlServer2016Generator, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServer2016Processor(DbProviderFactory factory, ILogger logger, SqlServer2008Quoter quoter, SqlServer2016Generator generator, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description DbProviderFactory factory ILogger logger SqlServer2008Quoter quoter SqlServer2016Generator generator IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html",
    "title": "Class SqlServer2016ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2016ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2016ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2016ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html",
    "title": "Class SqlServerCeDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeDbFactory Inheritance Object SqlServerCeDbFactory Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeDbFactory : ReflectionBasedDbFactory Constructors | Improve this Doc View Source SqlServerCeDbFactory() Declaration [Obsolete] public SqlServerCeDbFactory() | Improve this Doc View Source SqlServerCeDbFactory(IServiceProvider) Declaration public SqlServerCeDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] public override IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html",
    "title": "Class SqlServerCeProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessor Inheritance Object SqlServerCeProcessor Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public sealed class SqlServerCeProcessor : GenericProcessorBase Constructors | Improve this Doc View Source SqlServerCeProcessor(SqlServerCeDbFactory, SqlServerCeGenerator, ILogger<SqlServerCeProcessor>, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServerCeProcessor(SqlServerCeDbFactory factory, SqlServerCeGenerator generator, ILogger<SqlServerCeProcessor> logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description SqlServerCeDbFactory factory SqlServerCeGenerator generator ILogger < SqlServerCeProcessor > logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerCeProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServerCeProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction) Declaration protected override IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction Returns Type Description IDbCommand | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html",
    "title": "Class SqlServerCeProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessorFactory Inheritance Object SqlServerCeProcessorFactory Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax [Obsolete] public class SqlServerCeProcessorFactory : MigrationProcessorFactory Constructors | Improve this Doc View Source SqlServerCeProcessorFactory() Declaration [Obsolete] public SqlServerCeProcessorFactory() | Improve this Doc View Source SqlServerCeProcessorFactory(IServiceProvider) Declaration public SqlServerCeProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html",
    "title": "Class SqlServerDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerDbFactory Inheritance Object DbFactoryBase SqlServerDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServerDbFactory : DbFactoryBase, IDbFactory Constructors | Improve this Doc View Source SqlServerDbFactory() Declaration public SqlServerDbFactory() Methods | Improve this Doc View Source CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() Implements IDbFactory"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html",
    "title": "Class SqlServerProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2005Processor SqlServer2008Processor SqlServer2012Processor SqlServer2014Processor SqlServer2016Processor Implements IMigrationProcessor Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerProcessor : GenericProcessorBase Constructors | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, IMigrationGenerator, IQuoter, ILogger, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServerProcessor(IEnumerable<string> databaseTypes, IMigrationGenerator generator, IQuoter quoter, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < String > databaseTypes IMigrationGenerator generator IQuoter quoter ILogger logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, DbProviderFactory, IMigrationGenerator, IQuoter, ILogger, IOptionsSnapshot<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServerProcessor(IEnumerable<string> databaseTypes, DbProviderFactory factory, IMigrationGenerator generator, IQuoter quoter, ILogger logger, IOptionsSnapshot<ProcessorOptions> options, IConnectionStringAccessor connectionStringAccessor, IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < String > databaseTypes DbProviderFactory factory IMigrationGenerator generator IQuoter quoter ILogger logger IOptionsSnapshot < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, IDbConnection, GenericGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServerProcessor(IEnumerable<string> databaseTypes, IDbConnection connection, GenericGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IEnumerable < String > databaseTypes IDbConnection connection GenericGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor"
  },
  "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html",
    "title": "Class SqlServerProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessorFactory Inheritance Object MigrationProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServerProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source SqlServerProcessorFactory() Declaration [Obsolete] public SqlServerProcessorFactory() Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/v3.x/FluentMigrator.Runner.ProfileLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.ProfileLoader.html",
    "title": "Class ProfileLoader | FluentMigrator documentation",
    "keywords": "Class ProfileLoader The default implementation of the IProfileLoader Inheritance Object ProfileLoader Implements IProfileLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ProfileLoader : IProfileLoader Constructors | Improve this Doc View Source ProfileLoader(IRunnerContext, IMigrationRunner, IMigrationRunnerConventions) Initializes a new instance of the ProfileLoader class. Declaration [Obsolete] public ProfileLoader(IRunnerContext runnerContext, IMigrationRunner runner, IMigrationRunnerConventions conventions) Parameters Type Name Description IRunnerContext runnerContext The migration runner context IMigrationRunner runner The migration runner IMigrationRunnerConventions conventions The migration runner conventions | Improve this Doc View Source ProfileLoader(IOptions<RunnerOptions>, IProfileSource, IServiceProvider) Initializes a new instance of the ProfileLoader class. Declaration public ProfileLoader(IOptions<RunnerOptions> options, IProfileSource source, IServiceProvider serviceProvider) Parameters Type Name Description IOptions < RunnerOptions > options The runner options IProfileSource source The profile source IServiceProvider serviceProvider The service provider Properties | Improve this Doc View Source Profiles Gets all found profiles Declaration public IEnumerable<IMigration> Profiles { get; } Property Value Type Description IEnumerable < IMigration > | Improve this Doc View Source SupportsParameterlessApplyProfile Gets a value indicating whether this instance allows a call to ApplyProfiles() Declaration [Obsolete] public bool SupportsParameterlessApplyProfile { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProfiles() Apply all loaded profiles Declaration [Obsolete] public void ApplyProfiles() | Improve this Doc View Source ApplyProfiles(IMigrationRunner) Apply all loaded profiles with the given runner Declaration public void ApplyProfiles(IMigrationRunner runner) Parameters Type Name Description IMigrationRunner runner The migration runner | Improve this Doc View Source FindProfilesIn(IAssemblyCollection, String) Find all profile name tagged migrations in the given assembly collection Declaration [Obsolete] public IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies The assemblies to load the profile tagged migrations from String profile The profile name to search the migrations for Returns Type Description IEnumerable < IMigration > The found migrations Implements IProfileLoader"
  },
  "api/v3.x/FluentMigrator.Runner.RedshiftRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.RedshiftRunnerBuilderExtensions.html",
    "title": "Class RedshiftRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class RedshiftRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object RedshiftRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Redshift.dll Syntax public static class RedshiftRunnerBuilderExtensions Methods | Improve this Doc View Source AddRedshift(IMigrationRunnerBuilder) Adds Redshift support Declaration public static IMigrationRunnerBuilder AddRedshift(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Redshift-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.RunnerEventIds.html": {
    "href": "api/v3.x/FluentMigrator.Runner.RunnerEventIds.html",
    "title": "Class RunnerEventIds | FluentMigrator documentation",
    "keywords": "Class RunnerEventIds The default runner event IDs Inheritance Object RunnerEventIds Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class RunnerEventIds Fields | Improve this Doc View Source ElapsedTime Gets the event ID for elapsed time Declaration public static readonly EventId ElapsedTime Field Value Type Description EventId | Improve this Doc View Source Emphasize Gets the event ID for an emphasized message Declaration public static readonly EventId Emphasize Field Value Type Description EventId | Improve this Doc View Source Heading Gets the event ID for a heading Declaration public static readonly EventId Heading Field Value Type Description EventId | Improve this Doc View Source RunnerCategory Declaration public const string RunnerCategory = \"FluentMigrator.Runner\" Field Value Type Description String | Improve this Doc View Source Say Gets the event ID for an informational message Declaration public static readonly EventId Say Field Value Type Description EventId | Improve this Doc View Source Sql Gets the event ID for an SQL statement Declaration public static readonly EventId Sql Field Value Type Description EventId"
  },
  "api/v3.x/FluentMigrator.Runner.SqlAnywhereRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.SqlAnywhereRunnerBuilderExtensions.html",
    "title": "Class SqlAnywhereRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SqlAnywhereRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public static class SqlAnywhereRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlAnywhere(IMigrationRunnerBuilder) Adds SAP SQL Anywhere support for the latest version Declaration public static IMigrationRunnerBuilder AddSqlAnywhere(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP SQL Anywhere-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlAnywhere16(IMigrationRunnerBuilder) Adds SAP SQL Anywhere support Declaration public static IMigrationRunnerBuilder AddSqlAnywhere16(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP SQL Anywhere-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.SQLiteRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.SQLiteRunnerBuilderExtensions.html",
    "title": "Class SQLiteRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SQLiteRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SQLiteRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SQLite.dll Syntax public static class SQLiteRunnerBuilderExtensions Methods | Improve this Doc View Source AddSQLite(IMigrationRunnerBuilder) Adds SQLite support Declaration public static IMigrationRunnerBuilder AddSQLite(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQLite-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.SqlServerCeRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.SqlServerCeRunnerBuilderExtensions.html",
    "title": "Class SqlServerCeRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerCeRunnerBuilderExtensions Extension methods for Inheritance Object SqlServerCeRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public static class SqlServerCeRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlServerCe(IMigrationRunnerBuilder) Adds SQL Server Compact Edition support Declaration public static IMigrationRunnerBuilder AddSqlServerCe(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server CE-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.SqlServerRunnerBuilderExtensions.html": {
    "href": "api/v3.x/FluentMigrator.Runner.SqlServerRunnerBuilderExtensions.html",
    "title": "Class SqlServerRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SqlServerRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public static class SqlServerRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlServer(IMigrationRunnerBuilder) Adds SQL Server support Declaration public static IMigrationRunnerBuilder AddSqlServer(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder Remarks This always selects the latest supported SQL server version. | Improve this Doc View Source AddSqlServer2000(IMigrationRunnerBuilder) Adds SQL Server 2000 support Declaration public static IMigrationRunnerBuilder AddSqlServer2000(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2005(IMigrationRunnerBuilder) Adds SQL Server 2005 support Declaration public static IMigrationRunnerBuilder AddSqlServer2005(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2008(IMigrationRunnerBuilder) Adds SQL Server 2008 support Declaration public static IMigrationRunnerBuilder AddSqlServer2008(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2012(IMigrationRunnerBuilder) Adds SQL Server 2012 support Declaration public static IMigrationRunnerBuilder AddSqlServer2012(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2014(IMigrationRunnerBuilder) Adds SQL Server 2014 support Declaration public static IMigrationRunnerBuilder AddSqlServer2014(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2016(IMigrationRunnerBuilder) Adds SQL Server 2016 support Declaration public static IMigrationRunnerBuilder AddSqlServer2016(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/v3.x/FluentMigrator.Runner.StopWatch.html": {
    "href": "api/v3.x/FluentMigrator.Runner.StopWatch.html",
    "title": "Class StopWatch | FluentMigrator documentation",
    "keywords": "Class StopWatch Inheritance Object StopWatch Implements IStopWatch Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class StopWatch : IStopWatch Fields | Improve this Doc View Source TimeNow Declaration public static Func<DateTime> TimeNow Field Value Type Description Func < DateTime > Methods | Improve this Doc View Source ElapsedTime() Declaration public TimeSpan ElapsedTime() Returns Type Description TimeSpan | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() | Improve this Doc View Source Time(Action) Declaration public TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan Implements IStopWatch"
  },
  "api/v3.x/FluentMigrator.Runner.TrackingMigrationScope.html": {
    "href": "api/v3.x/FluentMigrator.Runner.TrackingMigrationScope.html",
    "title": "Class TrackingMigrationScope | FluentMigrator documentation",
    "keywords": "Class TrackingMigrationScope A migration scope that encapsulates database changes in a transaction Inheritance Object TrackingMigrationScope TransactionalMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TrackingMigrationScope : IMigrationScope, IDisposable Constructors | Improve this Doc View Source TrackingMigrationScope(Action) Initializes a new instance of the TrackingMigrationScope class. Declaration public TrackingMigrationScope(Action disposalAction) Parameters Type Name Description Action disposalAction Called after the scope was cancelled Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration public virtual bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration public void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration public void Complete() Remarks This usually involves the commit a transaction. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source DoCancel() Called when Cancel() was called and the scope was active Declaration protected virtual void DoCancel() | Improve this Doc View Source DoComplete() Called when Complete() was called and the scope was active Declaration protected virtual void DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.TransactionalMigrationScope.html": {
    "href": "api/v3.x/FluentMigrator.Runner.TransactionalMigrationScope.html",
    "title": "Class TransactionalMigrationScope | FluentMigrator documentation",
    "keywords": "Class TransactionalMigrationScope A migration scope encapsulating migrations in a transaction Inheritance Object TrackingMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members TrackingMigrationScope.Dispose() TrackingMigrationScope.IsActive TrackingMigrationScope.Complete() TrackingMigrationScope.Cancel() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TransactionalMigrationScope : TrackingMigrationScope, IMigrationScope, IDisposable Constructors | Improve this Doc View Source TransactionalMigrationScope(IMigrationProcessor, Action) Initializes a new instance of the TransactionalMigrationScope class. Declaration public TransactionalMigrationScope(IMigrationProcessor processor, Action disposalAction) Parameters Type Name Description IMigrationProcessor processor The migration processor Action disposalAction Called after the scope was cancelled Methods | Improve this Doc View Source DoCancel() Called when Cancel() was called and the scope was active Declaration protected override void DoCancel() Overrides TrackingMigrationScope.DoCancel() | Improve this Doc View Source DoComplete() Called when Complete() was called and the scope was active Declaration protected override void DoComplete() Overrides TrackingMigrationScope.DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.html",
    "title": "Namespace FluentMigrator.Runner.Versioning | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Versioning Classes VersionDescriptionMigration VersionInfo VersionMigration VersionSchemaMigration VersionUniqueMigration Interfaces IVersionInfo Interface to query/update migration information"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.IVersionInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.IVersionInfo.html",
    "title": "Interface IVersionInfo | FluentMigrator documentation",
    "keywords": "Interface IVersionInfo Interface to query/update migration information Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionInfo Methods | Improve this Doc View Source AddAppliedMigration(Int64) Adds a migration version number as applied Declaration void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration The version number | Improve this Doc View Source AppliedMigrations() Gets the version numbers of all applied migrations Declaration IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > the version numbers of all applied migrations | Improve this Doc View Source HasAppliedMigration(Int64) Returns a value indicating whether a migration with the given version number has been applied Declaration bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration The migration version number to validate Returns Type Description Boolean true when the migration with the given version number has been applied | Improve this Doc View Source Latest() Gets the version number of the latest migration that has been applied Declaration long Latest() Returns Type Description Int64 The version number"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html",
    "title": "Class VersionDescriptionMigration | FluentMigrator documentation",
    "keywords": "Class VersionDescriptionMigration Inheritance Object MigrationBase Migration VersionDescriptionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionDescriptionMigration : Migration Constructors | Improve this Doc View Source VersionDescriptionMigration(IVersionTableMetaData) Declaration public VersionDescriptionMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.VersionInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.VersionInfo.html",
    "title": "Class VersionInfo | FluentMigrator documentation",
    "keywords": "Class VersionInfo Inheritance Object VersionInfo Implements IVersionInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionInfo : IVersionInfo Methods | Improve this Doc View Source AddAppliedMigration(Int64) Declaration public void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration | Improve this Doc View Source AppliedMigrations() Declaration public IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > | Improve this Doc View Source HasAppliedMigration(Int64) Declaration public bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration Returns Type Description Boolean | Improve this Doc View Source Latest() Declaration public long Latest() Returns Type Description Int64 Implements IVersionInfo"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.VersionMigration.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.VersionMigration.html",
    "title": "Class VersionMigration | FluentMigrator documentation",
    "keywords": "Class VersionMigration Inheritance Object MigrationBase Migration VersionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionMigration : Migration Constructors | Improve this Doc View Source VersionMigration(IVersionTableMetaData) Declaration public VersionMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html",
    "title": "Class VersionSchemaMigration | FluentMigrator documentation",
    "keywords": "Class VersionSchemaMigration Inheritance Object MigrationBase Migration VersionSchemaMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionSchemaMigration : Migration Constructors | Improve this Doc View Source VersionSchemaMigration(IVersionTableMetaData) Declaration public VersionSchemaMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html": {
    "href": "api/v3.x/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html",
    "title": "Class VersionUniqueMigration | FluentMigrator documentation",
    "keywords": "Class VersionUniqueMigration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration Implements IMigration Inherited Members ForwardOnlyMigration.Down() Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionUniqueMigration : ForwardOnlyMigration Constructors | Improve this Doc View Source VersionUniqueMigration(IVersionTableMetaData) Declaration public VersionUniqueMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/v3.x/FluentMigrator.Runner.VersionLoader.html": {
    "href": "api/v3.x/FluentMigrator.Runner.VersionLoader.html",
    "title": "Class VersionLoader | FluentMigrator documentation",
    "keywords": "Class VersionLoader Inheritance Object VersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class VersionLoader : IVersionLoader Constructors | Improve this Doc View Source VersionLoader(IProcessorAccessor, IConventionSet, IMigrationRunnerConventions, IVersionTableMetaData, IMigrationRunner) Declaration public VersionLoader(IProcessorAccessor processorAccessor, IConventionSet conventionSet, IMigrationRunnerConventions conventions, IVersionTableMetaData versionTableMetaData, IMigrationRunner runner) Parameters Type Name Description IProcessorAccessor processorAccessor IConventionSet conventionSet IMigrationRunnerConventions conventions IVersionTableMetaData versionTableMetaData IMigrationRunner runner Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyMadeVersionDescription Declaration public bool AlreadyMadeVersionDescription { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyMadeVersionUnique Declaration public bool AlreadyMadeVersionUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Assemblies Declaration [Obsolete] protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source OwnsVersionSchema Declaration public bool OwnsVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source Runner Declaration public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration | Improve this Doc View Source VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData | Improve this Doc View Source VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods | Improve this Doc View Source CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition | Improve this Doc View Source DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source GetVersionTableMetaData() Declaration public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData | Improve this Doc View Source LoadVersionInfo() Declaration public void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Declaration public void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/v3.x/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html": {
    "href": "api/v3.x/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html",
    "title": "Class DefaultVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Class DefaultVersionTableMetaData Inheritance Object DefaultVersionTableMetaData Implements IVersionTableMetaData ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.dll Syntax public class DefaultVersionTableMetaData : IVersionTableMetaData Constructors | Improve this Doc View Source DefaultVersionTableMetaData() Declaration [Obsolete(\"Use dependency injection\")] public DefaultVersionTableMetaData() | Improve this Doc View Source DefaultVersionTableMetaData(IConventionSet, IOptions<RunnerOptions>) Declaration public DefaultVersionTableMetaData(IConventionSet conventionSet, IOptions<RunnerOptions> runnerOptions) Parameters Type Name Description IConventionSet conventionSet IOptions < RunnerOptions > runnerOptions | Improve this Doc View Source DefaultVersionTableMetaData(String) Declaration [Obsolete(\"Use dependency injection\")] public DefaultVersionTableMetaData(string schemaName) Parameters Type Name Description String schemaName Properties | Improve this Doc View Source ApplicationContext Provides access to ApplicationContext object. Declaration [Obsolete(\"Use dependency injection to get data using your own services\")] public object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. | Improve this Doc View Source AppliedOnColumnName Declaration public virtual string AppliedOnColumnName { get; } Property Value Type Description String | Improve this Doc View Source ColumnName Declaration public virtual string ColumnName { get; } Property Value Type Description String | Improve this Doc View Source DescriptionColumnName Declaration public virtual string DescriptionColumnName { get; } Property Value Type Description String | Improve this Doc View Source OwnsSchema Declaration public virtual bool OwnsSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public virtual string TableName { get; } Property Value Type Description String | Improve this Doc View Source UniqueIndexName Declaration public virtual string UniqueIndexName { get; } Property Value Type Description String Implements IVersionTableMetaData ISchemaExpression"
  },
  "api/v3.x/FluentMigrator.Runner.VersionTableInfo.html": {
    "href": "api/v3.x/FluentMigrator.Runner.VersionTableInfo.html",
    "title": "Namespace FluentMigrator.Runner.VersionTableInfo | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.VersionTableInfo Classes DefaultVersionTableMetaData VersionTableMetaDataAttribute Interfaces IVersionTableMetaData"
  },
  "api/v3.x/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html": {
    "href": "api/v3.x/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html",
    "title": "Interface IVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaData Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IVersionTableMetaData Properties | Improve this Doc View Source ApplicationContext Provides access to ApplicationContext object. Declaration [Obsolete(\"Use dependency injection to get the IRunnerContext\")] object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. | Improve this Doc View Source AppliedOnColumnName Declaration string AppliedOnColumnName { get; } Property Value Type Description String | Improve this Doc View Source ColumnName Declaration string ColumnName { get; } Property Value Type Description String | Improve this Doc View Source DescriptionColumnName Declaration string DescriptionColumnName { get; } Property Value Type Description String | Improve this Doc View Source OwnsSchema Declaration bool OwnsSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Declaration string SchemaName { get; } Property Value Type Description String | Improve this Doc View Source TableName Declaration string TableName { get; } Property Value Type Description String | Improve this Doc View Source UniqueIndexName Declaration string UniqueIndexName { get; } Property Value Type Description String"
  },
  "api/v3.x/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html": {
    "href": "api/v3.x/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html",
    "title": "Class VersionTableMetaDataAttribute | FluentMigrator documentation",
    "keywords": "Class VersionTableMetaDataAttribute Inheritance Object Attribute VersionTableMetaDataAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class VersionTableMetaDataAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.SqlAnywhere.html": {
    "href": "api/v3.x/FluentMigrator.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlAnywhere Classes SqlAnywhereExtensions Extension methods for SQL Anywhere"
  },
  "api/v3.x/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html": {
    "href": "api/v3.x/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html",
    "title": "Class SqlAnywhereExtensions | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereExtensions Extension methods for SQL Anywhere Inheritance Object SqlAnywhereExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlAnywhere Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public static class SqlAnywhereExtensions Fields | Improve this Doc View Source ConstraintType Declaration public const string ConstraintType = \"SqlAnywhereConstraintType\" Field Value Type Description String | Improve this Doc View Source SchemaPassword Declaration public const string SchemaPassword = \"SqlAnywhereSchemaPassword\" Field Value Type Description String | Improve this Doc View Source WithNullsDistinct Declaration public const string WithNullsDistinct = \"SqlAnywhereNullsDistinct\" Field Value Type Description String Methods | Improve this Doc View Source Clustered(ICreateConstraintOptionsSyntax) Set the unique/index constraint type to Clustered Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression The expression | Improve this Doc View Source NonClustered(ICreateConstraintOptionsSyntax) Set the unique/index constraint type to NonClustered Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression The expression | Improve this Doc View Source Password(ICreateSchemaOptionsSyntax, String) Sets the schema password used during schema creation Declaration public static ICreateSchemaOptionsSyntax Password(this ICreateSchemaOptionsSyntax expression, string password) Parameters Type Name Description ICreateSchemaOptionsSyntax expression The schema creation expression String password The password to use Returns Type Description ICreateSchemaOptionsSyntax The next step | Improve this Doc View Source UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression"
  },
  "api/v3.x/FluentMigrator.SqlAnywhereConstraintType.html": {
    "href": "api/v3.x/FluentMigrator.SqlAnywhereConstraintType.html",
    "title": "Enum SqlAnywhereConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlAnywhereConstraintType The constraint type as supported by SQL Anywhere Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public enum SqlAnywhereConstraintType Fields Name Description Clustered The index/unique constraint should be clustered NonClustered The index/unique constraint should not be clustered"
  },
  "api/v3.x/FluentMigrator.SqlScriptTokenReplacer.html": {
    "href": "api/v3.x/FluentMigrator.SqlScriptTokenReplacer.html",
    "title": "Class SqlScriptTokenReplacer | FluentMigrator documentation",
    "keywords": "Class SqlScriptTokenReplacer Function to replace token in an SQL script Inheritance Object SqlScriptTokenReplacer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public static class SqlScriptTokenReplacer Methods | Improve this Doc View Source ReplaceSqlScriptTokens(String, IDictionary<String, String>) Replace tokens in an SQL script Declaration public static string ReplaceSqlScriptTokens(string sqlText, IDictionary<string, string> parameters) Parameters Type Name Description String sqlText The SQL script where the tokens will be replaced IDictionary < String , String > parameters The tokens to be replaced Returns Type Description String The SQL script with the replaced tokens"
  },
  "api/v3.x/FluentMigrator.SqlServer.DataCompressionType.html": {
    "href": "api/v3.x/FluentMigrator.SqlServer.DataCompressionType.html",
    "title": "Class DataCompressionType | FluentMigrator documentation",
    "keywords": "Class DataCompressionType Inheritance Object DataCompressionType Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.SqlServer Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public class DataCompressionType Fields | Improve this Doc View Source None Declaration public static DataCompressionType None Field Value Type Description DataCompressionType | Improve this Doc View Source Page Declaration public static DataCompressionType Page Field Value Type Description DataCompressionType | Improve this Doc View Source Row Declaration public static DataCompressionType Row Field Value Type Description DataCompressionType Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/v3.x/FluentMigrator.SqlServer.html": {
    "href": "api/v3.x/FluentMigrator.SqlServer.html",
    "title": "Namespace FluentMigrator.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlServer Classes DataCompressionType SqlServerExtensions"
  },
  "api/v3.x/FluentMigrator.SqlServer.SqlServerExtensions.html": {
    "href": "api/v3.x/FluentMigrator.SqlServer.SqlServerExtensions.html",
    "title": "Class SqlServerExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerExtensions Inheritance Object SqlServerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlServer Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public static class SqlServerExtensions Fields | Improve this Doc View Source ConstraintType Declaration public static readonly string ConstraintType Field Value Type Description String | Improve this Doc View Source DataCompression Declaration public static readonly string DataCompression Field Value Type Description String | Improve this Doc View Source IdentityIncrement Declaration public static readonly string IdentityIncrement Field Value Type Description String | Improve this Doc View Source IdentityInsert Declaration public static readonly string IdentityInsert Field Value Type Description String | Improve this Doc View Source IdentitySeed Declaration public static readonly string IdentitySeed Field Value Type Description String | Improve this Doc View Source IncludesList Declaration public static readonly string IncludesList Field Value Type Description String | Improve this Doc View Source IndexColumnNullsDistinct Declaration public static readonly string IndexColumnNullsDistinct Field Value Type Description String | Improve this Doc View Source IndexFilter Declaration public static readonly string IndexFilter Field Value Type Description String | Improve this Doc View Source OnlineIndex Declaration public static readonly string OnlineIndex Field Value Type Description String | Improve this Doc View Source RowGuidColumn Declaration public static readonly string RowGuidColumn Field Value Type Description String | Improve this Doc View Source SchemaAuthorization Declaration public static readonly string SchemaAuthorization Field Value Type Description String | Improve this Doc View Source SparseColumn Declaration public static readonly string SparseColumn Field Value Type Description String Methods | Improve this Doc View Source Authorization(ICreateSchemaOptionsSyntax, String) Sets the schema owner during schema creation Declaration public static ICreateSchemaOptionsSyntax Authorization(this ICreateSchemaOptionsSyntax expression, string owner) Parameters Type Name Description ICreateSchemaOptionsSyntax expression The schema creation expression String owner The schema owner Returns Type Description ICreateSchemaOptionsSyntax The next step | Improve this Doc View Source Clustered(ICreateConstraintOptionsSyntax) Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression | Improve this Doc View Source Filter(ICreateIndexOptionsSyntax, String) Declaration public static ICreateIndexOptionsSyntax Filter(this ICreateIndexOptionsSyntax expression, string filter) Parameters Type Name Description ICreateIndexOptionsSyntax expression String filter Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) Makes a column an Identity column using the specified seed and increment values. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, int seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int32 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32) Makes a column an Identity column using the specified seed and increment values with bigint support. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, long seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int64 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Include(ICreateIndexOnColumnSyntax, String) Declaration public static ICreateIndexNonKeyColumnSyntax Include(this ICreateIndexOnColumnSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOnColumnSyntax expression String columnName Returns Type Description ICreateIndexNonKeyColumnSyntax | Improve this Doc View Source Include(ICreateIndexOptionsSyntax, String) Declaration public static ICreateIndexOptionsSyntax Include(this ICreateIndexOptionsSyntax expression, string columnName) Parameters Type Name Description ICreateIndexOptionsSyntax expression String columnName Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source NonClustered(ICreateConstraintOptionsSyntax) Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description ICreateConstraintOptionsSyntax expression | Improve this Doc View Source NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexColumnUniqueOptionsSyntax The expression | Improve this Doc View Source NullsDistinct(ICreateIndexMoreColumnOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax NullsDistinct(this ICreateIndexMoreColumnOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsNotDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression) Parameters Type Name Description ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexColumnUniqueOptionsSyntax The expression | Improve this Doc View Source NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax NullsNotDistinct(this ICreateIndexMoreColumnOptionsSyntax expression) Parameters Type Name Description ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source Online(ICreateConstraintOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateConstraintOptionsSyntax Online(this ICreateConstraintOptionsSyntax expression, bool active = true) Parameters Type Name Description ICreateConstraintOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description ICreateConstraintOptionsSyntax | Improve this Doc View Source Online(ICreateIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateIndexOptionsSyntax Online(this ICreateIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source Online(IDeleteConstraintInSchemaOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteConstraintInSchemaOptionsSyntax Online(this IDeleteConstraintInSchemaOptionsSyntax expression, bool active = true) Parameters Type Name Description IDeleteConstraintInSchemaOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description IDeleteConstraintInSchemaOptionsSyntax | Improve this Doc View Source Online(IDeleteIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteIndexOptionsSyntax Online(this IDeleteIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description IDeleteIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description IDeleteIndexOptionsSyntax | Improve this Doc View Source RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) Declaration public static ICreateTableColumnOptionOrWithColumnSyntax RowGuid(this ICreateTableColumnOptionOrWithColumnSyntax expression) Parameters Type Name Description ICreateTableColumnOptionOrWithColumnSyntax expression Returns Type Description ICreateTableColumnOptionOrWithColumnSyntax | Improve this Doc View Source Sparse(ICreateTableColumnOptionOrWithColumnSyntax) Declaration public static ICreateTableColumnOptionOrWithColumnSyntax Sparse(this ICreateTableColumnOptionOrWithColumnSyntax expression) Parameters Type Name Description ICreateTableColumnOptionOrWithColumnSyntax expression Returns Type Description ICreateTableColumnOptionOrWithColumnSyntax | Improve this Doc View Source UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source WithDataCompression(ICreateIndexOptionsSyntax, DataCompressionType) Declaration public static ICreateIndexOptionsSyntax WithDataCompression(this ICreateIndexOptionsSyntax expression, DataCompressionType dataCompressionType) Parameters Type Name Description ICreateIndexOptionsSyntax expression DataCompressionType dataCompressionType Returns Type Description ICreateIndexOptionsSyntax | Improve this Doc View Source WithIdentityInsert(IInsertDataSyntax) Inserts data using Sql Server's IDENTITY INSERT feature. Declaration public static IInsertDataSyntax WithIdentityInsert(this IInsertDataSyntax expression) Parameters Type Name Description IInsertDataSyntax expression Returns Type Description IInsertDataSyntax"
  },
  "api/v3.x/FluentMigrator.SqlServerConstraintType.html": {
    "href": "api/v3.x/FluentMigrator.SqlServerConstraintType.html",
    "title": "Enum SqlServerConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlServerConstraintType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public enum SqlServerConstraintType Fields Name Description Clustered NonClustered"
  },
  "api/v3.x/FluentMigrator.SystemMethods.html": {
    "href": "api/v3.x/FluentMigrator.SystemMethods.html",
    "title": "Enum SystemMethods | FluentMigrator documentation",
    "keywords": "Enum SystemMethods The well-known system methods Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum SystemMethods Fields Name Description CurrentDateTime The function to get the current timestamp CurrentDateTimeOffset The function to get the current timestamp with time zone CurrentUser The function to get the current user CurrentUTCDateTime The function to get the current UTC timestamp NewGuid The function to create a new GUID NewSequentialId The function to create a new sequential GUID"
  },
  "api/v3.x/FluentMigrator.TagBehavior.html": {
    "href": "api/v3.x/FluentMigrator.TagBehavior.html",
    "title": "Enum TagBehavior | FluentMigrator documentation",
    "keywords": "Enum TagBehavior The desired tag matching behavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TagBehavior Fields Name Description RequireAll All tags must be matched RequireAny Any tag must be matched"
  },
  "api/v3.x/FluentMigrator.TagsAttribute.html": {
    "href": "api/v3.x/FluentMigrator.TagsAttribute.html",
    "title": "Class TagsAttribute | FluentMigrator documentation",
    "keywords": "Class TagsAttribute Used to filter which migrations are run. Inheritance Object Attribute TagsAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Interface, AllowMultiple = true)] public class TagsAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source TagsAttribute(TagBehavior, String[]) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(TagBehavior behavior, params string[] tagNames) Parameters Type Name Description TagBehavior behavior The behavior of the runner when evaluating tagNames . String [] tagNames The names of the tags that are evaluated by the runner. | Improve this Doc View Source TagsAttribute(String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1) Parameters Type Name Description String tagName1 The tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3, string tagName4) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. String tagName4 The fourth tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String[]) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(params string[] tagNames) Parameters Type Name Description String [] tagNames The names of the tags that are evaluated by the runner. Properties | Improve this Doc View Source Behavior Gets the behavior of the runner when evaluating TagNames . Declaration public TagBehavior Behavior { get; } Property Value Type Description TagBehavior | Improve this Doc View Source TagNames Gets the names of the tags that are evaluated by the runner. Declaration public string[] TagNames { get; } Property Value Type Description String [] Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.TimestampedMigrationAttribute.html": {
    "href": "api/v3.x/FluentMigrator.TimestampedMigrationAttribute.html",
    "title": "Class TimestampedMigrationAttribute | FluentMigrator documentation",
    "keywords": "Class TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members MigrationAttribute.Version MigrationAttribute.TransactionBehavior MigrationAttribute.Description MigrationAttribute.BreakingChange Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class TimestampedMigrationAttribute : MigrationAttribute, _Attribute Constructors | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. String description A description for the migration. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/v3.x/FluentMigrator.TransactionBehavior.html": {
    "href": "api/v3.x/FluentMigrator.TransactionBehavior.html",
    "title": "Enum TransactionBehavior | FluentMigrator documentation",
    "keywords": "Enum TransactionBehavior The desired transaction behavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TransactionBehavior Fields Name Description Default The default transaction behavior, meaning 1 transaction per migration if the Processor allows it. None A migration will not use a transaction."
  },
  "api/v3.x/FluentMigrator.Validation.DefaultMigrationExpressionValidator.html": {
    "href": "api/v3.x/FluentMigrator.Validation.DefaultMigrationExpressionValidator.html",
    "title": "Class DefaultMigrationExpressionValidator | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationExpressionValidator Default implementation of a IMigrationExpressionValidator Inheritance Object DefaultMigrationExpressionValidator Implements IMigrationExpressionValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public class DefaultMigrationExpressionValidator : IMigrationExpressionValidator Constructors | Improve this Doc View Source DefaultMigrationExpressionValidator(IServiceProvider) Initializes a new instance of the DefaultMigrationExpressionValidator class. Declaration public DefaultMigrationExpressionValidator(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider Methods | Improve this Doc View Source Validate(IMigrationExpression) Validates the given migration expression Declaration public virtual IEnumerable<ValidationResult> Validate(IMigrationExpression expression) Parameters Type Name Description IMigrationExpression expression The migration expression to validate Returns Type Description IEnumerable < ValidationResult > The validation results Implements IMigrationExpressionValidator"
  },
  "api/v3.x/FluentMigrator.Validation.html": {
    "href": "api/v3.x/FluentMigrator.Validation.html",
    "title": "Namespace FluentMigrator.Validation | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Validation Classes DefaultMigrationExpressionValidator Default implementation of a IMigrationExpressionValidator Interfaces IMigrationExpressionValidator Interface for a migration expression validator IValidationChildren Provides access to child objects that have to be validated too"
  },
  "api/v3.x/FluentMigrator.Validation.IMigrationExpressionValidator.html": {
    "href": "api/v3.x/FluentMigrator.Validation.IMigrationExpressionValidator.html",
    "title": "Interface IMigrationExpressionValidator | FluentMigrator documentation",
    "keywords": "Interface IMigrationExpressionValidator Interface for a migration expression validator Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationExpressionValidator Methods | Improve this Doc View Source Validate(IMigrationExpression) Validates the given migration expression Declaration IEnumerable<ValidationResult> Validate(IMigrationExpression expression) Parameters Type Name Description IMigrationExpression expression The migration expression to validate Returns Type Description IEnumerable < ValidationResult > The validation results"
  },
  "api/v3.x/FluentMigrator.Validation.IValidationChildren.html": {
    "href": "api/v3.x/FluentMigrator.Validation.IValidationChildren.html",
    "title": "Interface IValidationChildren | FluentMigrator documentation",
    "keywords": "Interface IValidationChildren Provides access to child objects that have to be validated too Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public interface IValidationChildren Properties | Improve this Doc View Source Children Gets the child objects Declaration IEnumerable<object> Children { get; } Property Value Type Description IEnumerable < Object >"
  },
  "api/v3.x/index.html": {
    "href": "api/v3.x/index.html",
    "title": "FluentMigrator API | FluentMigrator documentation",
    "keywords": "FluentMigrator API The most important part of the API is the migration runner . Getting started The starting point for every beginner of FluentMigrator is the Quickstart tutorial ."
  },
  "api/v3.x/Microsoft.Extensions.DependencyInjection.FluentMigratorServiceCollectionExtensions.html": {
    "href": "api/v3.x/Microsoft.Extensions.DependencyInjection.FluentMigratorServiceCollectionExtensions.html",
    "title": "Class FluentMigratorServiceCollectionExtensions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorServiceCollectionExtensions Extension methods for setting up the migration runner services in an . Inheritance Object FluentMigratorServiceCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : FluentMigrator.Runner.dll Syntax public static class FluentMigratorServiceCollectionExtensions Methods | Improve this Doc View Source AddFluentMigratorCore(IServiceCollection) Adds migration runner (except the DB processor specific) services to the specified . Declaration public static IServiceCollection AddFluentMigratorCore(this IServiceCollection services) Parameters Type Name Description IServiceCollection services The to add services to. Returns Type Description IServiceCollection The updated service collection | Improve this Doc View Source ConfigureRunner(IServiceCollection, Action<IMigrationRunnerBuilder>) Configures the migration runner Declaration public static IServiceCollection ConfigureRunner(this IServiceCollection services, Action<IMigrationRunnerBuilder> configure) Parameters Type Name Description IServiceCollection services The to add services to. Action < IMigrationRunnerBuilder > configure The IMigrationRunnerBuilder configuration delegate. Returns Type Description IServiceCollection The updated service collection"
  },
  "api/v3.x/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/v3.x/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | FluentMigrator documentation",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes FluentMigratorServiceCollectionExtensions Extension methods for setting up the migration runner services in an ."
  },
  "articles/comparison-to-entity-framework-migrations.html": {
    "href": "articles/comparison-to-entity-framework-migrations.html",
    "title": "FluentMigrator Comparison to Entity Framework Code-First Migrations | FluentMigrator documentation",
    "keywords": "Technically, FluentMigrator does not \"generate\" migrations for you. You have to write them yourself. By comparison, Entity Framework Core can use its fluent model building syntax and automatically infer up/down migrations, and you can focus primarily on writing data migrations. Entity Framework Core does this through PowerShell command-line interface Add-Migration , which keeps track of a ModelSnapshot state. That said, here is how Microsoft recommends writing migrations with EFCore, compared with the same logic in FluentMigrator: EFCore Source: https://docs.microsoft.com/en-us/aspnet/core/data/ef-mvc/migrations?view=aspnetcore-3.1#examine-up-and-down-methods public partial class InitialCreate : Migration { protected override void Up(MigrationBuilder migrationBuilder) { migrationBuilder.CreateTable( name: \"Course\", columns: table => new { CourseID = table.Column<int>(nullable: false), Credits = table.Column<int>(nullable: false), Title = table.Column<string>(nullable: true) }, constraints: table => { table.PrimaryKey(\"PK_Course\", x => x.CourseID); }); // Additional code not shown } protected override void Down(MigrationBuilder migrationBuilder) { migrationBuilder.DropTable( name: \"Enrollment\"); // Additional code not shown } } FluentMigrator [Migration(1, \"InitialCreate\")] public class InitialCreate : Migration { public void Up() { Create.Table(\"Course\") .WithColumn(\"CourseID\").AsInt32().NotNullable().PrimaryKey() .WithColumn(\"Credits\").AsInt32().NotNullable() .WithColumn(\"Title\").AsString().Nullable(); // Additional code not shown } protected override void Down(MigrationBuilder migrationBuilder) { Delete.Table(\"Enrollment\"); // Additional code not shown } } In the above example, you don't need to type out PK_Course in your primary key definition, because FluentMigrator supports \"Don't Repeat Yourself\" principle via naming conventions and \"knows\" that is the correct name for your primary key. You just define your naming conventions once. Also, because of the fluent syntax, you'll find you have to type a lot less than you do with EFCore migrations. If you find this to not be the case, please provide feedback and we will make it more efficient."
  },
  "articles/db-functions.html": {
    "href": "articles/db-functions.html",
    "title": "Database functions | FluentMigrator documentation",
    "keywords": "Database functions It is possible to set the default value when creating or altering a column. To just set a value you can use the following fluent syntax: Create.Table(\"TestTable\").WithColumn(\"Name\").AsString().Nullable().WithDefaultValue(\"test\"); In addition, in the event you want to pass in arbitrary SQL to the WithDefaultValue method, you can do so using [raw sql](xref:raw-sql.md]: Create.Table(\"TestTable\").WithColumn(\"Name\").AsString().Nullable().WithDefaultValue(RawSql.Insert(\"SYSUTCDATETIME()\")); However, you can take advantage of some database functions to set the default value. The SystemMethods enum contains five database functions: Function Description NewGuid Creates a new GUID NewSequentialId Creates a new sequential GUID CurrentDateTime The current (local) timestamp CurrentDateTimeOffset The current (local) timestamp with time zone CurrentUTCDateTime The current (UTC) timestamp CurrentUser The current user name These are specific to each database, for example CurrentDateTime calls the GETDATE() function for Sql Server and the now() function for Postgres. By using WithDefault instead of WithDefaultValue, you can pass in one of the enum values. Create.Table(\"TestTable\").WithColumn(\"Created\").AsDateTime().Nullable().WithDefault(SystemMethods.CurrentDateTime); Function/Database support matrix Server NewGuid NewSequentialId CurrentDateTime CurrentDateTimeOffset CurrentUTCDateTime CurrentUser DB2 ☐ ☐ ☑ ☐ ☑ ☑ Firebird ☑ ☑ 1 ☑ ☐ ☐ ☐ Hana ☐ ☐ ☑ ☐ ☑ ☐ JET ☐ ☐ ☐ ☐ ☐ ☐ MySQL ☑ ☑ 1 ☑ ☐ ☑ ☑ Oracle ☑ ☑ 1 ☑ ☑ ☑ ☑ Postgres ☑ 2 ☑ 2 ☑ ☐ ☑ ☑ Redshift ☐ ☐ ☑ ☑ 3 ☑ ☑ SQLite ☐ ☐ ☑ ☐ ☑ ☐ SQL Anywhere ☑ ☑ 1 ☑ ☑ 3 ☑ ☑ SQL Server 2000 ☑ ☑ ☑ ☑ 4 ☑ ☑ SQL Server 2008 ☑ ☑ ☑ ☑ ☑ ☑ SQL Server CE ☑ ☑ ☑ ☑ 4 ☑ ☑ 1 Is the same as NewGuid 2 uuid-ossp extension is required 3 Implicitly contains the offset 4 Same as CurrentDateTime"
  },
  "articles/extensions/postgres-extensions.html": {
    "href": "articles/extensions/postgres-extensions.html",
    "title": "Postgres specific extensions | FluentMigrator documentation",
    "keywords": "FluentMigrator supports some extra functions that are specific to Postgres only. Adding the FluentMigrator.Runner assembly as a reference These extension methods are not included in the core dll so to get access them you have to add the FluentMigrator.Extensions.Postgres package in your migrations project. The final step is to add the following using to your migration class: using FluentMigrator.Postgres; Include column on index This extension allows you to include a column for an index. Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .Include(\"Name\"); Note: This feature was implement on Postgres 11, with you want to use it is necessary use Postgres11_0 or higher. var service = new ServiceCollection() // Add common FluentMigrator services .AddFluentMigratorCore() .ConfigureRunner(rb => rb // Add Postgres 11 support to FluentMigrator .AddPostgres11_0() .. ); Index method This extension allows you to choose a specific index method (B-tree (default), Hash, GiST, SP-GiST, GIN, and BRIN) for more information about index method see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingHash(); Or if you want more control over index method you could pass the index method by parameter: Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .Using(Algorithm.Gin); Notes: Dependend on the index method could or couldn't support some feature, for sample Hash index method doesn't support multi-column. For more information about index method limitation see here in Notes parts. Concurrently When this option is used, PostgreSQL will build the index without taking any locks that prevent concurrent inserts, updates, or deletes on the table. Whereas a standard index build locks out writes (but not reads) on the table until it's done. For more information about index method see here . Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .AsConcurrently(); Notes For to be able to use this feature is necessary remove the transaction from migrations, because PostgeSQLd doesn't support create concurrently index with transaction. Only Indicates not to recurse creating indexes on partitions, if the table is partitioned Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .AsOnly(); Null sorts Specifies that column should be sort before or after non-nulls. Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending().Nulls(NullSort.First); Nulls First Specifies that nulls sort before non-nulls. This is the default when DESC is specified. Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending().NullsFirst() Nulls Last Specifies that nulls sort after non-nulls. This is the default when DESC is not specified. Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending().NullsLast() Partial Indexes (WHERE/Filter) A partial index is an index built over a subset of a table; the subset is defined by a conditional expression (called the predicate of the partial index). The index contains entries only for those table rows that satisfy the predicate. For more information about index method see here . Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .Column(\"is_enable\").Ascending() .WithOptions() .Filter(\"is_enable is true\"); Index Storage Parameters Each index method has its own set of allowed storage parameters. For more information about index storageparameters see here Fillfactor The fillfactor for an index is a percentage that determines how full the index method will try to pack index pages. For B-trees, leaf pages are filled to this percentage during initial index build, and also when extending the index at the right (adding new largest key values). If pages subsequently become completely full, they will be split, leading to gradual degradation in the index's efficiency. B-trees use a default fillfactor of 90, but any integer value from 10 to 100 can be selected. If the table is static then fillfactor 100 is best to minimize the index's physical size, but for heavily updated tables a smaller fillfactor is better to minimize the need for page splits. The other index methods use fillfactor in different but roughly analogous ways; the default fillfactor varies between methods. Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .Fillfactor(100); Notes: In case you use Fillfactor without have select an index method we are going to assume that you are using B-Tree (the defautl index method) and the release B-Tree index storage. B-Tree The exclusive index storage parameters for B-Tree index method. Vacuum cleanup index scale factor Specifies the fraction of the total number of heap tuples counted in the previous statistics collection that can be inserted without incurring an index scan at the VACUUM cleanup stage. The value can range from 0 to 10_000_000_000. When vacuum_cleanup_index_scale_factor is set to 0, index scans are never skipped during VACUUM cleanup. The default value is 0.1. For more information aboutVacuum cleanup index scale factor see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingBTree() .VacuumCleanupIndexScaleFactor(12.0f); Note: This feature was implement on Postgres 11, if you want to use it is necessary use Postgres11_0 or higher. GiST The exclusive index storage parameters for GiST index method. Buffering Building large GiST indexes by simply inserting all the tuples tends to be slow, because if the index tuples are scattered across the index and the index is large enough to not fit in cache, the insertions need to perform a lot of random I/O. Beginning in version 9.2, PostgreSQL supports a more efficient method to build GiST indexes based on buffering, which can dramatically reduce the number of random I/Os needed for non-ordered data sets. For well-ordered data sets the benefit is smaller or non-existent, because only a small number of pages receive new tuples at a time, and those pages fit in cache even if the index as whole does not. For more information about Buffering see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingGist() .Buffering(GistBuffering.Auto) Note: This feature was implement on Postgres 10, if you want to use it is necessary use Postgres10_0. GIN The exclusive index storage parameters for GIN index method. Fastupdate Updating a GIN index tends to be slow because of the intrinsic nature of inverted indexes: inserting or updating one heap row can cause many inserts into the index (one for each key extracted from the indexed item). Because of that nature of GIN index, PostgreSQL add support for Fastupdate, where that is capable of postponing much of this work by inserting new tuples into a temporary, unsorted list of pending entries. For more information about Fastupdate see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingGin() .FastUpdate() Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingGin() .DisableFastUpdate() Pending list limit Sets the maximum size of a GIN index's pending list, which is used when fastupdate is enabled. If the list grows larger than this maximum size, it is cleaned up by moving the entries in it to the index's main GIN data structure in bulk. If this value is specified without units, it is taken as kilobytes. The default is four megabytes (4MB). For more information about Pending list limit see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingGin() .PendingListLimit(1_000) Note: This feature was implement on Postgres 10, if you want to use it is necessary use Postgres10_0 or higher. BRIN The exclusive index storage parameters for BRIN index method. Pages per range Defines the number of table blocks that make up one block range for each entry of a BRIN index. The default is 128. For more information about BRIN index see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingBrin() .PagesPerRange(127) Note: This feature was implement on Postgres 10, if you want to use it is necessary use Postgres10_0 or higher. Autosummarize Defines whether a summarization run is invoked for the previous page range whenever an insertion is detected on the next one. For more information about BRIN index see here Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingBrin() .Autosummarize() Create.Index() .OnTable(\"TestTable\") .Column(\"Id\").Ascending() .WithOptions() .UsingBrin() .DisableAutosummarize() Note: This feature was implement on Postgres 10, if you want to use it is necessary use Postgres10_0 or higher."
  },
  "articles/extensions/sql-server-extensions.html": {
    "href": "articles/extensions/sql-server-extensions.html",
    "title": "SQL Server specific extensions | FluentMigrator documentation",
    "keywords": "FluentMigrator supports some extra functions that are specific to Sql Server only. Adding the FluentMigrator.Runner assembly as a reference These extension methods are not included in the core dll so to get access them you have to add the FluentMigrator.Extensions.SqlServer package in your migrations project. The final step is to add the following using to your migration class: using FluentMigrator.SqlServer; Constraint Clustering (Clustered or NonClustered) This extension allows you to specify a primary key or unique constraint as clustered or non-clustered. SQL Server tries do the following, unless you specify 'clustered' or 'nonclustered' in sql: Create a primary key with a 'clustered' index Create a unique constraint with a 'nonclustered' index Therefore, the most common usage pattern is likely to be along the lines of: Create a primary key with a 'nonclustered' index Create.PrimaryKey(\"PK\").OnTable(\"TestTable\").Column(\"Id\").NonClustered(); Create a unique constraint with a 'clustered' index Create.UniqueConstraint(\"UQ\").OnTable(\"TestTable\").Column(\"Name\").Clustered(); Note: You have to create the primary key index or unique constraint separately from the Create.Table expression to be able to specify them as clustered or non-clustered. Create a unique constraint on nullable columns using null value filter Note: SQL Server has a different approach to creating unique constraints on nullable columns than ANSI standard. Create.Index(\"UQ_NullFilter\") .OnTable(\"TestTable\").InSchema(\"dbo\") .OnColumn(\"Name\").Ascending() .WithOptions().Unique() .WithOptions().Filter(\"[Name] IS NOT NULL\"); This will generate the following T-SQL DDL statement: CREATE UNIQUE NONCLUSTERED INDEX [UQ_NullFilter] ON [dbo].[TestTable] ( [Name] ASC ) WHERE ([Name] IS NOT NULL) Create a column of SQL data type nvarchar(MAX) / varchar(MAX) Use int.MaxValue to represent infinite length strings. Create.Column(\"Name\").OnTable(\"TestTable\").AsString(int.MaxValue); Use .AsAnsiString(int.MaxValue) for varchar(MAX) : Create.Column(\"Name\").OnTable(\"TestTable\").AsAnsiString(int.MaxValue); Alternatively, you can define an extension method for use with Create.Table syntax, which would then be visible in the Visual Studio IntelliSense code completion dropdown: public static class ICreateTableColumnAsTypeSyntaxExtensions { public static ICreateTableColumnOptionOrWithColumnSyntax AsMaxString(this ICreateTableColumnAsTypeSyntax createTableColumnAsTypeSyntax) { return createTableColumnAsTypeSyntax.AsString(int.MaxValue); } } WithIdentityInsert If you want to turn on Identity Insert to be able to insert values into an identity column (see here for more details) then FluentMigrator has an extension method that supports this. Insert.IntoTable(\"Foo\") .WithIdentityInsert() .Row(new { id = 1, name = \"Foo 1\" }); Add Identity Column with Seed and Increment If you want to create an identity column and specify the seed (the id to start with) and an increment (how much the id value should increase when inserting new rows) then use this extension method: Create.Table(\"TestTable\") .WithColumn(\"Id\").AsInt32().Identity(100,1)"
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "FAQ | FluentMigrator documentation",
    "keywords": "This FAQ will answer most common questions. Please open an issue if your question isn't answered here. Why does the Migrate.exe tool say No migrations found ? Possible reasons: Migration class isn't public Migration class isn't derived from IMigration (or Migration ) Migration class isn't attributed with MigrationAttribute The versions of the Migrate.exe tool ( FluentMigrator.Console package) and the FluentMigrator package(s) referenced in your project are different. How can I run FluentMigrator.DotNet.Cli with a .NET 5.0 assembly? The FluentMigrator.DotNet.Cli contains an --allowDirtyAssemblies switch that will allow you to load your 5.0 assemblies in a .NET Core 3.1 context. We're working on .NET 5.0 support.' Why do I get System.IO.FileLoadException: Could not load file or assembly 'FluentMigrator ... ? If you get a stack trace like the following: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IO.FileLoadException: Could not load file or assembly 'FluentMigrator, Version=3.2.1.0, Culture=neutral, PublicKeyToken=aacfc7de5acabf05\". Could not find or load specific file. Then the most likely explanation is that you installed the FluentMigrator.DotNet.Cli command line tool globally, with a specific FluentMigrator.dll version in your global tool directory, and are loading a migrations assembly that references a different version of FluentMigrator.dll. The common workaround is to install the tool locally, rather than globally (applies to .NET Core SDK 3.0 and later). What are the supported databases? Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver. How can I run migrations safely from multiple application servers? Many server-side applications are load balanced and run multiple instances of the same application simultaneously from multiple web servers. In such a scenarios, if you choose to run migrations in-process (as opposed to an external migration runner), then there is an added risk of multiple processes trying to run migrations at the same time. FluentMigrator does not automatically handle this scenario because the default transactional behavior is not enough to guarantee that only a single process can be running migrations at any given time. There are, however, some workarounds. Database-Dependent Application Locking This style of solution depends upon MaintenanceMigrations. Two Maintenance Migrations are created: One with BeforeAll to atomically acquire a lock, and one AfterAll stage to release the lock. This example is for SQL Server 2008 and above and uses sp_getapplock to aquire a named lock before all migrations are run, and sp_releaseapplock to release the lock after all migrations are finished. [Maintenance(MigrationStage.BeforeAll, TransactionBehavior.None)] public class DbMigrationLockBefore : Migration { public override void Down() { throw new NotImplementedException(\"Down migrations are not supported for sp_getapplock\"); } public override void Up() { Execute.Sql(@\" DECLARE @result INT EXEC @result = sp_getapplock 'MyApp', 'Exclusive', 'Session' IF @result < 0 BEGIN DECLARE @msg NVARCHAR(1000) = 'Received error code ' + CAST(@result AS VARCHAR(10)) + ' from sp_getapplock during migrations'; THROW 99999, @msg, 1; END \"); } } [Maintenance(MigrationStage.AfterAll, TransactionBehavior.None)] public class DbMigrationUnlockAfter : Migration { public override void Down() { throw new NotImplementedException(\"Down migrations are not supported for sp_releaseapplock\"); } public override void Up() { Execute.Sql(\"EXEC sp_releaseapplock 'MyApp', 'Session'\"); } } In the above SQL Server example, we need to use TransactionBehavior.None on the Maintenance Migration while specifying the @LockOwner parameter to Session , which means that the locking behavior applies to the entire Session rather than a single transaction. While the above is specific to SQL Server, similar concepts may available in other database providers. PostgreSQL has Advisory Locks SQL Anywhere has Schema Locks Oracle has DBMS_LOCK.ALLOCATE_UNIQUE DB2 has LOCK TABLESPACE (with the caveat that every table in your migration is in the same tablespace) External Distributed Lock If your database doesn't provide a means of acquiring an exclusive lock for migrations, it is still possible to achieve this functionality by using an external service for acquiring a distributed lock. For example, Redis provides a way to perform Distributed locks so that different processes can operate on a shared resource in a mutually exclusive way. This scenario can be baked into a BeforeAll / AfterAll pair of Maintenance Migrations, as demonstrated above, to acquire an exclusive lock for the duration of the migration running. As an alternative to Maintenance Migrations, which are by necessity specified in different classes, you could simply wrap the MigrateUp() call in code that acquires and releases the lock. Consider this pseudo-code which relies on RedLock.net : async RunMigrationsWithDistributedLock(IMigrationRunner runner) { var resource = \"my-app-migrations\"; var expiry = TimeSpan.FromMinutes(5); using (var redLock = await redlockFactory.CreateLockAsync(resource, expiry)) // there are also non async Create() methods { // make sure we got the lock if (redLock.IsAcquired) { runner.MigrateUp(); } } // the lock is automatically released at the end of the using block } How can I execute a stored procedure using Oracle? If you get ORA-00900: Invalid SQL Statement when executing a stored procedure, then chances are you need to wrap your stored procedure in a PLSQL block: Execute.Sql(\"DBMS_UTILITY.EXEC_DDL_STATEMENT('Create Index Member_AddrId On Member(AddrId)');\"); becomes: Execute.Sql(@\" BEGIN DBMS_UTILITY.EXEC_DDL_STATEMENT('Create Index Member_AddrId On Member(AddrId)'); END;\"); How do I get the name of a SQL Server database? Not all databases have a \"name\". Writing migrations that use a name therefore cannot be truly database-agnostic. That said, the following will show an example of getting the name so that you can perform an ALTER DATABASE command. Note that to ALTER DATABASE [YourDatabaseName] , you need to switch to the [master] database first via USE [master] . Then, since FluentMigrator does not call sp_reset_connection , you need to switch back to the database being migrated. If you do not, the ensuing migrations will be run in the wrong database! In the below example, we show how to enter a SQL Server database into single-user mode, in order to perform some maintenace tasks. Use dynamic SQL: public class EnterDatabaseSingleUserModeState : Migration { public override void Up() { /* Before you set the database to SINGLE_USER, verify that the AUTO_UPDATE_STATISTICS_ASYNC option is set to OFF. When this option is set to ON, the background thread that is used to update statistics takes a connection against the database, and you will be unable to access the database in single-user mode. For more information, see ALTER DATABASE SET Options (Transact-SQL). */ this.Execute.Sql(@\" DECLARE @DbName sysname = DB_NAME(); DECLARE @SqlCommand NVARCHAR(MAX) = ' USE [master]; SET DEADLOCK_PRIORITY 10; DECLARE @AutoUpdateStatisticsAsync BIT = CAST(0 AS BIT); IF EXISTS ( SELECT NULL FROM sys.databases WHERE name = @DbName AND is_auto_update_stats_async_on = CAST(1 AS BIT) ) BEGIN ALTER DATABASE [' + @DbName + '] SET AUTO_UPDATE_STATISTICS_ASYNC OFF; SET @AutoUpdateStatisticsAsync = CAST(1 AS BIT); END; ALTER DATABASE [' + @DbName + ']' + ' SET SINGLE_USER WITH ROLLBACK IMMEDIATE; -- Here is where you put your administrative commands. IF (@AutoUpdateStatisticsAsync = 1) BEGIN ALTER DATABASE [' + @DbName + '] SET AUTO_UPDATE_STATISTICS_ASYNC ON; END; '; EXEC(@SqlCommand); SET @SqlCommand NVARCHAR(MAX) = 'USE [' + @DbName + ']'; EXEC(@SqlCommand); \"); } Certificate error for SQL Connection Since the use of Microsoft.Data.SqlClient version 4.0.0 connections are encrypted by default in .NET. You might start getting the exception: A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - The certificate chain was issued by an authority that is not trusted.) . If fixing a valid certificate isn't a feasable path, you can always disable the encryption by adding Encrypt=False to the connection string. Then the connection won't be encryptet, and thus no certificate needed. As a note; you can also add TrustServerCertificate=True to the connection string, if you have a self-signed certificate or similar. But it's probably a better idea to fix a real certificate, or skip encryption all together. SQLite specific topics Connection Pooling When working with FluentMigrator with the SQLite processor, by default SQLite will run with connection pooling enabled. When connection pooling is enabled, SQLite will keep a lock on the database file even after connection.Close() is called on the relevant DB connection. This is important to know in case you need to perform any cleanup after FluentMigrator has run where deleting the database file is required. In this scenario you would receive an IO exception if you attempt to delete or move the file as SQLite still has a lock on the file. You can disable connection pooling however by adding Pooling=False; as a parameter in your connection string. With pooling disabled, you can then safely delete or move the database after the FluentMigrator processor is disposed."
  },
  "articles/faq-change-naming-conventions.html": {
    "href": "articles/faq-change-naming-conventions.html",
    "title": "High-Level Tasks | FluentMigrator documentation",
    "keywords": "FluentMigrator supports changing naming conventions for: Columns Constraints Indexes Sequences Schemas Auto Names Root Paths While FluentMigrator comes with reasonable naming conventions, some organizations may have strict standards. In such cases, overriding FluentMigrator's opinion may be desirable. High-Level Tasks Implement the IConventionSet interface (example: see below) Register the IConventionSet as singleton: services.AddSingleton<IConventionSet>(new YourConventionSet()) Example IConventionSet implementation public class YourConventionSet : IConventionSet { public YourConventionSet() : this(new DefaultConventionSet()) { } public YourConventionSet(IConventionSet innerConventionSet) { ForeignKeyConventions = new List<IForeignKeyConvention>() { /* This is where you do your stuff */ new YourCustomDefaultForeignKeyNameConvention(), innerConventionSet.SchemaConvention, }; ColumnsConventions = innerConventionSet.ColumnsConventions; ConstraintConventions = innerConventionSet.ConstraintConventions; IndexConventions = innerConventionSet.IndexConventions; SequenceConventions = innerConventionSet.SequenceConventions; AutoNameConventions = innerConventionSet.AutoNameConventions; SchemaConvention = innerConventionSet.SchemaConvention; RootPathConvention = innerConventionSet.RootPathConvention; } /// <inheritdoc /> public IRootPathConvention RootPathConvention { get; } /// <inheritdoc /> public DefaultSchemaConvention SchemaConvention { get; } /// <inheritdoc /> public IList<IColumnsConvention> ColumnsConventions { get; } /// <inheritdoc /> public IList<IConstraintConvention> ConstraintConventions { get; } /// <inheritdoc /> public IList<IForeignKeyConvention> ForeignKeyConventions { get; } /// <inheritdoc /> public IList<IIndexConvention> IndexConventions { get; } /// <inheritdoc /> public IList<ISequenceConvention> SequenceConventions { get; } /// <inheritdoc /> public IList<IAutoNameConvention> AutoNameConventions { get; } }"
  },
  "articles/fluent-interface.html": {
    "href": "articles/fluent-interface.html",
    "title": "Fluent Interface | FluentMigrator documentation",
    "keywords": "Fluent Interface The FM fluent api allows you to create tables, columns, indexes and (nearly) every construct you need to manipulate your database structure. Behind the scenes, the fluent api populates a semantic model that FM uses to analyze and apply migrations in batch. The fluent api that is available in your Migration class starts with five main root expressions as follows: Create Expression Allows you to create a table, column, index, foreign key and schema. Create.Table(\"Users\") .WithIdColumn() // WithIdColumn is an extension, see below link. .WithColumn(\"Name\").AsString().NotNullable(); Create.ForeignKey() // You can give the FK a name or just let Fluent Migrator default to one .FromTable(\"Users\").ForeignColumn(\"CompanyId\") .ToTable(\"Company\").PrimaryColumn(\"Id\"); Example extensions can be found in the example MigrationExtensions.cs . Otherwise, you can replace WithIdColumn with .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity(); Alter Expression Allows you to alter existing tables and columns. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .Nullable(); Alter.Table(\"Bar\") .AlterColumn(\"SomeDate\") .AsDateTime() .NotNullable(); Alter.Column(\"SomeDate\") .OnTable(\"Bar\") .AsDateTime() .NotNullable(); Delete Expression Allows you to delete a table, column, foreign key and schema. Delete.Table(\"Users\"); Delete Multiple Columns Delete multiple columns from a table using the syntax in this expression: Delete.Column(\"AllowSubscription\").Column(\"SubscriptionDate\").FromTable(\"Users\"); Execute Expression Allows you to execute a block of sql, or a script by name (ie. myscript.sql) or an embedded sql script. To embed an sql script, add the file to your migration project and change the Build Action property to Embedded Resource. Execute.Script(\"myscript.sql\"); Execute.EmbeddedScript(\"UpdateLegacySP.sql\"); Execute.Sql(\"DELETE TABLE Users\"); Rename Expression Allows you to rename a column or table. Rename.Table(\"Users\").To(\"UsersNew\"); Rename.Column(\"LastName\").OnTable(\"Users\").To(\"Surname\"); Data Expressions Allows you to insert a row into a table using an anonymous type for the row's contents Insert.IntoTable(\"Users\").Row(new { FirstName = \"John\", LastName = \"Smith\" }); Delete.FromTable(\"Users\").AllRows(); // delete all rows Delete.FromTable(\"Users\").Row(new { FirstName = \"John\" }); // delete all rows with FirstName==John Delete.FromTable(\"Users\").IsNull(\"Username\"); //Delete all rows where Username is null Update.Table(\"Users\").Set(new { Name = \"John\" }).Where(new { Name = \"Johnanna\" }); Insert data as an non-Unicode string If you want to insert a string as non-Unicode (ANSI) then use the NonUnicodeString class: Insert.IntoTable(\"TestTable\").Row(new { Name = new NonUnicodeString(\"ansi string\") }); AllRows() Method A common task is to add a non-nullable column without a default value. One way this can be achieved is with the 'AllRows' method, via these three steps: Add new nullable column. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .Nullable(); Update all rows to an initial value using the AllRows method. Update.Table(\"Bar\") .Set(new { SomeDate = DateTime.Today }) .AllRows(); Change the column to be non-nullable. Alter.Table(\"Bar\") .AlterColumn(\"SomeDate\") .AsDateTime() .NotNullable(); SetExistingRowsTo alternative to AllRows()` As of version 1.3.0, this can be done with a single statement using the SetExistingRowsTo method. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .SetExistingRowsTo(DateTime.Today) .NotNullable(); IfDatabase Expression Allows for conditional expressions depending on database type. The current database types supported are: Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver. Multiple database types (as specified above) can be passed into the IfDatabase Expression (see Dealing with multiple database types for more details). IfDatabase(\"SqlServer\", \"Postgres\") .Create.Table(\"Users\") .WithIdColumn() .WithColumn(\"Name\").AsString().NotNullable(); IfDatabase(\"Sqlite\") .Create.Table(\"Users\") .WithColumn(\"Id\").AsInt16().PrimaryKey() .WithColumn(\"Name\").AsString().NotNullable(); Schema.Exists Expressions You can write migrations conditional on the pre-existing schema, which comes in handy for getting you out of certain jams. For instance, if you need to make a column but aren't sure if it already exists: if (!Schema.Table(\"Users\").Column(\"FirstName\").Exists()) { this.Create.Column(\"FirstName\").OnTable(\"Users\").AsAnsiString(128).Nullable(); } Next up, Profiles are migrations that if specified, will always run regardless of what other migrations run."
  },
  "articles/glossary.html": {
    "href": "articles/glossary.html",
    "title": "Glossary | FluentMigrator documentation",
    "keywords": "Expression See: Migration Expression Maintenance Those are migrations that should always be executed at a specified stage. Warning Maintenance migrations are always run at the given stage when selected. Note A migration must have: public visibility IMigration as implemented interface (The Migration class already implements it) MaintenanceAttribute Migration Stages BeforeAll : Migration will be run before all standard migrations. BeforeEach : Migration will be run before each standard migration. AfterEach : Migration will be run after each standard migration. BeforeProfiles : Migration will be run after all standard migrations, but before profiles. AfterAll : Migration will be run after all standard migrations and profiles. Migration A migration is a database modification usually applied within its own transaction. Note A migration must have: public visibility IMigration as implemented interface (The Migration class already implements it) MigrationAttribute Migration Expression An expression created from within a migration that gets used to produce an SQL statement (using a migration generator ) that gets executed by a migration processor . A migration expression always implements IMigrationExpression . Migration Generator Translates an expression created from within a migration to one or more SQL statements. A migration generator always implements IMigrationGenerator . Migration Processor Passes the expressions to a migration generator and then executes the resulting SQL statements. A migration processor always implements IMigrationProcessor . Profile A profile is used to selectively apply migrations. Warning Profiles are always run when selected. Note A profile must have: public visibility IMigration as implemented interface (The Migration class already implements it) ProfileAttribute"
  },
  "articles/guides/contribution.html": {
    "href": "articles/guides/contribution.html",
    "title": "How to contribute | FluentMigrator documentation",
    "keywords": "How to contribute Fork on GitHub Create a branch Code (and add tests) Create a pull request on GitHub Target the develop branch for API-breaking changes Target the master branch for non-API-breaking changes and/or hotfixes Get the pull request merged Done How to build the code Note You must install mono on non-Windows platforms! dotnet build FluentMigrator.sln How to test the code Windows dotnet test test\\FluentMigrator.Tests\\FluentMigrator.Tests.csproj Linux, MacOS dotnet test test/FluentMigrator.Tests/FluentMigrator.Tests.csproj --filter \"TestCategory!=NotWorkingOnMono\" Enabling integration tests Only integration tests for two databases are enabled by default: SQL Server Compact Edition Only runs on Windows due to inability to load the needed DLLs SQLite This requires an installed Mono.Data.Sqlite package on Linux Every database can be configured using the dotnet user-secrets tool. Enabling PostgreSQL integration tests might look like this: Create a user fluentmigrator with password fluentmigrator Add a database FluentMigrator with the owner fluentmigrator Type the following instructions: # change into the test project directory cd test/FluentMigrator.Tests # Set the PostgreSQL connection string dotnet user-secrets set \"TestConnectionStrings:Postgres:ConnectionString\" \"Server=127.0.0.1;Port=5432;Database=FluentMigrator;User Id=fluentmigrator;Password=fluentmigrator\" # Enable the PostgreSQL integration tests dotnet user-secrets set \"TestConnectionStrings:Postgres:IsEnabled\" True When you run the unit tests, the integration tests for PostgreSQL are run as well. How to create NuGet packages dotnet pack ./FluentMigrator.sln --output \"absolute-path-to-output-directory\" ReSharper/Rider specific support There is a new template ctorc which creates a StyleCop-compatible constructor summary. Code style Please use an editor that supports the .editorconfig and/or the ReSharper/Rider settings FluentMigrator.sln.DotSettings . Generic Use spaces for indention Add a \"new line\" character when the last line is not empty Remove trailing whitespace characters For C# Indent size is 4 characters Use var for built-in types Use var when the type is apparent Prefer braces Sort using directives System using directives first Empty line between using directive groups Line break before open brace Add a license header region to every *.cs file #region License // // Copyright (c) 2018, Fluent Migrator Project // // Licensed under the Apache License, Version 2.0 (the \"License\"); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an \"AS IS\" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. // #endregion"
  },
  "articles/guides/overview.html": {
    "href": "articles/guides/overview.html",
    "title": "FluentMigrator Guides | FluentMigrator documentation",
    "keywords": "This is a collection of guides around FluentMigrator. For beginners Getting Started For contributors How to contribute For upgrades 1.6 to 2.0 2.x to 3.0 3.0 to 3.1 3.1 to 3.2"
  },
  "articles/guides/upgrades/guide-1.6-to-2.0.html": {
    "href": "articles/guides/upgrades/guide-1.6-to-2.0.html",
    "title": "Upgrade Guide from 1.6 to 2.0 | FluentMigrator documentation",
    "keywords": "Upgrading from 1.6 to 2.0 What is new? FluentMigrator finally gained .NET Standard 2.0 support and added several new database and migration expression features. .NET Standard 2.0 This finally allows the usage of FluentMigrator together with ASP.NET Core 2.0! New databases SAP SQL Anywhere 16 With Unique Constraints: Non-Distinct NULL support Microsoft SQL Server 2016 Oracle MySQL 5 Amazon Redshift (experimental) Several enhancements MySQL ALTER DEFAULT , DROP DEFAULT support SQL Server 2005 WITH (ONLINE=ON/OFF) support 64 bit identity support SQL Server 2008 Unique Constraints: Non-Distinct NULL support Firebird New provider option: Force Quote=true to enforce quotes SQLite Foreign key support Streamlined table/index schema quoting Types: DateTime2 support Expression: IfDatabase: Predicate support IfDatabase: Method delegation support Index: Creation with non*key columns Conventions: Default schema name support SetExistingRowsTo supports SystemMethods Insert/Update/Delete: DbNull support Passing arguments to embedded SQL scripts Runner: TaskExecutor: HasMigrationsToApply support Case insensitive arguments support StopOnError flag What did change? DB-specific code moved The database specific code is now in its own assembly (one per database family). This will allow trimming dependencies in the future. MySQL announcing SQL scripts Some other DB processors already do this. Runner improvements Better error messages ListMigrations: showing (not applied) for unapplied migrations Show (BREAKING) for migrations with breaking changes MSBuild task is available as separate package (with custom .targets file) Use provider default command timeout when no global timeout is set Breaking changes DB-specific extensions The extension methods are now in their own assembly and namespace (e.g. for SqlServer - FluentMigrator.Extensions.SqlServer ). .NET Framework 3.5 support removed We now require at least .NET Framework 4.0. NAnt build runner removed NAnt itself isn't a living project anymore."
  },
  "articles/guides/upgrades/guide-2.0-to-3.0.html": {
    "href": "articles/guides/upgrades/guide-2.0-to-3.0.html",
    "title": "Upgrade Guide from 2.0 to 3.0 | FluentMigrator documentation",
    "keywords": "Upgrading from 2.x to 3.0 The upgrade from 2.x to 3.0 should be very smooth, because the API was kept mostly unchanged. What is new? FluentMigrator now uses dependency injection and other standard libraries from the ASP.NET Core project extensively. This results in a simpler API, well-defined extension points and in general more flexibility. New in-process runner initialization var serviceProvider = new ServiceCollection() // Logging is the replacement for the old IAnnouncer .AddLogging(lb => lb.AddFluentMigratorConsole()) // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Use SQLite .AddSQLite() // The SQLite connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Specify the assembly with the migrations .WithMigrationsIn(typeof(MyMigration).Assembly)) .BuildServiceProvider(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { // Instantiate the runner var runner = scope.ServiceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } dotnet-fm as global .NET Core CLI tool The dotnet-fm tool is now a global tool and therefore requires the .NET Core 2.1-preview2 tooling. This allows the usage of dotnet fm migrate from other directories than the project directory. Connection string handling changes The library assumes that in ProcessorOptions.ConnectionString is either a connection string or a connection string identifier. This are the steps to load the real connection string. Queries all IConnectionStringReader implementations When a connection string is returned by one of the readers, then this connection string will be used When no connection string is returned, try reading from the next IConnectionStringReader When no reader returned a connection string, then return ProcessorOptions.ConnectionString The connection string stored in ProcessorOptions.ConnectionString might be overridden by registering the IConnectionStringReader instance PassThroughConnectionStringReader as scoped service. When no connection string could be found, the SelectingProcessorAccessor returns a ConnectionlessProcessor instead of the previously selected processor. Custom migration expression validation There is a new service IMigrationExpressionValidator with a default implementation DefaultMigrationExpressionValidator that validates the migration expressions before executing them. This feature allows - for example - forbidding data deletions in a production environment. Using System.ComponentModel.DataAnnotations for validation Breaking Changes Version 3.0 dropped support for all .NET Framework versions below 4.6.1 and the timeout values are now stored as TimeSpan rather than an int (of seconds). Minimum: .NET Framework 4.6.1 Dropping the support for all .NET Framework versions below 4.6.1 was required, because the package now relies on the following libraries: Microsoft.Extensions.DependencyInjection Microsoft.Extensions.Options Microsoft.Extensions.Logging Microsoft.Extensions.Configuration ProcessorOptions.Timeout is now a TimeSpan This change is part of the ongoing effort to make the API easier to understand, because it might not be clear if an int timeout is the timeout in milliseconds, seconds, et cetera. Previously the int value corresponded to seconds. ICanBeValidated not used anymore The library now uses System.ComponentModel.DataAnnotations for validation - for example the [Required] attribute for expression fields that are - one might've guessed it - required. MigrationGeneratorFactory not used anymore The selection of the SQL generator happens using the IGeneratorAccessor service. MigrationProcessorFactoryProvider not used anymore The selection of the migration processor is done with the IProcessorAccessor service. Obsolete API Due to the introduction of dependency injection, some important migration runner related parts of the API have been deprecated. This section convers this topic and shows how to switch to the new dependency injection based API. Migration runner initialization This section shows the runner initialization both with dependency injection and with the IRunnerContext . New (with dependency injection) Obsolete (with IRunnerContext ) var serviceProvider = new ServiceCollection() // Logging is the replacement for the old IAnnouncer .AddLogging(lb => lb.AddFluentMigratorConsole()) // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Use SQLite .AddSQLite() // The SQLite connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Specify the assembly with the migrations .WithMigrationsIn(typeof(MyMigration).Assembly)) .BuildServiceProvider(); The runner can now be created and used with: // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { // Instantiate the runner var runner = scope.ServiceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } // Create the announcer to output the migration messages var announcer = new ConsoleAnnouncer(); // Processor specific options (usually none are needed) var options = new ProcessorOptions(); // Use SQLite var processorFactory = new SQLiteProcessorFactory(); // Initialize the processor using (var processor = processorFactory.Create( // The SQLite connection string \"Data Source=test.db\", announcer, options)) { // Configure the runner var context = new RunnerContext(announcer); // Create the migration runner var runner = new MigrationRunner( // Specify the assembly with the migrations typeof(MyMigration).Assembly, context, processor); // Run the migrations runner.MigrateUp(); } Differences explained Dependency Injection Allows fluent configuration Uses standard libraries Dependency Injection Options Logging Uses pluggable APIs May use a different DI container under the hood (AutoFac, etc...) May use standard logging frameworks (log4net, nlog, etc...) Obsolete API Clunky Re-inventing the wheel IAnnouncer The IAnnouncer interface (and its implementations) were replaced by ILogger and its implementations. Logger registration You can comfortably register the default FluentMigratorConsoleLogger : var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .BuildServiceProvider(); Configuring the logger output Warning Loggers derived from FluentMigratorLogger may use other logger option classes! Enabling output of elapsed time var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .Configure<FluentMigratorLoggerOptions>(cfg => { cfg.ShowElapsedTime = true; }) .BuildServiceProvider(); Enabling output of SQL Important Logging the SQL messages might be a security risk. Don't store sensitive data unhashed/unencrypted! var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .Configure<FluentMigratorLoggerOptions>(cfg => { cfg.ShowSql = true; }) .BuildServiceProvider(); Logger usage You don't use the loggers directly any more. Instead, you just create a constructor parameter with a type of ILogger or ILogger . public class MyMigration : ForwardOnlyMigration { private readonly ILogger<MyMigration> _logger; public MyMigration(ILogger<MyMigration> logger) { _logger = logger; } public void Up() { _logger.LogInformation(\"Creating Up migration expressions\"); } } Other loggers There are several other loggers, like: LogFileFluentMigratorLoggerProvider for logging SQL statements into a file SqlScriptFluentMigratorLoggerProvider for logging SQL statements into a TextWriter Registration of LogFileFluentMigratorLoggerProvider var serviceProvider = new ServiceCollection() .AddSingleton<ILoggerProvider, LogFileFluentMigratorLoggerProvider>() .Configure<LogFileFluentMigratorLoggerOptions>(opt => { opt.OutputFileName = \"sqlscript.sql\"; }) .BuildServiceProvider(); IMigrationRunnerConventions.GetMigrationInfo This function was replaced by IMigrationRunnerConventions.GetMigrationInfoForMigration , because the instantiation will be done using the dependency injection framework. IProfileLoader.ApplyProfiles This function was replaced by IProfileLoader.ApplyProfiles(IMigrationRunner) to avoid circular dependencies. IProfileLoader.FindProfilesIn(IAssemblyCollection, String) ) This function is not used anymore. IMigrationProcessorOptions This interface is not used anymore. We use ProcessorOptions instead. IMigrationProcessorFactory The factories aren't needed anymore. The registered services provide everything that they need for their configuration. IRunnerContext and RunnerContext The properties of this interface/class were refactored into several classes. Properties moved into RunnerOptions ApplicationContext ( obsolete! ) AllowBreakingChange NoConnection Profile StartVersion Steps Tags Task TransactionPerSession Version Properties moved into ProcessorOptions ConnectionString PreviewOnly ProviderSwitches Timeout Properties moved into TypeFilterOptions Namespace NestedNamespaces Properties moved into AppConfigConnectionStringAccessorOptions Warning This class only works under the full .NET Framework and is marked as obsolete! Provide access to an IConfiguration service. The FluentMigrator library will use it to call the GetConnectionString extension method. ConnectionStringPath ➔ ConnectionStringConfigPath Properties moved into SelectingProcessorAccessorOptions Database ➔ ProcessorId Properties moved into AssemblySourceOptions Targets ➔ AssemblyNames Properties with no direct replacement Announcer : Get your ILogger with dependency injection instead StopWatch : Get your IStopWatch with dependency injection instead WorkingDirectory This is set directly by the creation of a DefaultConventionSet and adding it as singleton to the service collection. var conventionSet = new DefaultConventionSet(defaultSchemaName: null, WorkingDirectory); services.AddSingleton<IConventionSet>(conventionSet) DefaultSchemaName This is set directly by the creation of a DefaultConventionSet and adding it as singleton to the service collection. var conventionSet = new DefaultConventionSet(DefaultSchemaName, workingDirectory: null); services.AddSingleton<IConventionSet>(conventionSet) CompatabilityMode renamed to CompatibilityMode The spelling has been fixed. ApplicationContext It is not needed anymore due to the dependency injection providing all services one may need. ManifestResourceNameWithAssembly replaced by ValueTuple This class was overkill. MigrationGeneratorFactory This isn't needed anymore, because all factories must be added dynamically using the ConfigureRunner extension method. Example: var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) /* TODO: Add more services */ .BuildServiceProvider(); Selecting the database The key is the IProcessorAccessor service and its default implementation SelectingProcessorAccessor , which is configured using the SelectingProcessorAccessorOptions . Note When the SelectingProcessorAccessorOptions aren't configured, then the value from the SelectingGeneratorAccessorOptions is used. Note When neither a processor nor generator ID was specified, then the added processor will be used - but only where there is only one! When no processor or more than one was specified, then an exception gets thrown. var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) .Configure<SelectingProcessorAccessorOptions>(cfg => { // Selects SQLite from the set of supported databases cfg.ProcessorId = \"sqlite\"; }) /* TODO: Add more services */ .BuildServiceProvider(); MigrationProcessorFactoryProvider This isn't needed anymore, because all processor factory providers must be added dynamically using the ConfigureRunner extension method. You can find an example above . Selecting the database The key is the IGeneratorAccessor service and its default implementation SelectingGeneratorAccessor , which is configured using the SelectingGeneratorAccessorOptions . Note When the SelectingGeneratorAccessorOptions aren't configured, then the value from the SelectingProcessorAccessorOptions is used. Note When neither a generator nor processor ID was specified, then the added generator will be used - but only where there is only one! When no generator or more than one was specified, then an exception gets thrown. var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) .Configure<SelectingGeneratorAccessorOptions>(cfg => { // Selects SQLite from the set of supported databases cfg.GeneratorId = \"sqlite\"; }) /* TODO: Add more services */ .BuildServiceProvider(); ITypeMap.GetTypeMap(DbType, int, int) Sometimes, it is possible that a given database type needs a precision of 0, so we cannot use 0 an indicator for an unspecified value anymore. Therefore, we provide an overload using nullable integer values . IDbFactory The implementations will remain, but the interface will be gone. ICanBeValidated The library now uses System.ComponentModel.DataAnnotations for validation - for example the [Required] attribute for expression fields that are - one might've guessed it - required. MigrationRunner.MaintenanceLoader is read-only Don't set the maintenance loader directly. Just register your own as a service. FAQ How do I use my own IConventionSet (or other service)? Just register them as your own service. Service Scope IConventionSet Singleton IAssemblyLoadEngine Singleton IAssemblySource Singleton IMaintenanceLoader Singleton IMigrationSource Singleton"
  },
  "articles/guides/upgrades/guide-3.0-to-3.1.html": {
    "href": "articles/guides/upgrades/guide-3.0-to-3.1.html",
    "title": "Upgrade Guide from 3.0 to 3.1 | FluentMigrator documentation",
    "keywords": "Upgrading from 3.0 to 3.1 This version contains mostly added features and fixed bugs. What is new? The WithMigrationsIn was well-meant, but not sufficient. We now provide an additional way to scan assemblies for the interesting stuff. New way to scan assemblies // Initialize you FluentMigrator (and other) services IServiceCollection services = ...; services .ConfigureRunner(rb => rb // Define the assembly containing the migrations .ScanIn(typeof(AddLogTable).Assembly).For.Migrations()); The interesting part here is the new ScanIn function which allows one to specify which assemblies should be scanned for the following parts: Migrations Version table metadata Embedded resources All the parts above One ScanIn can be used to target multiple parts: // Initialize you FluentMigrator (and other) services IServiceCollection services = ...; services .ConfigureRunner(rb => rb // Define the assembly containing the migrations .ScanIn(typeof(AddLogTable).Assembly) .For.Migrations() .For.EmbeddedResources()); It is also possible to use the assembly for everything: // Initialize you FluentMigrator (and other) services IServiceCollection services = ...; services .ConfigureRunner(rb => rb // Define the assembly containing the migrations .ScanIn(typeof(AddLogTable).Assembly).For.All()); Summary This allows explicit configuration of the scanned assemblies and avoids manual registration of an IAssemblySourceItem service, like this: services.AddSingleton<IAssemblySourceItem>(() => new AssemblySourceItem(GetType().Assembly)); IFilteringMigrationSource This interface allows filtering of all migration types without the need to instantiate them first. IVersionTableMetaDataSourceItem A new interface to specify multiple places to search for version table metadata. What has changed? #884 : Embedded script cannot be found in assemblies on .NET Core #888 : VersionTable not changed after upgrading to 3.0 IEmbeddedResourceProvider can be registered multiple times (required for the new ScanIn feature) Query IConfigurationRoot for the connection string if IConfiguration couldn't be found dotnet-fm now uses the Oracle beta ADO.NET driver Oracle Beta ADO.NET driver Oracle plans to release a non-beta version of the driver in Q3, but it's the only Oracle driver that works under Linux/MacOS. The console tool ( Migrate.exe ) is more Windows-centric and will therefore keep using the standard Oracle ADO.NET library. The dotnet-fm is mostly used on non-Windows platforms and is therefore predestined to use the new beta driver. The statement from Oracle can be found on the Oracle website . The console tool will switch to the new driver when it becomes stable. Dependency injection related changes Some services are now registered as \"Scoped\" to allow the reconfiguration of the connection string/used database at run-time. Applies to Connection string Processor/generator selection Type filters Changes The following option classes are now resolved using IOptionSnapshot<T> : ProcessorOptions SelectingProcessorAccessorOptions SelectingGeneratorAccessorOptions TypeFilterOptions The following services are now scoped instead of singleton: IVersionTableMetaDataAccessor IVersionTableMetaData IMigrationSource IMigrationInformationLoader The MigrationSource now consumes all registered IMigrationSourceItem instances. What is fixed? #877 : Connection specific information should be resolved as scoped Also: #882 #886 : Using profiles in 3.x versions #892 : Nullable types are not supported in MSBuild runner"
  },
  "articles/guides/upgrades/guide-3.1-to-3.2.html": {
    "href": "articles/guides/upgrades/guide-3.1-to-3.2.html",
    "title": "Upgrade Guide from 3.1 to 3.2 | FluentMigrator documentation",
    "keywords": "Upgrading from 3.1 to 3.2 This version contains mostly added features and fixed bugs. What is new? The most important changes are support for ORACLE 12c and the ability to disable removal of comments from SQL scripts. ORACLE 12c We're now supporting the new identity generator via Oracle-specific options. The maximum name length was also increased to 128 characters. Creating a identity column Create.Column(\"TestColumn\").OnTable(\"TestTable\").AsInt64().PrimaryKey().Identity(); Creating a identity column with options Create.Column(\"TestColumn\").OnTable(\"TestTable\").AsInt64().PrimaryKey() .Identity(OracleGenerationType.Always, startWith: 0, incrementBy: 1, minValue: 0, maxValue: long.MaxValue); The possible options for the generation are: Value Description OracleGenerationType.Always A value for the identity column is always generated by the database. Attepts to insert a value will cause an error. OracleGenerationType.ByDefault A value for the identity column is generated by the database when no value was given. Attepts to insert a NULL value will cause an error. OracleGenerationType.ByDefaultOnNull A value for the identity column is generated by the database when no value or a NULL value was given. Disable removal of comments There are now options for the external runners to disable removal of comments. Important The default will change from \"stripping\" to \"non-stripping\" of comments in version 4.0. dotnet-fm runner The option is --strip:false . This didn't work in 3.2.0 and was fixed in 3.2.1. msbuild runner The value to set is StripComments . console runner The option to disable stripping is --strip- . Allow maintenance objects without tags TODO Setting the default schema name dotnet-fm runner The option to set the default schema name is --default-schema-name=yourCustomSchema . msbuild runner The value to set is DefaultSchemaName . console runner The option to set the default schema name is --default-schema-name=yourCustomSchema . PostgreSQL before 9.2 The xml column type is now supported for DbType.Xml . PostgreSQL 9.2 We're now supporting the json column type for DbType.Object . SQL Server 2008+ The SPARSE column option can now be set using the .Sparse() extension method. Loading the IConventionSet from assemblies The external runners will automatically load the IConventionSet implementation from one of the specified assemblies. Migration constraints (preview) You're now able to decorate migrations with attributes derived from MigrationConstraintAttribute . Those attributes are used to decide if a migration should be applied. Currently, they aren't added to the VersionInfo table when they're not applied, but this might change in the future. CurrentVersionMigrationConstraintAttribute This ensures that a migration is only executed when the database had at least the given version before the start of the migration. This allows to skip some complex/timely conversion migrations. What is fixed? PR #920: Fix Oracle and SqlServer CE which execute queries in preview mode PR #926: Fix another case where queries where executed in preview mode on Oracle (DotConnect) PR #943: Properly quote byte array for SQLite Issue #859: Bug when using PoundSignSingleLineComment with SqlServer PR #999: Fixed bug in postgres description generator when generating full table name with schema Issue #957: FluentMigrator.DotNet.Cli --no-connection throws exception Issue #1001: Problems with transaction in Execute.WithConnection"
  },
  "articles/guides/upgrades/guide-3.2-to-4.0.html": {
    "href": "articles/guides/upgrades/guide-3.2-to-4.0.html",
    "title": "Upgrade Guide from 3.2 to 4.0 | FluentMigrator documentation",
    "keywords": "Upgrading from 3.2 to 4.0 This version contains mostly added features and fixed bugs. What is new? The most important changes are support for Microsoft.Data.Sqlite 6.0.x and the improved support for modern SQLite development."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Install from Nuget | FluentMigrator documentation",
    "keywords": "Install from Nuget The project is split into multiple packages: Package Description FluentMigrator The base assembly needed to create migrations FluentMigrator.Runner The runner classes required for in-process execution of migrations FluentMigrator.Console The .NET 4.0/4.5/.NET Core 2.0 executable for out-of-process execution of migrations FluentMigrator.MSBuild The .NET 4.0/4.5/.NET Standard 2.0 task for MSBuild FluentMigrator.DotNet.Cli The .NET Core 2.1 executable that integrates into the .NET Core CLI tooling ( dotnet command) Getting Started Check out the tour of FluentMigrator in our Quickstart We also started a FAQ Usage details How to create a migration Learn about the fluent interface Profiles can be used to seed test data And then choose one of the migration runners to run your migrations More Features Database functions as default value Microsoft SQL Server specific extensions Using raw SQL Auto-reversing migrations Transaction modes for the migration runner Advanced Features and Techniques of FluentMigrator Dealing with multiple database types Filter migrations run based on Tags Enforcing migration version numbering rules Create custom metadata for the VersionInfo table Current Release Release Notes Upgrade guides 3.1 to 3.2 3.0 to 3.1 2.x to 3.0 Runners Console dotnet-fm Supported databases For the current release these are the supported databases: Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver."
  },
  "articles/maintenance-migrations.html": {
    "href": "articles/maintenance-migrations.html",
    "title": "Maintenance Migrations | FluentMigrator documentation",
    "keywords": "Maintenance Migrations Overview Maintenace Migration are a flexible way to apply logic on every migration run. They're flexible in that there are several \"stages\" the logic can be applied. Migration Stages BeforeAll : Migration will be run before all standard migrations. BeforeEach : Migration will be run before each standard migration. AfterEach : Migration will be run after each standard migration. BeforeProfiles : Migration will be run after all standard migrations, but before profiles. AfterAll : Migration will be run after all standard migrations and profiles. Use Cases In the FAQ , we demonstrate using Maintenance Migrations to create an \"application lock\" so that only one Migration Runner can run on a database at a time. Seeding test/development data. SQL Server-specific use cases that may potentially create ideas for users of other databases: Automatically refreshing SQL Server database views metadata are refreshed via sp_refreshview Fixing the broken dependencies on all objects so that database replication works. Syntax The following example will print \"Tag=[Development] Stage=[BeforeAll]\" when running the migration with --tag=Development . using FluentMigrator; using System; namespace YourCompany.YourProduct.Database.Maintenance { public class TagNames { public const string Development = nameof(Development); } [Tags(TagNames.Development)] [Maintenance(MigrationStage.BeforeAll, TransactionBehavior.None)] public class DevBeforeAll : ForwardOnlyMigration { public override void Up() { System.Console.WriteLine($\"Tag=[{TagNames.Development}] Stage=[{MigrationStage.BeforeAll}]\"); } } }"
  },
  "articles/migration/migration-attribute-custom.html": {
    "href": "articles/migration/migration-attribute-custom.html",
    "title": "Enforcing migration version numbering rules | FluentMigrator documentation",
    "keywords": "Enforcing migration version numbering rules Frequently, it is useful for a project to employ a specific system for migration version numbering. A useful technique for simplifying and encoding this system is with a custom attribute that inherits from MigrationAttribute . An example is below. This uses a system where the migration version is of the format BBYYYYMMDDHHMM, where BB is a branch, YYYY is year, MM is month, and so on. /// <summary> /// Mark all migrations with this INSTEAD of [Migration]. /// </summary> public class MyCustomMigrationAttribute : FluentMigrator.MigrationAttribute { public MyCustomMigrationAttribute(int branchNumber, int year, int month, int day, int hour, int minute, string author) : base(CalculateValue(branchNumber, year, month, day, hour, minute)) { this.Author = author; } public string Author { get; private set; } private static long CalculateValue(int branchNumber, int year, int month, int day, int hour, int minute) { return branchNumber * 1000000000000L + year * 100000000L + month * 1000000L + day * 10000L + hour * 100L + minute; } } A migration class that uses this attribute might look like this: [MyCustomMigration(author: \"Scott Stafford\", branchNumber: 12, year: 2012, month: 8, day: 7, hour: 14, minute: 01)] public class TestLcmpMigration : Migration { public override void Down() { /* ... */ } public override void Up() { /* ... */ } }"
  },
  "articles/migration/migration-auto-reversing.html": {
    "href": "articles/migration/migration-auto-reversing.html",
    "title": "Auto-reversing migrations | FluentMigrator documentation",
    "keywords": "Auto-reversing migrations Auto reversing migrations are migrations that only contain an up command and FluentMigrator figures out the down command. Create a migration class that inherits from AutoReversingMigration (instead of Migration ) to use this feature. [Migration(201207080104)] public class RenameTableWithSchema : AutoReversingMigration { public override void Up() { Rename.Table(\"TestTable2\").InSchema(\"TestSchema\").To(\"TestTable'3\"); } } FluentMigrator can automatically figure out the down command and revert the rename. However, not all expressions are supported for auto reversing. For example, using the Execute expression to execute an sql script is impossible to reverse. Expressions that are currently supported for auto reversing are: Create.Table Create.Column Create.Index Create.ForeignKey Create.Schema Delete.ForeignKey Rename.Table Rename.Column"
  },
  "articles/migration/migration-filter-tags.html": {
    "href": "articles/migration/migration-filter-tags.html",
    "title": "Fluent Interface | FluentMigrator documentation",
    "keywords": "Filter migrations run based on Tags Scenario: multiple database once had the same schema but over the years have had differences introduced. Because of this the majority of migrations, contained in one assembly, can be run against all the databases but at the same time you need to be able to filter certain migrations to run against specific databases based on the country (UK, DK, etc) and environment (Staging, Production, etc) it serves. To facilitate this you can tag migrations (much like cucumber scenarios) and then filter these by passing tags into the runner. A migration is then run if it has: No Tags OR Has Tags that match ALL those passed into the runner. Tags are assigned to migrations with an attribute/s: [Tags(\"DK\", \"NL\", \"UK\")] [Tags(\"Staging\", \"Production\")] [Migration(1)] public class DoSomeStuffToEuropeanStagingAndProdDbs : Migration { /* ... etc ... */ } Inheriting Migration Tags Tag inheritance can apply to both base classes (single-inheritance) and interfaces (multiple-inheritance). Scenario: If you have a multiple contexts for which changes need to be applied, it can be less error-prone to inherit tags from a base class. // Single-Inheritance of a base class [Tags(\"Development\", \"QA\", \"UAT\")] public class NonProductionMigration : Migration { /* ... etc ... */ } public class ApplySomeNonProductionChanges : NonProductionMigration { /* ... etc ... */ } Scenario: This is especially the case if you have common +AND+ divergent functionality that needs to be applied to multiple contexts. In this particular case, it is less error-prone to apply tags to one or more interfaces that may be combined. Consider the case of geographical database segregation whereby some functionality is applied to one or more instances based on geographical requirements. // tagged interfaces [Tags(\"AL\", \"TX\")] public interface IApplyToFeature1 { /* ... etc ... */ } [Tags(\"CA\", \"NV\")] public interface IApplyToFeature2 { /* ... etc ... */ } [Tags(\"AL\", \"NV\")] public interface IApplyToFeature3 { /* ... etc ... */ } [Tags(\"TX\")] public interface IApplyToFeatureWithSynchronousResponse { /* ... etc ... */ } [Tags(\"AL\", \"NV\")] public interface IApplyToFeatureWithAsynchronousQueueResponse { /* ... etc ... */ } [Tags(\"CA\")] public interface IApplyToFeatureWithAsynchronousBatchResponse { /* ... etc ... */ } // Inheritance of interfaces public interface IApplyToFeatureWithAsynchronousResponses : IApplyToFeatureWithAsynchronousBatchResponse, IApplyToFeatureWithAsynchronousQueueResponse { /* ... etc ... */ } public class ApplySomeChangeToFeature1 : Migration, IApplyToFeature1 { /* ... etc ... */ } public class ApplySomeChangeToFeatures2And3 : Migration, IApplyToFeature2, IApplyToFeature3 { /* ... etc ... */ } public class ApplySomeChangeToFeatureWithAsynchronousResponses : Migration, IApplyToFeatureWithAsynchronousResponses { /* ... etc ... */ } This allows for a Dev Ops pipeline that requires migrations based on a tag (in the case above, by state), and thus simplifying how to discern which migrations are applied based on that tag. This also means that creating a new database context for a state is a matter of deciding which features the new tag is associated with, and updating those relevant interfaces rather than having to add tags to all of the relevant migrations. Filtering IMigrationRunner Migrate.exe tool MSBuild task var serviceProvider = new ServiceCollection() .AddFluentMigratorCore() .ConfigureRunner(rb => rb .AddSqlServer2008() .WithGlobalConnectionString(\"server=.\\\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\") .ScanIn(typeof(DoSomeStuffToEuropeanStagingAndProdDbs).Assembly).For.Migrations()) .AddLogging(lb => lb.AddFluentMigratorConsole()) // Start of type filter configuration .Configure<RunnerOptions>(opt => { opt.Tags = new[] { \"UK\", \"Production\" } }) .BuildServiceProvider(false); var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); runner.MigrateUp(); And the tags are entered into the command line like so: (Migrations with UK AND Production tags executed) --tag UK --tag Production For the Msbuild runner, there is a Tags option and tags are passed in as a comma-separated string. <Migrate Database=\"sqlserver2008\" Connection=\"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" Target=\"Migrations\" Tags=\"UK,Production\" />"
  },
  "articles/migration/migration-transaction-behavior.html": {
    "href": "articles/migration/migration-transaction-behavior.html",
    "title": "Migration transaction behavior | FluentMigrator documentation",
    "keywords": "Transaction modes for the migration runner There are two modes, Transaction-Per-Session and Transaction-Per-Migration. The default mode for FluentMigrator is Transaction-Per-Migration. Transaction-Per-Migration This mode means that each migration is run in its own transaction and allows selected migrations to be run with no transaction. This allows migrations to be able to do tasks like creating full-text indexes which cannot be run in a transaction. This mode can be used in combination with the new TransactionBehavior attribute. [Migration(201304210958, TransactionBehavior.None)] For this migration it will be run outside of a transaction. The default value for TransactionBehavior is Default which means the migration will be run in a transaction. Note Not all databases support \"Transactional Data Definition Language\" (Transactional DDL). Sybase and SQL Server support some version of Transactional DDL through Transact-SQL language, but there are some limitations around schema binding, user-defined types, and when \"names\" are bound/resolved. MySQL introducd Transactional DDL support in MySQL 8.0 as \" atomic DDL \". Transaction-Per-Session Up to this release, there has been one mode, Transaction-Per-Session. This means that if two migrations or more migrations are run together during the same task (e.g. migrate up or down) then this occurs in the same transaction and if one of the migrations fails then all the migrations are rolled back. Transaction-Per-Session is the old default and if you want to use this mode then there are switches for the Command-Line runner, MSBuild runner, or .NET CLI tool to enable it."
  },
  "articles/migration-constraints.html": {
    "href": "articles/migration-constraints.html",
    "title": "Migration Constraints | FluentMigrator documentation",
    "keywords": "Migration Constraints Overview Migration constraints allow users to run migrations based on dynamically evaluated conditions. Use Case The FluentMigrator.Runner.Core namespace has an example, CurrentVersionMigrationConstraintAttribute . Examples The FluentMigrator samples folder has a demonstration of this example: using FluentMigrator.Runner.Constraints; namespace FluentMigrator.Example.Migrations { /// <summary> /// Update notes. /// </summary> /// <remarks> /// This is only run when the migration 20090906205440 was already applied to the database. /// </remarks> [Migration(20190416112000)] [CurrentVersionMigrationConstraint(20090906205440)] public class UpdateNotesByScript : Migration { /// <inheritdoc /> public override void Up() { Execute.Sql(@\"/* this is a test script */ update Notes set body=body || ' (modified)'; \"); } /// <inheritdoc /> public override void Down() { // Nothing to do here } } } Caveats The downside to migration constraints, and `CurrentVersionMigrationConstraintAttribute in particular, is that some data is only loaded by FluentMigrator once. For example, version metadata is snapshot once. This is because FluentMigrator builds a list of all migrations to run, once, and then runs them. Thus, you can imagine a scenario where the above example is run, and during the migration run, version 20090906205440 executes. However, UpdateNotesByScript won't execute, because when the runner initializes, 20090906205440 wasn't yet applied to the database."
  },
  "articles/migration-example.html": {
    "href": "articles/migration-example.html",
    "title": "Migrations | FluentMigrator documentation",
    "keywords": "Migrations The basic unit of FM is the Migration abstract class. Your migrations will derive from this class and implement two methods. You also need to define the Migration attribute with a unique identifier. Commonly, this identifier is just an incrementing value, although the attribute accepts an Int64, some people use a numbered date format such as yyyyMMdd. The significance of this number is for the ordering of your migrations. Lower numbers execute first and then larger. It also provides a way to target a specific migration. Your migration class that you create is where you define the migrations to execute. Migrations can be run out of sequence if they are checked in out of sequence. For example you may check in migration 1, 3 and 5 in one build, and migration 2 in a later build. Migration 2 will still get run even though it is not later than the most recent migration because it has not been run before. Since you define both a UP and DOWN for each migration, it's possible to move forward and backwards in migrations at any point in time. The only caveat is that migrating down is destructive as tables and/or rows are being deleted in the process. Be sure to have a backup first if you want to keep the data [Migration(1)] public class CreateUserTable : Migration { public override void Up() { Create.Table(\"Users\"); } public override void Down() { Delete.Table(\"Users\"); } } When you are migrating TO version 1 (if the database is empty for instance), then the migration code in the Up() method will be called creating a table called \"Users\" in the database. When you are migrating to a version BEFORE version 1 (for instance version 0), then the migration code in the Down() method will be called deleting the \"Users\" table from the database. Here's another sample migration that goes a little more in depth [Migration(1)] public class TestCreateAndDropTableMigration: Migration { public override void Up() { Create.Table(\"TestTable\") .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity() .WithColumn(\"Name\").AsString(255).NotNullable().WithDefaultValue(\"Anonymous\"); Create.Table(\"TestTable2\") .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity() .WithColumn(\"Name\").AsString(255).Nullable() .WithColumn(\"TestTableId\").AsInt32().NotNullable(); Create.Index(\"ix_Name\").OnTable(\"TestTable2\").OnColumn(\"Name\").Ascending() .WithOptions().NonClustered(); Create.Column(\"Name2\").OnTable(\"TestTable2\").AsBoolean().Nullable(); Create.ForeignKey(\"fk_TestTable2_TestTableId_TestTable_Id\") .FromTable(\"TestTable2\").ForeignColumn(\"TestTableId\") .ToTable(\"TestTable\").PrimaryColumn(\"Id\"); Insert.IntoTable(\"TestTable\").Row(new { Name = \"Test\" }); } public override void Down() { Delete.Table(\"TestTable2\"); Delete.Table(\"TestTable\"); } } Note that if you use SQL Server identity columns, you should also use FluentMigrator's WithIdentityInsert clause for inserting data. Diving further into FM, we look at the Fluent Interface to make more useful migrations."
  },
  "articles/migration-runners.html": {
    "href": "articles/migration-runners.html",
    "title": "Migration runners | FluentMigrator documentation",
    "keywords": "Migration runners We have three migration runners you can choose from. Please use the in-process runner if possible. In-Process This is an example of using the in-process migration runner: using System; using System.Linq; using FluentMigrator.Runner; using FluentMigrator.Runner.Initialization; using Microsoft.Extensions.DependencyInjection; namespace test { class Program { static void Main(string[] args) { var serviceProvider = CreateServices(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { UpdateDatabase(scope.ServiceProvider); } } /// <summary> /// Configure the dependency injection services /// </summary> private static IServiceProvider CreateServices() { return new ServiceCollection() // Add common FluentMigrator services .AddFluentMigratorCore() .ConfigureRunner(rb => rb // Add SQLite support to FluentMigrator .AddSQLite() // Set the connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Define the assembly containing the migrations .ScanIn(typeof(AddLogTable).Assembly).For.Migrations()) // Enable logging to console in the FluentMigrator way .AddLogging(lb => lb.AddFluentMigratorConsole()) // Build the service provider .BuildServiceProvider(false); } /// <summary> /// Update the database /// </summary> private static void UpdateDatabase(IServiceProvider serviceProvider) { // Instantiate the runner var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } } } Migrate.exe (FluentMigrator.Console package) This is a console tool that works also with the .NET Framework outside of the .NET Core ecosystem. Visual Studio: Install with the package manager console NuGet: Install with the nuget.exe tool Install the package with: Install-Package FluentMigrator.Console Install the package with: nuget install FluentMigrator.Console -ExcludeVersion Now, you can find the tool in the path FluentMigrator[package-version]/tools/<target-framework>/[optional-platform/]Migrate.exe . Note The package-version is only part of the path when the tool was installed using the Visual Studio package manager console. Important Choose the correct target-framework . Otherwise, the tool might not be able to load your assembly. target-framework platform optional-platform exists? path net40 x86 yes tools/net40/x86/Migrate.exe net40 x64 yes tools/net40/x64/Migrate.exe net40 AnyCPU no tools/net40/Migrate.exe net45 x86 yes tools/net45/x86/Migrate.exe net45 x64 yes tools/net45/x64/Migrate.exe net45 AnyCPU no tools/net45/Migrate.exe net452 x86 yes tools/net452/x86/Migrate.exe net452 x64 yes tools/net452/x64/Migrate.exe net452 AnyCPU yes tools/net452/any/Migrate.exe Important On non-Windows platforms, you have to install/use mono. dotnet fm (FluentMigrator.DotNet.Cli tool) Important You need at least the .NET Core 2.1 preview 2 SDK for this tool. Install the dotnet-fm tool: dotnet tool install -g FluentMigrator.DotNet.Cli Execute the migration: dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a \".\\bin\\Debug\\netcoreapp2.1\\test.dll\" Tip You probably have to replace netcoreapp2.1 with the correct target framework. You can find it in the csproj file, XML element TargetFramework ."
  },
  "articles/multi-db-support.html": {
    "href": "articles/multi-db-support.html",
    "title": "Dealing with Multiple Database Types | FluentMigrator documentation",
    "keywords": "Dealing with multiple database types FluentMigrator allows you to target multiple database types from the same migration project. Every FluentMigrator project is database agnostic and can be run against any of the supported database types. However, there are times when only some migrations in a project need to be executed against one of the database types. For supporting that scenario FluentMigrator includes the IfDatabase expression. Using IfDatabase Suppose you have a migration that executes a script file to create a view: public class CreateViewsMigration : Migration { public override void Up() { Execute.Script(\"CreateViewsMigrationUp.sql\"); } public override void Down() { Execute.Script(\"CreateViewsMigrationDown.sql\"); } } However the project needs to create some views in an SqlServer database and others in an Oracle database , but you want both tasks to be part of the same migration, sharing the same migration number in both databases. You handle this by creating scripts for each database and specifying which one needs to be executed: public class CreateViewsMigration : Migration { public override void Up() { IfDatabase(\"oracle\").Execute.Script(\"CreateViewsOracleMigrationUp.sql\"); IfDatabase(\"sqlserver\").Execute.Script(\"CreateViewsSqlServerMigrationUp.sql\"); } public override void Down() { IfDatabase(\"oracle\").Execute.Script(\"CreateViewsOracleMigrationDown.sql\"); IfDatabase(\"sqlserver\").Execute.Script(\"CreateViewsSqlServerMigrationDown.sql\"); } } Supported databases Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver."
  },
  "articles/obsolete/app-context.html": {
    "href": "articles/obsolete/app-context.html",
    "title": "ApplicationContext: Passing parameters to Migrations | FluentMigrator documentation",
    "keywords": "Caution The ApplicationContext is obsolete. Use dependency injection instead! Obsolete: ApplicationContext: Passing parameters to Migrations ApplicationContext is an object passed in by the Migration Runner that is available to migrations to be used as a switch. To set the ApplicationContext when running migrate.exe Run migrate.exe ... --context MyArgument . This will set the application context to the string MyArgument . To set the ApplicationContext when running migration in code Set migratorConsole.ApplicationContext to an arbitrary C# object, such as a string: migratorConsole.ApplicationContext = \"MyArgument\"; or when creating the RunnerContext : var migrationContext = new FluentMigrator.Runner.Initialization.RunnerContext(announcer) { ApplicationContext = \"MyArgument\" }; To use the ApplicationContext Inside your migration, you can access the context via this.ApplicationContext . So for instance: if ((string)this.ApplicationContext == \"MyArgument\") this.Delete.Column(\"BadColumn\").FromTable(\"MyTable\"); Alternative: DependencyInjection Just register your service and use it in your migration: interface IMyService { string MyStringData { get; } } class MyService : IMyService { public string MyStringData { get; set; } } static void Main() { var serviceProvider = new ServiceCollection() .AddFluentMigratorCore() // TODO: Configure database and connection .AddSingleton<IMyService>(new MyService() { MyStringData = \"MyArgument\" }) .BuildServiceProvider(); var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // TODO: Use the runner } [Migration(1234)] public class MyMigration : ForwardOnlyMigration { private readonly IMyService _service; public MyMigration(IMyService service) { _service = service; } public void Up() { if (_service.MyStringData == \"MyArgument\") Delete.Column(\"BadColumn\").FromTable(\"MyTable\"); } }"
  },
  "articles/profiles.html": {
    "href": "articles/profiles.html",
    "title": "Profiles | FluentMigrator documentation",
    "keywords": "Profiles Note While Profiles are not deprecated or obsolete, they have been largely deprecated in favor of Maintenance Migrations. Profiles are only runnable at a particular point in time, whereas Maintenance Migrations have several different stages at which they can be applied, and are thus more flexible. Additionally, Maintenance Migrations can work with Tags to mimic the effect of a Profile Name. Profiles are used to selectively apply migrations depending on a command line option, or build script attribute. For instance, you may want to run the \"Development\" profile only in your Dev environment, and run the \"Testing\" profile in your Testing environment. Profiles will always be run if you specify them. Normally, these are useful to always put test/sample seed data in when dropping/refreshing development and testing environments. In production you would rarely want to continually insert the same data more than once. [Profile(\"Development\")] public class CreateDevSeedData : Migration { public override void Up() { Insert.IntoTable( \"User\" ).Row( new { Username = \"devuser1\", DisplayName = \"Dev User\" }); } public override void Down() { //empty, not using } } Now that you have migrations and profiles defined, you can use Migration Runners to apply changes to your database."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Starting with FluentMigrator | FluentMigrator documentation",
    "keywords": "Creating a project dotnet new console --name test Adding the NuGet packages # For migration development dotnet add package FluentMigrator # For migration execution dotnet add package FluentMigrator.Runner # For database support dotnet add package FluentMigrator.Runner.SQLite # ADO.NET support for the database dotnet add package Microsoft.Data.Sqlite Note In versions older than 4.0, the FluentMigrator.Runner package references all database-specific packages due to backwards compatibility reasons. Creating your first migration Create a file called 20180430_AddLogTable.cs with the following contents: using FluentMigrator; namespace test { [Migration(20180430121800)] public class AddLogTable : Migration { public override void Up() { Create.Table(\"Log\") .WithColumn(\"Id\").AsInt64().PrimaryKey().Identity() .WithColumn(\"Text\").AsString(); } public override void Down() { Delete.Table(\"Log\"); } } } This will create a table named Log with the columns Id , and Text . Running your first migration You have two options to execute your migration: Using an in-process runner (preferred) Using an out-of-process runner (for some corporate requirements) In-Process (preferred) Out-of-process (for some corporate requirements) Note If you are potentially running migrations from multiple application servers, such as a load balanced set of web servers, you will need to acquire a distributed and exclusive lock, either by database-dependent means or through the use of an external distributed lock coordinator. See the FAQ for more information . Change your Program.cs to the following code: using System; using System.Linq; using FluentMigrator.Runner; using FluentMigrator.Runner.Initialization; using Microsoft.Extensions.DependencyInjection; namespace test { class Program { static void Main(string[] args) { var serviceProvider = CreateServices(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { UpdateDatabase(scope.ServiceProvider); } } /// <summary> /// Configure the dependency injection services /// </summary> private static IServiceProvider CreateServices() { return new ServiceCollection() // Add common FluentMigrator services .AddFluentMigratorCore() .ConfigureRunner(rb => rb // Add SQLite support to FluentMigrator .AddSQLite() // Set the connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Define the assembly containing the migrations .ScanIn(typeof(AddLogTable).Assembly).For.Migrations()) // Enable logging to console in the FluentMigrator way .AddLogging(lb => lb.AddFluentMigratorConsole()) // Build the service provider .BuildServiceProvider(false); } /// <summary> /// Update the database /// </summary> private static void UpdateDatabase(IServiceProvider serviceProvider) { // Instantiate the runner var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } } } As you can see, instantiating the migration runner (in UpdateDatabase ) becomes very simple and updating the database is straight-forward. Important You need at least the .NET Core 2.1 preview 2 SDK for this tool. Install the dotnet-fm tool: dotnet tool install -g FluentMigrator.DotNet.Cli Execute the migration: dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a \".\\bin\\Debug\\netcoreapp2.1\\test.dll\" Tip You probably have to replace netcoreapp2.1 with the correct target framework. You can find it in the csproj file, XML element TargetFramework ."
  },
  "articles/raw-sql.html": {
    "href": "articles/raw-sql.html",
    "title": "Raw SQL helper | FluentMigrator documentation",
    "keywords": "Raw SQL helper When using the Insert.IntoTable expression, or when setting the default column value, all row data that is a string is quoted and saved in the database. If you want to use an sql expression instead then the RawSql helper class is what you need. For example, if I want to use a Microsoft SQL Server function like CURRENT_USER and try to insert like this: Insert.IntoTable(\"Users\").Row(new { Username = \"CURRENT_USER\" }); The result will be that the Username column will get the value CURRENT_USER as a string. To execute the function you can use the RawSql.Insert method like this: Insert.IntoTable(\"User\").Row(new { Username = RawSql.Insert(\"CURRENT_USER\") }); This will result in the Username column being set to the current username. Be aware that by using an sql server specific function like CURRENT_USER that this expression is not portable anymore and will not work against another database (like PostgreSQL)."
  },
  "articles/runners/dotnet-fm.html": {
    "href": "articles/runners/dotnet-fm.html",
    "title": "dotnet-fm tool | FluentMigrator documentation",
    "keywords": "The dotnet-fm tool Installation dotnet tool install -g FluentMigrator.DotNet.Cli Running You can run the tool with dotnet fm or dotnet-fm . Use the latter version if the former doesn't work due to a .NET Core CLI tool bug. Command structure dotnet-fm -+- list -+- migrations = List applied and pending migrations | +- processors = List all available processors +- migrate = Apply all migrations | +- up = Apply migrations up to given version (inclusive) | +- down = Apply migrations down to given version (exclusive) +- rollback = Rollback the last migration applied | +- all = Rollback all migrations | +- by = Rollback by <n> steps | +- to = Rollback to given version +- validate --- versions = Validate order of applied migrations list processors Shows all available processor identifiers to be used by the -p or --processor command line switch. .NET Runtime related switches --allowDirtyAssemblies switch Overrides the default .NET Assembly Loading logic, allowing you to load assemblies written for other versions of the .NET runtime. This is primarily intended for developers working on preview releases of the next version of the .NET runtime, but can be used by others as a workaround for assembly not found errors. In particular, it is possible to have a \"diamond dependency\" where some dependencies have higher assembly versions than the one FluentMigrator uses. For example, suppose FluentMigrator.DotNet.Cli ships with a particular version of System.ComponentModel.DataAnnotations. Further suppose that you have a private enterprise nuget package repository that has re-usable FluentMigrator extension methods, which transitively references a different verison of System.ComponentModel.DataAnnotations. There are only two possible ways you can call such an extension method: (1) implement your own FluentMigrator.DotNet.Cli tool and directly package your migrations DLL with the tool so that the MSBuild Microsoft.NET.Sdk correctly builds a project.deps.json used to resolve the right assembly (2) use this --allowDirtyAssemblies switch. As another example, suppose FluentMigrator has not yet shipped a .NET vNext compatible binary, but you want to work with that binary. The --allowDirtyAssemblies switch will help resolve the System.Runtime assembly. Connection related commands The following commands need a processor id and/or a connection: dotnet-fm list migrations dotnet-fm migrate dotnet-fm rollback dotnet-fm validate -c|--connection <CONNECTION_STRING> The connection string itself to the server and database you want to execute your migrations against. --no-connection Indicates that migrations will be generated without consulting a target database. Should only be used when generating an output file. -p|--processor <PROCESSOR_NAME> The kind of database you are migrating against. Available choices can be shown with list processors . -s|--processor-switches <PROCESSOR_SWITCHES> Database processor specific switches, e.g.: Firebird: Force Quote=true Oracle: QUOTEDIDENTIFIERS=TRUE --preview Only output the SQL generated by the migration - do not execute it. Default is false. -V|--verbose Show the SQL statements generated and execution time in the console. Default is false. --profile <PROFILE> The profile to run after executing migrations. --context <CONTEXT> (obsolete) Set ApplicationContext to the given string. --timeout <TIMEOUT_SEC> Overrides the default database command timeout of 30 seconds. -o|--output=<FILENAME> Output generated SQL to a file. Default is no output. A filename may be specified, otherwise [targetAssemblyName].sql is the default. -a|--assembly <ASSEMBLY_NAME> The assemblies containing the migrations you want to execute. -n|--namespace <NAMESPACE> The namespace contains the migrations you want to run. Default is all migrations found within the Target Assembly will be run. --nested Whether migrations in nested namespaces should be included. Used in conjunction with the namespace option. --start-version The specific version to start migrating from. Only used when NoConnection is true. Default is 0. --working-directory <WORKING_DIRECTORY> The directory to load SQL scripts specified by migrations from. -t|--tag Filters the migrations to be run by tag. -b|--allow-breaking-changes Allows execution of migrations marked as breaking changes. rollback and migrate specific parameters -m|--transaction-mode <MODE> Overrides the transaction behavior of migrations, so that all migrations to be executed will run in one transaction. Allowed values are: Migration Session rollback all Reverts all migrations. rollback by <steps> Reverts the last <steps> migrations. rollback to <version> Reverts all migrations down to (and excluding) <version> . migrate up Applies the found migrations. -t|--target <TARGET_VERSION> The specific version to migrate to (inclusive). migrate down Applies the found migrations. -t|--target <TARGET_VERSION> The specific version to revert to (exclusive). --strip:<true|false> Whether comments should be stripped from SQL text prior to executing migration on server. Default is true; false will become the default in 4.x. Examples List all available processors dotnet fm list processors List applied and pending migrations dotnet fm list migrations -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll Apply all migrations dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll Apply migrations up to given version (inclusive) dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll up -t 20090906205342 Apply migrations down to given version (exclusive) dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll down -t 20090906205342 Rollback the last migration applied dotnet fm rollback -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll Rollback to given version dotnet fm rollback -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll to 20090906205342 Rollback by <n> steps dotnet fm rollback -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll by 1 Rollback all migrations dotnet fm rollback -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll all Validate order of applied migrations dotnet fm validate versions -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll"
  },
  "articles/runners/runner-console.html": {
    "href": "articles/runners/runner-console.html",
    "title": "Command Line Runner | FluentMigrator documentation",
    "keywords": "Command Line Runner Options Migrate.exe can be called with the following parameters. The first three parameters are required if running a migration. A lot of the parameters have more than one switch for the same parameter. If a parameter has an = sign after it, then it expects some text value to be set, otherwise it is just a boolean switch e.g. the preview parameter. When writing the command, the = sign is optional (e.g. --task=migrate or --task migrate ). Single dashes or double dashes is also optional e.g. -task or --task . Examples: Migrate.exe /conn \"Data Source=db\\db.sqlite;Version=3;\" /provider sqlite /assembly your.migrations.dll /verbose migrate --conn \"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" --provider sqlserver2008 --assembly \"..\\Migrations\\bin\\Debug\\Migrations.dll\" --task migrate --output --outputFilename migrated.sql migrate -c \"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" -db sqlserver2008 -a \"..\\Migrations\\bin\\Debug\\Migrations.dll\" -t migrate -o -of migrated.sql --assembly, -a, --target=VALUE (required) The assembly containing the migrations you want to execute. --provider, --dbtype, --db=VALUE (required) The kind of database you are migrating against. Available choices are: Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver. --connectionString, --connection, --conn, -c=VALUE (required, can be a connectionStringName ) The connection string to the server and database you want to execute your migrations against. This can be a full connection string or the name of the connection string stored in a config file. When specifying a named connection string, FluentMigrator searches for it in this order: The specified config file via --connectionStringConfigPath ](#cscp) parameter Target assembly's config file Machine.config config file --connectionStringConfigPath, --configPath=VALUE The absolute path of the config file where the connection string named by is found. This parameter is used together with the --connectionString parameter, the --connectionString parameter specifies the name of the connection string in the config file. If the config file looks like this: <?xml version=\"1.0\" encoding=\"utf-8\" ?> <configuration> <connectionStrings> <clear /> <add name=\"SRVConnectionString\" connectionString=\"server=SQLEXPRESS;uid=test;pwd=test;database=FluentMigrator\"/> </connectionStrings> </configuration> Then the --connectionString parameter should be set to SRVConnectionString. If not specified, it defaults to lookup order specified in the --connectionString parameter documentation. Note: --connectionStringConfigPath uses absolute path, whereas --assembly uses relative path. --task, -t=VALUE (optional) The task you want FluentMigrator to perform. Available choices are: migrate:up migrate (same as migrate:up) migrate:down (used in conjunction with the --version switch. Warning: if you don't supply --version this will revert all migrations) rollback (per default this rollbacks one step. Use the --steps switch to rollback more steps) rollback:toversion (used in conjunction with the --version switch. Will rollback all versions down to the specified version, not including the specified version. The Migration attribute contains the version that should be used with the --version switch.) rollback:all listmigrations Default is 'migrate'. --verbose=VALUE (optional) Show the SQL statements generated and execution time in the console. Default is false. This should be a boolean switch but is not. VALUE can be anything to set to true and the switch should not be specified to set it to false. For example, --verbose qwerty would set it to true. --output, --out, -o (optional) Output generated SQL to a file. Default is no output. Use outputFilename to control the filename, otherwise [assemblyname].sql is the default. This is a boolean switch so it does not take a value. --outputFilename, --outfile, --of=VALUE (optional) The name of the file to output the generated SQL to. The output option must be included for output to be saved to the file. --outputSemicolonDelimiter, --outsemdel, -osd (optional) SQL statements in output file are delimited with a semicolon. --namespace, --ns=VALUE (optional) The namespace that contains the migrations you want to run. Default is all migrations found within the Target Assembly will be run. --nested (optional) Whether migrations in nested namespaces should be included. Used in conjunction with the namespace option. The default is false so that nested namespaces are not included. This is a boolean switch so it does not take a value. --steps=VALUE (optional) The number of versions to rollback if the task is 'rollback'. Default is 1. --preview, -p (optional) Only output the SQL generated by the migration - do not execute it. Default is false. This is a boolean switch so it does not take a value. --version=VALUE (optional) The specific version to migrate. Default is 0, which will run all migrations. The version of a migration is the unique identifier that is contained in the Migration attribute. For example, if a Migration has this attribute [Migration(201303062126)] then the version is 201303062126. --startVersion=VALUE The specific version to start migrating from. Only used when NoConnection is true. Should therefore only be used when generating an output file. Default is 0 --noConnection Indicates that migrations will be generated without consulting a target database. Should only be used when generating an output file. --profile=VALUE (optional) The \"profile\":https://github.com/schambers/fluentmigrator/wiki/Profiles to run after executing migrations. --timeout=VALUE (optional) Overrides the default SqlCommand timeout of 30 seconds. --workingdirectory, --wd=VALUE (optional) The directory to load SQL scripts specified by migrations from. --tag=VALUE Filters migrations to be run based on tags. See Filter migrations run based on tags . See also --include-untagged option. --include-untagged: Includes untagged migrations. By default, if you use --tag=VALUE to filter migrations to be run based on tags, untagged migrations will be excluded. --context=VALUE A string argument that can be used in a migration. See ApplicationContext: Passing parameters to Migrations --transaction-per-session, --tps (optional) The default transaction is one transaction per migration so the default for this switch is false. Run migrations in one transaction per session (task) instead. This is a boolean switch so it does not take a value. --stopOnError Pauses migration execution until the user input if any error occurred. Default is false. --allow-breaking-changes Allows execution of migrations marked as breaking changes. Default is false. --strip- Disables stripping of comments from executed SQL. Note the - at the end of the command. --help, -h, -? Displays help menu. --providerswitches=VALUE Specify provider specific options, for instance: (Oracle) QUOTEDIDENTIFIERS=TRUE , which will quote identifiers always (Firebird) Force Quote=true , which will quote identifiers always"
  },
  "articles/technical/fluent-api.html": {
    "href": "articles/technical/fluent-api.html",
    "title": "Fluent API | FluentMigrator documentation",
    "keywords": "How does the fluent API work? The starting points for the fluent API are the following classes: MigrationBase : database modelling Migration : data modification and script execution Supported expressions Create Create a database object. Alter Alter a database object. Delete Delete a database object or data. Rename ( IRenameExpressionRoot ) Rename a database object. Schema ( ISchemaExpressionRoot ) Schema-oriented starting point for expressions. IfDatabase ( IIfDatabaseExpressionRoot ) Create database-specific expressions. Insert ( IInsertExpressionRoot ) Insert data. Update ( IUpdateExpressionRoot ) Update data. Execute ( IExecuteExpressionRoot ) Execute SQL statements/scripts. Planned changes Differentiate between Delete and Drop"
  },
  "articles/technical/fluent-api-alter.html": {
    "href": "articles/technical/fluent-api-alter.html",
    "title": "Fluent API (Alter) | FluentMigrator documentation",
    "keywords": "Alter ( IAlterExpressionRoot ) Alter --+- Table --- name ----> IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax | +- Column --- name ---> IAlterColumnOnTableSyntax IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax --------+-----------------------------------+--> IAlterTableAddColumnOrAlterColumnOrSchemaSyntax | | +- WithDescription --- description -+ IAlterColumnOnTableSyntax ---------- OnTable --- name --> IAlterColumnAsTypeOrInSchemaSyntax IAlterColumnAsTypeOrInSchemaSyntax --------+-----------------------+--> IAlterColumnAsTypeSyntax | | +- InSchema --- schema -+ IAlterColumnAsTypeSyntax ---------- IColumnTypeSyntax ---- TNext: IAlterColumnOptionSyntax --- IColumnTypeSyntax IAlterColumnOptionSyntax ---------- IColumnOptionSyntax -+--> TNext: IAlterColumnOptionSyntax | +--> TNextFk: IAlterColumnOptionOrForeignKeyCascadeSyntax IColumnOptionSyntax IAlterColumnOptionOrForeignKeyCascadeSyntax --------+--> IAlterColumnOptionSyntax | +- IForeignKeyCascadeSyntax -+--> TNext: IAlterColumnOptionSyntax | +--> TNextFk: IAlterColumnOptionOrForeignKeyCascadeSyntax IForeignKeyCascadeSyntax IAlterTableAddColumnOrAlterColumnOrSchemaSyntax --------+-----------------------+--> IAlterTableAddColumnOrAlterColumnSyntax | | +- InSchema --- schema -+ IAlterTableAddColumnOrAlterColumnSyntax --------+- AddColumn name ---+--> IAlterTableColumnAsTypeSyntax | | +- AlterColumn name -+ | +- ToSchema name -------| (end) IAlterTableColumnAsTypeSyntax ---------- IColumnTypeSyntax ---- TNext: IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax --- IColumnTypeSyntax IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax --------+-------------------------------+--+--> IAlterTableAddColumnOrAlterColumnSyntax | | | +- SetExistingRowsTo --- value -+ +--> IColumnOptionSyntax -+--> TNext: IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax | +--> TNextFk: IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax IColumnOptionSyntax IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax --------+--> IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax | +- IForeignKeyCascadeSyntax -+--> TNext: IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax | +--> TNextFk: IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax IForeignKeyCascadeSyntax"
  },
  "articles/technical/fluent-api-common.html": {
    "href": "articles/technical/fluent-api-common.html",
    "title": "Fluent API common parts | FluentMigrator documentation",
    "keywords": "IColumnTypeSyntax<TNext> --------+- AsAnsiString -+--------+-------------+---------------+-> TNext | | | | | | +- size -+- collation -+ | | | +- AsBinary -----+--------+-----------------------------+ | | | | | +- size -+ | | | +- AsBoolean -------------------------------------------+ | | +- AsByte ----------------------------------------------+ | | +- AsCurrency ------------------------------------------+ | | +- AsDate ----------------------------------------------+ | | +- AsDateTime ------------------------------------------+ | | +- AsDateTime2 -----------------------------------------+ | | +- AsDateTimeOffset -+-------------+--------------------+ | | | | | +- precision -+ | | | +- AsDecimal --------+--------------------------+-------+ | | | | | +- precision ------ scale -+ | | | +- AsDouble --------------------------------------------+ | | +- AsGuid ----------------------------------------------+ | | +- AsFixedLengthString --- size -----+-------------+----+ | | | | | +- collation -+ | | | +- AsFixedLengthAnsiString --- size -+-------------+----+ | | | | | +- collation -+ | | | +- AsFloat ---------------------------------------------+ | | +- AsInt16 ---------------------------------------------+ | | +- AsInt32 ---------------------------------------------+ | | +- AsInt64 ---------------------------------------------+ | | +- AsString -----+--------+-------------+---------------+ | | | | | | +- size -+- collation -+ | | | +- AsTime ----------------------------------------------+ | | +- AsXml --------+--------+-----------------------------+ | | | | | +- size -+ | | | +- AsCustom --- customType -----------------------------+ IColumnOptionSyntax<TNext,TNextFk> --------+- WithDefault --- method --------------------------------------+--> TNext | | +- WithDefaultValue --- value ----------------------------------+ | | +- WithColumnDescription --- description -----------------------+ | | +- Identity ----------------------------------------------------+ | | +- Indexed -----------------------------------------------------+ | | +- PrimaryKey -+--------+---------------------------------------+ | | | | | +- name -+ | | | +- Nullable ----------------------------------------------------+ | | +- NotNullable -------------------------------------------------+ | | +- Unique -----+--------+---------------------------------------+ | | | | +- name -+ | +- ForeignKey ---+-------------------------------------------+--+--> TNextFk | | | | | +-----------------------+- table --- column-+ | | | | | | +- name -+-+----------+-+ | | | | | | +- schema -+ | | | +- ReferencedBy -+-----------------------+- table --- column-+--+ | | +- name -+-+----------+-+ | | +- schema -+ IForeignKeyCascadeSyntax<TNext,TNextFk> --------+- OnDeleteOrUpdate --- rule ---> TNext | +- OnDelete --- rule -+---------> TNextFk | | +- OnUpdate --- rule -+"
  },
  "articles/technical/fluent-api-create.html": {
    "href": "articles/technical/fluent-api-create.html",
    "title": "Fluent API (Create) | FluentMigrator documentation",
    "keywords": "ICreateExpressionRoot Create -+- Schema ------------- name --- ICreateSchemaOptionsSyntax --- | +- Table -------------- name --- ICreateTableWithColumnOrSchemaOrDescriptionSyntax --- | +- Column ------------- name --- ICreateColumnOnTableSyntax --- | +- ForeignKey -------+--------+- ICreateForeignKeyFromTableSyntax --- | | | | +- name -+ | +- Index ------------+--------+- ICreateIndexForTableSyntax --- | | | | +- name -+ | +- Sequence ----------- name --- ICreateSequenceInSchemaSyntax --- | +- PrimaryKey -------+--------+- ICreateConstraintOnTableSyntax --- | | | | +- name -+ | +- UniqueConstraint -+--------+- ICreateConstraintOnTableSyntax --- | | +- name -+ ICreateSchemaOptionsSyntax ICreateTableWithColumnOrSchemaOrDescriptionSyntax ICreateColumnOnTableSyntax ICreateForeignKeyFromTableSyntax ICreateIndexForTableSyntax ICreateSequenceInSchemaSyntax ICreateConstraintOnTableSyntax Schema ICreateSchemaOptionsSyntax Note Extension point Table ICreateTableWithColumnOrSchemaOrDescriptionSyntax --------+-----------------------------+- ICreateTableWithColumnOrSchemaSyntax --- | | +- WithDescription ---- name -+ ICreateTableWithColumnOrSchemaSyntax --------+-----------------------------+- ICreateTableWithColumnSyntax --- | | +- InSchema ----------- name -+ ICreateTableWithColumnSyntax ---------- WithColumn --------- name --- ICreateTableColumnAsTypeSyntax --- ICreateTableColumnAsTypeSyntax ---------- IColumnTypeSyntax ---- TNext: ICreateTableColumnOptionOrWithColumnSyntax --- IColumnTypeSyntax ICreateTableColumnOptionOrWithColumnSyntax --------+- ICreateTableWithColumnSyntax -------------------------------------------------------------------+- | | +- IColumnOptionSyntax -+- TNext: ICreateTableColumnOptionOrWithColumnSyntax ----------------------+ | | +- TNextFk: ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax -+ IColumnOptionSyntax ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax --------+--> ICreateTableColumnOptionOrWithColumnSyntax | +- IForeignKeyCascadeSyntax -+--> TNext: ICreateTableColumnOptionOrWithColumnSyntax | +--> TNextFk: ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax IForeignKeyCascadeSyntax Column ICreateColumnOnTableSyntax ---------- OnTable --- name ---> ICreateColumnAsTypeOrInSchemaSyntax ICreateColumnAsTypeOrInSchemaSyntax --------+---------------------+--> ICreateColumnAsTypeSyntax | | +- InSchema --- name -+ ICreateColumnAsTypeSyntax ---------- IColumnTypeSyntax ---> ICreateColumnOptionSyntax IColumnTypeSyntax ICreateColumnOptionSyntax ICreateColumnOptionSyntax --------+-------------------------------+- IColumnOptionSyntax -+--> TNext: ICreateColumnOptionSyntax | | | +- SetExistingRowsTo --- value -+ +--> TNextFk: ICreateColumnOptionOrForeignKeyCascadeSyntax IColumnOptionSyntax ICreateColumnOptionOrForeignKeyCascadeSyntax --------+--> ICreateColumnOptionSyntax | +- IForeignKeyCascadeSyntax -+--> TNext: ICreateColumnOptionSyntax | +--> TNextFk: ICreateColumnOptionOrForeignKeyCascadeSyntax IForeignKeyCascadeSyntax ForeignKey ICreateForeignKeyFromTableSyntax ---------- FromTable --- table ---> ICreateForeignKeyForeignColumnOrInSchemaSyntax ICreateForeignKeyForeignColumnOrInSchemaSyntax --------+---------------------+--> ICreateForeignKeyForeignColumnSyntax | | +- InSchema --- name -+ ICreateForeignKeyForeignColumnSyntax --------+- ForeignColumn --- column ---+--> ICreateForeignKeyToTableSyntax | | +- ForeignColumns --- columns -+ ICreateForeignKeyToTableSyntax ---------- ToTable name --> ICreateForeignKeyPrimaryColumnOrInSchemaSyntax ICreateForeignKeyPrimaryColumnOrInSchemaSyntax --------+-----------------+--> ICreateForeignKeyPrimaryColumnSyntax | | +- InSchema name -+ ICreateForeignKeyPrimaryColumnSyntax --------+- PrimaryColumn --- column ---+--> ICreateForeignKeyCascadeSyntax | | +- PrimaryColumns --- columns -+ ICreateForeignKeyCascadeSyntax --------+- OnDeleteOrUpdate --- rule ----| (end) | +- OnDelete --- rule ---------+--> ICreateForeignKeyCascadeSyntax | | +- OnUpdate --- rule ---------+ Index ICreateIndexForTableSyntax ---------- OnTable --- name ---> ICreateIndexOnColumnOrInSchemaSyntax ICreateIndexOnColumnOrInSchemaSyntax --------+---------------------+--> ICreateIndexOnColumnSyntax | | +- InSchema --- name -+ ICreateIndexOnColumnSyntax --------+- OnColumn --- name ---> ICreateIndexColumnOptionsSyntax | +- WithOptions ---------> ICreateIndexOptionsSyntax ICreateIndexColumnOptionsSyntax --------+- Ascending --+--> ICreateIndexMoreColumnOptionsSyntax | | +- Descending -+ | +- Unique --------> ICreateIndexColumnUniqueOptionsSyntax ICreateIndexOptionsSyntax --------+- Unique -------+--> ICreateIndexOnColumnSyntax | | +- NonClustered -+ | | +- Clustered ----+ ICreateIndexOnColumnSyntax ICreateIndexMoreColumnOptionsSyntax Note Extension point --------+---------------------+--> ICreateIndexOnColumnSyntax | | +- get_CurrentColumn -+ ICreateIndexOnColumnSyntax ICreateIndexColumnUniqueOptionsSyntax Note Extension point --------+---------------------+--> ICreateIndexOnColumnSyntax | | +- get_CurrentColumn -+ ICreateIndexOnColumnSyntax Sequence ICreateSequenceInSchemaSyntax --------+---------------------+--> ICreateSequenceSyntax | | +- InSchema --- name -+ ICreateSequenceSyntax --------+-----------------------------+--> ICreateSequenceSyntax | | +- IncrementBy --- increment -+ | | +- MinValue --- minValue -----+ | | +- MaxValue --- maxValue -----+ | | +- StartWith --- startWith ---+ | | +- Cache --- value -----------+ | | +- Cycle ---------------------+ PrimaryKey/Unique Constraint ICreateConstraintOnTableSyntax ---------- OnTable --- name ----> ICreateConstraintWithSchemaOrColumnSyntax ICreateConstraintWithSchemaOrColumnSyntax --------+- ICreateConstraintColumnsSyntax | +- ICreateConstraintWithSchemaSyntax Expanded: --------+-----------------------+--+- Column --- name ---+--> ICreateConstraintOptionsSyntax | | | | +- WithSchema --- name -+ +- Columns --- names -+ ICreateConstraintColumnsSyntax --------+- Column --- name ---+--> ICreateConstraintOptionsSyntax | | +- Columns --- names -+ ICreateConstraintWithSchemaSyntax ---------- WithSchema --- name ----> ICreateConstraintColumnsSyntax ICreateConstraintOptionsSyntax Note Extension point"
  },
  "articles/technical/fluent-api-delete.html": {
    "href": "articles/technical/fluent-api-delete.html",
    "title": "Fluent API (Delete) | FluentMigrator documentation",
    "keywords": "IDeleteExpressionRoot Delete -+- Schema ------------- name ----------| (end) | +- Table -------------- name -------+--> IInSchemaSyntax | | +- Sequence ----------- name -------+ | +- Column ------------- name ----------> IDeleteColumnFromTableSyntax | +- ForeignKey -------+-----------------> IDeleteForeignKeyFromTableSyntax | | | +- name ----------> IDeleteForeignKeyOnTableSyntax | +- FromTable ---------- name ----------> IDeleteDataOrInSchemaSyntax | +- Index ------------+--------+--------> IDeleteIndexForTableSyntax | | | | +- name -+ | +- PrimaryKey --------- name -------+--> IDeleteConstraintOnTableSyntax | | +- UniqueConstraint -+--------+-----+ | | | | +- name -+ | +- DefaultConstraint ------------------> IDeleteDefaultConstraintOnTableSyntax Generic IInSchemaSyntax ---------- InSchema --- name ---| (end) Column IDeleteColumnFromTableSyntax --------+- FromTable --- name ---> IInSchemaSyntax | +- Column --- name ------> IDeleteColumnFromTableSyntax ForeignKey IDeleteForeignKeyFromTableSyntax ---------- FromTable --- name ---> IDeleteForeignKeyForeignColumnOrInSchemaSyntax IDeleteForeignKeyForeignColumnOrInSchemaSyntax --------+-------------------+--> IDeleteForeignKeyForeignColumnSyntax | | +- InSchema name ---+ IDeleteForeignKeyForeignColumnSyntax --------+- ForeignColumn ---- name --+--> IDeleteForeignKeyToTableSyntax | | +- ForeignColumns --- names -+ IDeleteForeignKeyToTableSyntax ---------- ToTable --- name ---> IDeleteForeignKeyPrimaryColumnSyntax IDeleteForeignKeyPrimaryColumnSyntax --------+- PrimaryColumn ---- name --+--| (end) | | +- PrimaryColumns --- names -+ IDeleteForeignKeyOnTableSyntax ---------- OnTable --- name ---> IInSchemaSyntax Data IDeleteDataOrInSchemaSyntax --------+---------------------+--> IDeleteDataSyntax | | +- InSchema --- name -+ IDeleteDataSyntax --------+- Row --- anonymousType ----> IDeleteDataSyntax | +- AllRows ---------------+--| (end) | | +- IsNull --- columnName -+ Index IDeleteIndexForTableSyntax --------+- OnTable --- name ---> IDeleteIndexOnColumnOrInSchemaSyntax | +- WithOptions --------> IDeleteIndexOptionsSyntax IDeleteIndexOnColumnOrInSchemaSyntax --------+---------------------+--> IDeleteIndexOnColumnSyntax | | +- InSchema --- name -+ IDeleteIndexOnColumnSyntax --------+- OnColumn --- name ---+--> IDeleteIndexOptionsSyntax | | +- OnColumns --- names -+ | | +- WithOptions ---------+ IDeleteIndexOptionsSyntax Note Extension point PrimaryKey/Unique constraint IDeleteConstraintOnTableSyntax ---------- FromTable name ---> IDeleteConstraintInSchemaOptionsSyntax IDeleteConstraintInSchemaOptionsSyntax --------+---------------------+--> IDeleteConstraintColumnSyntax | | +- InSchema --- name -+ IDeleteConstraintColumnSyntax --------+- OnColumn --- name ---+--| (end) | | +- OnColumns --- names -+ DefaultConstraint IDeleteDefaultConstraintOnTableSyntax ---------- OnTable --- name ---> IDeleteDefaultConstraintOnColumnOrInSchemaSyntax IDeleteDefaultConstraintOnColumnOrInSchemaSyntax --------+---------------------+--> IDeleteDefaultConstraintOnColumnSyntax | | +- InSchema --- name -+ IDeleteDefaultConstraintOnColumnSyntax ---------- OnColumn --- name ---| (end)"
  },
  "articles/version-table-metadata.html": {
    "href": "articles/version-table-metadata.html",
    "title": "Custom metadata for the VersionInfo table | FluentMigrator documentation",
    "keywords": "Custom metadata for the VersionInfo table By implementing the IVersionTableMetaData interface you can change the defaults for the VersionInfo table. The interface exposes six properties: Property Default value Description SchemaName (empty) The schema where the version table is stored TableName \"VersionInfo\" The table where the version information is stored ColumnName \"Version\" The name of the column where the version numbers are stored DescriptionColumnName \"Description\" The name of the last migration applied AppliedOnColumnName \"AppliedOn\" The datetime of when the last migration was applied UniqueIndexName \"UC_Version\" The name of the unique constraint for the version column In the same assembly that your migrations are located, create a new class (it must be public) that implements the IVersionTableMetaData interface and decorate the class with the VersionTableMetaDataAttribute . FluentMigrator will automatically find this and use it instead of the default settings. Note The custom IVersionTableMetaData is filtered by the values in the TypeFilterOptions . This allows different IVersionTableMetaData for every database. A common use case is changing the default schema so that you can have a migration assembly per schema. using FluentMigrator.Runner.VersionTableInfo; namespace Migrations { [VersionTableMetaData] public class CustomVersionTableMetaData : IVersionTableMetaData { public virtual string SchemaName => \"\"; public virtual string TableName => \"VersionInfo\"; public virtual string ColumnName => \"Version\"; public virtual string UniqueIndexName => \"UC_Version\"; public virtual string AppliedOnColumnName => \"AppliedOn\"; public virtual string DescriptionColumnName => \"Description\"; public virtual bool OwnsSchema => true; } } Finally, register it via Microsoft Dependency Injection: serviceCollection.AddScoped(typeof(IVersionTableMetaData), typeof(CustomVersionTableMetaData)); Overriding the DefaultVersionTableMetaData class If you want to keep most of the default values and just change one or two of the properties. Then you can create a class that inherits from DefaultVersionTableMetaData and override the property to be changed. Don't forget to add the VersionTableMetaData attribute to the class. [VersionTableMetaData] public class VersionTable : DefaultVersionTableMetaData { public override string ColumnName { get { return \"Version\"; } } } Finally, register it via Microsoft Dependency Injection: serviceCollection.AddScoped(typeof(IVersionTableMetaData), typeof(VersionTable));"
  },
  "index.html": {
    "href": "index.html",
    "title": "Fluent migrations framework for .NET | FluentMigrator documentation",
    "keywords": "Fluent migrations framework for .NET Fluent Migrator is a migration framework for .NET much like Ruby on Rails Migrations. Migrations are a structured way to alter your database schema and are an alternative to creating lots of sql scripts that have to be run manually by every developer involved. Migrations solve the problem of evolving a database schema for multiple databases (for example, the developer's local database, the test database and the production database). Database schema changes are described in classes written in C# that can be checked into a version control system. How to use it Database-agnostic migrations: Quickstart Database-specific migrations: SQL Server Extensions Postgres Extensions Frequently Asked Questions FluentMigrator Comparison to Entity Framework Core Migrations What does it look like? This is an example of a database-agnostic migration: using FluentMigrator; namespace test { [Migration(20180430121800)] public class AddLogTable : Migration { public override void Up() { Create.Table(\"Log\") .WithColumn(\"Id\").AsInt64().PrimaryKey().Identity() .WithColumn(\"Text\").AsString(); } public override void Down() { Delete.Table(\"Log\"); } } } Current Release Release Notes Upgrade guides 3.1 to 3.2 3.0 to 3.1 2.x to 3.0 Supported databases For the current release these are the supported databases: Database Identifier Alternative identifier(s) Microsoft SQL Server 2019 SqlServer2016 (1) SqlServer Microsoft SQL Server 2017 SqlServer2016 (2) SqlServer Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition (3) SqlServerCe SqlServer PostgreSQL Postgres PostgreSQL PostgreSQL 9.2 Postgres92 PostgreSQL92 PostgreSQL 10.0 PostgreSQL10_0 PostgreSQL PostgreSQL 11.0 PostgreSQL11_0 PostgreSQL MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql, MariaDB Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere (4) SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 (1) All integration tests ran without error against an SQL Server 2019 using the SqlServer2016 dialect. (2) All integration tests ran without error against an SQL Server 2017 using the SqlServer2016 dialect. (3) Support for Microsoft SQL Server Compact Edition is being dropped due to Microsoft end-of-life support date passing. (4) Support for SAP SQL Anywhere is being dropped due to SAP not supporting a .NET Core / .NET 5 database driver. More Information on FluentMigrator FAQ Sean Chambers on the Herding Code podcast"
  },
  "README.html": {
    "href": "README.html",
    "title": "FluentMigrator documentation | FluentMigrator documentation",
    "keywords": "FluentMigrator documentation This is the FluentMigrator documentation created with the docfx tool. You can find the published version of the documentation on fluentmigrator.github.io . Build status:"
  }
}