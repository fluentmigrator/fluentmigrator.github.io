{
  "articles/runners/runner-console.html": {
    "href": "articles/runners/runner-console.html",
    "title": "Command Line Runner | FluentMigrator documentation",
    "keywords": "Command Line Runner Options Migrate.exe can be called with the following parameters. The first three parameters are required if running a migration. A lot of the parameters have more than one switch for the same parameter. If a parameter has an = sign after it, then it expects some text value to be set, otherwise it is just a boolean switch e.g. the preview parameter. When writing the command, the = sign is optional (e.g. --task=migrate or --task migrate ). Single dashes or double dashes is also optional e.g. -task or --task . Examples: Migrate.exe /conn \"Data Source=db\\db.sqlite;Version=3;\" /provider sqlite /assembly your.migrations.dll /verbose migrate --conn \"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" --provider sqlserver2008 --assembly \"..\\Migrations\\bin\\Debug\\Migrations.dll\" --task migrate --output --outputFilename migrated.sql migrate -c \"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" -db sqlserver2008 -a \"..\\Migrations\\bin\\Debug\\Migrations.dll\" -t migrate -o -of migrated.sql --assembly, -a, --target=VALUE (required) The assembly containing the migrations you want to execute. --provider, --dbtype, --db=VALUE (required) The kind of database you are migrating against. Available choices are: Database Identifier Alternative identifier(s) Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition SqlServerCe SqlServer PostgreSQL Postgres MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 --connectionString, --connection, --conn, -c=VALUE (required, can be a connectionStringName ) The connection string to the server and database you want to execute your migrations against. This can be a full connection string or the name of the connection string stored in a config file. When specifying a named connection string, FluentMigrator searchs for it in this order: The specified config file via --connectionStringConfigPath ](#cscp)` parameter Target assembly's config file Machine.config config file --connectionStringConfigPath, --configPath=VALUE The path of the config file where the connection string named by is found. This parameter is used together with the --connectionString parameter, the --connectionString parameter specifies the name of the connection string in the config file. If the config file looks like this: <?xml version=\"1.0\" encoding=\"utf-8\" ?> <configuration> <connectionStrings> <clear /> <add name=\"SRVConnectionString\" connectionString=\"server=SQLEXPRESS;uid=test;pwd=test;database=FluentMigrator\"/> </connectionStrings> </configuration> Then the --connectionString parameter should be set to SRVConnectionString. If not specified, it defaults to lookup order specified in the --connectionString parameter documentation. --task, -t=VALUE (optional) The task you want FluentMigrator to perform. Available choices are: migrate:up migrate (same as migrate:up) migrate:down (used in conjunction with the --version switch. Warning: if you don't supply --version this will revert all migrations) rollback (per default this rollbacks one step. Use the --steps switch to rollback more steps) rollback:toversion (used in conjuction with the --version switch. Will rollback all versions down to the specified version, not including the specified version. The Migration attribute contains the version that should be used with the --version switch.) rollback:all listmigrations Default is 'migrate'. --verbose=VALUE (optional) Show the SQL statements generated and execution time in the console. Default is false. This should be a boolean switch but is not. VALUE can be anything to set to true and the switch should not be specified to set it to false. For example, --verbose qwerty would set it to true. --output, --out, -o (optional) Output generated SQL to a file. Default is no output. Use outputFilename to control the filename, otherwise [assemblyname].sql is the default. This is a boolean switch so it does not take a value. --outputFilename, --outfile, --of=VALUE (optional) The name of the file to output the generated SQL to. The output option must be included for output to be saved to the file. --namespace, --ns=VALUE (optional) The namespace that contains the migrations you want to run. Default is all migrations found within the Target Assembly will be run. --nested (optional) Whether migrations in nested namespaces should be included. Used in conjunction with the namespace option. The default is false so that nested namespaces are not included. This is a boolean switch so it does not take a value. --steps=VALUE (optional) The number of versions to rollback if the task is 'rollback'. Default is 1. --preview, -p (optional) Only output the SQL generated by the migration - do not execute it. Default is false. This is a boolean switch so it does not take a value. --version=VALUE (optional) The specific version to migrate. Default is 0, which will run all migrations. The version of a migration is the unique identifier that is contained in the Migration attribute. For example, if a Migration has this attribute [Migration(201303062126)] then the version is 201303062126. --profile=VALUE (optional) The \"profile\":https://github.com/schambers/fluentmigrator/wiki/Profiles to run after executing migrations. --timeout=VALUE (optional) Overrides the default SqlCommand timeout of 30 seconds. --workingdirectory, --wd=VALUE (optional) The directory to load SQL scripts specified by migrations from. --tag=VALUE Filters migrations to be run based on tags. See Filter migrations run based on tags --context=VALUE A string argument that can be used in a migration. See ApplicationContext: Passing parameters to Migrations --transaction-per-session, --tps (optional) The default transaction is one transaction per migration so the default for this switch is false. Run migrations in one transaction per session (task) instead. This is a boolean switch so it does not take a value. --stopOnError Pauses migration execution until the user input if any error occured. Default is false. --allow-breaking-changes Allows execution of migrations marked as breaking changes. Default is false. --help, -h, -? Displays help menu. --providerswitches=VALUE Specify provider specific options, for instance: (Oracle) QUOTEDIDENTIFIERS=TRUE, which will quote identifiers always (Firebird) Force Quote=true, which will quote identifiers always"
  },
  "articles/runners/dotnet-fm.html": {
    "href": "articles/runners/dotnet-fm.html",
    "title": "dotnet-fm tool | FluentMigrator documentation",
    "keywords": "The dotnet-fm tool Installation dotnet tool install -g FluentMigrator.DotNet.Cli Running You can run the tool with dotnet fm or dotnet-fm . Use the latter version if the former doesn't work due to a .NET Core CLI tool bug. Command structure dotnet-fm -+- list -+- migrations = List all available migrations | +- processors = List all available processors +- migrate = Execute migrations | +- up = Execute migrations | +- down = Revert migrations +- rollback = Revert one migration | +- all = Revert all migrations | +- by = Revert <steps> migrations | +- to = Revert migrations down to <version> +- validate --- versions= Validate order of applied migrations list processors Shows all available processor identifiers to be used by the -p or --processor command line switch. Connection related commands The following commands need a processor id and/or a connection: dotnet-fm list migrations dotnet-fm migrate dotnet-fm rollback dotnet-fm validate -c|--connection <CONNECTION_STRING> The connection string itself to the server and database you want to execute your migrations against. --no-connection Indicates that migrations will be generated without consulting a target database. Should only be used when generating an output file. -p|--processor <PROCESSOR_NAME> The kind of database you are migrating against. Available choices can be shown with list processors . -s|--processor-switches <PROCESSOR_SWITCHES> Database processor specific switches, e.g.: Firebird: Force Quote=true Oracle: QUOTEDIDENTIFIERS=TRUE --preview Only output the SQL generated by the migration - do not execute it. Default is false. -V|--verbose Show the SQL statements generated and execution time in the console. Default is false. --profile <PROFILE> The profile to run after executing migrations. --context <CONTEXT> (obsolete) Set ApplicationContext to the given string. --timeout <TIMEOUT_SEC> Overrides the default database command timeout of 30 seconds. -o|--output=<FILENAME> Output generated SQL to a file. Default is no output. A filename may be specified, otherwise [targetAssemblyName].sql is the default. -a|--assembly <ASSEMBLY_NAME> The assemblies containing the migrations you want to execute. -n|--namespace <NAMESPACE> The namespace contains the migrations you want to run. Default is all migrations found within the Target Assembly will be run. --nested Whether migrations in nested namespaces should be included. Used in conjunction with the namespace option. --start-version The specific version to start migrating from. Only used when NoConnection is true. Default is 0. --working-directory <WORKING_DIRECTORY> The directory to load SQL scripts specified by migrations from. -t|--tag Filters the migrations to be run by tag. -b|--allow-breaking-changes Allows execution of migrations marked as breaking changes. rollback and migrate specific parameters -m|--transaction-mode <MODE> Overrides the transaction behavior of migrations, so that all migrations to be executed will run in one transaction. Allowed values are: Migration Session rollback all Reverts all migrations. rollback by <steps> Reverts the last <steps> migrations. rollback to <version> Reverts all migrations down to (and excluding) <version> . migrate up Applies the found migrations. -t|--target <TARGET_VERSION> The specific version to migrate to. migrate down Applies the found migrations. -t|--target <TARGET_VERSION> The specific version to revert to (exclusive). Examples Apply all migrations dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll Apply migrations up to given version dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a FluentMigrator.Example.Migrations.dll up -t 20090906205342"
  },
  "articles/obsolete/app-context.html": {
    "href": "articles/obsolete/app-context.html",
    "title": "ApplicationContext: Passing parameters to Migrations | FluentMigrator documentation",
    "keywords": "Caution The ApplicationContext is obsolete. Use dependency injection instead! Obsolete: ApplicationContext: Passing parameters to Migrations ApplicationContext is an object passed in by the Migration Runner that is available to migrations to be used as a switch. To set the ApplicationContext when running migrate.exe Run migrate.exe ... --context MyArgument . This will set the application context to the string MyArgument . To set the ApplicationContext when running migration in code Set migratorConsole.ApplicationContext to an arbitrary C# object, such as a string: migratorConsole.ApplicationContext = \"MyArgument\"; or when creating the RunnerContext : var migrationContext = new FluentMigrator.Runner.Initialization.RunnerContext(announcer) { ApplicationContext = \"MyArgument\" }; To use the ApplicationContext Inside your migration, you can access the context via this.ApplicationContext . So for instance: if ((string)this.ApplicationContext == \"MyArgument\") this.Delete.Column(\"BadColumn\").FromTable(\"MyTable\"); Alternative: DependencyInjection Just register your service and use it in your migration: interface IMyService { string MyStringData { get; } } class MyService : IMyService { public string MyStringData { get; set; } } static void Main() { var serviceProvider = new ServiceCollection() .AddFluentMigratorCore() // TODO: Configure database and connection .AddSingleton<IMyService>(new MyService() { MyStringData = \"MyArgument\" }) .BuildServiceProvider(); var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // TODO: Use the runner } [Migration(1234)] public class MyMigration : ForwardOnlyMigration { private readonly IMyService _service; public MyMigration(IMyService service) { _service = service; } public void Up() { if (_service.MyStringData == \"MyArgument\") Delete.Column(\"BadColumn\").FromTable(\"MyTable\"); } }"
  },
  "articles/migration/migration-transaction-behavior.html": {
    "href": "articles/migration/migration-transaction-behavior.html",
    "title": "Migration transaction behavior | FluentMigrator documentation",
    "keywords": "Transaction modes for the migration runner There are two modes, Transaction-Per-Session and Transaction-Per-Migration. The default mode for FluentMigrator is Transaction-Per-Migration. Transaction-Per-Migration This mode means that each migration is run in its own transaction and allows selected migrations to be run with no transaction. This allows migrations to be able to do tasks like creating full-text indexes which cannot be run in a transaction. This mode can be used in combination with the new TransactionBehavior attribute. [Migration(201304210958, TransactionBehavior.None)] For this migration it will be run outside of a transaction. The default value for TransactionBehavior is Default which means the migration will be run in a transaction. Transaction-Per-Session Up to this release, there has been one mode, Transaction-Per-Session. This means that if two migrations or more migrations are run together during the same task (e.g. migrate up or down) then this occurs in the same transaction and if one of the migrations fails then all the migrations are rolled back. Transaction-Per-Session is the old default and if you want to use this mode then there are switches for the Command-Line runner, MSBuild runner, or .NET CLI tool to enable it."
  },
  "articles/migration/migration-filter-tags.html": {
    "href": "articles/migration/migration-filter-tags.html",
    "title": "Fluent Interface | FluentMigrator documentation",
    "keywords": "Filter migrations run based on Tags Scenario: multiple database once had the same schema but over the years have had differences introduced. Because of this the majority of migrations, contained in one assembly, can be run against all the databases but at the same time you need to be able to filter certain migrations to run against specific databases based on the country (UK, DK, etc) and environment (Staging, Production, etc) it serves. To facilitate this you can tag migrations (much like cucumber scenarios) and then filter these by passing tags into the runner. A migration is then run if it has: No Tags OR Has Tags that match ALL those passed into the runner. Tags are assigned to migrations with an attribute/s: [Tags(\"DK\", \"NL\", \"UK\")] [Tags(\"Staging\", \"Production\")] [Migration(1)] public class DoSomeStuffToEuropeanStagingAndProdDbs : Migration { /* ... etc ... */ } Filtering IMigrationRunner Migrate.exe tool MSBuild task var serviceProvider = new ServiceCollection() .AddFluentMigratorCore() .ConfigureRunner(rb => rb .AddSqlServer2008() .WithGlobalConnectionString(\"server=.\\\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\") .WithMigrationsIn(typeof(DoSomeStuffToEuropeanStagingAndProdDbs).Assembly)) .AddLogging(lb => lb.AddFluentMigratorConsole()) // Start of type filter configuration .Configure<RunnerOptions>(opt => { opt.Tags = new[] { \"UK\", \"Production\" } }) .BuildServiceProvider(false); var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); runner.MigrateUp(); And the tags are entered into the command line like so: (Migrations with UK AND Production tags executed) --tag UK --tag Production For the Msbuild runner, there is a Tags option and tags are passed in as a comma-separated string. <Migrate Database=\"sqlserver2008\" Connection=\"server=.\\SQLEXPRESS;uid=testfm;pwd=test;Trusted_Connection=yes;database=FluentMigrator\" Target=\"Migrations\" Tags=\"UK,Production\" />"
  },
  "articles/migration/migration-auto-reversing.html": {
    "href": "articles/migration/migration-auto-reversing.html",
    "title": "Auto-reversing migrations | FluentMigrator documentation",
    "keywords": "Auth-reversing migrations Auto reversing migrations are migrations that only contain an up command and FluentMigrator figures out the down command. Create a migration class that inherits from AutoReversingMigration (instead of Migration ) to use this feature. [Migration(201207080104)] public class RenameTableWithSchema : AutoReversingMigration { public override void Up() { Rename.Table(\"TestTable2\").InSchema(\"TestSchema\").To(\"TestTable'3\"); } } FluentMigrator can automatically figure out the down command and revert the rename. However, not all expressions are supported for auto reversing. For example, using the Execute expression to execute an sql script is impossible to reverse. Expressions that are currently supported for auto reversing are: Create.Table Create.Column Create.Index Create.ForeignKey Create.Schema Delete.ForeignKey Rename.Table Rename.Column"
  },
  "articles/migration/migration-attribute-custom.html": {
    "href": "articles/migration/migration-attribute-custom.html",
    "title": "Enforcing migration version numbering rules | FluentMigrator documentation",
    "keywords": "Enforcing migration version numbering rules Frequently, it is useful for a project to employ a specific system for migration version numbering. A useful technique for simplifying and encoding this system is with a custom attribute that inherits from MigrationAttribute . An example is below. This uses a system where the migration version is of the format BBYYYYMMDDHHMM, where BB is a branch, YYYY is year, MM is month, and so on. /// <summary> /// Mark all migrations with this INSTEAD of [Migration]. /// </summary> public class MyCustomMigrationAttribute : FluentMigrator.MigrationAttribute { public MyCustomMigrationAttribute(int branchNumber, int year, int month, int day, int hour, int minute, string author) : base(CalculateValue(branchNumber, year, month, day, hour, minute)) { this.Author = author; } public string Author { get; private set; } private static long CalculateValue(int branchNumber, int year, int month, int day, int hour, int minute) { return branchNumber * 1000000000000L + year * 100000000L + month * 1000000L + day * 10000L + hour * 100L + minute; } } A migration class that uses this attribute might look like this: [MyCustomMigration(author: \"Scott Stafford\", branchNumber: 12, year: 2012, month: 8, day: 7, hour: 14, minute: 01)] public class TestLcmpMigration : Migration { public override void Down() { /* ... */ } public override void Up() { /* ... */ } }"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014ProcessorFactory.html",
    "title": "Class SqlServer2014ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2014ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2014ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2014ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012Processor.html",
    "title": "Class SqlServer2012Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2012Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2012Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012Processor : SqlServerProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2012Processor(ILogger<SqlServer2012Processor>, SqlServer2008Quoter, SqlServer2012Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2012Processor([NotNull] ILogger<SqlServer2012Processor> logger, [NotNull] SqlServer2008Quoter quoter, [NotNull] SqlServer2012Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2012Processor > logger SqlServer2008Quoter quoter SqlServer2012Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008ProcessorFactory.html",
    "title": "Class SqlServer2008ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2008ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2008ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2008ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessor.html",
    "title": "Class RedshiftProcessor | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessor Inheritance Object ProcessorBase GenericProcessorBase RedshiftProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source RedshiftProcessor(RedshiftDbFactory, RedshiftGenerator, ILogger<RedshiftProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public RedshiftProcessor([NotNull] RedshiftDbFactory factory, [NotNull] RedshiftGenerator generator, [NotNull] ILogger<RedshiftProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description RedshiftDbFactory factory RedshiftGenerator generator ILogger < RedshiftProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source RedshiftProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public RedshiftProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Redshift.RedshiftDbFactory.html",
    "title": "Class RedshiftDbFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory RedshiftDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source RedshiftDbFactory() Declaration [Obsolete] public RedshiftDbFactory() | Improve this Doc View Source RedshiftDbFactory(IServiceProvider) Declaration public RedshiftDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.ProcessorOptions.html": {
    "href": "api/FluentMigrator.Runner.Processors.ProcessorOptions.html",
    "title": "Class ProcessorOptions | FluentMigrator documentation",
    "keywords": "Class ProcessorOptions Options for an IMigrationProcessor Inheritance Object ProcessorOptions Implements IMigrationProcessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class ProcessorOptions : IMigrationProcessorOptions Constructors | Improve this Doc View Source ProcessorOptions() Initializes a new instance of the ProcessorOptions class. Declaration public ProcessorOptions() | Improve this Doc View Source ProcessorOptions(IRunnerContext) Initializes a new instance of the ProcessorOptions class. Declaration [Obsolete] public ProcessorOptions(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context to get the values from Properties | Improve this Doc View Source ConnectionString Gets or sets the connection string (will not be used when PreviewOnly is active) Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source PreviewOnly Gets or sets a value indicating whether a preview-only mode is active Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ProviderSwitches Gets or sets the provider switches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String | Improve this Doc View Source Timeout Gets or sets the default command timeout Declaration public TimeSpan? Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Methods | Improve this Doc View Source SetValuesFrom(IRunnerContext) Sets the values from the given runner context Declaration [Obsolete] public void SetValuesFrom(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessorOptions.Timeout Gets the global timeout Declaration int? IMigrationProcessorOptions.Timeout { get; } Returns Type Description Nullable < Int32 > Implements IMigrationProcessorOptions"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessorBase.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessorBase.html",
    "title": "Class OracleProcessorBase | FluentMigrator documentation",
    "keywords": "Class OracleProcessorBase Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleManagedProcessor OracleProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessorBase : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source OracleProcessorBase(String, OracleBaseDbFactory, IMigrationGenerator, ILogger, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration protected OracleProcessorBase([NotNull] string databaseType, [NotNull] OracleBaseDbFactory factory, [NotNull] IMigrationGenerator generator, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description String databaseType OracleBaseDbFactory factory IMigrationGenerator generator ILogger logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source OracleProcessorBase(String, IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] protected OracleProcessorBase([NotNull] string databaseType, IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description String databaseType IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessor.html",
    "title": "Class OracleProcessor | FluentMigrator documentation",
    "keywords": "Class OracleProcessor Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members OracleProcessorBase.DatabaseType OracleProcessorBase.DatabaseTypeAliases OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleProcessor : OracleProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source OracleProcessor(OracleDbFactory, OracleGenerator, ILogger<OracleProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public OracleProcessor([NotNull] OracleDbFactory factory, [NotNull] OracleGenerator generator, [NotNull] ILogger<OracleProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleDbFactory factory OracleGenerator generator ILogger < OracleProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source OracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public OracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessorFactory.html",
    "title": "Class OracleManagedProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedProcessorFactory Inheritance Object MigrationProcessorFactory OracleManagedProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class OracleManagedProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source OracleManagedProcessorFactory() Declaration [Obsolete] public OracleManagedProcessorFactory() | Improve this Doc View Source OracleManagedProcessorFactory(IServiceProvider) Declaration public OracleManagedProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2012Generator.html",
    "title": "Class SqlServer2012Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2012Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator Implements IMigrationGenerator Inherited Members SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2012Generator : SqlServer2008Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2012Generator() Declaration public SqlServer2012Generator() | Improve this Doc View Source SqlServer2012Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2012Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2012Generator(SqlServer2008Quoter) Declaration public SqlServer2012Generator([NotNull] SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2012Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2012Generator([NotNull] SqlServer2008Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteSequenceExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Quoter.html",
    "title": "Class SqlServer2008Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2005Quoter.QuoteSchemaName(String) SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Quoter : SqlServer2005Quoter, IQuoter Methods | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides SqlServer2000Quoter.FormatSystemMethods(SystemMethods) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Generator.html",
    "title": "Class SqlServer2005Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator Implements IMigrationGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Generator : SqlServer2000Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2005Generator() Declaration public SqlServer2005Generator() | Improve this Doc View Source SqlServer2005Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2005Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2005Generator(SqlServer2005Quoter) Declaration public SqlServer2005Generator([NotNull] SqlServer2005Quoter quoter) Parameters Type Name Description SqlServer2005Quoter quoter | Improve this Doc View Source SqlServer2005Generator(SqlServer2005Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2005Generator([NotNull] SqlServer2005Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2005Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides SqlServer2000Generator.AddColumn | Improve this Doc View Source CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint | Improve this Doc View Source CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex | Improve this Doc View Source CreateSchema Declaration public override string CreateSchema { get; } Property Value Type Description String Overrides GenericGenerator.CreateSchema | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides SqlServer2000Generator.DropIndex | Improve this Doc View Source IdentityInsert Declaration public override string IdentityInsert { get; } Property Value Type Description String Overrides SqlServer2000Generator.IdentityInsert Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source GetIncludeString(CreateIndexExpression) Declaration public virtual string GetIncludeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetWithOptions(ISupportAdditionalFeatures) Declaration public virtual string GetWithOptions(ISupportAdditionalFeatures expression) Parameters Type Name Description ISupportAdditionalFeatures expression Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2000Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005DescriptionGenerator.html",
    "title": "Class SqlServer2005DescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServer2005DescriptionGenerator Inheritance Object GenericDescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005DescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public override string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public override string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Generator.html",
    "title": "Class SqlServer2000Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServerCeGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Generator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2000Generator() Declaration public SqlServer2000Generator() | Improve this Doc View Source SqlServer2000Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2000Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2000Generator(SqlServer2000Quoter) Declaration public SqlServer2000Generator([NotNull] SqlServer2000Quoter quoter) Parameters Type Name Description SqlServer2000Quoter quoter | Improve this Doc View Source SqlServer2000Generator(SqlServer2000Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2000Generator([NotNull] SqlServer2000Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2000Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex | Improve this Doc View Source IdentityInsert Declaration public virtual string IdentityInsert { get; } Property Value Type Description String | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source BuildDelete(DeleteColumnExpression, String, StringBuilder) Declaration protected virtual void BuildDelete(DeleteColumnExpression expression, string columnName, StringBuilder builder) Parameters Type Name Description DeleteColumnExpression expression String columnName StringBuilder builder | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String Overrides GenericGenerator.GetClusterTypeString(CreateIndexExpression) | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected virtual string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) | Improve this Doc View Source IsUsingIdentityInsert(InsertDataExpression) Declaration protected static bool IsUsingIdentityInsert(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlAnywhere.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlAnywhere Classes SqlAnywhere16Generator SqlAnywhere16TypeMap SqlAnywhereQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhereQuoter.html",
    "title": "Class SqlAnywhereQuoter | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereQuoter Inheritance Object GenericQuoter SqlAnywhereQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html": {
    "href": "api/FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.html",
    "title": "Class ProcessorFactoryNotFoundException | FluentMigrator documentation",
    "keywords": "Class ProcessorFactoryNotFoundException Exception that gets thrown when a processor factory couldn't be found Inheritance Object Exception FluentMigratorException ProcessorFactoryNotFoundException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class ProcessorFactoryNotFoundException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source ProcessorFactoryNotFoundException() Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException() | Improve this Doc View Source ProcessorFactoryNotFoundException(SerializationInfo, StreamingContext) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source ProcessorFactoryNotFoundException(String) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source ProcessorFactoryNotFoundException(String, Exception) Initializes a new instance of the ProcessorFactoryNotFoundException class. Declaration public ProcessorFactoryNotFoundException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.AutoScriptMigration.html": {
    "href": "api/FluentMigrator.AutoScriptMigration.html",
    "title": "Class AutoScriptMigration | FluentMigrator documentation",
    "keywords": "Class AutoScriptMigration Migration that automatically uses embedded SQL scripts depending on the database type name Inheritance Object MigrationBase AutoScriptMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoScriptMigration : MigrationBase, IMigration Remarks The embedded SQL scripts must end in Scripts.{Direction}.{Version} {DerivedTypeName} {DatabaseType}.sql . The {Direction} can be Up or Down . The {Version} is the migration version. The {DerivedTypeName} is the name of the type derived from AutoScriptMigration . The {DatabaseType} is the database type name. For SQL Server 2016, the variants SqlServer2016 , SqlServer , and Generic will be tested. The behavior may be overriden by providing a custom FluentMigrator.Runner.Conventions.IAutoNameConvention . Constructors | Improve this Doc View Source AutoScriptMigration() Declaration [Obsolete] protected AutoScriptMigration() | Improve this Doc View Source AutoScriptMigration(IEmbeddedResourceProvider) Declaration protected AutoScriptMigration([NotNull] IEmbeddedResourceProvider embeddedResourceProvider) Parameters Type Name Description IEmbeddedResourceProvider embeddedResourceProvider Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public override sealed void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Collect the UP migration expressions Declaration public override sealed void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedProcessor.html",
    "title": "Class OracleManagedProcessor | FluentMigrator documentation",
    "keywords": "Class OracleManagedProcessor Inheritance Object ProcessorBase GenericProcessorBase OracleProcessorBase OracleManagedProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members OracleProcessorBase.DatabaseType OracleProcessorBase.DatabaseTypeAliases OracleProcessorBase.Quoter OracleProcessorBase.SchemaExists(String) OracleProcessorBase.TableExists(String, String) OracleProcessorBase.ColumnExists(String, String, String) OracleProcessorBase.ConstraintExists(String, String, String) OracleProcessorBase.IndexExists(String, String, String) OracleProcessorBase.SequenceExists(String, String) OracleProcessorBase.DefaultValueExists(String, String, String, Object) OracleProcessorBase.Execute(String, Object[]) OracleProcessorBase.Exists(String, Object[]) OracleProcessorBase.ReadTableData(String, String) OracleProcessorBase.Read(String, Object[]) OracleProcessorBase.Process(PerformDBOperationExpression) OracleProcessorBase.Process(String) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedProcessor : OracleProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source OracleManagedProcessor(OracleManagedDbFactory, OracleGenerator, ILogger<OracleManagedProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public OracleManagedProcessor([NotNull] OracleManagedDbFactory factory, [NotNull] OracleGenerator generator, [NotNull] ILogger<OracleManagedProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description OracleManagedDbFactory factory OracleGenerator generator ILogger < OracleManagedProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleManagedDbFactory.html",
    "title": "Class OracleManagedDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleManagedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleManagedDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleManagedDbFactory : OracleBaseDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleManagedDbFactory() Declaration [Obsolete] public OracleManagedDbFactory() | Improve this Doc View Source OracleManagedDbFactory(IServiceProvider) Declaration public OracleManagedDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleDbFactory.html",
    "title": "Class OracleDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDbFactory : OracleBaseDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleDbFactory() Declaration [Obsolete] public OracleDbFactory() | Improve this Doc View Source OracleDbFactory(IServiceProvider) Declaration public OracleDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleBaseDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleBaseDbFactory.html",
    "title": "Class OracleBaseDbFactory | FluentMigrator documentation",
    "keywords": "Class OracleBaseDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory OracleBaseDbFactory OracleDbFactory OracleManagedDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleBaseDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source OracleBaseDbFactory(IServiceProvider, ReflectionBasedDbFactory.TestEntry[]) Declaration protected OracleBaseDbFactory(IServiceProvider serviceProvider, params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description IServiceProvider serviceProvider ReflectionBasedDbFactory.TestEntry [] testEntries Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.MySql.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Processors.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.MySql Classes MySql4Processor MySql4ProcessorFactory MySql5Processor MySql5ProcessorFactory MySqlDbFactory MySqlProcessor"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySqlProcessor.html",
    "title": "Class MySqlProcessor | FluentMigrator documentation",
    "keywords": "Class MySqlProcessor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql4Processor MySql5Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source MySqlProcessor(MySqlDbFactory, IMigrationGenerator, ILogger<MySqlProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration protected MySqlProcessor([NotNull] MySqlDbFactory factory, [NotNull] IMigrationGenerator generator, [NotNull] ILogger<MySqlProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory IMigrationGenerator generator ILogger < MySqlProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source MySqlProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public MySqlProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(RenameColumnExpression) Declaration public override void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Overrides ProcessorBase.Process(RenameColumnExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySqlDbFactory.html",
    "title": "Class MySqlDbFactory | FluentMigrator documentation",
    "keywords": "Class MySqlDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory MySqlDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source MySqlDbFactory() Declaration [Obsolete] public MySqlDbFactory() | Improve this Doc View Source MySqlDbFactory(IServiceProvider) Declaration public MySqlDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySql5ProcessorFactory.html",
    "title": "Class MySql5ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql5ProcessorFactory Inheritance Object MigrationProcessorFactory MySql5ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax [Obsolete] public class MySql5ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source MySql5ProcessorFactory() Declaration [Obsolete] public MySql5ProcessorFactory() | Improve this Doc View Source MySql5ProcessorFactory(IServiceProvider) Declaration public MySql5ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySql5Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySql5Processor.html",
    "title": "Class MySql5Processor | FluentMigrator documentation",
    "keywords": "Class MySql5Processor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql5Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members MySqlProcessor.DatabaseType MySqlProcessor.DatabaseTypeAliases MySqlProcessor.SchemaExists(String) MySqlProcessor.TableExists(String, String) MySqlProcessor.ColumnExists(String, String, String) MySqlProcessor.ConstraintExists(String, String, String) MySqlProcessor.IndexExists(String, String, String) MySqlProcessor.SequenceExists(String, String) MySqlProcessor.DefaultValueExists(String, String, String, Object) MySqlProcessor.Execute(String, Object[]) MySqlProcessor.Exists(String, Object[]) MySqlProcessor.ReadTableData(String, String) MySqlProcessor.Read(String, Object[]) MySqlProcessor.Process(String) MySqlProcessor.Process(PerformDBOperationExpression) MySqlProcessor.Process(RenameColumnExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5Processor : MySqlProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source MySql5Processor(MySqlDbFactory, MySql5Generator, ILogger<MySql5Processor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public MySql5Processor([NotNull] MySqlDbFactory factory, [NotNull] MySql5Generator generator, [NotNull] ILogger<MySql5Processor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory MySql5Generator generator ILogger < MySql5Processor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySql4ProcessorFactory.html",
    "title": "Class MySql4ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MySql4ProcessorFactory Inheritance Object MigrationProcessorFactory MySql4ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax [Obsolete] public class MySql4ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source MySql4ProcessorFactory() Declaration [Obsolete] public MySql4ProcessorFactory() | Improve this Doc View Source MySql4ProcessorFactory(IServiceProvider) Declaration public MySql4ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.MySql.MySql4Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.MySql.MySql4Processor.html",
    "title": "Class MySql4Processor | FluentMigrator documentation",
    "keywords": "Class MySql4Processor Inheritance Object ProcessorBase GenericProcessorBase MySqlProcessor MySql4Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members MySqlProcessor.DatabaseType MySqlProcessor.DatabaseTypeAliases MySqlProcessor.SchemaExists(String) MySqlProcessor.TableExists(String, String) MySqlProcessor.ColumnExists(String, String, String) MySqlProcessor.ConstraintExists(String, String, String) MySqlProcessor.IndexExists(String, String, String) MySqlProcessor.SequenceExists(String, String) MySqlProcessor.DefaultValueExists(String, String, String, Object) MySqlProcessor.Execute(String, Object[]) MySqlProcessor.Exists(String, Object[]) MySqlProcessor.ReadTableData(String, String) MySqlProcessor.Read(String, Object[]) MySqlProcessor.Process(String) MySqlProcessor.Process(PerformDBOperationExpression) MySqlProcessor.Process(RenameColumnExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4Processor : MySqlProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source MySql4Processor(MySqlDbFactory, MySql4Generator, ILogger<MySql4Processor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public MySql4Processor([NotNull] MySqlDbFactory factory, [NotNull] MySql4Generator generator, [NotNull] ILogger<MySql4Processor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description MySqlDbFactory factory MySql4Generator generator ILogger < MySql4Processor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html": {
    "href": "api/FluentMigrator.Runner.Processors.MigrationProcessorFactoryProvider.html",
    "title": "Class MigrationProcessorFactoryProvider | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactoryProvider Inheritance Object MigrationProcessorFactoryProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class MigrationProcessorFactoryProvider Constructors | Improve this Doc View Source MigrationProcessorFactoryProvider() Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public MigrationProcessorFactoryProvider() Properties | Improve this Doc View Source ProcessorTypes Declaration public static IEnumerable<string> ProcessorTypes { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source RegisteredFactories Declaration public static IEnumerable<IMigrationProcessorFactory> RegisteredFactories { get; } Property Value Type Description IEnumerable < IMigrationProcessorFactory > Methods | Improve this Doc View Source GetFactory(String) Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public virtual IMigrationProcessorFactory GetFactory(string name) Parameters Type Name Description String name Returns Type Description IMigrationProcessorFactory | Improve this Doc View Source ListAvailableProcessorTypes() Declaration [Obsolete] public string ListAvailableProcessorTypes() Returns Type Description String | Improve this Doc View Source Register(IMigrationProcessorFactory) Declaration public static void Register(IMigrationProcessorFactory factory) Parameters Type Name Description IMigrationProcessorFactory factory"
  },
  "api/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.MigrationProcessorFactory.html",
    "title": "Class MigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Db2ISeriesProcessorFactory DotConnectOracleProcessorFactory FirebirdProcessorFactory HanaProcessorFactory JetProcessorFactory MySql4ProcessorFactory MySql5ProcessorFactory OracleManagedProcessorFactory OracleProcessorFactory PostgresProcessorFactory RedshiftProcessorFactory SqlAnywhere16ProcessorFactory SQLiteProcessorFactory SqlServer2000ProcessorFactory SqlServer2005ProcessorFactory SqlServer2008ProcessorFactory SqlServer2012ProcessorFactory SqlServer2014ProcessorFactory SqlServer2016ProcessorFactory SqlServerCeProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public abstract class MigrationProcessorFactory : IMigrationProcessorFactory Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public abstract IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public virtual bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Jet.html": {
    "href": "api/FluentMigrator.Runner.Processors.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Jet Classes JetProcessor JetProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Jet.JetProcessorFactory.html",
    "title": "Class JetProcessorFactory | FluentMigrator documentation",
    "keywords": "Class JetProcessorFactory Inheritance Object MigrationProcessorFactory JetProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax [Obsolete] public class JetProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Jet.JetProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Jet.JetProcessor.html",
    "title": "Class JetProcessor | FluentMigrator documentation",
    "keywords": "Class JetProcessor Inheritance Object ProcessorBase JetProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetProcessor : ProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source JetProcessor(JetGenerator, ILogger<JetProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public JetProcessor([NotNull] JetGenerator generator, [NotNull] ILogger<JetProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description JetGenerator generator ILogger < JetProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source JetProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public JetProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options Properties | Improve this Doc View Source Connection Declaration public OleDbConnection Connection { get; } Property Value Type Description OleDbConnection | Improve this Doc View Source ConnectionString Declaration [Obsolete] public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Transaction Declaration public OleDbTransaction Transaction { get; } Property Value Type Description OleDbTransaction Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) | Improve this Doc View Source EnsureConnectionIsClosed() Declaration protected void EnsureConnectionIsClosed() | Improve this Doc View Source EnsureConnectionIsOpen() Declaration protected void EnsureConnectionIsOpen() | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessorFactory.html",
    "title": "Class FirebirdProcessorFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessorFactory Inheritance Object MigrationProcessorFactory FirebirdProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax [Obsolete] public class FirebirdProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source FirebirdProcessorFactory() Declaration [Obsolete] public FirebirdProcessorFactory() | Improve this Doc View Source FirebirdProcessorFactory(FirebirdOptions) Declaration [Obsolete] public FirebirdProcessorFactory(FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions | Improve this Doc View Source FirebirdProcessorFactory(IServiceProvider, IOptions<FirebirdOptions>) Declaration public FirebirdProcessorFactory(IServiceProvider serviceProvider, IOptions<FirebirdOptions> fbOptions = null) Parameters Type Name Description IServiceProvider serviceProvider IOptions < FirebirdOptions > fbOptions Properties | Improve this Doc View Source FbOptions Declaration public FirebirdOptions FbOptions { get; set; } Property Value Type Description FirebirdOptions Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdProcessor.html",
    "title": "Class FirebirdProcessor | FluentMigrator documentation",
    "keywords": "Class FirebirdProcessor Inheritance Object ProcessorBase GenericProcessorBase FirebirdProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source FirebirdProcessor(FirebirdDbFactory, FirebirdGenerator, FirebirdQuoter, ILogger<FirebirdProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor, FirebirdOptions) Declaration public FirebirdProcessor([NotNull] FirebirdDbFactory factory, [NotNull] FirebirdGenerator generator, [NotNull] FirebirdQuoter quoter, [NotNull] ILogger<FirebirdProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] FirebirdOptions fbOptions) Parameters Type Name Description FirebirdDbFactory factory FirebirdGenerator generator FirebirdQuoter quoter ILogger < FirebirdProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor FirebirdOptions fbOptions | Improve this Doc View Source FirebirdProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory, FirebirdOptions) Declaration [Obsolete] public FirebirdProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory, FirebirdOptions fbOptions) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory FirebirdOptions fbOptions Fields | Improve this Doc View Source DDLCreatedColumns Declaration protected Dictionary<string, List<string>> DDLCreatedColumns Field Value Type Description Dictionary < String , List < String >> | Improve this Doc View Source DDLCreatedTables Declaration protected List<string> DDLCreatedTables Field Value Type Description List < String > | Improve this Doc View Source DDLTouchedColumns Declaration protected Dictionary<string, List<string>> DDLTouchedColumns Field Value Type Description Dictionary < String , List < String >> | Improve this Doc View Source DDLTouchedTables Declaration protected List<string> DDLTouchedTables Field Value Type Description List < String > | Improve this Doc View Source truncator Declaration [Obsolete(\"Use the Truncator property\")] protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties | Improve this Doc View Source Announcer Declaration [Obsolete] public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source FBOptions Declaration public FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions | Improve this Doc View Source Generator Declaration public IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator | Improve this Doc View Source IsFirebird3 Declaration public bool IsFirebird3 { get; } Property Value Type Description Boolean | Improve this Doc View Source Truncator Declaration public FirebirdTruncator Truncator { get; } Property Value Type Description FirebirdTruncator Methods | Improve this Doc View Source AutoCommit() Declaration public virtual void AutoCommit() | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source CheckColumn(String, IEnumerable<String>) Declaration public void CheckColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns | Improve this Doc View Source CheckColumn(String, String) Declaration public void CheckColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source CheckTable(String) Declaration public void CheckTable(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source ClearDDLFollowers() Declaration protected void ClearDDLFollowers() | Improve this Doc View Source ClearLocks() Declaration protected void ClearLocks() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitRetaining() Declaration public virtual void CommitRetaining() | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source CreateTriggerExpression(String, TriggerInfo) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, TriggerInfo trigger) Parameters Type Name Description String tableName TriggerInfo trigger Returns Type Description PerformDBOperationExpression | Improve this Doc View Source CreateTriggerExpression(String, String, Boolean, TriggerEvent, String) Declaration public PerformDBOperationExpression CreateTriggerExpression(string tableName, string triggerName, bool onBefore, TriggerEvent onEvent, string triggerBody) Parameters Type Name Description String tableName String triggerName Boolean onBefore TriggerEvent onEvent String triggerBody Returns Type Description PerformDBOperationExpression | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source DeleteTriggerExpression(String, String) Declaration public PerformDBOperationExpression DeleteTriggerExpression(string tableName, string triggerName) Parameters Type Name Description String tableName String triggerName Returns Type Description PerformDBOperationExpression | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source InternalProcess(String) Declaration protected void InternalProcess(string sql) Parameters Type Name Description String sql | Improve this Doc View Source IsColumnCreated(String, String) Declaration protected bool IsColumnCreated(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source IsRunningOutOfMigrationScope() Declaration public bool IsRunningOutOfMigrationScope() Returns Type Description Boolean | Improve this Doc View Source IsTableCreated(String) Declaration protected bool IsTableCreated(string tableName) Parameters Type Name Description String tableName Returns Type Description Boolean | Improve this Doc View Source LockColumn(String, IEnumerable<String>) Declaration public void LockColumn(string tableName, IEnumerable<string> columns) Parameters Type Name Description String tableName IEnumerable < String > columns | Improve this Doc View Source LockColumn(String, String) Declaration public void LockColumn(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source LockTable(String) Declaration public void LockTable(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source Process(AlterColumnExpression) Declaration public override void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Overrides ProcessorBase.Process(AlterColumnExpression) | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public override void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Overrides ProcessorBase.Process(AlterDefaultConstraintExpression) | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public override void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Overrides ProcessorBase.Process(AlterSchemaExpression) | Improve this Doc View Source Process(AlterTableExpression) Declaration public override void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Overrides ProcessorBase.Process(AlterTableExpression) | Improve this Doc View Source Process(CreateColumnExpression) Declaration public override void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Overrides ProcessorBase.Process(CreateColumnExpression) | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public override void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Overrides ProcessorBase.Process(CreateConstraintExpression) | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public override void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Overrides ProcessorBase.Process(CreateForeignKeyExpression) | Improve this Doc View Source Process(CreateIndexExpression) Declaration public override void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Overrides ProcessorBase.Process(CreateIndexExpression) | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Overrides ProcessorBase.Process(CreateSchemaExpression) | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public override void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Overrides ProcessorBase.Process(CreateSequenceExpression) | Improve this Doc View Source Process(CreateTableExpression) Declaration public override void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Overrides ProcessorBase.Process(CreateTableExpression) | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public override void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Overrides ProcessorBase.Process(DeleteColumnExpression) | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public override void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Overrides ProcessorBase.Process(DeleteConstraintExpression) | Improve this Doc View Source Process(DeleteDataExpression) Declaration public override void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Overrides ProcessorBase.Process(DeleteDataExpression) | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public override void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Overrides ProcessorBase.Process(DeleteDefaultConstraintExpression) | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public override void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Overrides ProcessorBase.Process(DeleteForeignKeyExpression) | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public override void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Overrides ProcessorBase.Process(DeleteIndexExpression) | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public override void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Overrides ProcessorBase.Process(DeleteSchemaExpression) | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public override void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Overrides ProcessorBase.Process(DeleteSequenceExpression) | Improve this Doc View Source Process(DeleteTableExpression) Declaration public override void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Overrides ProcessorBase.Process(DeleteTableExpression) | Improve this Doc View Source Process(InsertDataExpression) Declaration public override void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Overrides ProcessorBase.Process(InsertDataExpression) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(RenameColumnExpression) Declaration public override void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Overrides ProcessorBase.Process(RenameColumnExpression) | Improve this Doc View Source Process(RenameTableExpression) Declaration public override void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Overrides ProcessorBase.Process(RenameTableExpression) | Improve this Doc View Source Process(UpdateDataExpression) Declaration public override void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Overrides ProcessorBase.Process(UpdateDataExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RegisterColumnCreation(String, String) Declaration protected void RegisterColumnCreation(string tableName, string columnName) Parameters Type Name Description String tableName String columnName | Improve this Doc View Source RegisterTableCreation(String) Declaration protected void RegisterTableCreation(string tableName) Parameters Type Name Description String tableName | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) | Improve this Doc View Source TriggerExists(String, String, String) Declaration public virtual bool TriggerExists(string schemaName, string tableName, string triggerName) Parameters Type Name Description String schemaName String tableName String triggerName Returns Type Description Boolean Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdOptions.html",
    "title": "Class FirebirdOptions | FluentMigrator documentation",
    "keywords": "Class FirebirdOptions Inheritance Object FirebirdOptions Implements ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdOptions : ICloneable Constructors | Improve this Doc View Source FirebirdOptions() Declaration public FirebirdOptions() Fields | Improve this Doc View Source MaxNameLength Maximum internal length of names in firebird is 31 characters Declaration public static readonly int MaxNameLength Field Value Type Description Int32 Properties | Improve this Doc View Source ForceQuote Gets or sets a value indicating whether all names should be quoted unconditionally. Declaration public bool ForceQuote { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PackKeyNames Declaration public bool PackKeyNames { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TransactionModel Which transaction model to use if any to work around firebird's DDL restrictions Declaration public FirebirdTransactionModel TransactionModel { get; set; } Property Value Type Description FirebirdTransactionModel | Improve this Doc View Source TruncateLongNames Firebird only supports constraint, table, column, etc. names up to 31 characters Declaration public bool TruncateLongNames { get; set; } Property Value Type Description Boolean | Improve this Doc View Source VirtualLock Virtually lock tables and columns touched by DDL statements in a transaction Declaration public bool VirtualLock { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProviderSwitches(String) Declaration public FirebirdOptions ApplyProviderSwitches(string providerSwitches) Parameters Type Name Description String providerSwitches Returns Type Description FirebirdOptions | Improve this Doc View Source AutoCommitBehaviour() Declaration public static FirebirdOptions AutoCommitBehaviour() Returns Type Description FirebirdOptions | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CommitOnCheckFailBehaviour() Declaration public static FirebirdOptions CommitOnCheckFailBehaviour() Returns Type Description FirebirdOptions | Improve this Doc View Source StandardBehaviour() Declaration public static FirebirdOptions StandardBehaviour() Returns Type Description FirebirdOptions Implements System.ICloneable"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdIdentifierComparer.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdIdentifierComparer.html",
    "title": "Class FirebirdIdentifierComparer | FluentMigrator documentation",
    "keywords": "Class FirebirdIdentifierComparer A custom IEqualityComparer<T> for Firebird identifiers Inheritance Object FirebirdIdentifierComparer Implements IEqualityComparer < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdIdentifierComparer : IEqualityComparer<string> Constructors | Improve this Doc View Source FirebirdIdentifierComparer(IQuoter) Initializes a new instance of the FirebirdIdentifierComparer class. Declaration public FirebirdIdentifierComparer(IQuoter quoter) Parameters Type Name Description IQuoter quoter The quoted used to unquote the quoted identifiers Methods | Improve this Doc View Source Equals(String, String) Declaration public bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean | Improve this Doc View Source GetHashCode(String) Declaration public int GetHashCode(string obj) Parameters Type Name Description String obj Returns Type Description Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdDbFactory.html",
    "title": "Class FirebirdDbFactory | FluentMigrator documentation",
    "keywords": "Class FirebirdDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory FirebirdDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source FirebirdDbFactory() Declaration [Obsolete] public FirebirdDbFactory() | Improve this Doc View Source FirebirdDbFactory(IServiceProvider) Declaration public FirebirdDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdDDLLockTracker.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdDDLLockTracker.html",
    "title": "Class FirebirdDDLLockTracker | FluentMigrator documentation",
    "keywords": "Class FirebirdDDLLockTracker Tracks virtual locks caused by DDL statements Inheritance Object FirebirdDDLLockTracker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdDDLLockTracker Constructors | Improve this Doc View Source FirebirdDDLLockTracker(IQuoter) Initializes a new instance of the FirebirdDDLLockTracker class. Declaration public FirebirdDDLLockTracker(IQuoter quoter) Parameters Type Name Description IQuoter quoter The Firebird quoter Methods | Improve this Doc View Source Clear() Clears all virtual locks Declaration public void Clear() | Improve this Doc View Source IsColumnRegistered(String, String) Returns a value indicating whether the column was locked Declaration public bool IsColumnRegistered([NotNull] string quotedTableName, [NotNull] string quotedColumnName) Parameters Type Name Description String quotedTableName The quoted table name String quotedColumnName The quoted column name Returns Type Description Boolean true when the column is locked | Improve this Doc View Source IsTableRegistered(String) Returns a value indicating whether the table was locked Declaration public bool IsTableRegistered([NotNull] string quotedTableName) Parameters Type Name Description String quotedTableName The quoted table name Returns Type Description Boolean true when the table is locked | Improve this Doc View Source TryRegisterColumn(String, String) Registers a column as locked Declaration public bool TryRegisterColumn([NotNull] string quotedTableName, [NotNull] string quotedColumnName) Parameters Type Name Description String quotedTableName The quoted table name String quotedColumnName The quoted column name Returns Type Description Boolean true when the column wasn't locked | Improve this Doc View Source TryRegisterTable(String) Registers a table as locked Declaration public bool TryRegisterTable([NotNull] string quotedTableName) Parameters Type Name Description String quotedTableName The quoted table name Returns Type Description Boolean true when the table wasn't locked"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.ConstraintInfo.html",
    "title": "Class ConstraintInfo | FluentMigrator documentation",
    "keywords": "Class ConstraintInfo Inheritance Object ConstraintInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ConstraintInfo Properties | Improve this Doc View Source DeleteRule Declaration public Rule DeleteRule { get; } Property Value Type Description Rule | Improve this Doc View Source ForeignIndex Declaration public IndexInfo ForeignIndex { get; } Property Value Type Description IndexInfo | Improve this Doc View Source IndexName Declaration public string IndexName { get; } Property Value Type Description String | Improve this Doc View Source IsForeignKey Declaration public bool IsForeignKey { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNotNull Declaration public bool IsNotNull { get; } Property Value Type Description Boolean | Improve this Doc View Source IsPrimaryKey Declaration public bool IsPrimaryKey { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source UpdateRule Declaration public Rule UpdateRule { get; } Property Value Type Description Rule Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<ConstraintInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ConstraintInfo >"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.ColumnInfo.html",
    "title": "Class ColumnInfo | FluentMigrator documentation",
    "keywords": "Class ColumnInfo Inheritance Object ColumnInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class ColumnInfo Properties | Improve this Doc View Source CharacterLength Declaration public int? CharacterLength { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source CustomType Declaration public string CustomType { get; } Property Value Type Description String | Improve this Doc View Source DBType Declaration public DbType? DBType { get; } Property Value Type Description Nullable < DbType > | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; } Property Value Type Description Object | Improve this Doc View Source FieldSubType Declaration public int? FieldSubType { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source FieldType Declaration public int? FieldType { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source FieldTypeName Declaration public string FieldTypeName { get; } Property Value Type Description String | Improve this Doc View Source IsNullable Declaration public bool IsNullable { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description Int32 | Improve this Doc View Source Precision Declaration public int? Precision { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TableName Declaration public string TableName { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<ColumnInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < ColumnInfo >"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.AdoHelper.html",
    "title": "Class AdoHelper | FluentMigrator documentation",
    "keywords": "Class AdoHelper Inheritance Object AdoHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public static class AdoHelper Methods | Improve this Doc View Source FormatValue(String) Declaration public static string FormatValue(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source GetIntValue(Object) Declaration public static int? GetIntValue(object val) Parameters Type Name Description Object val Returns Type Description Nullable < Int32 > | Improve this Doc View Source GetStringValue(Object) Declaration public static string GetStringValue(object val) Parameters Type Name Description Object val Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Processors.DotConnectOracle.html": {
    "href": "api/FluentMigrator.Runner.Processors.DotConnectOracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DotConnectOracle Classes DotConnectOracleDbFactory DotConnectOracleProcessor DotConnectOracleProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessorFactory.html",
    "title": "Class DotConnectOracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessorFactory Inheritance Object MigrationProcessorFactory DotConnectOracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class DotConnectOracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source DotConnectOracleProcessorFactory() Declaration [Obsolete] public DotConnectOracleProcessorFactory() | Improve this Doc View Source DotConnectOracleProcessorFactory(IServiceProvider) Declaration public DotConnectOracleProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleProcessor.html",
    "title": "Class DotConnectOracleProcessor | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleProcessor Inheritance Object ProcessorBase GenericProcessorBase DotConnectOracleProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source DotConnectOracleProcessor(DotConnectOracleDbFactory, OracleGenerator, ILogger<DotConnectOracleProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public DotConnectOracleProcessor([NotNull] DotConnectOracleDbFactory factory, [NotNull] OracleGenerator generator, [NotNull] ILogger<DotConnectOracleProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description DotConnectOracleDbFactory factory OracleGenerator generator ILogger < DotConnectOracleProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source DotConnectOracleProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, DotConnectOracleDbFactory) Declaration [Obsolete] public DotConnectOracleProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, DotConnectOracleDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options DotConnectOracleDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DotConnectOracle.DotConnectOracleDbFactory.html",
    "title": "Class DotConnectOracleDbFactory | FluentMigrator documentation",
    "keywords": "Class DotConnectOracleDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory DotConnectOracleDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DotConnectOracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class DotConnectOracleDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source DotConnectOracleDbFactory() Declaration [Obsolete] public DotConnectOracleDbFactory() | Improve this Doc View Source DotConnectOracleDbFactory(IServiceProvider) Declaration public DotConnectOracleDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.DbFactoryBase.html": {
    "href": "api/FluentMigrator.Runner.Processors.DbFactoryBase.html",
    "title": "Class DbFactoryBase | FluentMigrator documentation",
    "keywords": "Class DbFactoryBase Inheritance Object DbFactoryBase ReflectionBasedDbFactory SqlServerDbFactory Implements IDbFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class DbFactoryBase : IDbFactory Constructors | Improve this Doc View Source DbFactoryBase() Declaration protected DbFactoryBase() | Improve this Doc View Source DbFactoryBase(DbProviderFactory) Declaration protected DbFactoryBase(DbProviderFactory factory) Parameters Type Name Description DbProviderFactory factory Properties | Improve this Doc View Source Factory Gets the DB provider factory Declaration public virtual DbProviderFactory Factory { get; } Property Value Type Description DbProviderFactory Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] public virtual IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand | Improve this Doc View Source CreateConnection(String) Declaration [Obsolete] public IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection | Improve this Doc View Source CreateFactory() Declaration protected abstract DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.DataReaderExtensions.html": {
    "href": "api/FluentMigrator.Runner.Processors.DataReaderExtensions.html",
    "title": "Class DataReaderExtensions | FluentMigrator documentation",
    "keywords": "Class DataReaderExtensions Inheritance Object DataReaderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public static class DataReaderExtensions Methods | Improve this Doc View Source ReadDataSet(IDataReader) Declaration public static DataSet ReadDataSet(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataSet | Improve this Doc View Source ReadTable(IDataReader) Declaration public static DataTable ReadTable(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description DataTable"
  },
  "api/FluentMigrator.Runner.Processors.DB2.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2 Classes Db2DbFactory Db2Processor Db2ProcessorFactory"
  },
  "api/FluentMigrator.Runner.Initialization.TypeFilterOptions.html": {
    "href": "api/FluentMigrator.Runner.Initialization.TypeFilterOptions.html",
    "title": "Class TypeFilterOptions | FluentMigrator documentation",
    "keywords": "Class TypeFilterOptions Type filtering options Inheritance Object TypeFilterOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class TypeFilterOptions Properties | Improve this Doc View Source Namespace Gets or sets the root namespace for filtering Declaration public string Namespace { get; set; } Property Value Type Description String | Improve this Doc View Source NestedNamespaces Gets or sets the value indicating whether all sub-namespaces should be included Declaration public bool NestedNamespaces { get; set; } Property Value Type Description Boolean"
  },
  "api/FluentMigrator.Runner.Initialization.TaskExecutor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.TaskExecutor.html",
    "title": "Class TaskExecutor | FluentMigrator documentation",
    "keywords": "Class TaskExecutor Inheritance Object TaskExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax public class TaskExecutor Constructors | Improve this Doc View Source TaskExecutor(IRunnerContext) Declaration [Obsolete] public TaskExecutor([NotNull] IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext | Improve this Doc View Source TaskExecutor(IRunnerContext, AssemblyLoaderFactory, IConnectionStringProvider) Declaration [Obsolete] public TaskExecutor([NotNull] IRunnerContext runnerContext, [NotNull] AssemblyLoaderFactory assemblyLoaderFactory, [CanBeNull] IConnectionStringProvider connectionStringProvider = null) Parameters Type Name Description IRunnerContext runnerContext AssemblyLoaderFactory assemblyLoaderFactory IConnectionStringProvider connectionStringProvider | Improve this Doc View Source TaskExecutor(IRunnerContext, IConnectionStringProvider, AssemblyLoaderFactory, MigrationProcessorFactoryProvider) Declaration [Obsolete(\"Ony the statically provided factories are accessed\")] public TaskExecutor([NotNull] IRunnerContext runnerContext, [CanBeNull] IConnectionStringProvider connectionStringProvider, [NotNull] AssemblyLoaderFactory assemblyLoaderFactory, MigrationProcessorFactoryProvider factoryProvider) Parameters Type Name Description IRunnerContext runnerContext IConnectionStringProvider connectionStringProvider AssemblyLoaderFactory assemblyLoaderFactory MigrationProcessorFactoryProvider factoryProvider | Improve this Doc View Source TaskExecutor(ILogger<TaskExecutor>, IAssemblySource, IOptions<RunnerOptions>, IServiceProvider) Declaration public TaskExecutor([NotNull] ILogger<TaskExecutor> logger, [NotNull] IAssemblySource assemblySource, [NotNull] IOptions<RunnerOptions> runnerOptions, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < TaskExecutor > logger IAssemblySource assemblySource IOptions < RunnerOptions > runnerOptions IServiceProvider serviceProvider Properties | Improve this Doc View Source ConnectionStringProvider Gets the connection string provider Declaration [CanBeNull] [Obsolete] protected IConnectionStringProvider ConnectionStringProvider { get; } Property Value Type Description IConnectionStringProvider | Improve this Doc View Source Runner Gets the current migration runner Declaration [CanBeNull] protected IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner Remarks This will only be set during a migration operation | Improve this Doc View Source ServiceProvider Gets the service provider used to instantiate all migration services Declaration [NotNull] protected IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Methods | Improve this Doc View Source Execute() Declaration public void Execute() | Improve this Doc View Source GetTargetAssemblies() Declaration [Obsolete] protected virtual IEnumerable<Assembly> GetTargetAssemblies() Returns Type Description IEnumerable < Assembly > | Improve this Doc View Source HasMigrationsToApply() Checks whether the current task will actually run any migrations. Can be used to decide whether it's necessary perform a backup before the migrations are executed. Declaration public bool HasMigrationsToApply() Returns Type Description Boolean | Improve this Doc View Source Initialize() Will be called durin the runner scope intialization Declaration protected virtual void Initialize() Remarks The Runner isn't initialized yet."
  },
  "api/FluentMigrator.Runner.Initialization.RunnerOptions.html": {
    "href": "api/FluentMigrator.Runner.Initialization.RunnerOptions.html",
    "title": "Class RunnerOptions | FluentMigrator documentation",
    "keywords": "Class RunnerOptions The options for a migration runner Inheritance Object RunnerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class RunnerOptions Constructors | Improve this Doc View Source RunnerOptions() Initializes a new instance of the RunnerOptions class. Declaration public RunnerOptions() | Improve this Doc View Source RunnerOptions(IRunnerContext) Initializes a new instance of the RunnerOptions class. Declaration [Obsolete] public RunnerOptions(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration public bool AllowBreakingChange { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete] public object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source NoConnection Gets or sets a value indicating whether no connection should be used Declaration public bool NoConnection { get; set; } Property Value Type Description Boolean Remarks The difference between this and PreviewOnly is, that the preview-only mode uses the connection to determine the current state of the database. | Improve this Doc View Source Profile Gets or sets the profile migrations to apply Declaration [CanBeNull] public string Profile { get; set; } Property Value Type Description String | Improve this Doc View Source StartVersion Gets or sets the start version Declaration public long StartVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Steps Gets or sets the number of versions to apply Declaration public int Steps { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Tags Gets or sets the tags the migrations must match Declaration [CanBeNull] [ItemNotNull] public string[] Tags { get; set; } Property Value Type Description String [] Remarks All migrations are matched when no tags were specified | Improve this Doc View Source Task Gets or sets the task to execute Declaration [CanBeNull] public string Task { get; set; } Property Value Type Description String | Improve this Doc View Source TransactionPerSession Use one transaction for the whole session Declaration public bool TransactionPerSession { get; set; } Property Value Type Description Boolean Remarks The default transaction behavior is to use one transaction per migration. | Improve this Doc View Source Version Gets or sets the target version Declaration public long Version { get; set; } Property Value Type Description Int64 Methods | Improve this Doc View Source SetValuesFrom(IRunnerContext) Sets the values from the given runner context Declaration [Obsolete] public void SetValuesFrom(IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext The runner context"
  },
  "api/FluentMigrator.Runner.Initialization.RunnerContext.html": {
    "href": "api/FluentMigrator.Runner.Initialization.RunnerContext.html",
    "title": "Class RunnerContext | FluentMigrator documentation",
    "keywords": "Class RunnerContext Inheritance Object RunnerContext Implements IRunnerContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class RunnerContext : IRunnerContext Constructors | Improve this Doc View Source RunnerContext(IAnnouncer) Declaration public RunnerContext(IAnnouncer announcer) Parameters Type Name Description IAnnouncer announcer Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration public bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Remarks The option is now stored in AllowBreakingChange . | Improve this Doc View Source Announcer Declaration public IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration public object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Declaration public string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source ConnectionStringConfigPath Declaration public string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source Database Declaration public string Database { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultSchemaName Gets or sets the default schema name Declaration public string DefaultSchemaName { get; set; } Property Value Type Description String Remarks The default schema name must be set using the SchemaConvention | Improve this Doc View Source Namespace Declaration public string Namespace { get; set; } Property Value Type Description String | Improve this Doc View Source NestedNamespaces Declaration public bool NestedNamespaces { get; set; } Property Value Type Description Boolean | Improve this Doc View Source NoConnection Declaration public bool NoConnection { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PreviewOnly Declaration public bool PreviewOnly { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Profile Declaration public string Profile { get; set; } Property Value Type Description String | Improve this Doc View Source ProviderSwitches Declaration public string ProviderSwitches { get; set; } Property Value Type Description String | Improve this Doc View Source StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Steps Declaration public int Steps { get; set; } Property Value Type Description Int32 | Improve this Doc View Source StopWatch Declaration public IStopWatch StopWatch { get; } Property Value Type Description IStopWatch | Improve this Doc View Source Tags Declaration public IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Targets Declaration public string[] Targets { get; set; } Property Value Type Description String [] | Improve this Doc View Source Task Declaration public string Task { get; set; } Property Value Type Description String | Improve this Doc View Source Timeout Declaration public int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TransactionPerSession Declaration public bool TransactionPerSession { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Version Declaration public long Version { get; set; } Property Value Type Description Int64 | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String Implements IRunnerContext"
  },
  "api/FluentMigrator.Runner.Initialization.ProfileSource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.ProfileSource.html",
    "title": "Class ProfileSource | FluentMigrator documentation",
    "keywords": "Class ProfileSource The default implementation of IProfileSource Inheritance Object ProfileSource Implements IProfileSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ProfileSource : IProfileSource Constructors | Improve this Doc View Source ProfileSource(IAssemblySource, IMigrationRunnerConventions, IServiceProvider) Initializes a new instance of the ProfileSource class. Declaration public ProfileSource([NotNull] IAssemblySource source, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IAssemblySource source The assembly source IMigrationRunnerConventions conventions The migration runner conventios IServiceProvider serviceProvider The service provider Methods | Improve this Doc View Source GetProfiles(String) Declaration public IEnumerable<IMigration> GetProfiles(string profile) Parameters Type Name Description String profile Returns Type Description IEnumerable < IMigration > Implements IProfileSource"
  },
  "api/FluentMigrator.Runner.Initialization.PassThroughVersionTableMetaDataAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.PassThroughVersionTableMetaDataAccessor.html",
    "title": "Class PassThroughVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Class PassThroughVersionTableMetaDataAccessor Passes through the given version table metadata Inheritance Object PassThroughVersionTableMetaDataAccessor Implements IVersionTableMetaDataAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughVersionTableMetaDataAccessor : IVersionTableMetaDataAccessor Constructors | Improve this Doc View Source PassThroughVersionTableMetaDataAccessor(IVersionTableMetaData) Initializes a new instance of the PassThroughVersionTableMetaDataAccessor class. Declaration public PassThroughVersionTableMetaDataAccessor(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Implements IVersionTableMetaDataAccessor"
  },
  "api/FluentMigrator.Runner.Initialization.PassThroughMigrationRunnerConventionsAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.PassThroughMigrationRunnerConventionsAccessor.html",
    "title": "Class PassThroughMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Class PassThroughMigrationRunnerConventionsAccessor Implementation of IMigrationRunnerConventionsAccessor that just passes through the given IMigrationRunnerConventions Inheritance Object PassThroughMigrationRunnerConventionsAccessor Implements IMigrationRunnerConventionsAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughMigrationRunnerConventionsAccessor : IMigrationRunnerConventionsAccessor Constructors | Improve this Doc View Source PassThroughMigrationRunnerConventionsAccessor(IMigrationRunnerConventions) Initializes a new instance of the PassThroughMigrationRunnerConventionsAccessor class. Declaration public PassThroughMigrationRunnerConventionsAccessor([CanBeNull] IMigrationRunnerConventions conventions = null) Parameters Type Name Description IMigrationRunnerConventions conventions The conventions to return Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration public IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions Implements IMigrationRunnerConventionsAccessor"
  },
  "api/FluentMigrator.Runner.Initialization.PassThroughConnectionStringReader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.PassThroughConnectionStringReader.html",
    "title": "Class PassThroughConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class PassThroughConnectionStringReader A connection string provider that just passes through the given connection string Inheritance Object PassThroughConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class PassThroughConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source PassThroughConnectionStringReader(String) Initializes a new instance of the PassThroughConnectionStringReader class. Declaration public PassThroughConnectionStringReader(string connectionString) Parameters Type Name Description String connectionString The connection string Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringName) Parameters Type Name Description String connectionStringName Returns Type Description String Implements IConnectionStringReader"
  },
  "api/FluentMigrator.Runner.Initialization.NetFramework.html": {
    "href": "api/FluentMigrator.Runner.Initialization.NetFramework.html",
    "title": "Namespace FluentMigrator.Runner.Initialization.NetFramework | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization.NetFramework Classes AppConfigConnectionStringAccessorOptions Options for the AppConfigConnectionStringReader AppConfigConnectionStringReader A IConnectionStringReader implementation that uses the app or machine config Interfaces INetConfigManager Understand .NET config mechanism and provides access to Configuration sections"
  },
  "api/FluentMigrator.Runner.Initialization.NetFramework.INetConfigManager.html": {
    "href": "api/FluentMigrator.Runner.Initialization.NetFramework.INetConfigManager.html",
    "title": "Interface INetConfigManager | FluentMigrator documentation",
    "keywords": "Interface INetConfigManager Understand .NET config mechanism and provides access to Configuration sections Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax public interface INetConfigManager Methods | Improve this Doc View Source LoadFromFile(String) Declaration [NotNull] Configuration LoadFromFile(string path) Parameters Type Name Description String path Returns Type Description Configuration | Improve this Doc View Source LoadFromMachineConfiguration() Declaration [NotNull] Configuration LoadFromMachineConfiguration() Returns Type Description Configuration"
  },
  "api/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringReader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringReader.html",
    "title": "Class AppConfigConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class AppConfigConnectionStringReader A IConnectionStringReader implementation that uses the app or machine config Inheritance Object AppConfigConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class AppConfigConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source AppConfigConnectionStringReader(INetConfigManager, IAssemblySource, ILogger<AppConfigConnectionStringReader>, IOptions<AppConfigConnectionStringAccessorOptions>) Declaration public AppConfigConnectionStringReader([NotNull] INetConfigManager configManager, [NotNull] IAssemblySource assemblySource, [NotNull] ILogger<AppConfigConnectionStringReader> logger, [NotNull] IOptions<AppConfigConnectionStringAccessorOptions> options) Parameters Type Name Description INetConfigManager configManager IAssemblySource assemblySource ILogger < AppConfigConnectionStringReader > logger IOptions < AppConfigConnectionStringAccessorOptions > options | Improve this Doc View Source AppConfigConnectionStringReader(INetConfigManager, String, IAnnouncer, IOptions<AppConfigConnectionStringAccessorOptions>) Declaration [Obsolete] public AppConfigConnectionStringReader([NotNull] INetConfigManager configManager, [NotNull] string assemblyLocation, [NotNull] IAnnouncer announcer, [NotNull] IOptions<AppConfigConnectionStringAccessorOptions> options) Parameters Type Name Description INetConfigManager configManager String assemblyLocation IAnnouncer announcer IOptions < AppConfigConnectionStringAccessorOptions > options Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringOrName) Parameters Type Name Description String connectionStringOrName The name of the connection string Returns Type Description String Implements IConnectionStringReader"
  },
  "api/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringAccessorOptions.html": {
    "href": "api/FluentMigrator.Runner.Initialization.NetFramework.AppConfigConnectionStringAccessorOptions.html",
    "title": "Class AppConfigConnectionStringAccessorOptions | FluentMigrator documentation",
    "keywords": "Class AppConfigConnectionStringAccessorOptions Options for the AppConfigConnectionStringReader Inheritance Object AppConfigConnectionStringAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.NetFramework Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class AppConfigConnectionStringAccessorOptions Properties | Improve this Doc View Source ConnectionStringConfigPath Gets or sets the path where the config file can be found Declaration [CanBeNull] public string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source MachineName Gets or sets the machine name Declaration [CanBeNull] public string MachineName { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Initialization.MigrationSource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.MigrationSource.html",
    "title": "Class MigrationSource | FluentMigrator documentation",
    "keywords": "Class MigrationSource Inheritance Object MigrationSource Implements IMigrationSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class MigrationSource : IMigrationSource Constructors | Improve this Doc View Source MigrationSource(IAssemblySource, IMigrationRunnerConventions) Initializes a new instance of the ProfileSource class. Declaration [Obsolete] public MigrationSource([NotNull] IAssemblySource source, [NotNull] IMigrationRunnerConventions conventions) Parameters Type Name Description IAssemblySource source The assembly source IMigrationRunnerConventions conventions The migration runner conventios | Improve this Doc View Source MigrationSource(IAssemblySource, IMigrationRunnerConventions, IServiceProvider) Initializes a new instance of the ProfileSource class. Declaration public MigrationSource([NotNull] IAssemblySource source, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IAssemblySource source The assembly source IMigrationRunnerConventions conventions The migration runner conventios IServiceProvider serviceProvider The service provider Methods | Improve this Doc View Source GetMigrations() Declaration public IEnumerable<IMigration> GetMigrations() Returns Type Description IEnumerable < IMigration > Implements IMigrationSource"
  },
  "api/FluentMigrator.Runner.Initialization.IVersionTableMetaDataAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IVersionTableMetaDataAccessor.html",
    "title": "Interface IVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaDataAccessor Accessor for the IVersionTableMetaData Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IVersionTableMetaDataAccessor Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration [CanBeNull] IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData"
  },
  "api/FluentMigrator.Runner.Initialization.IRunnerContext.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IRunnerContext.html",
    "title": "Interface IRunnerContext | FluentMigrator documentation",
    "keywords": "Interface IRunnerContext Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IRunnerContext Properties | Improve this Doc View Source AllowBreakingChange Gets or sets a value indicating whether the migration runner is allowed to apply breaking changes Declaration bool AllowBreakingChange { get; set; } Property Value Type Description Boolean Remarks The option is now stored in AllowBreakingChange . | Improve this Doc View Source Announcer Gets or sets the announcer to use Declaration IAnnouncer Announcer { get; } Property Value Type Description IAnnouncer | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string (or name) Declaration string Connection { get; set; } Property Value Type Description String Remarks Will not be used when PreviewOnly is active. The option is now directly stored in ConnectionString | Improve this Doc View Source ConnectionStringConfigPath Gets or sets the path to an app.config/web.config to load the connection string from Declaration string ConnectionStringConfigPath { get; set; } Property Value Type Description String | Improve this Doc View Source Database Gets or sets the identifier of the processor to use Declaration [Obsolete(\"A preselection must happen during the migration runner configuration\")] string Database { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultSchemaName Gets or sets the default schema name Declaration string DefaultSchemaName { get; set; } Property Value Type Description String Remarks The default schema name must be set using the SchemaConvention | Improve this Doc View Source Namespace Gets or sets the root namespace for filtering Declaration string Namespace { get; set; } Property Value Type Description String Remarks The option is now directly stored in Namespace . | Improve this Doc View Source NestedNamespaces Gets or sets the value indicating whether all sub-namespaces should be included Declaration bool NestedNamespaces { get; set; } Property Value Type Description Boolean Remarks The option is now directly stored in NestedNamespaces . | Improve this Doc View Source NoConnection Gets or sets a value indicating whether no connection should be used Declaration bool NoConnection { get; set; } Property Value Type Description Boolean Remarks The difference between this and PreviewOnly is, that the preview-only mode uses the connection to determine the current state of the database. | Improve this Doc View Source PreviewOnly Gets or sets a value indicating whether a preview-only mode is active Declaration bool PreviewOnly { get; set; } Property Value Type Description Boolean Remarks The option is now directly stored in PreviewOnly | Improve this Doc View Source Profile Gets or sets the profile migrations to apply Declaration string Profile { get; set; } Property Value Type Description String Remarks The option is now stored in Profile . | Improve this Doc View Source ProviderSwitches Gets or sets the provider switches Declaration string ProviderSwitches { get; set; } Property Value Type Description String Remarks The option is now stored in PreviewOnly . | Improve this Doc View Source StartVersion Gets or sets the start version Declaration long StartVersion { get; set; } Property Value Type Description Int64 Remarks The option is now stored in StartVersion . | Improve this Doc View Source Steps Gets or sets the number of versions to apply Declaration int Steps { get; set; } Property Value Type Description Int32 Remarks The option is now stored in Steps . | Improve this Doc View Source StopWatch Gets or sets the stopwatch to use Declaration IStopWatch StopWatch { get; } Property Value Type Description IStopWatch | Improve this Doc View Source Tags Gets or sets the tags the migrations must match Declaration IEnumerable<string> Tags { get; set; } Property Value Type Description IEnumerable < String > Remarks All migrations are matched when no tags were specified. The option is now stored in Tags . | Improve this Doc View Source Targets Gets or sets the assembly names Declaration string[] Targets { get; set; } Property Value Type Description String [] Remarks The option is now stored in AssemblyNames | Improve this Doc View Source Task Gets or sets the task to execute Declaration string Task { get; set; } Property Value Type Description String Remarks The option is now stored in Task . | Improve this Doc View Source Timeout Gets or sets the default command timeout in seconds Declaration int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TransactionPerSession Use one transaction for the whole session Declaration bool TransactionPerSession { get; set; } Property Value Type Description Boolean Remarks The default transaction behavior is to use one transaction per migration. The option is now stored in TransactionPerSession . | Improve this Doc View Source Version Gets or sets the target version Declaration long Version { get; set; } Property Value Type Description Int64 Remarks The option is now stored in Version . | Improve this Doc View Source WorkingDirectory Gets or sets the working directory Declaration string WorkingDirectory { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Initialization.IProfileSource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IProfileSource.html",
    "title": "Interface IProfileSource | FluentMigrator documentation",
    "keywords": "Interface IProfileSource Gets all types Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IProfileSource Methods | Improve this Doc View Source GetProfiles(String) Declaration [NotNull] [ItemNotNull] IEnumerable<IMigration> GetProfiles([CanBeNull] string profile) Parameters Type Name Description String profile Returns Type Description IEnumerable < IMigration >"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyNameLoadEngine.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyNameLoadEngine.html",
    "title": "Class AssemblyNameLoadEngine | FluentMigrator documentation",
    "keywords": "Class AssemblyNameLoadEngine Tries to load the assembly by name Inheritance Object AssemblyNameLoadEngine Implements IAssemblyLoadEngine Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyNameLoadEngine : IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration public bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded Implements IAssemblyLoadEngine"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyLoader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyLoader.html",
    "title": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization.AssemblyLoader Classes AssemblyLoaderFactory Class that creates an IAssemblyLoader for a given assembly name AssemblyLoaderFromFile AssemblyLoaderFromName Interfaces IAssemblyLoader"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyLoader.IAssemblyLoader.html",
    "title": "Interface IAssemblyLoader | FluentMigrator documentation",
    "keywords": "Interface IAssemblyLoader Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public interface IAssemblyLoader Methods | Improve this Doc View Source Load() Declaration Assembly Load() Returns Type Description Assembly"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromName.html",
    "title": "Class AssemblyLoaderFromName | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromName Inheritance Object AssemblyLoaderFromName Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromName : IAssemblyLoader Constructors | Improve this Doc View Source AssemblyLoaderFromName(String) Declaration public AssemblyLoaderFromName(string name) Parameters Type Name Description String name Methods | Improve this Doc View Source Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFromFile.html",
    "title": "Class AssemblyLoaderFromFile | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFromFile Inheritance Object AssemblyLoaderFromFile Implements IAssemblyLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFromFile : IAssemblyLoader Constructors | Improve this Doc View Source AssemblyLoaderFromFile(String) Declaration public AssemblyLoaderFromFile(string name) Parameters Type Name Description String name Methods | Improve this Doc View Source Load() Declaration public Assembly Load() Returns Type Description Assembly Implements IAssemblyLoader"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyLoader.AssemblyLoaderFactory.html",
    "title": "Class AssemblyLoaderFactory | FluentMigrator documentation",
    "keywords": "Class AssemblyLoaderFactory Class that creates an IAssemblyLoader for a given assembly name Inheritance Object AssemblyLoaderFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization.AssemblyLoader Assembly : FluentMigrator.Runner.dll Syntax public class AssemblyLoaderFactory Methods | Improve this Doc View Source GetAssemblyLoader(String) Returns an assembly loader for an assembly with the given name Declaration public virtual IAssemblyLoader GetAssemblyLoader(string name) Parameters Type Name Description String name The assembly name (can be an assembly name or file name) Returns Type Description IAssemblyLoader The new assembly loader"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyFileLoadEngine.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyFileLoadEngine.html",
    "title": "Class AssemblyFileLoadEngine | FluentMigrator documentation",
    "keywords": "Class AssemblyFileLoadEngine Tries to load the assembly from a file Inheritance Object AssemblyFileLoadEngine Implements IAssemblyLoadEngine Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblyFileLoadEngine : IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration public bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded Implements IAssemblyLoadEngine"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblyCollectionService.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblyCollectionService.html",
    "title": "Class AssemblyCollectionService | FluentMigrator documentation",
    "keywords": "Class AssemblyCollectionService A compatibility service to get the assembly collection from the found migrations Inheritance Object AssemblyCollectionService Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete(\"Exists only to simplify the migration to the new FluentMigration version\")] public class AssemblyCollectionService : IAssemblyCollection Constructors | Improve this Doc View Source AssemblyCollectionService(IAssemblySource) Initializes a new instance of the AssemblyCollectionService class. Declaration public AssemblyCollectionService([NotNull] IAssemblySource source) Parameters Type Name Description IAssemblySource source The source assemblies used to search for types with given traits Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "api/FluentMigrator.Runner.Infrastructure.html": {
    "href": "api/FluentMigrator.Runner.Infrastructure.html",
    "title": "Namespace FluentMigrator.Runner.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Infrastructure Classes DefaultMigrationRunnerConventions RuntimeHost Interfaces IHostAbstraction"
  },
  "api/FluentMigrator.Runner.Infrastructure.RuntimeHost.html": {
    "href": "api/FluentMigrator.Runner.Infrastructure.RuntimeHost.html",
    "title": "Class RuntimeHost | FluentMigrator documentation",
    "keywords": "Class RuntimeHost Inheritance Object RuntimeHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public static class RuntimeHost Properties | Improve this Doc View Source Current Declaration public static IHostAbstraction Current { get; } Property Value Type Description IHostAbstraction Methods | Improve this Doc View Source FindAssemblies() Declaration public static IEnumerable<AssemblyName> FindAssemblies() Returns Type Description IEnumerable < System.Reflection.AssemblyName > | Improve this Doc View Source FindAssemblies(String) Declaration public static IEnumerable<AssemblyName> FindAssemblies(string name) Parameters Type Name Description String name Returns Type Description IEnumerable < System.Reflection.AssemblyName >"
  },
  "api/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html": {
    "href": "api/FluentMigrator.Runner.Infrastructure.IHostAbstraction.html",
    "title": "Interface IHostAbstraction | FluentMigrator documentation",
    "keywords": "Interface IHostAbstraction Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IHostAbstraction Properties | Improve this Doc View Source BaseDirectory Declaration string BaseDirectory { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateInstance(IServiceProvider, String, String) Declaration [NotNull] object CreateInstance([CanBeNull] IServiceProvider serviceProvider, [NotNull] string assemblyName, [NotNull] string typeName) Parameters Type Name Description IServiceProvider serviceProvider String assemblyName String typeName Returns Type Description Object | Improve this Doc View Source GetLoadedAssemblies() Declaration [NotNull] [ItemNotNull] IEnumerable<Assembly> GetLoadedAssemblies() Returns Type Description IEnumerable < Assembly >"
  },
  "api/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html": {
    "href": "api/FluentMigrator.Runner.Infrastructure.DefaultMigrationRunnerConventions.html",
    "title": "Class DefaultMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationRunnerConventions Inheritance Object DefaultMigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Infrastructure Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultMigrationRunnerConventions : IMigrationRunnerConventions Properties | Improve this Doc View Source GetMaintenanceStage Declaration public Func<Type, MigrationStage? > GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] public Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Create an IMigrationInfo instance for a given IMigration Declaration public Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source Instance Declaration public static DefaultMigrationRunnerConventions Instance { get; } Property Value Type Description DefaultMigrationRunnerConventions | Improve this Doc View Source TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions"
  },
  "api/FluentMigrator.Runner.IVersionLoader.html": {
    "href": "api/FluentMigrator.Runner.IVersionLoader.html",
    "title": "Interface IVersionLoader | FluentMigrator documentation",
    "keywords": "Interface IVersionLoader Manages the version table and the stored versions Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionLoader Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Gets a value indicating whether the schema for the version table has been created (or already exited) Declaration bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Gets a value indicating whether the version table has been created (or already exited) Declaration bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source Runner The runner this version loader belongs to Declaration IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source VersionInfo Gets an interface to query/update the status of migrations Declaration IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionTableMetaData Gets the version table meta data Declaration IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Methods | Improve this Doc View Source DeleteVersion(Int64) Deletes a version from the version table Declaration void DeleteVersion(long version) Parameters Type Name Description Int64 version The version to delete from the version table | Improve this Doc View Source GetVersionTableMetaData() Get the version table metadata Declaration IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData The version table metadata | Improve this Doc View Source LoadVersionInfo() Loads all version data stored in the version table Declaration void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Removes the version table Declaration void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Adds the version information Declaration void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version The version number | Improve this Doc View Source UpdateVersionInfo(Int64, String) Adds the version information Declaration void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version The version number String description The version description"
  },
  "api/FluentMigrator.Runner.IStopWatch.html": {
    "href": "api/FluentMigrator.Runner.IStopWatch.html",
    "title": "Interface IStopWatch | FluentMigrator documentation",
    "keywords": "Interface IStopWatch Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IStopWatch Methods | Improve this Doc View Source ElapsedTime() Declaration TimeSpan ElapsedTime() Returns Type Description TimeSpan | Improve this Doc View Source Start() Declaration void Start() | Improve this Doc View Source Stop() Declaration void Stop() | Improve this Doc View Source Time(Action) Declaration TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan"
  },
  "api/FluentMigrator.Runner.IProfileLoader.html": {
    "href": "api/FluentMigrator.Runner.IProfileLoader.html",
    "title": "Interface IProfileLoader | FluentMigrator documentation",
    "keywords": "Interface IProfileLoader Interface to load migrations tagged with a profile name Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IProfileLoader Properties | Improve this Doc View Source SupportsParameterlessApplyProfile Gets a value indicating whether this instance allows a call to ApplyProfiles() Declaration [Obsolete] bool SupportsParameterlessApplyProfile { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProfiles() Apply all loaded profiles Declaration [Obsolete] void ApplyProfiles() | Improve this Doc View Source ApplyProfiles(IMigrationRunner) Apply all loaded profiles with the given runner Declaration void ApplyProfiles([NotNull] IMigrationRunner runner) Parameters Type Name Description IMigrationRunner runner The migration ruinner | Improve this Doc View Source FindProfilesIn(IAssemblyCollection, String) Find all profile name tagged migrations in the given assembly collection Declaration [Obsolete] IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies The assemblies to load the profile tagged migrations from String profile The profile name to search the migrations for Returns Type Description IEnumerable < IMigration > The found migrations"
  },
  "api/FluentMigrator.Runner.IMigrationScopeStarter.html": {
    "href": "api/FluentMigrator.Runner.IMigrationScopeStarter.html",
    "title": "Interface IMigrationScopeStarter | FluentMigrator documentation",
    "keywords": "Interface IMigrationScopeStarter Manually start a migration scope Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScopeStarter Remarks This is handles nested scopes gracefully. Methods | Improve this Doc View Source BeginScope() Starts a new migration scope Declaration IMigrationScope BeginScope() Returns Type Description IMigrationScope A new migration scope"
  },
  "api/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Hana.HanaQuoter.html",
    "title": "Class HanaQuoter | FluentMigrator documentation",
    "keywords": "Class HanaQuoter Inheritance Object GenericQuoter HanaQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Hana.HanaGenerator.html",
    "title": "Class HanaGenerator | FluentMigrator documentation",
    "keywords": "Class HanaGenerator Inheritance Object GeneratorBase GenericGenerator HanaGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source HanaGenerator() Declaration public HanaGenerator() | Improve this Doc View Source HanaGenerator(HanaQuoter) Declaration public HanaGenerator([NotNull] HanaQuoter quoter) Parameters Type Name Description HanaQuoter quoter | Improve this Doc View Source HanaGenerator(HanaQuoter, IOptions<GeneratorOptions>) Declaration public HanaGenerator([NotNull] HanaQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description HanaQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(UpdateDataExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Hana.HanaDescriptionGenerator.html",
    "title": "Class HanaDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class HanaDescriptionGenerator Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Generic.html": {
    "href": "api/FluentMigrator.Runner.Generators.Generic.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Generic | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Generic Classes GenericDescriptionGenerator Base class to generate descriptions for tables/classes GenericGenerator GenericQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Generic.GenericQuoter.html",
    "title": "Class GenericQuoter | FluentMigrator documentation",
    "keywords": "Class GenericQuoter Inheritance Object GenericQuoter Db2Quoter FirebirdQuoter HanaQuoter JetQuoter MySqlQuoter OracleQuoterBase PostgresQuoter RedshiftQuoter SqlAnywhereQuoter SQLiteQuoter SqlServer2000Quoter Implements IQuoter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public class GenericQuoter : IQuoter Properties | Improve this Doc View Source CloseQuote Returns the closing quote identifier - \" is the standard according to the specification Declaration public virtual string CloseQuote { get; } Property Value Type Description String | Improve this Doc View Source CloseQuoteEscapeString Declaration public virtual string CloseQuoteEscapeString { get; } Property Value Type Description String | Improve this Doc View Source EscapeValueQuote Declaration public virtual string EscapeValueQuote { get; } Property Value Type Description String | Improve this Doc View Source IdentifierSeparator Gets the separator between identifiers (e.g. the dot between SCHEMA.TABLENAME) Declaration public virtual string IdentifierSeparator { get; } Property Value Type Description String | Improve this Doc View Source OpenQuote Returns the opening quote identifier - \" is the standard according to the specification Declaration public virtual string OpenQuote { get; } Property Value Type Description String | Improve this Doc View Source OpenQuoteEscapeString Declaration public virtual string OpenQuoteEscapeString { get; } Property Value Type Description String | Improve this Doc View Source ValueQuote Declaration public virtual string ValueQuote { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateSchemaPrefixedQuotedIdentifier(String, String) Declaration protected virtual string CreateSchemaPrefixedQuotedIdentifier(string quotedSchemaName, string quotedIdentifier) Parameters Type Name Description String quotedSchemaName String quotedIdentifier Returns Type Description String | Improve this Doc View Source FormatAnsiString(String) Declaration public virtual string FormatAnsiString(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source FormatBool(Boolean) Declaration public virtual string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected virtual string FormatByteArray(byte[] value) Parameters Type Name Description System.Byte [] value Returns Type Description String | Improve this Doc View Source FormatChar(Char) Declaration public virtual string FormatChar(char value) Parameters Type Name Description Char value Returns Type Description String | Improve this Doc View Source FormatDateTime(DateTime) Declaration public virtual string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String | Improve this Doc View Source FormatDateTimeOffset(DateTimeOffset) Declaration public virtual string FormatDateTimeOffset(DateTimeOffset value) Parameters Type Name Description DateTimeOffset value Returns Type Description String | Improve this Doc View Source FormatEnum(Object) Declaration public virtual string FormatEnum(object value) Parameters Type Name Description Object value Returns Type Description String | Improve this Doc View Source FormatGuid(Guid) Declaration public virtual string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String | Improve this Doc View Source FormatNationalString(String) Declaration public virtual string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source FormatNull() Declaration public virtual string FormatNull() Returns Type Description String | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public virtual string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public virtual string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String | Improve this Doc View Source IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration public virtual bool IsQuoted(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Quote(String) Returns a quoted string that has been correctly escaped Declaration public virtual string Quote(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source QuoteColumnName(String) Quotes a column name Declaration public virtual string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String | Improve this Doc View Source QuoteConstraintName(String, String) Quotes a constraint name Declaration public virtual string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String | Improve this Doc View Source QuoteIndexName(String, String) Quote an index name Declaration public virtual string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Quotes a schema name Declaration public virtual string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name | Improve this Doc View Source QuoteSequenceName(String, String) Quotes a Sequence name Declaration public virtual string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String | Improve this Doc View Source QuoteTableName(String, String) Quotes a Table name Declaration public virtual string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String | Improve this Doc View Source QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration public virtual string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value | Improve this Doc View Source ShouldQuote(String) Declaration [ContractAnnotation(\"name:null => false\")] protected virtual bool ShouldQuote([CanBeNull] string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source UnQuote(String) Provides an unquoted, unescaped string Declaration public virtual string UnQuote(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Generic.GenericGenerator.html",
    "title": "Class GenericGenerator | FluentMigrator documentation",
    "keywords": "Class GenericGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator FirebirdGenerator HanaGenerator JetGenerator MySql4Generator OracleGenerator PostgresGenerator RedshiftGenerator SqlAnywhere16Generator SQLiteGenerator SqlServer2000Generator Implements IMigrationGenerator Inherited Members GeneratorBase.Generate(AlterDefaultConstraintExpression) GeneratorBase.Generate(DeleteDefaultConstraintExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericGenerator : GeneratorBase, IMigrationGenerator Constructors | Improve this Doc View Source GenericGenerator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected GenericGenerator(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions Fields | Improve this Doc View Source compatabilityMode Declaration [Obsolete(\"Use the CompatibilityMode property\")] public CompatabilityMode compatabilityMode Field Value Type Description CompatabilityMode Properties | Improve this Doc View Source AddColumn Declaration public virtual string AddColumn { get; } Property Value Type Description String | Improve this Doc View Source AlterColumn Declaration public virtual string AlterColumn { get; } Property Value Type Description String | Improve this Doc View Source AlterSchema Declaration public virtual string AlterSchema { get; } Property Value Type Description String | Improve this Doc View Source CompatibilityMode Declaration public CompatibilityMode CompatibilityMode { get; set; } Property Value Type Description CompatibilityMode | Improve this Doc View Source CreateConstraint Declaration public virtual string CreateConstraint { get; } Property Value Type Description String | Improve this Doc View Source CreateForeignKeyConstraint Declaration public virtual string CreateForeignKeyConstraint { get; } Property Value Type Description String | Improve this Doc View Source CreateIndex Declaration public virtual string CreateIndex { get; } Property Value Type Description String | Improve this Doc View Source CreateSchema Declaration public virtual string CreateSchema { get; } Property Value Type Description String | Improve this Doc View Source CreateTable Declaration public virtual string CreateTable { get; } Property Value Type Description String | Improve this Doc View Source DeleteConstraint Declaration public virtual string DeleteConstraint { get; } Property Value Type Description String | Improve this Doc View Source DeleteData Declaration public virtual string DeleteData { get; } Property Value Type Description String | Improve this Doc View Source DropColumn Declaration public virtual string DropColumn { get; } Property Value Type Description String | Improve this Doc View Source DropIndex Declaration public virtual string DropIndex { get; } Property Value Type Description String | Improve this Doc View Source DropSchema Declaration public virtual string DropSchema { get; } Property Value Type Description String | Improve this Doc View Source DropTable Declaration public virtual string DropTable { get; } Property Value Type Description String | Improve this Doc View Source InsertData Declaration public virtual string InsertData { get; } Property Value Type Description String | Improve this Doc View Source RenameColumn Declaration public virtual string RenameColumn { get; } Property Value Type Description String | Improve this Doc View Source RenameTable Declaration public virtual string RenameTable { get; } Property Value Type Description String | Improve this Doc View Source UpdateData Declaration public virtual string UpdateData { get; } Property Value Type Description String Methods | Improve this Doc View Source AppendSqlStatementEndToken(StringBuilder) Declaration protected virtual StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Outputs a create table string Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GeneratorBase.Generate(UpdateDataExpression) | Improve this Doc View Source GenerateColumnNamesAndValues(InsertDataExpression) Declaration protected List<KeyValuePair<string, string>> GenerateColumnNamesAndValues(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description List < System.Collections.Generic.KeyValuePair < String , String >> | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public virtual string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source GetUniqueString(CreateIndexExpression) Declaration public virtual string GetUniqueString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String | Improve this Doc View Source ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) Declaration protected string ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<string, object>> features) Parameters Type Name Description IEnumerable < System.Collections.Generic.KeyValuePair < String , Object >> features Returns Type Description String Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Generic.GenericDescriptionGenerator.html",
    "title": "Class GenericDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class GenericDescriptionGenerator Base class to generate descriptions for tables/classes Inheritance Object GenericDescriptionGenerator HanaDescriptionGenerator OracleDescriptionGenerator PostgresDescriptionGenerator RedshiftDescriptionGenerator SqlServer2005DescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Generic Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericDescriptionGenerator : IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected abstract string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public virtual string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public virtual string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration public virtual string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration public virtual IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected abstract string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.GeneratorOptions.html": {
    "href": "api/FluentMigrator.Runner.Generators.GeneratorOptions.html",
    "title": "Class GeneratorOptions | FluentMigrator documentation",
    "keywords": "Class GeneratorOptions Options for IMigrationGenerator implementations Inheritance Object GeneratorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class GeneratorOptions Properties | Improve this Doc View Source CompatibilityMode Gets or sets the compatibility mode Declaration public CompatibilityMode? CompatibilityMode { get; set; } Property Value Type Description Nullable < CompatibilityMode >"
  },
  "api/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesGenerator.html",
    "title": "Class Db2ISeriesGenerator | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesGenerator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members Db2Generator.Generate(AlterDefaultConstraintExpression) Db2Generator.Generate(DeleteDefaultConstraintExpression) Db2Generator.Generate(RenameTableExpression) Db2Generator.Generate(DeleteColumnExpression) Db2Generator.Generate(CreateColumnExpression) Db2Generator.Generate(CreateForeignKeyExpression) Db2Generator.Generate(CreateConstraintExpression) Db2Generator.Generate(CreateIndexExpression) Db2Generator.Generate(CreateSchemaExpression) Db2Generator.Generate(DeleteTableExpression) Db2Generator.Generate(DeleteIndexExpression) Db2Generator.Generate(DeleteSchemaExpression) Db2Generator.Generate(DeleteConstraintExpression) Db2Generator.Generate(DeleteForeignKeyExpression) Db2Generator.Generate(DeleteDataExpression) Db2Generator.Generate(RenameColumnExpression) Db2Generator.Generate(InsertDataExpression) Db2Generator.Generate(UpdateDataExpression) Db2Generator.Generate(CreateTableExpression) Db2Generator.Generate(AlterColumnExpression) Db2Generator.Generate(AlterSchemaExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesGenerator : Db2Generator, IMigrationGenerator Constructors | Improve this Doc View Source Db2ISeriesGenerator() Declaration public Db2ISeriesGenerator() | Improve this Doc View Source Db2ISeriesGenerator(Db2ISeriesQuoter) Declaration public Db2ISeriesGenerator(Db2ISeriesQuoter quoter) Parameters Type Name Description Db2ISeriesQuoter quoter | Improve this Doc View Source Db2ISeriesGenerator(Db2ISeriesQuoter, IOptions<GeneratorOptions>) Declaration public Db2ISeriesGenerator(Db2ISeriesQuoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description Db2ISeriesQuoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.Db2Quoter.html",
    "title": "Class Db2Quoter | FluentMigrator documentation",
    "keywords": "Class Db2Quoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Quoter : GenericQuoter, IQuoter Fields | Improve this Doc View Source SpecialChars Declaration public readonly char[] SpecialChars Field Value Type Description Char [] Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) | Improve this Doc View Source ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.DB2.Db2Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.Db2Generator.html",
    "title": "Class Db2Generator | FluentMigrator documentation",
    "keywords": "Class Db2Generator Inheritance Object GeneratorBase GenericGenerator Db2Generator Db2ISeriesGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(CreateSequenceExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Generator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source Db2Generator() Declaration public Db2Generator() | Improve this Doc View Source Db2Generator(Db2Quoter) Declaration public Db2Generator(Db2Quoter quoter) Parameters Type Name Description Db2Quoter quoter | Improve this Doc View Source Db2Generator(Db2Quoter, IOptions<GeneratorOptions>) Declaration public Db2Generator(Db2Quoter quoter, IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description Db2Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(UpdateDataExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.CompatibilityModeExtension.html": {
    "href": "api/FluentMigrator.Runner.Generators.CompatibilityModeExtension.html",
    "title": "Class CompatibilityModeExtension | FluentMigrator documentation",
    "keywords": "Class CompatibilityModeExtension Extension methods for CompatibilityMode Inheritance Object CompatibilityModeExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public static class CompatibilityModeExtension Methods | Improve this Doc View Source HandleCompatibilty(CompatibilityMode, String) Handles unsupported generator features according to a compatibility mode. Declaration public static string HandleCompatibilty(this CompatibilityMode mode, string message) Parameters Type Name Description CompatibilityMode mode The compatibility modee String message The exception message (if any gets thrown) Returns Type Description String The string to be returned (if no exception was thrown) Exceptions Type Condition DatabaseOperationNotSupportedException The exception to be thrown"
  },
  "api/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html": {
    "href": "api/FluentMigrator.Runner.Generators.CompatabilityModeExtension.html",
    "title": "Class CompatabilityModeExtension | FluentMigrator documentation",
    "keywords": "Class CompatabilityModeExtension Inheritance Object CompatabilityModeExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public static class CompatabilityModeExtension Methods | Improve this Doc View Source HandleCompatabilty(CompatabilityMode, String) Declaration [Obsolete] public static string HandleCompatabilty(this CompatabilityMode mode, string message) Parameters Type Name Description CompatabilityMode mode String message Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Generators.Base.html": {
    "href": "api/FluentMigrator.Runner.Generators.Base.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Base | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Base Classes ColumnBase The base class for column definitions GeneratorBase TypeMapBase"
  },
  "api/FluentMigrator.Runner.Generators.Base.TypeMapBase.html": {
    "href": "api/FluentMigrator.Runner.Generators.Base.TypeMapBase.html",
    "title": "Class TypeMapBase | FluentMigrator documentation",
    "keywords": "Class TypeMapBase Inheritance Object TypeMapBase OracleTypeMap SqlAnywhere16TypeMap SqlServer2000TypeMap SqlServerCeTypeMap Implements ITypeMap Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class TypeMapBase : ITypeMap Constructors | Improve this Doc View Source TypeMapBase() Declaration protected TypeMapBase() Fields | Improve this Doc View Source PrecisionPlaceholder Declaration protected const string PrecisionPlaceholder = \"$precision\" Field Value Type Description String Methods | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Get the SQL type for a DbType Declaration [Obsolete] public virtual string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Int32 size The requested size (in DB lingua: precision) Int32 precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Get the SQL type for a DbType Declaration public virtual string GetTypeMap(DbType type, int? size, int? precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Nullable < Int32 > size The requested size (in DB lingua: precision) Nullable < Int32 > precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source SetTypeMap(DbType, String) Declaration protected void SetTypeMap(DbType type, string template) Parameters Type Name Description DbType type String template | Improve this Doc View Source SetTypeMap(DbType, String, Int32) Declaration protected void SetTypeMap(DbType type, string template, int maxSize) Parameters Type Name Description DbType type String template Int32 maxSize | Improve this Doc View Source SetupTypeMaps() Declaration protected abstract void SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.Base.GeneratorBase.html": {
    "href": "api/FluentMigrator.Runner.Generators.Base.GeneratorBase.html",
    "title": "Class GeneratorBase | FluentMigrator documentation",
    "keywords": "Class GeneratorBase Inheritance Object GeneratorBase GenericGenerator Implements IMigrationGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GeneratorBase : IMigrationGenerator Constructors | Improve this Doc View Source GeneratorBase(IColumn, IQuoter, IDescriptionGenerator) Declaration public GeneratorBase(IColumn column, IQuoter quoter, IDescriptionGenerator descriptionGenerator) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator Properties | Improve this Doc View Source Column Declaration protected IColumn Column { get; } Property Value Type Description IColumn | Improve this Doc View Source DescriptionGenerator Declaration protected IDescriptionGenerator DescriptionGenerator { get; } Property Value Type Description IDescriptionGenerator | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public abstract string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public abstract string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public abstract string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(AlterTableExpression) Declaration public virtual string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public abstract string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public abstract string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public abstract string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public abstract string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public abstract string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public abstract string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(CreateTableExpression) Declaration public abstract string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public abstract string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public abstract string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public abstract string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public abstract string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public abstract string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public abstract string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public abstract string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public abstract string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public abstract string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(InsertDataExpression) Declaration public abstract string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public abstract string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String | Improve this Doc View Source Generate(RenameTableExpression) Declaration public abstract string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public abstract string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public virtual bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html": {
    "href": "api/FluentMigrator.Runner.Exceptions.VersionOrderInvalidException.html",
    "title": "Class VersionOrderInvalidException | FluentMigrator documentation",
    "keywords": "Class VersionOrderInvalidException Inheritance Object Exception FluentMigratorException RunnerException VersionOrderInvalidException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class VersionOrderInvalidException : RunnerException, _Exception, ISerializable Constructors | Improve this Doc View Source VersionOrderInvalidException(IEnumerable<KeyValuePair<Int64, IMigrationInfo>>) Declaration public VersionOrderInvalidException(IEnumerable<KeyValuePair<long, IMigrationInfo>> invalidMigrations) Parameters Type Name Description IEnumerable < System.Collections.Generic.KeyValuePair < Int64 , IMigrationInfo >> invalidMigrations Properties | Improve this Doc View Source InvalidMigrations Declaration public IEnumerable<KeyValuePair<long, IMigrationInfo>> InvalidMigrations { get; set; } Property Value Type Description IEnumerable < System.Collections.Generic.KeyValuePair < Int64 , IMigrationInfo >> | Improve this Doc View Source InvalidVersions Declaration public IEnumerable<long> InvalidVersions { get; } Property Value Type Description IEnumerable < Int64 > | Improve this Doc View Source Message Declaration public override string Message { get; } Property Value Type Description String Overrides Exception.Message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Runner.Exceptions.RunnerException.html": {
    "href": "api/FluentMigrator.Runner.Exceptions.RunnerException.html",
    "title": "Class RunnerException | FluentMigrator documentation",
    "keywords": "Class RunnerException Inheritance Object Exception FluentMigratorException RunnerException InvalidMigrationException MissingMigrationsException VersionOrderInvalidException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class RunnerException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source RunnerException() Declaration protected RunnerException() | Improve this Doc View Source RunnerException(SerializationInfo, StreamingContext) Declaration protected RunnerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source RunnerException(String) Declaration protected RunnerException(string message) Parameters Type Name Description String message | Improve this Doc View Source RunnerException(String, Exception) Declaration protected RunnerException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html": {
    "href": "api/FluentMigrator.Runner.Exceptions.MissingMigrationsException.html",
    "title": "Class MissingMigrationsException | FluentMigrator documentation",
    "keywords": "Class MissingMigrationsException Inheritance Object Exception FluentMigratorException RunnerException MissingMigrationsException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class MissingMigrationsException : RunnerException, _Exception, ISerializable Constructors | Improve this Doc View Source MissingMigrationsException() Declaration public MissingMigrationsException() | Improve this Doc View Source MissingMigrationsException(SerializationInfo, StreamingContext) Declaration public MissingMigrationsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source MissingMigrationsException(String) Declaration public MissingMigrationsException(string message) Parameters Type Name Description String message | Improve this Doc View Source MissingMigrationsException(String, Exception) Declaration public MissingMigrationsException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html": {
    "href": "api/FluentMigrator.Runner.Exceptions.InvalidMigrationException.html",
    "title": "Class InvalidMigrationException | FluentMigrator documentation",
    "keywords": "Class InvalidMigrationException Inheritance Object Exception FluentMigratorException RunnerException InvalidMigrationException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Runner.Exceptions Assembly : FluentMigrator.Runner.dll Syntax public class InvalidMigrationException : RunnerException, _Exception, ISerializable Constructors | Improve this Doc View Source InvalidMigrationException(IMigration, String) Declaration public InvalidMigrationException(IMigration migration, string errors) Parameters Type Name Description IMigration migration String errors Properties | Improve this Doc View Source Message Declaration public override string Message { get; } Property Value Type Description String Overrides Exception.Message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Runner.DefaultMigrationInformationLoader.html": {
    "href": "api/FluentMigrator.Runner.DefaultMigrationInformationLoader.html",
    "title": "Class DefaultMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationInformationLoader Inheritance Object DefaultMigrationInformationLoader Implements IMigrationInformationLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultMigrationInformationLoader : IMigrationInformationLoader Constructors | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, Boolean, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, IAssemblyCollection, String, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, IAssemblyCollection assemblies, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions IAssemblyCollection assemblies String namespace IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, Boolean, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, bool loadNestedNamespaces, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace Boolean loadNestedNamespaces IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationRunnerConventions, Assembly, String, IEnumerable<String>) Declaration [Obsolete] public DefaultMigrationInformationLoader(IMigrationRunnerConventions conventions, Assembly assembly, string namespace, IEnumerable<string> tagsToMatch) Parameters Type Name Description IMigrationRunnerConventions conventions Assembly assembly String namespace IEnumerable < String > tagsToMatch | Improve this Doc View Source DefaultMigrationInformationLoader(IMigrationSource, IOptions<TypeFilterOptions>, IMigrationRunnerConventions, IOptions<RunnerOptions>) Declaration public DefaultMigrationInformationLoader([NotNull] IMigrationSource source, [NotNull] IOptions<TypeFilterOptions> filterOptions, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IOptions<RunnerOptions> runnerOptions) Parameters Type Name Description IMigrationSource source IOptions < TypeFilterOptions > filterOptions IMigrationRunnerConventions conventions IOptions < RunnerOptions > runnerOptions Properties | Improve this Doc View Source Assemblies Declaration [Obsolete] [CanBeNull] public IAssemblyCollection Assemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source Conventions Declaration [NotNull] public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source LoadNestedNamespaces Declaration public bool LoadNestedNamespaces { get; } Property Value Type Description Boolean | Improve this Doc View Source Namespace Declaration [CanBeNull] public string Namespace { get; } Property Value Type Description String | Improve this Doc View Source TagsToMatch Declaration [NotNull] [ItemNotNull] [Obsolete] public IEnumerable<string> TagsToMatch { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source LoadMigrations() Declaration public SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo > Implements IMigrationInformationLoader"
  },
  "api/FluentMigrator.Runner.DefaultConventionSet.html": {
    "href": "api/FluentMigrator.Runner.DefaultConventionSet.html",
    "title": "Class DefaultConventionSet | FluentMigrator documentation",
    "keywords": "Class DefaultConventionSet Inheritance Object DefaultConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class DefaultConventionSet : IConventionSet Constructors | Improve this Doc View Source DefaultConventionSet() Declaration public DefaultConventionSet() | Improve this Doc View Source DefaultConventionSet(IRunnerContext) Declaration [Obsolete] public DefaultConventionSet([CanBeNull] IRunnerContext runnerContext) Parameters Type Name Description IRunnerContext runnerContext | Improve this Doc View Source DefaultConventionSet(String, String) Declaration public DefaultConventionSet([CanBeNull] string defaultSchemaName, [CanBeNull] string workingDirectory) Parameters Type Name Description String defaultSchemaName String workingDirectory Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/FluentMigrator.Runner.Db2RunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.Db2RunnerBuilderExtensions.html",
    "title": "Class Db2RunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class Db2RunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object Db2RunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Db2.dll Syntax public static class Db2RunnerBuilderExtensions Methods | Improve this Doc View Source AddDb2(IMigrationRunnerBuilder) Adds DB2 support (Linux and Windows server) Declaration public static IMigrationRunnerBuilder AddDb2(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the DB2-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddDb2ISeries(IMigrationRunnerBuilder) Adds DB2 iSeries support Declaration public static IMigrationRunnerBuilder AddDb2ISeries(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the DB2 iSeries-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.Conventions.html": {
    "href": "api/FluentMigrator.Runner.Conventions.html",
    "title": "Namespace FluentMigrator.Runner.Conventions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Conventions Classes ConventionSet A convenience (empty) implementation of IConventionSet DefaultAutoNameConvention The default implementation of a IAutoNameConvention DefaultConstraintNameConvention The default implementation of a IConstraintConvention DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention DefaultIndexNameConvention The default implementation of a IIndexConvention DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention DefaultRootPathConvention The default implementation of a IRootPathConvention DefaultSchemaConvention The class handling the default schema name DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Interfaces IAutoNameConvention A convention working on IAutoNameExpression implementations IColumnsConvention A convention working on IColumnsExpression implementations IConstraintConvention A convention working on IConstraintExpression implementations IConventionSet A set of conventions to be applied to expressions IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name IForeignKeyConvention A convention working on IForeignKeyExpression implementations IIndexConvention A convention working on IIndexExpression implementations IRootPathConvention A convention working on IFileSystemExpression implementations ISequenceConvention A convention working on ISequenceExpression implementations"
  },
  "api/FluentMigrator.Runner.Conventions.IAutoNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IAutoNameConvention.html",
    "title": "Interface IAutoNameConvention | FluentMigrator documentation",
    "keywords": "Interface IAutoNameConvention A convention working on IAutoNameExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAutoNameConvention Methods | Improve this Doc View Source Apply(IAutoNameExpression) Applies a convention to a IAutoNameExpression Declaration IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression The expression this convention should be applied to Returns Type Description IAutoNameExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultSchemaNameConvention.html",
    "title": "Class DefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaNameConvention The default implementation of the IDefaultSchemaNameConvention Inheritance Object DefaultSchemaNameConvention Implements IDefaultSchemaNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultSchemaNameConvention : IDefaultSchemaNameConvention Constructors | Improve this Doc View Source DefaultSchemaNameConvention(String) Initializes a new instance of the IDefaultSchemaNameConvention class. Declaration public DefaultSchemaNameConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name (can be null or empty) Methods | Improve this Doc View Source GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration public string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty Implements IDefaultSchemaNameConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultSchemaConvention.html",
    "title": "Class DefaultSchemaConvention | FluentMigrator documentation",
    "keywords": "Class DefaultSchemaConvention The class handling the default schema name Inheritance Object DefaultSchemaConvention Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DefaultSchemaConvention : IForeignKeyConvention, IConstraintConvention, IIndexConvention, ISequenceConvention Remarks This class handles all ISchemaExpression and additionally implements other conventions that give access to schema names (e.g. IForeignKeyConvention ). Constructors | Improve this Doc View Source DefaultSchemaConvention() Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention() | Improve this Doc View Source DefaultSchemaConvention(IDefaultSchemaNameConvention) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(IDefaultSchemaNameConvention defaultSchemaNameConvention) Parameters Type Name Description IDefaultSchemaNameConvention defaultSchemaNameConvention The convention used to return the default schema name for a given original schema name. | Improve this Doc View Source DefaultSchemaConvention(String) Initializes a new instance of the DefaultSchemaConvention class. Declaration public DefaultSchemaConvention(string defaultSchemaName) Parameters Type Name Description String defaultSchemaName The default schema name Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(ISchemaExpression) Applies a convention to a ISchemaExpression Declaration public ISchemaExpression Apply(ISchemaExpression expression) Parameters Type Name Description ISchemaExpression expression The expression this convention should be applied to Returns Type Description ISchemaExpression The same or a new expression. The underlying type must stay the same. | Improve this Doc View Source Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration public ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention IConstraintConvention IIndexConvention ISequenceConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultRootPathConvention.html",
    "title": "Class DefaultRootPathConvention | FluentMigrator documentation",
    "keywords": "Class DefaultRootPathConvention The default implementation of a IRootPathConvention Inheritance Object DefaultRootPathConvention Implements IRootPathConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultRootPathConvention : IRootPathConvention Remarks It sets the working directory, which is either the path given in the constructor or - when the given path is null - the current directory. Constructors | Improve this Doc View Source DefaultRootPathConvention(String) Initializes a new instance of the DefaultRootPathConvention class. Declaration public DefaultRootPathConvention(string rootPath) Parameters Type Name Description String rootPath The root path for expressions requiring file system access. Remarks When rootPath is null, then the current directory is returned Methods | Improve this Doc View Source Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration public IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same. Implements IRootPathConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultPrimaryKeyNameConvention.html",
    "title": "Class DefaultPrimaryKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultPrimaryKeyNameConvention The default implementation of a IColumnsConvention Inheritance Object DefaultPrimaryKeyNameConvention Implements IColumnsConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultPrimaryKeyNameConvention : IColumnsConvention Remarks It sets the default constraint name of a primary key column. Methods | Improve this Doc View Source Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration public IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same. Implements IColumnsConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultIndexNameConvention.html",
    "title": "Class DefaultIndexNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultIndexNameConvention The default implementation of a IIndexConvention Inheritance Object DefaultIndexNameConvention Implements IIndexConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultIndexNameConvention : IIndexConvention Remarks It sets the default name of an index. Methods | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration public IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same. Implements IIndexConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultForeignKeyNameConvention.html",
    "title": "Class DefaultForeignKeyNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultForeignKeyNameConvention The default implementation of a IForeignKeyConvention Inheritance Object DefaultForeignKeyNameConvention Implements IForeignKeyConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultForeignKeyNameConvention : IForeignKeyConvention Remarks It sets the default name of a foreign key. Methods | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration public IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same. Implements IForeignKeyConvention"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultConstraintNameConvention.html",
    "title": "Class DefaultConstraintNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultConstraintNameConvention The default implementation of a IConstraintConvention Inheritance Object DefaultConstraintNameConvention Implements IConstraintConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultConstraintNameConvention : IConstraintConvention Remarks It sets the default name of a constraint. Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration public IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same. Implements IConstraintConvention"
  },
  "api/FluentMigrator.Migration.html": {
    "href": "api/FluentMigrator.Migration.html",
    "title": "Class Migration | FluentMigrator documentation",
    "keywords": "Class Migration The base migration class for custom SQL queries and data updates/deletions Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionDescriptionMigration VersionMigration VersionSchemaMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.Down() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class Migration : MigrationBase, IMigration Properties | Improve this Doc View Source Delete Gets the starting point for data deletions Declaration public IDeleteExpressionRoot Delete { get; } Property Value Type Description FluentMigrator.Builders.Delete.IDeleteExpressionRoot | Improve this Doc View Source Execute Gets the starting point for SQL execution Declaration public IExecuteExpressionRoot Execute { get; } Property Value Type Description FluentMigrator.Builders.Execute.IExecuteExpressionRoot | Improve this Doc View Source Update Gets the starting point for data updates Declaration public IUpdateExpressionRoot Update { get; } Property Value Type Description FluentMigrator.Builders.Update.IUpdateExpressionRoot Implements IMigration"
  },
  "api/FluentMigrator.MaintenanceAttribute.html": {
    "href": "api/FluentMigrator.MaintenanceAttribute.html",
    "title": "Class MaintenanceAttribute | FluentMigrator documentation",
    "keywords": "Class MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Inheritance Object Attribute MaintenanceAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class MaintenanceAttribute : Attribute, _Attribute Remarks Migration annotated with MaintenanceAttribute will be always executed when migrating the database to the latest version. The execution stage in which it would be executed is defined by Stage . The transaction behavior can also be defined with the TransactionBehavior , which if not specified defaults to the default transaction behavior. Constructors | Improve this Doc View Source MaintenanceAttribute(MigrationStage) Initializes a new instance of the MaintenanceAttribute class Declaration public MaintenanceAttribute(MigrationStage stage) Parameters Type Name Description MigrationStage stage The migration stage when the migration should be applied | Improve this Doc View Source MaintenanceAttribute(MigrationStage, TransactionBehavior) Initializes a new instance of the MaintenanceAttribute class. Declaration public MaintenanceAttribute(MigrationStage stage, TransactionBehavior transactionBehavior) Parameters Type Name Description MigrationStage stage The migration stage when the migration should be applied TransactionBehavior transactionBehavior The desired transaction behavior Properties | Improve this Doc View Source Stage Gets the migration stage when the migration should be applied Declaration public MigrationStage Stage { get; } Property Value Type Description MigrationStage | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.LegacyValidationExtensions.html": {
    "href": "api/FluentMigrator.LegacyValidationExtensions.html",
    "title": "Class LegacyValidationExtensions | FluentMigrator documentation",
    "keywords": "Class LegacyValidationExtensions Extension methods for the obsolete ICanBeValidated Inheritance Object LegacyValidationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public static class LegacyValidationExtensions Methods | Improve this Doc View Source CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) Collects all error messages Declaration [Obsolete] public static void CollectErrors(this ICanBeValidated value, ICollection<string> errors, IServiceProvider serviceProvider = null) Parameters Type Name Description ICanBeValidated value The value to collect the errors for ICollection < String > errors The collected errors IServiceProvider serviceProvider The service provider used to resolve services | Improve this Doc View Source TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) Tries to collect errors using the data annotation validation Declaration [Obsolete] public static bool TryCollectResults(this ICanBeValidated rootValue, ICollection<ValidationResult> results, IServiceProvider serviceProvider, IDictionary<object, object> items = null) Parameters Type Name Description ICanBeValidated rootValue The value to collect the errors for ICollection < System.ComponentModel.DataAnnotations.ValidationResult > results The validation results IServiceProvider serviceProvider The service provider used to resolve services IDictionary < Object , Object > items Key/value pairs passed to the validation functions Returns Type Description Boolean true when no errors were found"
  },
  "api/FluentMigrator.Infrastructure.html": {
    "href": "api/FluentMigrator.Infrastructure.html",
    "title": "Namespace FluentMigrator.Infrastructure | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure Classes AssemblyCollection An assembly collection for multiple assemblies DefaultEmbeddedResourceProvider The default implementation of the IEmbeddedResourceProvider interface ErrorMessages Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw. ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to MigrationContext The default implementation of the IMigrationContext MigrationInfo The default IMigrationInfo implementation for migrations with the MigrationAttribute NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo . SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Interfaces IAssemblyCollection A bundle of one or more Assembly instances ICanBeValidated Interface definition for validation IEmbeddedResourceProvider Interface for getting all embedded resources IMigrationContext The context of a migration while collecting up/down expressions IMigrationInfo Interface for migration information ISupportAdditionalFeatures Provides a dictionary to store values for non-standard additional features"
  },
  "api/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html": {
    "href": "api/FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.html",
    "title": "Class ManifestResourceNameWithAssembly | FluentMigrator documentation",
    "keywords": "Class ManifestResourceNameWithAssembly Combines a ManifestResourceName with the assembly it belongs to Inheritance Object ManifestResourceNameWithAssembly Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class ManifestResourceNameWithAssembly Constructors | Improve this Doc View Source ManifestResourceNameWithAssembly(String, Assembly) Initializes a new instance of the ManifestResourceNameWithAssembly class. Declaration public ManifestResourceNameWithAssembly(string name, Assembly assembly) Parameters Type Name Description String name The ressource name Assembly assembly The assembly this ressource name belongs to Properties | Improve this Doc View Source Assembly Gets the assembly the ressource Name belongs to Declaration public Assembly Assembly { get; } Property Value Type Description Assembly | Improve this Doc View Source Name Gets the ressource name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html": {
    "href": "api/FluentMigrator.Infrastructure.ISupportAdditionalFeatures.html",
    "title": "Interface ISupportAdditionalFeatures | FluentMigrator documentation",
    "keywords": "Interface ISupportAdditionalFeatures Provides a dictionary to store values for non-standard additional features Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > Extension Methods AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Infrastructure.IMigrationInfo.html": {
    "href": "api/FluentMigrator.Infrastructure.IMigrationInfo.html",
    "title": "Interface IMigrationInfo | FluentMigrator documentation",
    "keywords": "Interface IMigrationInfo Interface for migration information Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationInfo Properties | Improve this Doc View Source Description Gets the migration description Declaration string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source GetName() Gets the migration name Declaration string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/FluentMigrator.Infrastructure.IMigrationContext.html": {
    "href": "api/FluentMigrator.Infrastructure.IMigrationContext.html",
    "title": "Interface IMigrationContext | FluentMigrator documentation",
    "keywords": "Interface IMigrationContext The context of a migration while collecting up/down expressions Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationContext Properties | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete] object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string Declaration string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source Expressions Gets or sets the collection of expressions Declaration ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > | Improve this Doc View Source MigrationAssemblies Gets or sets the collection of migration assemblies Declaration [Obsolete] [CanBeNull] IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source QuerySchema Gets the IQuerySchema to access the database Declaration IQuerySchema QuerySchema { get; } Property Value Type Description IQuerySchema | Improve this Doc View Source ServiceProvider Gets the service provider used to create this migration context Declaration [NotNull] IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider"
  },
  "api/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html": {
    "href": "api/FluentMigrator.Infrastructure.Extensions.ExtensionsForIMigrationInfo.html",
    "title": "Class ExtensionsForIMigrationInfo | FluentMigrator documentation",
    "keywords": "Class ExtensionsForIMigrationInfo Extension methods for IMigrationInfo Inheritance Object ExtensionsForIMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForIMigrationInfo Methods | Improve this Doc View Source IsAttributed(IMigrationInfo) Returns true when the migration behind the migrationInfo has a migration attribute Declaration public static bool IsAttributed(this IMigrationInfo migrationInfo) Parameters Type Name Description IMigrationInfo migrationInfo The migration information to test Returns Type Description Boolean true when the migration behind the migrationInfo has a migration attribute"
  },
  "api/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html": {
    "href": "api/FluentMigrator.Infrastructure.Extensions.ExtensionsForICustomAttributeProvider.html",
    "title": "Class ExtensionsForICustomAttributeProvider | FluentMigrator documentation",
    "keywords": "Class ExtensionsForICustomAttributeProvider Extension methods for ICustomAttributeProvider Inheritance Object ExtensionsForICustomAttributeProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.dll Syntax public static class ExtensionsForICustomAttributeProvider Methods | Improve this Doc View Source GetAllAttributes<T>(ICustomAttributeProvider) Get all attributes of exactly the given type Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description T[] The found attributes Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetAllAttributes<T>(ICustomAttributeProvider, Boolean) Get all attributes of the given type Declaration public static T[] GetAllAttributes<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description T[] The found attributes Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetOneAttribute<T>(ICustomAttributeProvider) Get the first attribute of exactly the given type Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description T The found attribute or null Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source GetOneAttribute<T>(ICustomAttributeProvider, Boolean) Get the first attribute of the given type Declaration public static T GetOneAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description T The found attribute or null Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source HasAttribute<T>(ICustomAttributeProvider) Returns a value indicating whether the custom attribute provider contains the given attribute Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Returns Type Description Boolean true when an attribute with the given type could be found Type Parameters Name Description T The attribute type to search for | Improve this Doc View Source HasAttribute<T>(ICustomAttributeProvider, Boolean) Returns a value indicating whether the custom attribute provider contains the given attribute Declaration public static bool HasAttribute<T>(this ICustomAttributeProvider member, bool inherit) where T : Attribute Parameters Type Name Description ICustomAttributeProvider member The ICustomAttributeProvider Boolean inherit true when attributes derived form T should be returned too Returns Type Description Boolean true when an attribute with the given type could be found Type Parameters Name Description T The attribute type to search for"
  },
  "api/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html": {
    "href": "api/FluentMigrator.Infrastructure.Extensions.CloneExtensions.html",
    "title": "Class CloneExtensions | FluentMigrator documentation",
    "keywords": "Class CloneExtensions Extension methods for cloning Inheritance Object CloneExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class CloneExtensions Methods | Improve this Doc View Source Clone(IEnumerable<KeyValuePair<String, Object>>) Clones all key/value pairs Declaration public static Dictionary<string, object> Clone(this IEnumerable<KeyValuePair<string, object>> dict) Parameters Type Name Description IEnumerable < System.Collections.Generic.KeyValuePair < String , Object >> dict The key value pairs to clone Returns Type Description Dictionary < String , Object > The cloned key/value pairs | Improve this Doc View Source CloneAll<T>(IEnumerable<T>) Clones all items Declaration public static IEnumerable<T> CloneAll<T>(this IEnumerable<T> items) where T : ICloneable Parameters Type Name Description IEnumerable <T> items The items to clone Returns Type Description IEnumerable <T> The cloned items Type Parameters Name Description T The item type | Improve this Doc View Source CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>) Clones the values of dict and stores them into target Declaration public static void CloneTo(this IEnumerable<KeyValuePair<string, object>> dict, IDictionary<string, object> target) Parameters Type Name Description IEnumerable < System.Collections.Generic.KeyValuePair < String , Object >> dict The key/value pairs to clone IDictionary < String , Object > target The target dictionary to store the cloned key/value pairs"
  },
  "api/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html": {
    "href": "api/FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.html",
    "title": "Class AdditionalFeaturesExtensions | FluentMigrator documentation",
    "keywords": "Class AdditionalFeaturesExtensions Extension methods for the ISupportAdditionalFeatures interface Inheritance Object AdditionalFeaturesExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure.Extensions Assembly : FluentMigrator.Abstractions.dll Syntax public static class AdditionalFeaturesExtensions Methods | Improve this Doc View Source GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Gets an additional feature value Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T defaultValue = null) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary T defaultValue The default value to be used if none was found Returns Type Description T The stored value or the defaultValue Type Parameters Name Description T The value type | Improve this Doc View Source GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) Gets an additional feature value Declaration public static T GetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, Func<T> createDefaultValue) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary Func <T> createDefaultValue A lambda to create a default value Returns Type Description T The stored or a newly created value Type Parameters Name Description T The value type | Improve this Doc View Source SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) Sets the value for an additional feature Declaration public static void SetAdditionalFeature<T>(this ISupportAdditionalFeatures additionalFeatures, string key, T value) Parameters Type Name Description ISupportAdditionalFeatures additionalFeatures The additional feature values String key The key into the AdditionalFeatures dictionary T value The value to be set Type Parameters Name Description T The value type"
  },
  "api/FluentMigrator.IMigrationProcessorOptions.html": {
    "href": "api/FluentMigrator.IMigrationProcessorOptions.html",
    "title": "Interface IMigrationProcessorOptions | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorOptions Options for the IMigrationProcessor Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public interface IMigrationProcessorOptions Properties | Improve this Doc View Source PreviewOnly Gets a value indicating whether a preview-only mode is active Declaration bool PreviewOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source ProviderSwitches Gets the provider switches Declaration string ProviderSwitches { get; } Property Value Type Description String | Improve this Doc View Source Timeout Gets the global timeout Declaration int? Timeout { get; } Property Value Type Description Nullable < Int32 >"
  },
  "api/FluentMigrator.IMigrationProcessor.html": {
    "href": "api/FluentMigrator.IMigrationProcessor.html",
    "title": "Interface IMigrationProcessor | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessor Interface for a migration processor Inherited Members IQuerySchema.DatabaseType IQuerySchema.DatabaseTypeAliases IQuerySchema.SchemaExists(String) IQuerySchema.TableExists(String, String) IQuerySchema.ColumnExists(String, String, String) IQuerySchema.ConstraintExists(String, String, String) IQuerySchema.IndexExists(String, String, String) IQuerySchema.SequenceExists(String, String) IQuerySchema.DefaultValueExists(String, String, String, Object) IDisposable.Dispose() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationProcessor : IQuerySchema, IDisposable Remarks A migration processor generates the SQL statements using a IMigrationGenerator and executes it using the given connection string. Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration [Obsolete] string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source Options Gets the migration processor options Declaration [Obsolete] IMigrationProcessorOptions Options { get; } Property Value Type Description IMigrationProcessorOptions Methods | Improve this Doc View Source BeginTransaction() Begins a transaction Declaration void BeginTransaction() | Improve this Doc View Source CommitTransaction() Commits a transaction Declaration void CommitTransaction() | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Execute an SQL statement Declaration void Execute(string template, params object[] args) Parameters Type Name Description String template The SQL statement Object [] args The arguments to replace in the SQL statement | Improve this Doc View Source Exists(String, Object[]) Returns true if data could be found for the given SQL query Declaration bool Exists(string template, params object[] args) Parameters Type Name Description String template The SQL query Object [] args The arguments of the SQL query Returns Type Description Boolean true when the SQL query returned data | Improve this Doc View Source Process(AlterColumnExpression) Executes a ALTER TABLE ALTER COLUMN SQL expression Declaration void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression The expression to execute | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Executes an SQL expression to alter a default constraint Declaration void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression The expression to execute | Improve this Doc View Source Process(AlterSchemaExpression) Executes a ALTER SCHEMA SQL expression Declaration void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression The expression to execute | Improve this Doc View Source Process(AlterTableExpression) Executes a ALTER TABLE SQL expression Declaration void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression The expression to execute | Improve this Doc View Source Process(CreateColumnExpression) Executes a ALTER TABLE ADD COLUMN SQL expression Declaration void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression The expression to execute | Improve this Doc View Source Process(CreateConstraintExpression) Executes an SQL expression to create a constraint Declaration void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression The expression to execute | Improve this Doc View Source Process(CreateForeignKeyExpression) Executes an SQL expression to create a foreign key Declaration void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression The expression to execute | Improve this Doc View Source Process(CreateIndexExpression) Executes an SQL expression to create an index Declaration void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression The expression to execute | Improve this Doc View Source Process(CreateSchemaExpression) Executes a CREATE SCHEMA SQL expression Declaration void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression The expression to execute | Improve this Doc View Source Process(CreateSequenceExpression) Executes a CREATE SEQUENCE SQL expression Declaration void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression The expression to execute | Improve this Doc View Source Process(CreateTableExpression) Executes a CREATE TABLE SQL expression Declaration void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression The expression to execute | Improve this Doc View Source Process(DeleteColumnExpression) Executes a ALTER TABLE DROP COLUMN SQL expression Declaration void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression The expression to execute | Improve this Doc View Source Process(DeleteConstraintExpression) Executes an SQL expression to drop a constraint Declaration void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression The expression to execute | Improve this Doc View Source Process(DeleteDataExpression) Executes an SQL expression to DELETE data Declaration void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression The expression to execute | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Executes an SQL expression to drop a default constraint Declaration void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression The expression to execute | Improve this Doc View Source Process(DeleteForeignKeyExpression) Executes an SQL expression to drop a foreign key Declaration void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression The expression to execute | Improve this Doc View Source Process(DeleteIndexExpression) Executes an SQL expression to drop an index Declaration void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression The expression to execute | Improve this Doc View Source Process(DeleteSchemaExpression) Executes a DROP SCHEMA SQL expression Declaration void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression The expression to execute | Improve this Doc View Source Process(DeleteSequenceExpression) Executes a DROP SEQUENCE SQL expression Declaration void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression The expression to execute | Improve this Doc View Source Process(DeleteTableExpression) Executes a DROP TABLE SQL expression Declaration void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression The expression to execute | Improve this Doc View Source Process(InsertDataExpression) Executes an SQL expression to INSERT data Declaration void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression The expression to execute | Improve this Doc View Source Process(PerformDBOperationExpression) Executes a DB operation Declaration void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression The expression to execute | Improve this Doc View Source Process(RenameColumnExpression) Executes an SQL expression to rename a column Declaration void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression The expression to execute | Improve this Doc View Source Process(RenameTableExpression) Executes an SQL expression to rename a table Declaration void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression The expression to execute | Improve this Doc View Source Process(UpdateDataExpression) Executes an SQL expression to UPDATE data Declaration void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression The expression to execute | Improve this Doc View Source Read(String, Object[]) Executes and returns the result of an SQL query Declaration DataSet Read(string template, params object[] args) Parameters Type Name Description String template The SQL query Object [] args The arguments of the SQL query Returns Type Description DataSet The data from the specified SQL query | Improve this Doc View Source ReadTableData(String, String) Reads all data from all rows from a table Declaration DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName The schema name of the table String tableName The table name Returns Type Description DataSet The data from the specified table | Improve this Doc View Source RollbackTransaction() Rollback of a transaction Declaration void RollbackTransaction()"
  },
  "api/FluentMigrator.IMigrationGenerator.html": {
    "href": "api/FluentMigrator.IMigrationGenerator.html",
    "title": "Interface IMigrationGenerator | FluentMigrator documentation",
    "keywords": "Interface IMigrationGenerator Base interface for a migration SQL generator Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationGenerator Methods | Improve this Doc View Source Generate(AlterColumnExpression) Generates a ALTER TABLE ALTER COLUMN SQL statement Declaration string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Generates an SQL statement to alter a DEFAULT constraint Declaration string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterSchemaExpression) Generates an SQL statement to move a table from one schema to another Declaration string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(AlterTableExpression) Generates a ALTER TABLE SQL statement Declaration string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateColumnExpression) Generates a ALTER TABLE ADD COLUMN SQL statement Declaration string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateConstraintExpression) Generates an SQL statement to create a constraint Declaration string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateForeignKeyExpression) Generates an SQL statement to create a foreign key Declaration string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateIndexExpression) Generates an SQL statement to create an index Declaration string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateSchemaExpression) Generates a CREATE SCHEMA SQL statement Declaration string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateSequenceExpression) Generates a CREATE SEQUENCE SQL statement Declaration string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(CreateTableExpression) Generates a CREATE TABLE SQL statement Declaration string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteColumnExpression) Generates a ALTER TABLE DROP COLUMN SQL statement Declaration string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteConstraintExpression) Generates an SQL statement to drop a constraint Declaration string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteDataExpression) Generates an SQL statement to DELETE data Declaration string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Generates an SQL statement to drop a default constraint Declaration string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Generates an SQL statement to delete a foreign key Declaration string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteIndexExpression) Generates an SQL statement to drop an index Declaration string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteSchemaExpression) Generates a DROP SCHEMA SQL statement Declaration string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteSequenceExpression) Generates a DROP SEQUENCE SQL statement Declaration string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(DeleteTableExpression) Generates a DROP TABLE SQL statement Declaration string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(InsertDataExpression) Generates an SQL statement to INSERT data Declaration string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(RenameColumnExpression) Generates an SQL statement to rename a column Declaration string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(RenameTableExpression) Generates an SQL statement to rename a table Declaration string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression The expression to create the SQL for Returns Type Description String The generated SQL | Improve this Doc View Source Generate(UpdateDataExpression) Generates an SQL statement to UPDATE data Declaration string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression The expression to create the SQL for Returns Type Description String The generated SQL"
  },
  "api/FluentMigrator.IMigration.html": {
    "href": "api/FluentMigrator.IMigration.html",
    "title": "Interface IMigration | FluentMigrator documentation",
    "keywords": "Interface IMigration The base interface for all migrations Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigration Properties | Improve this Doc View Source ApplicationContext Gets the arbitrary application context passed to the task runner Declaration object ApplicationContext { get; } Property Value Type Description Object | Improve this Doc View Source ConnectionString Gets the connection string passed to the task runner Declaration string ConnectionString { get; } Property Value Type Description String Methods | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions | Improve this Doc View Source GetUpExpressions(IMigrationContext) Collects all Up migration expressions in the context . Declaration void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Up migration expressions"
  },
  "api/FluentMigrator.Expressions.RenameColumnExpression.html": {
    "href": "api/FluentMigrator.Expressions.RenameColumnExpression.html",
    "title": "Class RenameColumnExpression | FluentMigrator documentation",
    "keywords": "Class RenameColumnExpression Expression to rename a column Inheritance Object MigrationExpressionBase RenameColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source NewName Gets or sets the new column name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"NewColumnNameCannotBeNullOrEmpty\")] public virtual string NewName { get; set; } Property Value Type Description String | Improve this Doc View Source OldName Gets or sets the old column name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"OldColumnNameCannotBeNullOrEmpty\")] public virtual string OldName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the name of the table Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.PerformDBOperationExpression.html": {
    "href": "api/FluentMigrator.Expressions.PerformDBOperationExpression.html",
    "title": "Class PerformDBOperationExpression | FluentMigrator documentation",
    "keywords": "Class PerformDBOperationExpression Expression that allows the execution of DB operations Inheritance Object MigrationExpressionBase PerformDBOperationExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class PerformDBOperationExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source Operation Gets or sets the operation to be executed for a given database connection Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"OperationCannotBeNull\")] public Action<IDbConnection, IDbTransaction> Operation { get; set; } Property Value Type Description Action < IDbConnection , IDbTransaction > Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.ISequenceExpression.html": {
    "href": "api/FluentMigrator.Expressions.ISequenceExpression.html",
    "title": "Interface ISequenceExpression | FluentMigrator documentation",
    "keywords": "Interface ISequenceExpression Opt-in into the sequence expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISequenceExpression Properties | Improve this Doc View Source Sequence Gets the sequence definition Declaration SequenceDefinition Sequence { get; } Property Value Type Description SequenceDefinition"
  },
  "api/FluentMigrator.Expressions.ISchemaExpression.html": {
    "href": "api/FluentMigrator.Expressions.ISchemaExpression.html",
    "title": "Interface ISchemaExpression | FluentMigrator documentation",
    "keywords": "Interface ISchemaExpression Opt-in into the schema expression convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration string SchemaName { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Expressions.IForeignKeyExpression.html": {
    "href": "api/FluentMigrator.Expressions.IForeignKeyExpression.html",
    "title": "Interface IForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyExpression Opt-in into the foreign key expressions conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IForeignKeyExpression Properties | Improve this Doc View Source ForeignKey Gets the foreign key defintion Declaration ForeignKeyDefinition ForeignKey { get; } Property Value Type Description ForeignKeyDefinition"
  },
  "api/FluentMigrator.Expressions.IFileSystemExpression.html": {
    "href": "api/FluentMigrator.Expressions.IFileSystemExpression.html",
    "title": "Interface IFileSystemExpression | FluentMigrator documentation",
    "keywords": "Interface IFileSystemExpression Opt-in into the file system convention Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IFileSystemExpression Properties | Improve this Doc View Source RootPath Gets or sets the root path (working directory) Declaration string RootPath { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.html": {
    "href": "api/FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.html",
    "title": "Class ExecuteSqlScriptExpressionBase | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlScriptExpressionBase The base class for SQL script execution Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.ExecuteWith(IMigrationProcessor) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class ExecuteSqlScriptExpressionBase : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source Parameters Gets or sets parameters to be replaced before script execution Declaration public IDictionary<string, string> Parameters { get; set; } Property Value Type Description IDictionary < String , String > Methods | Improve this Doc View Source Execute(IMigrationProcessor, String) Executes the sqlScript with the given processor Declaration protected void Execute(IMigrationProcessor processor, string sqlScript) Parameters Type Name Description IMigrationProcessor processor The processor to execute the script with String sqlScript The SQL script to execute Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html": {
    "href": "api/FluentMigrator.Expressions.ExecuteSqlScriptExpression.html",
    "title": "Class ExecuteSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlScriptExpression Expression to execute SQL scripts Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteSqlScriptExpression Implements IMigrationExpression ICanBeValidated IFileSystemExpression Inherited Members ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlScriptExpression : ExecuteSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated, IFileSystemExpression Properties | Improve this Doc View Source RootPath Gets or sets the root path where the SQL script file should be loaded from Declaration public string RootPath { get; set; } Property Value Type Description String | Improve this Doc View Source SqlScript Gets or sets the SQL script to be executed Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SqlScriptCannotBeNullOrEmpty\")] public string SqlScript { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated IFileSystemExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteTableExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteTableExpression.html",
    "title": "Class DeleteTableExpression | FluentMigrator documentation",
    "keywords": "Class DeleteTableExpression Expression to delete a table Inheritance Object MigrationExpressionBase DeleteTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteSequenceExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteSequenceExpression.html",
    "title": "Class DeleteSequenceExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSequenceExpression Expression to delete a sequence Inheritance Object MigrationExpressionBase DeleteSequenceExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source SequenceName Gets or sets the sequence name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SequenceNameCannotBeNullOrEmpty\")] public virtual string SequenceName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteForeignKeyExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteForeignKeyExpression.html",
    "title": "Class DeleteForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class DeleteForeignKeyExpression Expression to delete a foreign key Inheritance Object MigrationExpressionBase DeleteForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression, IValidatableObject Properties | Improve this Doc View Source ForeignKey Gets the foreign key defintion Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements IMigrationExpression ICanBeValidated IForeignKeyExpression System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteDefaultConstraintExpression.html",
    "title": "Class DeleteDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDefaultConstraintExpression Expression to delete constraints Inheritance Object MigrationExpressionBase DeleteDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source ColumnName Gets or sets the column name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ColumnNameCannotBeNullOrEmpty\")] public virtual string ColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteColumnExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteColumnExpression.html",
    "title": "Class DeleteColumnExpression | FluentMigrator documentation",
    "keywords": "Class DeleteColumnExpression Expression to delete a column Inheritance Object MigrationExpressionBase DeleteColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IValidatableObject Properties | Improve this Doc View Source ColumnNames Gets or sets the column names Declaration public ICollection<string> ColumnNames { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets a table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements IMigrationExpression ICanBeValidated ISchemaExpression System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.CreateTableExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateTableExpression.html",
    "title": "Class CreateTableExpression | FluentMigrator documentation",
    "keywords": "Class CreateTableExpression Expression to create a table Inheritance Object MigrationExpressionBase CreateTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression, IValidationChildren Properties | Improve this Doc View Source Columns Gets or sets the column definitions Declaration public virtual IList<ColumnDefinition> Columns { get; set; } Property Value Type Description IList < ColumnDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableDescription Gets or sets the table description Declaration public virtual string TableDescription { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IColumnsExpression.Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.CreateIndexExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateIndexExpression.html",
    "title": "Class CreateIndexExpression | FluentMigrator documentation",
    "keywords": "Class CreateIndexExpression Expression to create an index Inheritance Object MigrationExpressionBase CreateIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression, IValidationChildren Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Index Gets the index definition Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Expressions.CreateForeignKeyExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateForeignKeyExpression.html",
    "title": "Class CreateForeignKeyExpression | FluentMigrator documentation",
    "keywords": "Class CreateForeignKeyExpression Expression to create a foreign key Inheritance Object MigrationExpressionBase CreateForeignKeyExpression Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateForeignKeyExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, IForeignKeyExpression, IValidationChildren Properties | Improve this Doc View Source ForeignKey Gets the foreign key defintion Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated IForeignKeyExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.CreateColumnExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateColumnExpression.html",
    "title": "Class CreateColumnExpression | FluentMigrator documentation",
    "keywords": "Class CreateColumnExpression Expression to create a table Inheritance Object MigrationExpressionBase CreateColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IColumnsExpression, IValidationChildren Properties | Improve this Doc View Source Column Gets or sets the current column definition Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IColumnsExpression.Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> IColumnsExpression.Columns { get; } Returns Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IColumnsExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.AlterSchemaExpression.html": {
    "href": "api/FluentMigrator.Expressions.AlterSchemaExpression.html",
    "title": "Class AlterSchemaExpression | FluentMigrator documentation",
    "keywords": "Class AlterSchemaExpression Expression to move a table from one schema to another Inheritance Object MigrationExpressionBase AlterSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source DestinationSchemaName Gets or sets the destination schema name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"DestinationSchemaCannotBeNull\")] public virtual string DestinationSchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source SourceSchemaName Gets or sets the source schema name Declaration public virtual string SourceSchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html": {
    "href": "api/FluentMigrator.Expressions.AlterDefaultConstraintExpression.html",
    "title": "Class AlterDefaultConstraintExpression | FluentMigrator documentation",
    "keywords": "Class AlterDefaultConstraintExpression Expression to alter default constraints Inheritance Object MigrationExpressionBase AlterDefaultConstraintExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterDefaultConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source ColumnName Gets or sets the column name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ColumnNameCannotBeNullOrEmpty\")] public virtual string ColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultValue Gets or sets the default value Declaration [Required(AllowEmptyStrings = true, ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"DefaultValueCannotBeNull\")] public virtual object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.ExplicitUnicodeString.html": {
    "href": "api/FluentMigrator.ExplicitUnicodeString.html",
    "title": "Class ExplicitUnicodeString | FluentMigrator documentation",
    "keywords": "Class ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Inheritance Object ExplicitUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete(\"Use normal CLR strings instead, as they will be formatted to SQL Server Unicode strings\")] public class ExplicitUnicodeString Constructors | Improve this Doc View Source ExplicitUnicodeString(String) Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N Declaration public ExplicitUnicodeString(string text) Parameters Type Name Description String text Unicode string Properties | Improve this Doc View Source Text Gets the text of the unicode string literal Declaration public string Text { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/FluentMigrator.Exceptions.UndeterminableConnectionException.html": {
    "href": "api/FluentMigrator.Exceptions.UndeterminableConnectionException.html",
    "title": "Class UndeterminableConnectionException | FluentMigrator documentation",
    "keywords": "Class UndeterminableConnectionException Exception that gets thrown when no connection string could be found Inheritance Object Exception FluentMigratorException UndeterminableConnectionException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class UndeterminableConnectionException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source UndeterminableConnectionException() Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException() | Improve this Doc View Source UndeterminableConnectionException(SerializationInfo, StreamingContext) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source UndeterminableConnectionException(String) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source UndeterminableConnectionException(String, Exception) Initializes a new instance of the UndeterminableConnectionException class. Declaration public UndeterminableConnectionException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Exceptions.FluentMigratorException.html": {
    "href": "api/FluentMigrator.Exceptions.FluentMigratorException.html",
    "title": "Class FluentMigratorException | FluentMigrator documentation",
    "keywords": "Class FluentMigratorException The base exception class for FluentMigrator exceptions Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException DuplicateMigrationException ProcessorFactoryNotFoundException UndeterminableConnectionException RunnerException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public abstract class FluentMigratorException : Exception, _Exception, ISerializable Constructors | Improve this Doc View Source FluentMigratorException() Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException() | Improve this Doc View Source FluentMigratorException(SerializationInfo, StreamingContext) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source FluentMigratorException(String) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source FluentMigratorException(String, Exception) Initializes a new instance of the FluentMigratorException class. Declaration protected FluentMigratorException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html": {
    "href": "api/FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.html",
    "title": "Class DatabaseOperationNotSupportedException | FluentMigrator documentation",
    "keywords": "Class DatabaseOperationNotSupportedException Exception to be thrown when a database operation is not supported Inheritance Object Exception FluentMigratorException DatabaseOperationNotSupportedException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DatabaseOperationNotSupportedException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source DatabaseOperationNotSupportedException() Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException() | Improve this Doc View Source DatabaseOperationNotSupportedException(SerializationInfo, StreamingContext) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source DatabaseOperationNotSupportedException(String) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source DatabaseOperationNotSupportedException(String, Exception) Initializes a new instance of the DatabaseOperationNotSupportedException class. Declaration public DatabaseOperationNotSupportedException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.AutoReversingMigration.html": {
    "href": "api/FluentMigrator.AutoReversingMigration.html",
    "title": "Class AutoReversingMigration | FluentMigrator documentation",
    "keywords": "Class AutoReversingMigration A migration base class that will automatically generate the down expressions Inheritance Object MigrationBase AutoReversingMigration Implements IMigration Inherited Members MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class AutoReversingMigration : MigrationBase, IMigration Remarks This only works for some expressions like CREATE TABLE, but not for DROP TABLE. Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public override sealed void Down() Overrides MigrationBase.Down() | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration public override void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions Overrides MigrationBase.GetDownExpressions(IMigrationContext) Implements IMigration"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | FluentMigrator documentation",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes FluentMigratorServiceCollectionExtensions Extension methods for setting up the migration runner services in an IServiceCollection ."
  },
  "api/Microsoft.Extensions.DependencyInjection.FluentMigratorServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.FluentMigratorServiceCollectionExtensions.html",
    "title": "Class FluentMigratorServiceCollectionExtensions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorServiceCollectionExtensions Extension methods for setting up the migration runner services in an IServiceCollection . Inheritance Object FluentMigratorServiceCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : FluentMigrator.Runner.dll Syntax public static class FluentMigratorServiceCollectionExtensions Methods | Improve this Doc View Source AddFluentMigratorCore(IServiceCollection) Adds migration runner (except the DB processor specific) services to the specified IServiceCollection . Declaration [NotNull] public static IServiceCollection AddFluentMigratorCore([NotNull] this IServiceCollection services) Parameters Type Name Description IServiceCollection services The IServiceCollection to add services to. Returns Type Description IServiceCollection The updated service collection | Improve this Doc View Source ConfigureRunner(IServiceCollection, Action<IMigrationRunnerBuilder>) Configures the migration runner Declaration public static IServiceCollection ConfigureRunner([NotNull] this IServiceCollection services, [NotNull] Action<IMigrationRunnerBuilder> configure) Parameters Type Name Description IServiceCollection services The IServiceCollection to add services to. Action < IMigrationRunnerBuilder > configure The IMigrationRunnerBuilder configuration delegate. Returns Type Description IServiceCollection The updated service collection"
  },
  "api/FluentMigrator.html": {
    "href": "api/FluentMigrator.html",
    "title": "Namespace FluentMigrator | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator Classes AutoReversingMigration A migration base class that will automatically generate the down expressions AutoScriptMigration Migration that automatically uses embedded SQL scripts depending on the database type name ExplicitUnicodeString Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N ForwardOnlyMigration A forward-only migration LegacyValidationExtensions Extension methods for the obsolete ICanBeValidated MaintenanceAttribute Annotates migrations that should always be executed at a specified stage. Migration The base migration class for custom SQL queries and data updates/deletions MigrationAttribute Attribute for a migration MigrationBase The base migration class MigrationTraitAttribute A trait for a migration NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) ProfileAttribute Defines a profile for a migration RawSql A wrapper class for a SQL value SqlScriptTokenReplacer Function to replace token in an SQL script TagsAttribute Used to filter which migrations are run. TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Interfaces IMigration The base interface for all migrations IMigrationGenerator Base interface for a migration SQL generator IMigrationProcessor Interface for a migration processor IMigrationProcessorOptions Options for the IMigrationProcessor IQuerySchema Gets the interface to query a database Enums AutoNameContext Sets the context for the automatic name generation MigrationDirection The direction of the migration MigrationStage Represents a stage in the migration run. SqlAnywhereConstraintType The constraint type as supported by SQL Anywhere SqlServerConstraintType SystemMethods The well-known system methods TagBehavior The desired tag matching behavior TransactionBehavior The desired transaction behavior"
  },
  "api/FluentMigrator.Validation.html": {
    "href": "api/FluentMigrator.Validation.html",
    "title": "Namespace FluentMigrator.Validation | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Validation Classes DefaultMigrationExpressionValidator Default implementation of a IMigrationExpressionValidator Interfaces IMigrationExpressionValidator Interface for a migration expression validator IValidationChildren Provides access to child objects that have to be validated too"
  },
  "api/FluentMigrator.Validation.IValidationChildren.html": {
    "href": "api/FluentMigrator.Validation.IValidationChildren.html",
    "title": "Interface IValidationChildren | FluentMigrator documentation",
    "keywords": "Interface IValidationChildren Provides access to child objects that have to be validated too Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public interface IValidationChildren Properties | Improve this Doc View Source Children Gets the child objects Declaration [NotNull] [ItemCanBeNull] IEnumerable<object> Children { get; } Property Value Type Description IEnumerable < Object >"
  },
  "api/FluentMigrator.Validation.IMigrationExpressionValidator.html": {
    "href": "api/FluentMigrator.Validation.IMigrationExpressionValidator.html",
    "title": "Interface IMigrationExpressionValidator | FluentMigrator documentation",
    "keywords": "Interface IMigrationExpressionValidator Interface for a migration expression validator Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationExpressionValidator Methods | Improve this Doc View Source Validate(IMigrationExpression) Validates the given migration expression Declaration [NotNull] [ItemNotNull] IEnumerable<ValidationResult> Validate([NotNull] IMigrationExpression expression) Parameters Type Name Description IMigrationExpression expression The migration expression to validate Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > The validation results"
  },
  "api/FluentMigrator.Validation.DefaultMigrationExpressionValidator.html": {
    "href": "api/FluentMigrator.Validation.DefaultMigrationExpressionValidator.html",
    "title": "Class DefaultMigrationExpressionValidator | FluentMigrator documentation",
    "keywords": "Class DefaultMigrationExpressionValidator Default implementation of a IMigrationExpressionValidator Inheritance Object DefaultMigrationExpressionValidator Implements IMigrationExpressionValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Validation Assembly : FluentMigrator.Abstractions.dll Syntax public class DefaultMigrationExpressionValidator : IMigrationExpressionValidator Constructors | Improve this Doc View Source DefaultMigrationExpressionValidator(IServiceProvider) Initializes a new instance of the DefaultMigrationExpressionValidator class. Declaration public DefaultMigrationExpressionValidator([CanBeNull] IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider Methods | Improve this Doc View Source Validate(IMigrationExpression) Validates the given migration expression Declaration public virtual IEnumerable<ValidationResult> Validate(IMigrationExpression expression) Parameters Type Name Description IMigrationExpression expression The migration expression to validate Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > The validation results Implements IMigrationExpressionValidator"
  },
  "api/FluentMigrator.TransactionBehavior.html": {
    "href": "api/FluentMigrator.TransactionBehavior.html",
    "title": "Enum TransactionBehavior | FluentMigrator documentation",
    "keywords": "Enum TransactionBehavior The desired transaction behavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TransactionBehavior Fields Name Description Default The default transaction behavior, meaning 1 transaction per migration if the Processor allows it. None A migration will not use a transaction."
  },
  "api/FluentMigrator.TimestampedMigrationAttribute.html": {
    "href": "api/FluentMigrator.TimestampedMigrationAttribute.html",
    "title": "Class TimestampedMigrationAttribute | FluentMigrator documentation",
    "keywords": "Class TimestampedMigrationAttribute Creates a MigrationAttribute which executes in order based on the given date and time. Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members MigrationAttribute.Version MigrationAttribute.TransactionBehavior MigrationAttribute.Description MigrationAttribute.BreakingChange Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class TimestampedMigrationAttribute : MigrationAttribute, _Attribute Constructors | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, TransactionBehavior, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, TransactionBehavior transactionBehavior, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. TransactionBehavior transactionBehavior The TransactionBehavior the migration will use. String description A description for the migration. | Improve this Doc View Source TimestampedMigrationAttribute(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, String) Initializes a new instance of the TimestampedMigrationAttribute class whose version is based on date and time information. Declaration public TimestampedMigrationAttribute(ushort year, ushort month, ushort day, ushort hour, ushort minute, ushort second, string description) Parameters Type Name Description UInt16 year The year the migration was created. UInt16 month The month the migration was created. UInt16 day The day the migration was created. UInt16 hour The hour the migration was created. UInt16 minute The minute the migration was created. UInt16 second The second the migration was created. String description A description for the migration. Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.TagsAttribute.html": {
    "href": "api/FluentMigrator.TagsAttribute.html",
    "title": "Class TagsAttribute | FluentMigrator documentation",
    "keywords": "Class TagsAttribute Used to filter which migrations are run. Inheritance Object Attribute TagsAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class TagsAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source TagsAttribute(TagBehavior, String[]) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(TagBehavior behavior, params string[] tagNames) Parameters Type Name Description TagBehavior behavior The behavior of the runner when evaluating tagNames . String [] tagNames The names of the tags that are evaluated by the runner. | Improve this Doc View Source TagsAttribute(String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1) Parameters Type Name Description String tagName1 The tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String, String, String, String) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(string tagName1, string tagName2, string tagName3, string tagName4) Parameters Type Name Description String tagName1 The first tag that is evaluated by the runner. String tagName2 The second tag that is evaluated by the runner. String tagName3 The third tag that is evaluated by the runner. String tagName4 The fourth tag that is evaluated by the runner. | Improve this Doc View Source TagsAttribute(String[]) Initializes a new instance of the TagsAttribute class. Declaration public TagsAttribute(params string[] tagNames) Parameters Type Name Description String [] tagNames The names of the tags that are evaluated by the runner. Properties | Improve this Doc View Source Behavior Gets the behavior of the runner when evaluating TagNames . Declaration public TagBehavior Behavior { get; } Property Value Type Description TagBehavior | Improve this Doc View Source TagNames Gets the names of the tags that are evaluated by the runner. Declaration public string[] TagNames { get; } Property Value Type Description String [] Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.Runner.Versioning.IVersionInfo.html": {
    "href": "api/FluentMigrator.Runner.Versioning.IVersionInfo.html",
    "title": "Interface IVersionInfo | FluentMigrator documentation",
    "keywords": "Interface IVersionInfo Interface to query/update migration information Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public interface IVersionInfo Methods | Improve this Doc View Source AddAppliedMigration(Int64) Adds a migration version number as applied Declaration void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration The version number | Improve this Doc View Source AppliedMigrations() Gets the version numbers of all applied migrations Declaration IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > the version numbers of all applied migrations | Improve this Doc View Source HasAppliedMigration(Int64) Returns a value indicating whether a migration with the given version number has been applied Declaration bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration The migration version number to validate Returns Type Description Boolean true when the migration with the given version number has been applied | Improve this Doc View Source Latest() Gets the version number of the latest migration that has been applied Declaration long Latest() Returns Type Description Int64 The version number"
  },
  "api/FluentMigrator.Runner.VersionTableInfo.html": {
    "href": "api/FluentMigrator.Runner.VersionTableInfo.html",
    "title": "Namespace FluentMigrator.Runner.VersionTableInfo | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.VersionTableInfo Classes DefaultVersionTableMetaData VersionTableMetaDataAttribute Interfaces IVersionTableMetaData"
  },
  "api/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html": {
    "href": "api/FluentMigrator.Runner.VersionTableInfo.VersionTableMetaDataAttribute.html",
    "title": "Class VersionTableMetaDataAttribute | FluentMigrator documentation",
    "keywords": "Class VersionTableMetaDataAttribute Inheritance Object Attribute VersionTableMetaDataAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class VersionTableMetaDataAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html": {
    "href": "api/FluentMigrator.Runner.VersionTableInfo.IVersionTableMetaData.html",
    "title": "Interface IVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Interface IVersionTableMetaData Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IVersionTableMetaData Properties | Improve this Doc View Source ApplicationContext Provides access to ApplicationContext object. Declaration [Obsolete(\"Use dependency injection to get the IRunnerContext\")] object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. | Improve this Doc View Source AppliedOnColumnName Declaration string AppliedOnColumnName { get; } Property Value Type Description String | Improve this Doc View Source ColumnName Declaration string ColumnName { get; } Property Value Type Description String | Improve this Doc View Source DescriptionColumnName Declaration string DescriptionColumnName { get; } Property Value Type Description String | Improve this Doc View Source OwnsSchema Declaration bool OwnsSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Declaration string SchemaName { get; } Property Value Type Description String | Improve this Doc View Source TableName Declaration string TableName { get; } Property Value Type Description String | Improve this Doc View Source UniqueIndexName Declaration string UniqueIndexName { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html": {
    "href": "api/FluentMigrator.Runner.VersionTableInfo.DefaultVersionTableMetaData.html",
    "title": "Class DefaultVersionTableMetaData | FluentMigrator documentation",
    "keywords": "Class DefaultVersionTableMetaData Inheritance Object DefaultVersionTableMetaData Implements IVersionTableMetaData ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.VersionTableInfo Assembly : FluentMigrator.Runner.dll Syntax public class DefaultVersionTableMetaData : IVersionTableMetaData, ISchemaExpression Constructors | Improve this Doc View Source DefaultVersionTableMetaData() Declaration [Obsolete(\"Use dependency injection\")] public DefaultVersionTableMetaData() | Improve this Doc View Source DefaultVersionTableMetaData(IConventionSet, IOptions<RunnerOptions>) Declaration public DefaultVersionTableMetaData(IConventionSet conventionSet, IOptions<RunnerOptions> runnerOptions) Parameters Type Name Description IConventionSet conventionSet IOptions < RunnerOptions > runnerOptions | Improve this Doc View Source DefaultVersionTableMetaData(String) Declaration [Obsolete(\"Use dependency injection\")] public DefaultVersionTableMetaData(string schemaName) Parameters Type Name Description String schemaName Properties | Improve this Doc View Source ApplicationContext Provides access to ApplicationContext object. Declaration [Obsolete(\"Use dependency injection to get data using your own services\")] public object ApplicationContext { get; set; } Property Value Type Description Object Remarks ApplicationContext value is set by FluentMigrator immediately after instantiation of a class implementing IVersionTableMetaData and before any of properties of IVersionTableMetaData is called. Properties can use ApplicationContext value to implement context-depending logic. | Improve this Doc View Source AppliedOnColumnName Declaration public virtual string AppliedOnColumnName { get; } Property Value Type Description String | Improve this Doc View Source ColumnName Declaration public virtual string ColumnName { get; } Property Value Type Description String | Improve this Doc View Source DescriptionColumnName Declaration public virtual string DescriptionColumnName { get; } Property Value Type Description String | Improve this Doc View Source OwnsSchema Declaration public virtual bool OwnsSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public virtual string TableName { get; } Property Value Type Description String | Improve this Doc View Source UniqueIndexName Declaration public virtual string UniqueIndexName { get; } Property Value Type Description String Implements IVersionTableMetaData ISchemaExpression"
  },
  "api/FluentMigrator.Runner.VersionLoader.html": {
    "href": "api/FluentMigrator.Runner.VersionLoader.html",
    "title": "Class VersionLoader | FluentMigrator documentation",
    "keywords": "Class VersionLoader Inheritance Object VersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class VersionLoader : IVersionLoader Constructors | Improve this Doc View Source VersionLoader(IProcessorAccessor, IConventionSet, IMigrationRunnerConventions, IVersionTableMetaData, IMigrationRunner) Declaration public VersionLoader([NotNull] IProcessorAccessor processorAccessor, [NotNull] IConventionSet conventionSet, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IVersionTableMetaData versionTableMetaData, [NotNull] IMigrationRunner runner) Parameters Type Name Description IProcessorAccessor processorAccessor IConventionSet conventionSet IMigrationRunnerConventions conventions IVersionTableMetaData versionTableMetaData IMigrationRunner runner Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyMadeVersionDescription Declaration public bool AlreadyMadeVersionDescription { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyMadeVersionUnique Declaration public bool AlreadyMadeVersionUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Assemblies Declaration [CanBeNull] [Obsolete] protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source OwnsVersionSchema Declaration public bool OwnsVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source Runner Declaration [NotNull] public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration | Improve this Doc View Source VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData | Improve this Doc View Source VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods | Improve this Doc View Source CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition | Improve this Doc View Source DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source GetVersionTableMetaData() Declaration [NotNull] public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData | Improve this Doc View Source LoadVersionInfo() Declaration public void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Declaration public void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/FluentMigrator.Runner.TransactionalMigrationScope.html": {
    "href": "api/FluentMigrator.Runner.TransactionalMigrationScope.html",
    "title": "Class TransactionalMigrationScope | FluentMigrator documentation",
    "keywords": "Class TransactionalMigrationScope A migration scope encapsulating migrations in a transaction Inheritance Object TrackingMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members TrackingMigrationScope.Dispose() TrackingMigrationScope.IsActive TrackingMigrationScope.Complete() TrackingMigrationScope.Cancel() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TransactionalMigrationScope : TrackingMigrationScope, IMigrationScope, IDisposable Constructors | Improve this Doc View Source TransactionalMigrationScope(IMigrationProcessor, Action) Initializes a new instance of the TransactionalMigrationScope class. Declaration public TransactionalMigrationScope(IMigrationProcessor processor, Action disposalAction) Parameters Type Name Description IMigrationProcessor processor The migration processor Action disposalAction Called after the scope was cancelled Methods | Improve this Doc View Source DoCancel() Called when Cancel() was called and the scope was active Declaration protected override void DoCancel() Overrides TrackingMigrationScope.DoCancel() | Improve this Doc View Source DoComplete() Called when Complete() was called and the scope was active Declaration protected override void DoComplete() Overrides TrackingMigrationScope.DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/FluentMigrator.Runner.TrackingMigrationScope.html": {
    "href": "api/FluentMigrator.Runner.TrackingMigrationScope.html",
    "title": "Class TrackingMigrationScope | FluentMigrator documentation",
    "keywords": "Class TrackingMigrationScope A migration scope that encapsulates database changes in a transaction Inheritance Object TrackingMigrationScope TransactionalMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class TrackingMigrationScope : IMigrationScope, IDisposable Constructors | Improve this Doc View Source TrackingMigrationScope(Action) Initializes a new instance of the TrackingMigrationScope class. Declaration public TrackingMigrationScope(Action disposalAction) Parameters Type Name Description Action disposalAction Called after the scope was cancelled Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration public virtual bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration public void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration public void Complete() Remarks This usually involves the commit a transaction. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source DoCancel() Called when Cancel() was called and the scope was active Declaration protected virtual void DoCancel() | Improve this Doc View Source DoComplete() Called when Complete() was called and the scope was active Declaration protected virtual void DoComplete() Implements IMigrationScope System.IDisposable"
  },
  "api/FluentMigrator.Runner.StopWatch.html": {
    "href": "api/FluentMigrator.Runner.StopWatch.html",
    "title": "Class StopWatch | FluentMigrator documentation",
    "keywords": "Class StopWatch Inheritance Object StopWatch Implements IStopWatch Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class StopWatch : IStopWatch Fields | Improve this Doc View Source TimeNow Declaration public static Func<DateTime> TimeNow Field Value Type Description Func < DateTime > Methods | Improve this Doc View Source ElapsedTime() Declaration public TimeSpan ElapsedTime() Returns Type Description TimeSpan | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() | Improve this Doc View Source Time(Action) Declaration public TimeSpan Time(Action action) Parameters Type Name Description Action action Returns Type Description TimeSpan Implements IStopWatch"
  },
  "api/FluentMigrator.Runner.SqlServerRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.SqlServerRunnerBuilderExtensions.html",
    "title": "Class SqlServerRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SqlServerRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public static class SqlServerRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlServer(IMigrationRunnerBuilder) Adds SQL Server support Declaration public static IMigrationRunnerBuilder AddSqlServer(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder Remarks This always selects the latest supported SQL server version. | Improve this Doc View Source AddSqlServer2000(IMigrationRunnerBuilder) Adds SQL Server 2000 support Declaration public static IMigrationRunnerBuilder AddSqlServer2000(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2005(IMigrationRunnerBuilder) Adds SQL Server 2005 support Declaration public static IMigrationRunnerBuilder AddSqlServer2005(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2008(IMigrationRunnerBuilder) Adds SQL Server 2008 support Declaration public static IMigrationRunnerBuilder AddSqlServer2008(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2012(IMigrationRunnerBuilder) Adds SQL Server 2012 support Declaration public static IMigrationRunnerBuilder AddSqlServer2012(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2014(IMigrationRunnerBuilder) Adds SQL Server 2014 support Declaration public static IMigrationRunnerBuilder AddSqlServer2014(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlServer2016(IMigrationRunnerBuilder) Adds SQL Server 2016 support Declaration public static IMigrationRunnerBuilder AddSqlServer2016(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.SqlServerCeRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.SqlServerCeRunnerBuilderExtensions.html",
    "title": "Class SqlServerCeRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerCeRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SqlServerCeRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public static class SqlServerCeRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlServerCe(IMigrationRunnerBuilder) Adds SQL Server Compact Edition support Declaration public static IMigrationRunnerBuilder AddSqlServerCe(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQL Server CE-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.SqlAnywhereRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.SqlAnywhereRunnerBuilderExtensions.html",
    "title": "Class SqlAnywhereRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SqlAnywhereRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public static class SqlAnywhereRunnerBuilderExtensions Methods | Improve this Doc View Source AddSqlAnywhere(IMigrationRunnerBuilder) Adds SAP SQL Anywhere support for the latest version Declaration public static IMigrationRunnerBuilder AddSqlAnywhere(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP SQL Anywhere-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddSqlAnywhere16(IMigrationRunnerBuilder) Adds SAP SQL Anywhere support Declaration public static IMigrationRunnerBuilder AddSqlAnywhere16(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP SQL Anywhere-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.SQLiteRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.SQLiteRunnerBuilderExtensions.html",
    "title": "Class SQLiteRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class SQLiteRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object SQLiteRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.SQLite.dll Syntax public static class SQLiteRunnerBuilderExtensions Methods | Improve this Doc View Source AddSQLite(IMigrationRunnerBuilder) Adds SQLite support Declaration public static IMigrationRunnerBuilder AddSQLite(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SQLite-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.RunnerEventIds.html": {
    "href": "api/FluentMigrator.Runner.RunnerEventIds.html",
    "title": "Class RunnerEventIds | FluentMigrator documentation",
    "keywords": "Class RunnerEventIds The default runner event IDs Inheritance Object RunnerEventIds Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class RunnerEventIds Fields | Improve this Doc View Source ElapsedTime Gets the event ID for elapsed time Declaration public static readonly EventId ElapsedTime Field Value Type Description EventId | Improve this Doc View Source Emphasize Gets the event ID for an emphasized message Declaration public static readonly EventId Emphasize Field Value Type Description EventId | Improve this Doc View Source Heading Gets the event ID for a heading Declaration public static readonly EventId Heading Field Value Type Description EventId | Improve this Doc View Source RunnerCategory Declaration public const string RunnerCategory = \"FluentMigrator.Runner\" Field Value Type Description String | Improve this Doc View Source Say Gets the event ID for an informational message Declaration public static readonly EventId Say Field Value Type Description EventId | Improve this Doc View Source Sql Gets the event ID for an SQL statement Declaration public static readonly EventId Sql Field Value Type Description EventId"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdTransactionModel.html",
    "title": "Enum FirebirdTransactionModel | FluentMigrator documentation",
    "keywords": "Enum FirebirdTransactionModel Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum FirebirdTransactionModel Fields Name Description AutoCommit Automaticaly commits every processed statement AutoCommitOnCheckFail Automatically starts a new transaction when a virtual lock check fails None Don't manage transactions"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.FirebirdSchemaProvider.html",
    "title": "Class FirebirdSchemaProvider | FluentMigrator documentation",
    "keywords": "Class FirebirdSchemaProvider Inheritance Object FirebirdSchemaProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdSchemaProvider Constructors | Improve this Doc View Source FirebirdSchemaProvider(FirebirdProcessor, FirebirdQuoter) Declaration public FirebirdSchemaProvider(FirebirdProcessor processor, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor FirebirdQuoter quoter Properties | Improve this Doc View Source Processor Declaration public FirebirdProcessor Processor { get; protected set; } Property Value Type Description FirebirdProcessor Methods | Improve this Doc View Source GetColumnDefinition(String, String) Declaration public ColumnDefinition GetColumnDefinition(string tableName, string columnName) Parameters Type Name Description String tableName String columnName Returns Type Description ColumnDefinition | Improve this Doc View Source GetIndex(String, String) Declaration public IndexDefinition GetIndex(string tableName, string indexName) Parameters Type Name Description String tableName String indexName Returns Type Description IndexDefinition | Improve this Doc View Source GetSequence(String) Declaration public SequenceInfo GetSequence(string sequenceName) Parameters Type Name Description String sequenceName Returns Type Description SequenceInfo"
  },
  "api/FluentMigrator.Runner.Processors.DB2.iSeries.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.DB2.iSeries Classes Db2ISeriesDbFactory Db2ISeriesProcessor Db2ISeriesProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessorFactory.html",
    "title": "Class Db2ISeriesProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessorFactory Inheritance Object MigrationProcessorFactory Db2ISeriesProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax [Obsolete] public class Db2ISeriesProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source Db2ISeriesProcessorFactory() Declaration [Obsolete] public Db2ISeriesProcessorFactory() | Improve this Doc View Source Db2ISeriesProcessorFactory(IServiceProvider) Declaration public Db2ISeriesProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesProcessor.html",
    "title": "Class Db2ISeriesProcessor | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesProcessor Inheritance Object ProcessorBase GenericProcessorBase Db2ISeriesProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source Db2ISeriesProcessor(Db2ISeriesDbFactory, Db2ISeriesGenerator, Db2ISeriesQuoter, ILogger<Db2ISeriesProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public Db2ISeriesProcessor([NotNull] Db2ISeriesDbFactory factory, [NotNull] Db2ISeriesGenerator generator, [NotNull] Db2ISeriesQuoter quoter, [NotNull] ILogger<Db2ISeriesProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Db2ISeriesDbFactory factory Db2ISeriesGenerator generator Db2ISeriesQuoter quoter ILogger < Db2ISeriesProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source Db2ISeriesProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public Db2ISeriesProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.iSeries.Db2ISeriesDbFactory.html",
    "title": "Class Db2ISeriesDbFactory | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2ISeriesDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source Db2ISeriesDbFactory() Declaration [Obsolete] public Db2ISeriesDbFactory() | Improve this Doc View Source Db2ISeriesDbFactory(IServiceProvider) Declaration public Db2ISeriesDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.Db2ProcessorFactory.html",
    "title": "Class Db2ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class Db2ProcessorFactory Inheritance Object MigrationProcessorFactory Db2ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax [Obsolete] public class Db2ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source Db2ProcessorFactory() Declaration [Obsolete] public Db2ProcessorFactory() | Improve this Doc View Source Db2ProcessorFactory(IServiceProvider) Declaration public Db2ProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.DB2.Db2Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.Db2Processor.html",
    "title": "Class Db2Processor | FluentMigrator documentation",
    "keywords": "Class Db2Processor Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2Processor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source Db2Processor(Db2DbFactory, Db2Generator, Db2Quoter, ILogger<Db2Processor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public Db2Processor([NotNull] Db2DbFactory factory, [NotNull] Db2Generator generator, [NotNull] Db2Quoter quoter, [NotNull] ILogger<Db2Processor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Db2DbFactory factory Db2Generator generator Db2Quoter quoter ILogger < Db2Processor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source Db2Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public Db2Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; set; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.DB2.Db2DbFactory.html",
    "title": "Class Db2DbFactory | FluentMigrator documentation",
    "keywords": "Class Db2DbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.DB2 Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2DbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source Db2DbFactory() Declaration [Obsolete] public Db2DbFactory() | Improve this Doc View Source Db2DbFactory(IServiceProvider) Declaration public Db2DbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.ConnectionlessProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.ConnectionlessProcessorFactory.html",
    "title": "Class ConnectionlessProcessorFactory | FluentMigrator documentation",
    "keywords": "Class ConnectionlessProcessorFactory A processor factory to create SQL statements only (without executing them) Inheritance Object ConnectionlessProcessorFactory Implements IMigrationProcessorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class ConnectionlessProcessorFactory : IMigrationProcessorFactory Constructors | Improve this Doc View Source ConnectionlessProcessorFactory(IGeneratorAccessor, IRunnerContext) Initializes a new instance of the ConnectionlessProcessorFactory class. Declaration [Obsolete] public ConnectionlessProcessorFactory([NotNull] IGeneratorAccessor generatorAccessor, [NotNull] IRunnerContext runnerContext) Parameters Type Name Description IGeneratorAccessor generatorAccessor The accessor to get the migration generator to use IRunnerContext runnerContext The runner context Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Returns a value indicating whether this processor factory can use the given DB provider Declaration public bool IsForProvider(string provider) Parameters Type Name Description String provider The DB provider name Returns Type Description Boolean true when this processor factory can use the given DB provider Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.ConnectionlessProcessor.html",
    "title": "Class ConnectionlessProcessor | FluentMigrator documentation",
    "keywords": "Class ConnectionlessProcessor Inheritance Object ConnectionlessProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConnectionlessProcessor : IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source ConnectionlessProcessor(IMigrationGenerator, IRunnerContext, IMigrationProcessorOptions) Declaration [Obsolete] public ConnectionlessProcessor(IMigrationGenerator generator, IRunnerContext context, IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IRunnerContext context IMigrationProcessorOptions options | Improve this Doc View Source ConnectionlessProcessor(IGeneratorAccessor, ILogger, IOptions<ProcessorOptions>, IOptions<SelectingProcessorAccessorOptions>) Declaration public ConnectionlessProcessor([NotNull] IGeneratorAccessor generatorAccessor, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IOptions<SelectingProcessorAccessorOptions> accessorOptions) Parameters Type Name Description IGeneratorAccessor generatorAccessor ILogger logger IOptions < ProcessorOptions > options IOptions < SelectingProcessorAccessorOptions > accessorOptions | Improve this Doc View Source ConnectionlessProcessor(IGeneratorAccessor, ILogger, IOptions<ProcessorOptions>, IReadOnlyCollection<String>) Declaration public ConnectionlessProcessor([NotNull] IGeneratorAccessor generatorAccessor, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IReadOnlyCollection<string> processorIds) Parameters Type Name Description IGeneratorAccessor generatorAccessor ILogger logger IOptions < ProcessorOptions > options IReadOnlyCollection < String > processorIds Properties | Improve this Doc View Source Announcer Declaration [Obsolete] public IAnnouncer Announcer { get; set; } Property Value Type Description IAnnouncer | Improve this Doc View Source ConnectionString Declaration [Obsolete(\"Will change from public to protected\")] public string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source DatabaseType Declaration public string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Declaration public IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > | Improve this Doc View Source Generator Declaration public IMigrationGenerator Generator { get; set; } Property Value Type Description IMigrationGenerator | Improve this Doc View Source Options Declaration public ProcessorOptions Options { get; set; } Property Value Type Description ProcessorOptions Methods | Improve this Doc View Source BeginTransaction() Declaration public void BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source CommitTransaction() Declaration public void CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration public void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Declaration public void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args | Improve this Doc View Source Exists(String, Object[]) Declaration public bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean | Improve this Doc View Source IndexExists(String, String, String) Declaration public bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean | Improve this Doc View Source Process(AlterColumnExpression) Declaration public void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Process(AlterTableExpression) Declaration public void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Process(CreateColumnExpression) Declaration public void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Process(CreateIndexExpression) Declaration public void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Process(CreateTableExpression) Declaration public void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Process(DeleteDataExpression) Declaration public void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Process(DeleteTableExpression) Declaration public void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Process(InsertDataExpression) Declaration public void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(RenameTableExpression) Declaration public void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Process(UpdateDataExpression) Declaration public void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Process(String) Declaration protected void Process(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Read(String, Object[]) Declaration public DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet | Improve this Doc View Source ReadTableData(String, String) Declaration public DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet | Improve this Doc View Source RollbackTransaction() Declaration public void RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean | Improve this Doc View Source SequenceExists(String, String) Declaration public bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean | Improve this Doc View Source TableExists(String, String) Declaration public bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessor.Options Declaration [Obsolete] IMigrationProcessorOptions IMigrationProcessor.Options { get; } Returns Type Description IMigrationProcessorOptions Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.PostgresRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.PostgresRunnerBuilderExtensions.html",
    "title": "Class PostgresRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class PostgresRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object PostgresRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Postgres.dll Syntax public static class PostgresRunnerBuilderExtensions Methods | Improve this Doc View Source AddPostgres(IMigrationRunnerBuilder) Adds Postgres support Declaration public static IMigrationRunnerBuilder AddPostgres(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Postgres-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.OracleRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.OracleRunnerBuilderExtensions.html",
    "title": "Class OracleRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class OracleRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object OracleRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Oracle.dll Syntax public static class OracleRunnerBuilderExtensions Methods | Improve this Doc View Source AddDotConnectOracle(IMigrationRunnerBuilder) Adds .Connect Oracle support Declaration public static IMigrationRunnerBuilder AddDotConnectOracle(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the .Connect Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracle(IMigrationRunnerBuilder) Adds Oracle support Declaration public static IMigrationRunnerBuilder AddOracle(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddOracleManaged(IMigrationRunnerBuilder) Adds managed Oracle support Declaration public static IMigrationRunnerBuilder AddOracleManaged(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the managed Oracle-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.NoOpMigrationScope.html": {
    "href": "api/FluentMigrator.Runner.NoOpMigrationScope.html",
    "title": "Class NoOpMigrationScope | FluentMigrator documentation",
    "keywords": "Class NoOpMigrationScope A \"no-operation\" migration scope Inheritance Object NoOpMigrationScope Implements IMigrationScope IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class NoOpMigrationScope : IMigrationScope, IDisposable Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration public bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration public void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration public void Complete() Remarks This usually involves the commit a transaction. | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IMigrationScope System.IDisposable"
  },
  "api/FluentMigrator.Runner.MySqlRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.MySqlRunnerBuilderExtensions.html",
    "title": "Class MySqlRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class MySqlRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object MySqlRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.MySql.dll Syntax public static class MySqlRunnerBuilderExtensions Methods | Improve this Doc View Source AddMySql4(IMigrationRunnerBuilder) Adds MySQL 4 support Declaration public static IMigrationRunnerBuilder AddMySql4(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the MySQL 4-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddMySql5(IMigrationRunnerBuilder) Adds MySQL 5 support Declaration public static IMigrationRunnerBuilder AddMySql5(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the MySQL 5-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.MigrationValidator.html": {
    "href": "api/FluentMigrator.Runner.MigrationValidator.html",
    "title": "Class MigrationValidator | FluentMigrator documentation",
    "keywords": "Class MigrationValidator Inheritance Object MigrationValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationValidator Constructors | Improve this Doc View Source MigrationValidator() Declaration [Obsolete] public MigrationValidator() | Improve this Doc View Source MigrationValidator(IAnnouncer, IConventionSet) Declaration [Obsolete] public MigrationValidator(IAnnouncer announcer, IConventionSet conventions) Parameters Type Name Description IAnnouncer announcer IConventionSet conventions | Improve this Doc View Source MigrationValidator(ILogger<MigrationValidator>, IConventionSet, IMigrationExpressionValidator) Declaration public MigrationValidator([NotNull] ILogger<MigrationValidator> logger, [NotNull] IConventionSet conventions, [CanBeNull] IMigrationExpressionValidator validator = null) Parameters Type Name Description ILogger < MigrationValidator > logger IConventionSet conventions IMigrationExpressionValidator validator Methods | Improve this Doc View Source ApplyConventionsToAndValidateExpressions(IMigration, IEnumerable<IMigrationExpression>) Validates each migration expression that has implemented the ICanBeValidated interface. It throws an InvalidMigrationException exception if validation fails. Declaration public void ApplyConventionsToAndValidateExpressions(IMigration migration, IEnumerable<IMigrationExpression> expressions) Parameters Type Name Description IMigration migration The current migration being run IEnumerable < IMigrationExpression > expressions All the expressions contained in the up or down action"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2016Generator.html",
    "title": "Class SqlServer2016Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2016Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(CreateSequenceExpression) SqlServer2012Generator.Generate(DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016Generator : SqlServer2014Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2016Generator() Declaration public SqlServer2016Generator() | Improve this Doc View Source SqlServer2016Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2016Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2016Generator(SqlServer2008Quoter) Declaration public SqlServer2016Generator([NotNull] SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2016Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2016Generator([NotNull] SqlServer2008Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2014Generator.html",
    "title": "Class SqlServer2014Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2014Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator Implements IMigrationGenerator Inherited Members SqlServer2012Generator.Generate(CreateSequenceExpression) SqlServer2012Generator.Generate(DeleteSequenceExpression) SqlServer2008Generator.IsAdditionalFeatureSupported(String) SqlServer2008Generator.GetWithNullsDistinctString(IndexDefinition) SqlServer2008Generator.Generate(CreateIndexExpression) SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014Generator : SqlServer2012Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2014Generator() Declaration public SqlServer2014Generator() | Improve this Doc View Source SqlServer2014Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2014Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2014Generator(SqlServer2008Quoter) Declaration public SqlServer2014Generator([NotNull] SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2014Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2014Generator([NotNull] SqlServer2008Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SQLite.html": {
    "href": "api/FluentMigrator.Runner.Generators.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SQLite Classes SQLiteGenerator SQLiteQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.SQLite.SQLiteQuoter.html",
    "title": "Class SQLiteQuoter | FluentMigrator documentation",
    "keywords": "Class SQLiteQuoter Inheritance Object GenericQuoter SQLiteQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SQLite.SQLiteGenerator.html",
    "title": "Class SQLiteGenerator | FluentMigrator documentation",
    "keywords": "Class SQLiteGenerator Inheritance Object GeneratorBase GenericGenerator SQLiteGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source SQLiteGenerator() Declaration public SQLiteGenerator() | Improve this Doc View Source SQLiteGenerator(SQLiteQuoter) Declaration public SQLiteGenerator([NotNull] SQLiteQuoter quoter) Parameters Type Name Description SQLiteQuoter quoter | Improve this Doc View Source SQLiteGenerator(SQLiteQuoter, IOptions<GeneratorOptions>) Declaration public SQLiteGenerator([NotNull] SQLiteQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SQLiteQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Redshift.html": {
    "href": "api/FluentMigrator.Runner.Generators.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Redshift Classes RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description RedshiftGenerator RedshiftQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Redshift.RedshiftQuoter.html",
    "title": "Class RedshiftQuoter | FluentMigrator documentation",
    "keywords": "Class RedshiftQuoter Inheritance Object GenericQuoter RedshiftQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description System.Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Redshift.RedshiftGenerator.html",
    "title": "Class RedshiftGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftGenerator Inheritance Object GeneratorBase GenericGenerator RedshiftGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source RedshiftGenerator() Declaration public RedshiftGenerator() | Improve this Doc View Source RedshiftGenerator(RedshiftQuoter) Declaration public RedshiftGenerator([NotNull] RedshiftQuoter quoter) Parameters Type Name Description RedshiftQuoter quoter | Improve this Doc View Source RedshiftGenerator(RedshiftQuoter, IOptions<GeneratorOptions>) Declaration public RedshiftGenerator([NotNull] RedshiftQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description RedshiftQuoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(UpdateDataExpression) | Improve this Doc View Source GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String | Improve this Doc View Source GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Redshift.RedshiftDescriptionGenerator.html",
    "title": "Class RedshiftDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class RedshiftDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator RedshiftDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax public class RedshiftDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors | Improve this Doc View Source RedshiftDescriptionGenerator() Declaration public RedshiftDescriptionGenerator() Properties | Improve this Doc View Source Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Postgres.html": {
    "href": "api/FluentMigrator.Runner.Generators.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Postgres Classes PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description PostgresGenerator PostgresQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleGenerator.html",
    "title": "Class OracleGenerator | FluentMigrator documentation",
    "keywords": "Class OracleGenerator Inheritance Object GeneratorBase GenericGenerator OracleGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GenericGenerator.Generate(DeleteSequenceExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source OracleGenerator() Declaration public OracleGenerator() | Improve this Doc View Source OracleGenerator(OracleQuoterBase) Declaration public OracleGenerator([NotNull] OracleQuoterBase quoter) Parameters Type Name Description OracleQuoterBase quoter | Improve this Doc View Source OracleGenerator(OracleQuoterBase, IOptions<GeneratorOptions>) Declaration public OracleGenerator([NotNull] OracleQuoterBase quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description OracleQuoterBase quoter IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source OracleGenerator(Boolean) Declaration public OracleGenerator(bool useQuotedIdentifiers) Parameters Type Name Description Boolean useQuotedIdentifiers Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DropTable Declaration public override string DropTable { get; } Property Value Type Description String Overrides GenericGenerator.DropTable | Improve this Doc View Source InsertData Declaration public override string InsertData { get; } Property Value Type Description String Overrides GenericGenerator.InsertData | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source AppendSqlStatementEndToken(StringBuilder) Declaration protected override StringBuilder AppendSqlStatementEndToken(StringBuilder stringBuilder) Parameters Type Name Description StringBuilder stringBuilder Returns Type Description StringBuilder Overrides GenericGenerator.AppendSqlStatementEndToken(StringBuilder) | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleDescriptionGenerator.html",
    "title": "Class OracleDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class OracleDescriptionGenerator Inheritance Object GenericDescriptionGenerator OracleDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.MySql.html": {
    "href": "api/FluentMigrator.Runner.Generators.MySql.html",
    "title": "Namespace FluentMigrator.Runner.Generators.MySql | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.MySql Classes MySql4Generator MySql5Generator MySqlQuoter"
  },
  "api/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.MySql.MySqlQuoter.html",
    "title": "Class MySqlQuoter | FluentMigrator documentation",
    "keywords": "Class MySqlQuoter Inheritance Object GenericQuoter MySqlQuoter Implements IQuoter Inherited Members GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySqlQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote Methods | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source QuoteValue(Object) Declaration public override string QuoteValue(object value) Parameters Type Name Description Object value Returns Type Description String Overrides GenericQuoter.QuoteValue(Object) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.MySql.MySql5Generator.html",
    "title": "Class MySql5Generator | FluentMigrator documentation",
    "keywords": "Class MySql5Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator Implements IMigrationGenerator Inherited Members MySql4Generator.AlterColumn MySql4Generator.DeleteConstraint MySql4Generator.Generate(CreateTableExpression) MySql4Generator.Generate(AlterTableExpression) MySql4Generator.Generate(DeleteIndexExpression) MySql4Generator.Generate(RenameColumnExpression) MySql4Generator.Generate(AlterDefaultConstraintExpression) MySql4Generator.Generate(CreateSequenceExpression) MySql4Generator.Generate(DeleteSequenceExpression) MySql4Generator.Generate(DeleteConstraintExpression) MySql4Generator.Generate(DeleteForeignKeyExpression) MySql4Generator.Generate(DeleteDefaultConstraintExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql5Generator : MySql4Generator, IMigrationGenerator Constructors | Improve this Doc View Source MySql5Generator() Declaration public MySql5Generator() | Improve this Doc View Source MySql5Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected MySql5Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source MySql5Generator(MySqlQuoter) Declaration public MySql5Generator([NotNull] MySqlQuoter quoter) Parameters Type Name Description MySqlQuoter quoter | Improve this Doc View Source MySql5Generator(MySqlQuoter, IOptions<GeneratorOptions>) Declaration public MySql5Generator([NotNull] MySqlQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description MySqlQuoter quoter IOptions < GeneratorOptions > generatorOptions Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.MySql.MySql4Generator.html",
    "title": "Class MySql4Generator | FluentMigrator documentation",
    "keywords": "Class MySql4Generator Inheritance Object GeneratorBase GenericGenerator MySql4Generator MySql5Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.MySql Assembly : FluentMigrator.Runner.MySql.dll Syntax public class MySql4Generator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source MySql4Generator() Declaration public MySql4Generator() | Improve this Doc View Source MySql4Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected MySql4Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source MySql4Generator(MySqlQuoter) Declaration public MySql4Generator([NotNull] MySqlQuoter quoter) Parameters Type Name Description MySqlQuoter quoter | Improve this Doc View Source MySql4Generator(MySqlQuoter, IOptions<GeneratorOptions>) Declaration public MySql4Generator([NotNull] MySqlQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description MySqlQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source DeleteConstraint Declaration public override string DeleteConstraint { get; } Property Value Type Description String Overrides GenericGenerator.DeleteConstraint Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.DB2.iSeries.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.iSeries.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2.iSeries Classes Db2ISeriesGenerator Db2ISeriesQuoter"
  },
  "api/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.iSeries.Db2ISeriesQuoter.html",
    "title": "Class Db2ISeriesQuoter | FluentMigrator documentation",
    "keywords": "Class Db2ISeriesQuoter Inheritance Object GenericQuoter Db2Quoter Db2ISeriesQuoter Implements IQuoter Inherited Members Db2Quoter.SpecialChars Db2Quoter.FormatDateTime(DateTime) Db2Quoter.ShouldQuote(String) Db2Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.DB2.iSeries Assembly : FluentMigrator.Runner.Db2.dll Syntax public class Db2ISeriesQuoter : Db2Quoter, IQuoter Methods | Improve this Doc View Source QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides Db2Quoter.QuoteIndexName(String, String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Base.ColumnBase.html": {
    "href": "api/FluentMigrator.Runner.Generators.Base.ColumnBase.html",
    "title": "Class ColumnBase | FluentMigrator documentation",
    "keywords": "Class ColumnBase The base class for column definitions Inheritance Object ColumnBase Implements IColumn Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Base Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ColumnBase : IColumn Constructors | Improve this Doc View Source ColumnBase(ITypeMap, IQuoter) Initializes a new instance of the ColumnBase class. Declaration protected ColumnBase(ITypeMap typeMap, IQuoter quoter) Parameters Type Name Description ITypeMap typeMap The type map IQuoter quoter The quoter Properties | Improve this Doc View Source ClauseOrder Gets or sets the clause order Declaration protected IList<Func<ColumnDefinition, string>> ClauseOrder { get; set; } Property Value Type Description IList < Func < ColumnDefinition , String >> | Improve this Doc View Source ForeignKeyConstraint The default foreign key constraint format Declaration public virtual string ForeignKeyConstraint { get; } Property Value Type Description String | Improve this Doc View Source Quoter Gets the quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source AddPrimaryKeyConstraint(String, IEnumerable<ColumnDefinition>) Creates the primary key constraint SQL fragment Declaration public virtual string AddPrimaryKeyConstraint(string tableName, IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description String tableName The table name IEnumerable < ColumnDefinition > primaryKeyColumns The primary key column defintions Returns Type Description String The SQL fragment | Improve this Doc View Source FormatCascade(String, Rule) Formats the foreign key cascading SQL fragment Declaration public virtual string FormatCascade(string onWhat, Rule rule) Parameters Type Name Description String onWhat The action this cascade clause applies to (update or delete) Rule rule The cascade rule Returns Type Description String The formatted SQL fragment | Improve this Doc View Source FormatCollation(ColumnDefinition) Formats the collation of a text column Declaration protected virtual string FormatCollation(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source FormatDefaultValue(ColumnDefinition) Formats the column default value Declaration protected virtual string FormatDefaultValue(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted column default value | Improve this Doc View Source FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Formats the foreign key SQL fragment optionally using a custom foreign key name generator Declaration public virtual string FormatForeignKey(ForeignKeyDefinition foreignKey, Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Func < ForeignKeyDefinition , String > fkNameGeneration The custom foreign key name generator Returns Type Description String The SQL fragment | Improve this Doc View Source FormatIdentity(ColumnDefinition) Formats the identity SQL fragment Declaration protected abstract string FormatIdentity(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted identity SQL fragment | Improve this Doc View Source FormatNullable(ColumnDefinition) Formats the (not) null constraint Declaration protected virtual string FormatNullable(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted (not) null constraint | Improve this Doc View Source FormatPrimaryKey(ColumnDefinition) Formats the primary key constraint directly attached to the column Declaration protected virtual string FormatPrimaryKey(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The primary key constraint SQL fragment | Improve this Doc View Source FormatString(ColumnDefinition) Formats the column name Declaration public virtual string FormatString(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column defintiion Returns Type Description String The (probably) quoted column name | Improve this Doc View Source FormatType(ColumnDefinition) Formats the column type Declaration protected virtual string FormatType(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The formatted column type | Improve this Doc View Source Generate(ColumnDefinition) Generates the complete column defintion SQL fragment Declaration public virtual string Generate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(IEnumerable<ColumnDefinition>, String) Generate the SQL fragment for all column definitions Declaration public virtual string Generate(IEnumerable<ColumnDefinition> columns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns The column definitions String tableName The table name Returns Type Description String The SQL fragment | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Generates the default foreign key name Declaration public virtual string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Returns Type Description String The SQL fragment | Improve this Doc View Source GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition>, String) Gets the name of the primary key constraint. Some Generators may need to override if the constraint name is limited Declaration protected virtual string GetPrimaryKeyConstraintName(IEnumerable<ColumnDefinition> primaryKeyColumns, string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns The primary key columns String tableName The table name Returns Type Description String The constraint clause | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Gets the formatted type from the type map Declaration [Obsolete] protected string GetTypeMap(DbType value, int size, int precision) Parameters Type Name Description DbType value The database type Int32 size The size (or precision) Int32 precision The precision (or scale) Returns Type Description String The formatted column type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Gets the formatted type from the type map Declaration protected string GetTypeMap(DbType value, int? size, int? precision) Parameters Type Name Description DbType value The database type Nullable < Int32 > size The size (or precision) Nullable < Int32 > precision The precision (or scale) Returns Type Description String The formatted column type | Improve this Doc View Source ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition>) Returns a value indicating whether the primary key constraint should be added separately Declaration public virtual bool ShouldPrimaryKeysBeAddedSeparately(IEnumerable<ColumnDefinition> primaryKeyColumns) Parameters Type Name Description IEnumerable < ColumnDefinition > primaryKeyColumns The primary key column defintions Returns Type Description Boolean true when the primary key constraint should be added separately Implements IColumn"
  },
  "api/FluentMigrator.Runner.FluentMigratorLoggingExtensions.html": {
    "href": "api/FluentMigrator.Runner.FluentMigratorLoggingExtensions.html",
    "title": "Class FluentMigratorLoggingExtensions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLoggingExtensions Extension methods for ILoggerFactory and ILoggingBuilder Inheritance Object FluentMigratorLoggingExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public static class FluentMigratorLoggingExtensions Methods | Improve this Doc View Source AddFluentMigratorConsole(ILoggerFactory) Adds the default FluentMigrator console logger Declaration public static ILoggerFactory AddFluentMigratorConsole(this ILoggerFactory loggerFactory) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory Returns Type Description ILoggerFactory The same logger factory | Improve this Doc View Source AddFluentMigratorConsole(ILoggerFactory, FluentMigratorLoggerOptions) Adds the default FluentMigrator console logger Declaration public static ILoggerFactory AddFluentMigratorConsole(this ILoggerFactory loggerFactory, FluentMigratorLoggerOptions options) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory FluentMigratorLoggerOptions options The logger options Returns Type Description ILoggerFactory The same logger factory | Improve this Doc View Source AddFluentMigratorConsole(ILoggingBuilder) Adds the default FluentMigrator console logger Declaration public static ILoggingBuilder AddFluentMigratorConsole(this ILoggingBuilder loggingBuilder) Parameters Type Name Description ILoggingBuilder loggingBuilder The logging builder Returns Type Description ILoggingBuilder The same logging builder"
  },
  "api/FluentMigrator.Runner.FluentMigratorLoggerOptions.html": {
    "href": "api/FluentMigrator.Runner.FluentMigratorLoggerOptions.html",
    "title": "Class FluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLoggerOptions Options for the FluentMigratorLogger Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public class FluentMigratorLoggerOptions Properties | Improve this Doc View Source ShowElapsedTime Gets or sets a value indicating whether the elapsed time should be shown Declaration public bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Gets or sets a value indicating whether SQL statements should be shown Declaration public bool ShowSql { get; set; } Property Value Type Description Boolean"
  },
  "api/FluentMigrator.Runner.FirebirdRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.FirebirdRunnerBuilderExtensions.html",
    "title": "Class FirebirdRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class FirebirdRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object FirebirdRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Firebird.dll Syntax public static class FirebirdRunnerBuilderExtensions Methods | Improve this Doc View Source AddFirebird(IMigrationRunnerBuilder) Adds Firebird support Declaration public static IMigrationRunnerBuilder AddFirebird(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Firebird-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder | Improve this Doc View Source AddFirebird(IMigrationRunnerBuilder, FirebirdOptions) Adds Firebird support Declaration public static IMigrationRunnerBuilder AddFirebird(this IMigrationRunnerBuilder builder, FirebirdOptions fbOptions) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Firebird-specific services to FirebirdOptions fbOptions Firebird options Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.Extensions.html": {
    "href": "api/FluentMigrator.Runner.Extensions.html",
    "title": "Namespace FluentMigrator.Runner.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Extensions Classes TagsExtensions TypeExtensions"
  },
  "api/FluentMigrator.Runner.Extensions.TypeExtensions.html": {
    "href": "api/FluentMigrator.Runner.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | FluentMigrator documentation",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source Is<T>(Type) Declaration public static bool Is<T>(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source IsConcrete(Type) Declaration public static bool IsConcrete(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "api/FluentMigrator.Runner.Extensions.TagsExtensions.html": {
    "href": "api/FluentMigrator.Runner.Extensions.TagsExtensions.html",
    "title": "Class TagsExtensions | FluentMigrator documentation",
    "keywords": "Class TagsExtensions Inheritance Object TagsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Extensions Assembly : FluentMigrator.Runner.dll Syntax public static class TagsExtensions Methods | Improve this Doc View Source ToTags(String) Declaration public static List<string> ToTags(this string tags) Parameters Type Name Description String tags Returns Type Description List < String >"
  },
  "api/FluentMigrator.Runner.Exceptions.html": {
    "href": "api/FluentMigrator.Runner.Exceptions.html",
    "title": "Namespace FluentMigrator.Runner.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Exceptions Classes InvalidMigrationException MissingMigrationsException RunnerException VersionOrderInvalidException"
  },
  "api/FluentMigrator.Runner.Conventions.ISequenceConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.ISequenceConvention.html",
    "title": "Interface ISequenceConvention | FluentMigrator documentation",
    "keywords": "Interface ISequenceConvention A convention working on ISequenceExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISequenceConvention Methods | Improve this Doc View Source Apply(ISequenceExpression) Applies a convention to a ISequenceExpression Declaration ISequenceExpression Apply(ISequenceExpression expression) Parameters Type Name Description ISequenceExpression expression The expression this convention should be applied to Returns Type Description ISequenceExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.IRootPathConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IRootPathConvention.html",
    "title": "Interface IRootPathConvention | FluentMigrator documentation",
    "keywords": "Interface IRootPathConvention A convention working on IFileSystemExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRootPathConvention Methods | Improve this Doc View Source Apply(IFileSystemExpression) Applies a convention to a IFileSystemExpression Declaration IFileSystemExpression Apply(IFileSystemExpression expression) Parameters Type Name Description IFileSystemExpression expression The expression this convention should be applied to Returns Type Description IFileSystemExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.IIndexConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IIndexConvention.html",
    "title": "Interface IIndexConvention | FluentMigrator documentation",
    "keywords": "Interface IIndexConvention A convention working on IIndexExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IIndexConvention Methods | Improve this Doc View Source Apply(IIndexExpression) Applies a convention to a IIndexExpression Declaration IIndexExpression Apply(IIndexExpression expression) Parameters Type Name Description IIndexExpression expression The expression this convention should be applied to Returns Type Description IIndexExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IForeignKeyConvention.html",
    "title": "Interface IForeignKeyConvention | FluentMigrator documentation",
    "keywords": "Interface IForeignKeyConvention A convention working on IForeignKeyExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IForeignKeyConvention Methods | Improve this Doc View Source Apply(IForeignKeyExpression) Applies a convention to a IForeignKeyExpression Declaration IForeignKeyExpression Apply(IForeignKeyExpression expression) Parameters Type Name Description IForeignKeyExpression expression The expression this convention should be applied to Returns Type Description IForeignKeyExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IDefaultSchemaNameConvention.html",
    "title": "Interface IDefaultSchemaNameConvention | FluentMigrator documentation",
    "keywords": "Interface IDefaultSchemaNameConvention A convention that returns the default schema name depending on the original schema name Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDefaultSchemaNameConvention Methods | Improve this Doc View Source GetSchemaName(String) Returns the default schema name depending on the original schema name Declaration string GetSchemaName(string originalSchemaName) Parameters Type Name Description String originalSchemaName The original schema name Returns Type Description String Returns the originalSchemaName when the default schema name is null or empty and returns the new default schema name when the originalSchemaName is null or empty"
  },
  "api/FluentMigrator.Runner.Conventions.IConventionSet.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IConventionSet.html",
    "title": "Interface IConventionSet | FluentMigrator documentation",
    "keywords": "Interface IConventionSet A set of conventions to be applied to expressions Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConventionSet Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets the root path convention to be applied to IFileSystemExpression implementations Declaration IRootPathConvention RootPathConvention { get; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets the default schema name convention to be applied to ISchemaExpression implementations Declaration DefaultSchemaConvention SchemaConvention { get; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention >"
  },
  "api/FluentMigrator.Runner.CompatabilityMode.html": {
    "href": "api/FluentMigrator.Runner.CompatabilityMode.html",
    "title": "Enum CompatabilityMode | FluentMigrator documentation",
    "keywords": "Enum CompatabilityMode The old compatibility mode Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete(\"Use CompatibilityMode instead\")] public enum CompatabilityMode Fields Name Description LOOSE Unsupported processor features are ignored STRICT Ensuare that an exception gets thrown when a processor doesn't support a specific feature Extension Methods CompatabilityModeExtension.HandleCompatabilty(String)"
  },
  "api/FluentMigrator.Runner.BatchParser.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser Classes EndCodeSearchResult The result of a FindEndCode(ILineReader) operation SpecialTokenEventArgs Event arguments for a special token SpecialTokenInfo Provides special information about the found token SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlBatchParser This is the base implementation of the SQL batch parser SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Interfaces ILineReader Read content from a line and advance the internal index IRangeSearcher Interface to search for content with a given start- and end code ISpecialTokenSearcher Searches for special tokens (e.g. GO ) ITextSource An interface to create a reader that is used to read the SQL script lines"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenInfo.html",
    "title": "Class SpecialTokenInfo | FluentMigrator documentation",
    "keywords": "Class SpecialTokenInfo Provides special information about the found token Inheritance Object SpecialTokenInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenInfo Constructors | Improve this Doc View Source SpecialTokenInfo(Int32, Int32, String, Object) Initializes a new instance of the SpecialTokenInfo class. Declaration public SpecialTokenInfo(int index, int length, [NotNull] string token, object opaque = null) Parameters Type Name Description Int32 index The index to the first character that is assigned to the token Int32 length The content length that is assigned to the token String token The found token Object opaque An opaque (token specific) value Remarks The index may not point to the real token text and the length might be longer than the token itself. This is usually the case when the token should be the only text on the line, but is instead surrounded by whitespace. Properties | Improve this Doc View Source Index Gets the index to the first character that is assigned to the Token Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Length Gets the content length that is assigned to the Token Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Opaque Gets an opaque (token specific) value Declaration [CanBeNull] public object Opaque { get; } Property Value Type Description Object | Improve this Doc View Source Token Gets the found token Declaration [NotNull] public string Token { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenEventArgs.html",
    "title": "Class SpecialTokenEventArgs | FluentMigrator documentation",
    "keywords": "Class SpecialTokenEventArgs Event arguments for a special token Inheritance Object EventArgs SpecialTokenEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SpecialTokenEventArgs : EventArgs Constructors | Improve this Doc View Source SpecialTokenEventArgs(String, Object) Initializes a new instance of the SpecialTokenEventArgs class. Declaration public SpecialTokenEventArgs([NotNull] string token, object opaque) Parameters Type Name Description String token The found token Object opaque An opaque (token specific) value Properties | Improve this Doc View Source Opaque Gets an opaque (token specific) value Declaration [CanBeNull] public object Opaque { get; } Property Value Type Description Object | Improve this Doc View Source Token Gets the found token Declaration [NotNull] public string Token { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.BatchParser.Sources.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.Sources.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.Sources | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.Sources Classes LinesSource A ITextSource implementation that uses lines as input TextReaderSource A ITextSource implementation that uses a TextReader as source."
  },
  "api/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.Sources.TextReaderSource.html",
    "title": "Class TextReaderSource | FluentMigrator documentation",
    "keywords": "Class TextReaderSource A ITextSource implementation that uses a TextReader as source. Inheritance Object TextReaderSource Implements ITextSource IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class TextReaderSource : ITextSource, IDisposable Constructors | Improve this Doc View Source TextReaderSource(TextReader) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource([NotNull] TextReader reader) Parameters Type Name Description TextReader reader The text reader to use Remarks This function doesn't take ownership of the reader . | Improve this Doc View Source TextReaderSource(TextReader, Boolean) Initializes a new instance of the TextReaderSource class. Declaration public TextReaderSource([NotNull] TextReader reader, bool takeOwnership) Parameters Type Name Description TextReader reader The text reader to use Boolean takeOwnership true when the TextReaderSource should become the owner of the reader Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements ITextSource System.IDisposable"
  },
  "api/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.Sources.LinesSource.html",
    "title": "Class LinesSource | FluentMigrator documentation",
    "keywords": "Class LinesSource A ITextSource implementation that uses lines as input Inheritance Object LinesSource Implements ITextSource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.Sources Assembly : FluentMigrator.Runner.Core.dll Syntax public class LinesSource : ITextSource Constructors | Improve this Doc View Source LinesSource(IEnumerable<String>) Initializes a new instance of the LinesSource class. Declaration public LinesSource([NotNull, ItemNotNull] IEnumerable<string> batchSource) Parameters Type Name Description IEnumerable < String > batchSource The collection of lines to be used as source Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration public ILineReader CreateReader() Returns Type Description ILineReader null when no content was available Implements ITextSource"
  },
  "api/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SQLiteBatchParser.html",
    "title": "Class SQLiteBatchParser | FluentMigrator documentation",
    "keywords": "Class SQLiteBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SQLiteBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SQLiteBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SQLiteBatchParser class. Declaration protected SQLiteBatchParser([NotNull, ItemNotNull] IEnumerable<IRangeSearcher> rangeSearchers, [NotNull, ItemNotNull] IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SQLiteBatchParser(String) Initializes a new instance of the SQLiteBatchParser class. Declaration public SQLiteBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.MultiLineComment.html",
    "title": "Class MultiLineComment | FluentMigrator documentation",
    "keywords": "Class MultiLineComment The default multi-line comment ( /* comment */ ) Inheritance Object StringWithNoEscape MultiLineComment Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MultiLineComment : StringWithNoEscape, IRangeSearcher Constructors | Improve this Doc View Source MultiLineComment() Initializes a new instance of the MultiLineComment class. Declaration public MultiLineComment() Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.DoubleDashSingleLineComment.html",
    "title": "Class DoubleDashSingleLineComment | FluentMigrator documentation",
    "keywords": "Class DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) Inheritance Object SingleLineComment DoubleDashSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class DoubleDashSingleLineComment : SingleLineComment, IRangeSearcher Constructors | Improve this Doc View Source DoubleDashSingleLineComment() Initializes a new instance of the DoubleDashSingleLineComment class. Declaration public DoubleDashSingleLineComment() Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.TextWriterWithGoAnnouncer.html",
    "title": "Class TextWriterWithGoAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterWithGoAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members TextWriterAnnouncer.Heading(String) TextWriterAnnouncer.ElapsedTime(TimeSpan) TextWriterAnnouncer.Write(String, Boolean) Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class TextWriterWithGoAnnouncer : TextWriterAnnouncer, IAnnouncer Constructors | Improve this Doc View Source TextWriterWithGoAnnouncer(IOptions<TextWriterAnnouncerOptions>) Declaration public TextWriterWithGoAnnouncer(IOptions<TextWriterAnnouncerOptions> options) Parameters Type Name Description IOptions < TextWriterAnnouncerOptions > options | Improve this Doc View Source TextWriterWithGoAnnouncer(Action<String>) Declaration public TextWriterWithGoAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write | Improve this Doc View Source TextWriterWithGoAnnouncer(TextWriter) Declaration public TextWriterWithGoAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods | Improve this Doc View Source Sql(String) Declaration public override void Sql(string sql) Parameters Type Name Description String sql Overrides Announcer.Sql(String) Implements IAnnouncer"
  },
  "api/FluentMigrator.Runner.Announcers.TextWriterAnnouncerOptions.html": {
    "href": "api/FluentMigrator.Runner.Announcers.TextWriterAnnouncerOptions.html",
    "title": "Class TextWriterAnnouncerOptions | FluentMigrator documentation",
    "keywords": "Class TextWriterAnnouncerOptions Inheritance Object AnnouncerOptions TextWriterAnnouncerOptions Inherited Members AnnouncerOptions.AllEnabled AnnouncerOptions.ShowSql AnnouncerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class TextWriterAnnouncerOptions : AnnouncerOptions Properties | Improve this Doc View Source WriteDelegate Declaration public Action<string> WriteDelegate { get; set; } Property Value Type Description Action < String >"
  },
  "api/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.TextWriterAnnouncer.html",
    "title": "Class TextWriterAnnouncer | FluentMigrator documentation",
    "keywords": "Class TextWriterAnnouncer Inheritance Object Announcer TextWriterAnnouncer TextWriterWithGoAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class TextWriterAnnouncer : Announcer, IAnnouncer Constructors | Improve this Doc View Source TextWriterAnnouncer(IOptions<TextWriterAnnouncerOptions>) Declaration public TextWriterAnnouncer(IOptions<TextWriterAnnouncerOptions> options) Parameters Type Name Description IOptions < TextWriterAnnouncerOptions > options | Improve this Doc View Source TextWriterAnnouncer(Action<String>) Declaration public TextWriterAnnouncer(Action<string> write) Parameters Type Name Description Action < String > write | Improve this Doc View Source TextWriterAnnouncer(TextWriter) Declaration public TextWriterAnnouncer(TextWriter writer) Parameters Type Name Description TextWriter writer Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) | Improve this Doc View Source Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/FluentMigrator.Runner.Announcers.NullAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.NullAnnouncer.html",
    "title": "Class NullAnnouncer | FluentMigrator documentation",
    "keywords": "Class NullAnnouncer Inheritance Object Announcer NullAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Heading(String) Announcer.Say(String) Announcer.Emphasize(String) Announcer.Sql(String) Announcer.ElapsedTime(TimeSpan) Announcer.Error(Exception) Announcer.Error(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class NullAnnouncer : Announcer, IAnnouncer Methods | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/FluentMigrator.Runner.Announcers.Announcer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.Announcer.html",
    "title": "Class Announcer | FluentMigrator documentation",
    "keywords": "Class Announcer Inheritance Object Announcer ConsoleAnnouncer NullAnnouncer TextWriterAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public abstract class Announcer : IAnnouncer Constructors | Improve this Doc View Source Announcer() Declaration protected Announcer() | Improve this Doc View Source Announcer(IOptions<AnnouncerOptions>) Declaration protected Announcer(IOptions<AnnouncerOptions> options) Parameters Type Name Description IOptions < AnnouncerOptions > options Properties | Improve this Doc View Source ShowElapsedTime Declaration public virtual bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Declaration public virtual bool ShowSql { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public virtual void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public virtual void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public virtual void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public virtual void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public virtual void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public virtual void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public virtual void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration public abstract void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/FluentMigrator.Runner.AnnouncerExtensions.html": {
    "href": "api/FluentMigrator.Runner.AnnouncerExtensions.html",
    "title": "Class AnnouncerExtensions | FluentMigrator documentation",
    "keywords": "Class AnnouncerExtensions Extension methods for an IAnnouncer Inheritance Object AnnouncerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public static class AnnouncerExtensions Methods | Improve this Doc View Source Error(IAnnouncer, String, Object[]) Writes a formatted error message Declaration [Obsolete] public static void Error(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments | Improve this Doc View Source Heading(IAnnouncer, String, Object[]) Writes a formatted heading message Declaration [Obsolete] public static void Heading(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments | Improve this Doc View Source Say(IAnnouncer, String, Object[]) Writes a formatted message Declaration [Obsolete] public static void Say(this IAnnouncer announcer, string message, params object[] args) Parameters Type Name Description IAnnouncer announcer The announcer used to write the message String message The message to format Object [] args The arguments"
  },
  "api/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html": {
    "href": "api/FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue.html",
    "title": "Class ColumnDefinition.UndefinedDefaultValue | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition.UndefinedDefaultValue Instances of this class are used to specify an undefined default value Inheritance Object ColumnDefinition.UndefinedDefaultValue Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public sealed class UndefinedDefaultValue"
  },
  "api/FluentMigrator.MigrationTraitAttribute.html": {
    "href": "api/FluentMigrator.MigrationTraitAttribute.html",
    "title": "Class MigrationTraitAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationTraitAttribute A trait for a migration Inheritance Object Attribute MigrationTraitAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class MigrationTraitAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MigrationTraitAttribute(String) Initializes a new instance of the MigrationTraitAttribute class. Declaration public MigrationTraitAttribute(string name) Parameters Type Name Description String name | Improve this Doc View Source MigrationTraitAttribute(String, Object) Initializes a new instance of the MigrationTraitAttribute class. Declaration public MigrationTraitAttribute(string name, object value) Parameters Type Name Description String name The trait name Object value The trait value Properties | Improve this Doc View Source Name Gets the trait name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Gets the trait value Declaration public object Value { get; } Property Value Type Description Object Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.Infrastructure.SingleAssembly.html": {
    "href": "api/FluentMigrator.Infrastructure.SingleAssembly.html",
    "title": "Class SingleAssembly | FluentMigrator documentation",
    "keywords": "Class SingleAssembly A simple wrapper which is equivalent to a collection with a single Assembly Inheritance Object SingleAssembly Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class SingleAssembly : IAssemblyCollection Constructors | Improve this Doc View Source SingleAssembly(Assembly) Initializes a new instance of the SingleAssembly class. Declaration public SingleAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "api/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html": {
    "href": "api/FluentMigrator.Infrastructure.NonAttributedMigrationToMigrationInfoAdapter.html",
    "title": "Class NonAttributedMigrationToMigrationInfoAdapter | FluentMigrator documentation",
    "keywords": "Class NonAttributedMigrationToMigrationInfoAdapter This adapter wraps a migration into a MigrationInfo instance, used to keep IMigration backwards compatible with new IMigrationInfo . Inheritance Object NonAttributedMigrationToMigrationInfoAdapter Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class NonAttributedMigrationToMigrationInfoAdapter : IMigrationInfo Constructors | Improve this Doc View Source NonAttributedMigrationToMigrationInfoAdapter(IMigration) Initializes a new instance of the NonAttributedMigrationToMigrationInfoAdapter class. Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration) Parameters Type Name Description IMigration migration The underlying migration | Improve this Doc View Source NonAttributedMigrationToMigrationInfoAdapter(IMigration, TransactionBehavior) Initializes a new instance of the NonAttributedMigrationToMigrationInfoAdapter class. Declaration public NonAttributedMigrationToMigrationInfoAdapter(IMigration migration, TransactionBehavior transactionBehavior) Parameters Type Name Description IMigration migration The underlying migration TransactionBehavior transactionBehavior The desired transaction behavior Properties | Improve this Doc View Source Description Gets the migration description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source GetName() Gets the migration name Declaration public string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration public bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration public object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/FluentMigrator.Infrastructure.MigrationInfo.html": {
    "href": "api/FluentMigrator.Infrastructure.MigrationInfo.html",
    "title": "Class MigrationInfo | FluentMigrator documentation",
    "keywords": "Class MigrationInfo The default IMigrationInfo implementation for migrations with the MigrationAttribute Inheritance Object MigrationInfo Implements IMigrationInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class MigrationInfo : IMigrationInfo Constructors | Improve this Doc View Source MigrationInfo(Int64, TransactionBehavior, IMigration) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, IMigration migration) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior IMigration migration The underlying migration | Improve this Doc View Source MigrationInfo(Int64, TransactionBehavior, Boolean, IMigration) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, TransactionBehavior transactionBehavior, bool isBreakingChange, IMigration migration) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior Boolean isBreakingChange Indicates wether the migration is a breaking change IMigration migration The underlying migration | Improve this Doc View Source MigrationInfo(Int64, String, TransactionBehavior, Boolean, Func<IMigration>) Initializes a new instance of the MigrationInfo class. Declaration public MigrationInfo(long version, string description, TransactionBehavior transactionBehavior, bool isBreakingChange, Func<IMigration> migrationFunc) Parameters Type Name Description Int64 version The migration version String description The migration description TransactionBehavior transactionBehavior The desired transaction behavior Boolean isBreakingChange Indicates wether the migration is a breaking change Func < IMigration > migrationFunc A function to get the IMigration instance Properties | Improve this Doc View Source Description Gets the migration description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source IsBreakingChange Gets a value indicating whether the migration is a breaking change Declaration public bool IsBreakingChange { get; } Property Value Type Description Boolean | Improve this Doc View Source Migration Gets the migration Declaration public IMigration Migration { get; } Property Value Type Description IMigration | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source AddTrait(String, Object) Manually adds a trait to the migration Declaration public void AddTrait(string name, object value) Parameters Type Name Description String name The trait name Object value The trait value | Improve this Doc View Source GetName() Gets the migration name Declaration public string GetName() Returns Type Description String | Improve this Doc View Source HasTrait(String) Returns a value indicating whether a given trait was specified Declaration public bool HasTrait(string name) Parameters Type Name Description String name The trait name Returns Type Description Boolean true when the trait was specified | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Trait(String) Gets the trait object with the given name Declaration public object Trait(string name) Parameters Type Name Description String name The trait name Returns Type Description Object The object associated with the given name Implements IMigrationInfo Extension Methods ExtensionsForIMigrationInfo.IsAttributed(IMigrationInfo)"
  },
  "api/FluentMigrator.Infrastructure.MigrationContext.html": {
    "href": "api/FluentMigrator.Infrastructure.MigrationContext.html",
    "title": "Class MigrationContext | FluentMigrator documentation",
    "keywords": "Class MigrationContext The default implementation of the IMigrationContext Inheritance Object MigrationContext Implements IMigrationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.dll Syntax public class MigrationContext : IMigrationContext Constructors | Improve this Doc View Source MigrationContext(IQuerySchema, IAssemblyCollection, Object, String) Initializes a new instance of the MigrationContext class. Declaration [Obsolete] public MigrationContext([NotNull] IQuerySchema querySchema, [NotNull] IAssemblyCollection migrationAssemblies, object context, string connection) Parameters Type Name Description IQuerySchema querySchema The provider used to query the database IAssemblyCollection migrationAssemblies The collection of migration assemblies Object context The arbitrary application context passed to the task runner String connection The database connection | Improve this Doc View Source MigrationContext(IQuerySchema, IServiceProvider, Object, String) Initializes a new instance of the MigrationContext class. Declaration public MigrationContext([NotNull] IQuerySchema querySchema, [NotNull] IServiceProvider serviceProvider, object context, string connection) Parameters Type Name Description IQuerySchema querySchema The provider used to query the database IServiceProvider serviceProvider The service provider Object context The arbitrary application context passed to the task runner String connection The database connection Properties | Improve this Doc View Source ApplicationContext Gets or sets the arbitrary application context passed to the task runner Declaration [Obsolete] public virtual object ApplicationContext { get; set; } Property Value Type Description Object | Improve this Doc View Source Connection Gets or sets the connection string Declaration public string Connection { get; set; } Property Value Type Description String | Improve this Doc View Source Expressions Gets or sets the collection of expressions Declaration public virtual ICollection<IMigrationExpression> Expressions { get; set; } Property Value Type Description ICollection < IMigrationExpression > | Improve this Doc View Source MigrationAssemblies Gets or sets the collection of migration assemblies Declaration [Obsolete] public virtual IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source QuerySchema Gets the IQuerySchema to access the database Declaration public virtual IQuerySchema QuerySchema { get; set; } Property Value Type Description IQuerySchema | Improve this Doc View Source ServiceProvider Gets the service provider used to create this migration context Declaration public IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Implements IMigrationContext"
  },
  "api/FluentMigrator.Infrastructure.IEmbeddedResourceProvider.html": {
    "href": "api/FluentMigrator.Infrastructure.IEmbeddedResourceProvider.html",
    "title": "Interface IEmbeddedResourceProvider | FluentMigrator documentation",
    "keywords": "Interface IEmbeddedResourceProvider Interface for getting all embedded resources Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public interface IEmbeddedResourceProvider Methods | Improve this Doc View Source GetEmbeddedResources() Gets all embedded resources Declaration [NotNull] IEnumerable<> GetEmbeddedResources() Returns Type Description IEnumerable < System. > A tuple for every embedded resource and the containing assembly"
  },
  "api/FluentMigrator.Infrastructure.ICanBeValidated.html": {
    "href": "api/FluentMigrator.Infrastructure.ICanBeValidated.html",
    "title": "Interface ICanBeValidated | FluentMigrator documentation",
    "keywords": "Interface ICanBeValidated Interface definition for validation Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete(\"Check for IValidatableObject and use it\")] public interface ICanBeValidated Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Check for IValidatableObject and use it\")] void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Infrastructure.IAssemblyCollection.html": {
    "href": "api/FluentMigrator.Infrastructure.IAssemblyCollection.html",
    "title": "Interface IAssemblyCollection | FluentMigrator documentation",
    "keywords": "Interface IAssemblyCollection A bundle of one or more Assembly instances Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public interface IAssemblyCollection Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration [Obsolete] Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration [Obsolete] Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration [Obsolete] ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly."
  },
  "api/FluentMigrator.Infrastructure.Extensions.html": {
    "href": "api/FluentMigrator.Infrastructure.Extensions.html",
    "title": "Namespace FluentMigrator.Infrastructure.Extensions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Infrastructure.Extensions Classes AdditionalFeaturesExtensions Extension methods for the ISupportAdditionalFeatures interface CloneExtensions Extension methods for cloning ExtensionsForICustomAttributeProvider Extension methods for ICustomAttributeProvider ExtensionsForIMigrationInfo Extension methods for IMigrationInfo"
  },
  "api/FluentMigrator.Infrastructure.ErrorMessages.html": {
    "href": "api/FluentMigrator.Infrastructure.ErrorMessages.html",
    "title": "Class ErrorMessages | FluentMigrator documentation",
    "keywords": "Class ErrorMessages Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw. Inheritance Object ErrorMessages Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class ErrorMessages Properties | Improve this Doc View Source ColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The column's name cannot be null or an empty string. ähnelt. Declaration public static string ColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ColumnNamesMustBeUnique Sucht eine lokalisierte Zeichenfolge, die Column names must be unique. ähnelt. Declaration public static string ColumnNamesMustBeUnique { get; } Property Value Type Description String | Improve this Doc View Source ColumnTypeMustBeDefined Sucht eine lokalisierte Zeichenfolge, die The column does not have a type defined. ähnelt. Declaration public static string ColumnTypeMustBeDefined { get; } Property Value Type Description String | Improve this Doc View Source ConstraintMustHaveAtLeastOneColumn Sucht eine lokalisierte Zeichenfolge, die The constraint must have at least one column specified. ähnelt. Declaration public static string ConstraintMustHaveAtLeastOneColumn { get; } Property Value Type Description String | Improve this Doc View Source Culture Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden. Declaration public static CultureInfo Culture { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source DefaultValueCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The default value cannot be null. ähnelt. Declaration public static string DefaultValueCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source DestinationSchemaCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The destination schema's name cannot be null or an empty string. ähnelt. Declaration public static string DestinationSchemaCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source ExpressionTableNameMissing Sucht eine lokalisierte Zeichenfolge, die expression.TableName must not be empty ähnelt. Declaration public static string ExpressionTableNameMissing { get; } Property Value Type Description String | Improve this Doc View Source ExpressionTableNameMissingWithHints Sucht eine lokalisierte Zeichenfolge, die Table name not specified, ensure you have appended the OnTable extension. Format should be Delete.ForeignKey(KeyName).OnTable(TableName) ähnelt. Declaration public static string ExpressionTableNameMissingWithHints { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyMustHaveOneOrMoreForeignColumns Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more foreign columns. ähnelt. Declaration public static string ForeignKeyMustHaveOneOrMoreForeignColumns { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyMustHaveOneOrMorePrimaryColumns Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more primary columns. ähnelt. Declaration public static string ForeignKeyMustHaveOneOrMorePrimaryColumns { get; } Property Value Type Description String | Improve this Doc View Source ForeignKeyNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The foreign key's name cannot be null or an empty string. ähnelt. Declaration public static string ForeignKeyNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ForeignTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The foreign table name cannot be null or empty. ähnelt. Declaration public static string ForeignTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source IndexMustHaveOneOrMoreColumns Sucht eine lokalisierte Zeichenfolge, die The index must have one or more columns. ähnelt. Declaration public static string IndexMustHaveOneOrMoreColumns { get; } Property Value Type Description String | Improve this Doc View Source IndexNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The index's name cannot be null or an empty string. ähnelt. Declaration public static string IndexNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source MethodXMustBeCalledOnObjectImplementingY Sucht eine lokalisierte Zeichenfolge, die The {0} method must be called on an object that implements {1}. ähnelt. Declaration public static string MethodXMustBeCalledOnObjectImplementingY { get; } Property Value Type Description String | Improve this Doc View Source NewColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The new column name cannot be null or empty. ähnelt. Declaration public static string NewColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source NewTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The new table name cannot be null or empty. ähnelt. Declaration public static string NewTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OldColumnNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The old column name cannot be null or empty. ähnelt. Declaration public static string OldColumnNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OldTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The old table name cannot be null or empty. ähnelt. Declaration public static string OldTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source OperationCannotBeNull Sucht eine lokalisierte Zeichenfolge, die The operation to be performed using the database connection cannot be null. ähnelt. Declaration public static string OperationCannotBeNull { get; } Property Value Type Description String | Improve this Doc View Source PrimaryTableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The primary table name cannot be null or empty. ähnelt. Declaration public static string PrimaryTableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source ResourceManager Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird. Declaration public static ResourceManager ResourceManager { get; } Property Value Type Description ResourceManager | Improve this Doc View Source SchemaNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The schema's name cannot be null or an empty string. ähnelt. Declaration public static string SchemaNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SequenceNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sequence's name cannot be null or an empty string. ähnelt. Declaration public static string SequenceNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SqlScriptCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sql script cannot be null or an empty string. ähnelt. Declaration public static string SqlScriptCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source SqlStatementCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The sql statement cannot be null or an empty string. ähnelt. Declaration public static string SqlStatementCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source TableNameCannotBeNullOrEmpty Sucht eine lokalisierte Zeichenfolge, die The table's name cannot be null or an empty string. ähnelt. Declaration public static string TableNameCannotBeNullOrEmpty { get; } Property Value Type Description String | Improve this Doc View Source UpdateDataExpressionMustNotSpecifyBothWhereClauseAndAllRows Sucht eine lokalisierte Zeichenfolge, die Update statement specifies both a .Where() condition and that .AllRows() should be targeted. Specify one or the other, but not both. ähnelt. Declaration public static string UpdateDataExpressionMustNotSpecifyBothWhereClauseAndAllRows { get; } Property Value Type Description String | Improve this Doc View Source UpdateDataExpressionMustSpecifyWhereClauseOrAllRows Sucht eine lokalisierte Zeichenfolge, die Update statement is missing a condition. Specify one by calling .Where() or target all rows by calling .AllRows(). ähnelt. Declaration public static string UpdateDataExpressionMustSpecifyWhereClauseOrAllRows { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.html": {
    "href": "api/FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.html",
    "title": "Class DefaultEmbeddedResourceProvider | FluentMigrator documentation",
    "keywords": "Class DefaultEmbeddedResourceProvider The default implementation of the IEmbeddedResourceProvider interface Inheritance Object DefaultEmbeddedResourceProvider Implements IEmbeddedResourceProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax public class DefaultEmbeddedResourceProvider : IEmbeddedResourceProvider Constructors | Improve this Doc View Source DefaultEmbeddedResourceProvider(IAssemblyCollection) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration [Obsolete] public DefaultEmbeddedResourceProvider([CanBeNull] IAssemblyCollection assemblyCollection) Parameters Type Name Description IAssemblyCollection assemblyCollection The assembly collection to get the ebmedded resources for | Improve this Doc View Source DefaultEmbeddedResourceProvider(IEnumerable<Assembly>) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration public DefaultEmbeddedResourceProvider([NotNull, ItemNotNull] IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies The assemblies to be scanned for the embedded resources | Improve this Doc View Source DefaultEmbeddedResourceProvider(Assembly[]) Initializes a new instance of the DefaultEmbeddedResourceProvider class. Declaration public DefaultEmbeddedResourceProvider([NotNull, ItemNotNull] params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to be scanned for the embedded resources Methods | Improve this Doc View Source GetEmbeddedResources() Gets all embedded resources Declaration public IEnumerable<> GetEmbeddedResources() Returns Type Description IEnumerable < System. > A tuple for every embedded resource and the containing assembly Implements IEmbeddedResourceProvider"
  },
  "api/FluentMigrator.Infrastructure.AssemblyCollection.html": {
    "href": "api/FluentMigrator.Infrastructure.AssemblyCollection.html",
    "title": "Class AssemblyCollection | FluentMigrator documentation",
    "keywords": "Class AssemblyCollection An assembly collection for multiple assemblies Inheritance Object AssemblyCollection Implements IAssemblyCollection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Infrastructure Assembly : FluentMigrator.Abstractions.dll Syntax [Obsolete] public class AssemblyCollection : IAssemblyCollection Constructors | Improve this Doc View Source AssemblyCollection(IEnumerable<Assembly>) Initializes a new instance of the AssemblyCollection class. Declaration public AssemblyCollection(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies The assemblies for the collection Properties | Improve this Doc View Source Assemblies Gets the Assemblies contained in this collection Declaration public Assembly[] Assemblies { get; } Property Value Type Description Assembly [] Methods | Improve this Doc View Source GetExportedTypes() The result of this method is equivalent to calling GetExportedTypes on each Assembly in Assemblies. Declaration public Type[] GetExportedTypes() Returns Type Description Type [] The array of exported types | Improve this Doc View Source GetManifestResourceNames() Gets a array of resources defined in each of the assemblies that are contained in this collection, plus which assembly it is defined in. Declaration public ManifestResourceNameWithAssembly[] GetManifestResourceNames() Returns Type Description ManifestResourceNameWithAssembly [] An array of value pairs of resource name plus assembly. Implements IAssemblyCollection"
  },
  "articles/guides/upgrades/guide-2.0-to-3.0.html": {
    "href": "articles/guides/upgrades/guide-2.0-to-3.0.html",
    "title": "Upgrade Guide from 2.0 to 3.0 | FluentMigrator documentation",
    "keywords": "Upgrading from 2.x to 3.0 The upgrade from 2.x to 3.0 should be very smooth, because the API was kept mostly unchanged. What is new? FluentMigrator now uses dependency injection and other standard libraries from the ASP.NET Core project extensively. This results in a simpler API, well-defined extension points and in general more flexibility. New in-process runner initialization var serviceProvider = new ServiceCollection() // Logging is the replacement for the old IAnnouncer .AddLogging(lb => lb.AddFluentMigratorConsole()) // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Use SQLite .AddSQLite() // The SQLite connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Specify the assembly with the migrations .WithMigrationsIn(typeof(MyMigration).Assembly)) .BuildServiceProvider(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { // Instantiate the runner var runner = scope.ServiceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } dotnet-fm as global .NET Core CLI tool The dotnet-fm tool is now a global tool and therefore requires the .NET Core 2.1-preview2 tooling. This allows the usage of dotnet fm migrate from other directories than the project directory. Connection string handling changes The library assumes that in ProcessorOptions.ConnectionString is either a connection string or a connection string identifier. This are the steps to load the real connection string. Queries all IConnectionStringReader implementations When a connection string is returned by one of the readers, then this connection string will be used When no connection string is returned, try reading from the next IConnectionStringReader When no reader returned a connection string, then return ProcessorOptions.ConnectionString The connection string stored in ProcessorOptions.ConnectionString might be overridden by registering the IConnectionStringReader instance PassThroughConnectionStringReader as scoped service. When no connection string could be found, the SelectingProcessorAccessor returns a ConnectionlessProcessor instead of the previously selected processor. Custom migration expression validation There is a new service IMigrationExpressionValidator with a default implementation DefaultMigrationExpressionValidator that validates the migration expressions before executing them. This feature allows - for example - forbidding data deletions in a production environment. Using System.ComponentModel.DataAnnotations for validation Breaking Changes Version 3.0 dropped support for all .NET Framework versions below 4.6.1 and the timeout values are now stored as TimeSpan . Minimum: .NET Framework 4.6.1 Dropping the support for all .NET Framework versions below 4.6.1 was required, because the package now relies on the following libraries: Microsoft.Extensions.DependencyInjection Microsoft.Extensions.Options Microsoft.Extensions.Logging Microsoft.Extensions.Configuration ProcessorOptions.Timeout is now a TimeSpan This change is part of the ongoing effort to make the API easier to understand, because it might not be clear if an int timeout is the timeout in milliseconds, seconds, etc.. ICanBeValidated not used anymore The library now uses System.ComponentModel.DataAnnotations for validation - for example the [Required] attribute for expression fields that are - one might've guessed it - required. MigrationGeneratorFactory not used anymore The selection of the SQL generator happens using the IGeneratorAccessor service. MigrationProcessorFactoryProvider not used anymore The selection of the migration processor is done with the IProcessorAccessor service. Obsolete API Due to the introduction of dependency injection, some important migration runner related parts of the API have been deprecated. This section convers this topic and shows how to switch to the new dependency injection based API. Migration runner initialization This section shows the runner initialization both with dependency injection and with the IRunnerContext . New (with dependency injection) Obsolete (with IRunnerContext ) var serviceProvider = new ServiceCollection() // Logging is the replacement for the old IAnnouncer .AddLogging(lb => lb.AddFluentMigratorConsole()) // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Use SQLite .AddSQLite() // The SQLite connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Specify the assembly with the migrations .WithMigrationsIn(typeof(MyMigration).Assembly)) .BuildServiceProvider(); The runner can now be created and used with: // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { // Instantiate the runner var runner = scope.ServiceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } // Create the announcer to output the migration messages var announcer = new ConsoleAnnouncer(); // Processor specific options (usually none are needed) var options = new ProcessorOptions(); // Use SQLite var processorFactory = new SQLiteProcessorFactory(); // Initialize the processor using (var processor = processorFactory.Create( // The SQLite connection string \"Data Source=test.db\", announcer, options)) { // Configure the runner var context = new RunnerContext(announcer); // Create the migration runner var runner = new MigrationRunner( // Specify the assembly with the migrations typeof(MyMigration).Assembly, context, processor); // Run the migrations runner.MigrateUp(); } Differences explained Dependency Injection Allows fluent configuration Uses standard libraries Dependency Injection Options Logging Uses pluggable APIs May use a different DI container under the hood (AutoFac, etc...) May use standard logging frameworks (log4net, nlog, etc...) Obsolete API Clunky Re-inventing the wheel IAnnouncer The IAnnouncer interface (and its implementations) were replaced by ILogger and its implementations. Logger registration You can comfortably register the default FluentMigratorConsoleLogger : var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .BuildServiceProvider(); Configuring the logger output Warning Loggers derived from FluentMigratorLogger may use other logger option classes! Enabling output of elapsed time var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .Configure<FluentMigratorLoggerOptions>(cfg => { cfg.ShowElapsedTime = true; }) .BuildServiceProvider(); Enabling output of SQL Important Logging the SQL messages might be a security risk. Don't store sensitive data unhashed/unencrypted! var serviceProvider = new ServiceCollection() .AddLogging(lb => lb.AddFluentMigratorConsole()) .Configure<FluentMigratorLoggerOptions>(cfg => { cfg.ShowSql = true; }) .BuildServiceProvider(); Logger usage You don't use the loggers directly any more. Instead, you just create a constructor parameter with a type of ILogger or ILogger . public class MyMigration : ForwardOnlyMigration { private readonly ILogger<MyMigration> _logger; public MyMigration(ILogger<MyMigration> logger) { _logger = logger; } public void Up() { _logger.LogInformation(\"Creating Up migration expressions\"); } } Other loggers There are several other loggers, like: LogFileFluentMigratorLoggerProvider for logging SQL statements into a file SqlScriptFluentMigratorLoggerProvider for logging SQL statements into a TextWriter Registration of LogFileFluentMigratorLoggerProvider var serviceProvider = new ServiceCollection() .AddSingleton<ILoggerProvider, LogFileFluentMigratorLoggerProvider>() .Configure<LogFileFluentMigratorLoggerOptions>(opt => { opt.OutputFileName = \"sqlscript.sql\"; }) .BuildServiceProvider(); IMigrationRunnerConventions.GetMigrationInfo This function was replaced by IMigrationRunnerConventions.GetMigrationInfoForMigration , because the instantiation will be done using the dependency injection framework. IProfileLoader.ApplyProfiles This function was replaced by IProfileLoader.ApplyProfiles(IMigrationRunner) to avoid circular dependencies. IProfileLoader.FindProfilesIn(IAssemblyCollection, String) This function is not used anymore. IMigrationProcessorOptions This interface is not used anymore. We use ProcessorOptions instead. IMigrationProcessorFactory The factories aren't needed anymore. The registered services provide everything that they need for their configuration. IRunnerContext and RunnerContext This properties of this interface/class were refactored into several classes. Properties moved into RunnerOptions ApplicationContext ( obsolete! ) AllowBreakingChange NoConnection Profile StartVersion Steps Tags Task TransactionPerSession Version Properties moved into ProcessorOptions ConnectionString PreviewOnly ProviderSwitches Timeout Properties moved into TypeFilterOptions Namespace NestedNamespaces Properties moved into AppConfigConnectionStringAccessorOptions Warning This class only works under the full .NET Framework and is marked as obsolete! Provide access to an IConfiguration service. The FluentMigrator library will use it to call the GetConnectionString extension method. ConnectionStringPath ➔ ConnectionStringConfigPath Properties moved into SelectingProcessorAccessorOptions Database ➔ ProcessorId Properties moved into AssemblySourceOptions Targets ➔ AssemblyNames Properties with no direct replacement Announcer : Get your ILogger with dependency injection instead StopWatch : Get your IStopWatch with dependency injection instead WorkingDirectory This is set directly by the creation of a DefaultConventionSet and adding it as singleton to the service collection. var conventionSet = new DefaultConventionSet(defaultSchemaName: null, WorkingDirectory); services.AddSingleton<IConventionSet>(conventionSet) DefaultSchemaName This is set directly by the creation of a DefaultConventionSet and adding it as singleton to the service collection. var conventionSet = new DefaultConventionSet(DefaultSchemaName, workingDirectory: null); services.AddSingleton<IConventionSet>(conventionSet) CompatabilityMode renamed to CompatibilityMode The spelling has been fixed. ApplicationContext It is not needed anymore due to the dependency injection providing all services one may need. ManifestResourceNameWithAssembly replaced by ValueTuple This class was overkill. MigrationGeneratorFactory This isn't needed anymore, because all factories must be added dynamically using the ConfigureRunner extension method. Example: var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) /* TODO: Add more services */ .BuildServiceProvider(); Selecting the database The key is the IProcessorAccessor service and its default implementation SelectingProcessorAccessor , which is configured using the SelectingProcessorAccessorOptions . [!INFO] When the SelectingProcessorAccessorOptions aren't configured, then the value from the SelectingGeneratorAccessorOptions is used. [!INFO] When neiter a processor nor generator ID was specified, then the added processor will be used - but only where there is only one! When no processor or more than one was specified, then an exception gets thrown. var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) .Configure<SelectingProcessorAccessorOptions>(cfg => { // Selects SQLite from the set of supported databases cfg.ProcessorId = \"sqlite\"; }) /* TODO: Add more services */ .BuildServiceProvider(); MigrationProcessorFactoryProvider This isn't needed anymore, because all processor factory providers must be added dynamically using the ConfigureRunner extension method. You can find an example above . Selecting the database The key is the IGeneratorAccessor service and its default implementation SelectingGeneratorAccessor , which is configured using the SelectingGeneratorAccessorOptions . [!INFO] When the SelectingGeneratorAccessorOptions aren't configured, then the value from the SelectingProcessorAccessorOptions is used. [!INFO] When neiter a generator nor processor ID was specified, then the added generator will be used - but only where there is only one! When no generator or more than one was specified, then an exception gets thrown. var serviceProvider = new ServiceCollection() // Registration of all FluentMigrator-specific services .AddFluentMigratorCore() // Configure the runner .ConfigureRunner( builder => builder // Add database support .AddSQLite() .AddSqlServer2008() .AddFirebird() /* TODO: More configuration */ ) .Configure<SelectingGeneratorAccessorOptions>(cfg => { // Selects SQLite from the set of supported databases cfg.GeneratorId = \"sqlite\"; }) /* TODO: Add more services */ .BuildServiceProvider(); ITypeMap.GetTypeMap(DbType, int, int) Sometimes, it is possible that a given database type needs a precision of 0, so we cannot use 0 an indicator for an unspecified value anymore. Therefore, we provide an overload using nullable integer values . IDbFactory The implementations will remain, but the interface will be gone. ICanBeValidated The library now uses System.ComponentModel.DataAnnotations for validation - for example the [Required] attribute for expression fields that are - one might've guessed it - required. MigrationRunner.MaintenanceLoader is read-only Don't set the maintenance loader directly. Just register your own as a service."
  },
  "articles/guides/upgrades/guide-1.6-to-2.0.html": {
    "href": "articles/guides/upgrades/guide-1.6-to-2.0.html",
    "title": "Upgrade Guide from 1.6 to 2.0 | FluentMigrator documentation",
    "keywords": "Upgrading from 1.6 to 2.0 What is new? FluentMigrator finally gained .NET Standard 2.0 support and added serveral new database and migration expression features. .NET Standard 2.0 This finally allows the usage of FluentMigrator together with ASP.NET Core 2.0! New databases SAP SQL Anywhere 16 With Unique Constraints: Non-Distinct NULL support Microsoft SQL Server 2016 Oracle MySQL 5 Amazon Redshift (experimental) Several enhancements MySQL ALTER DEFAULT , DROP DEFAULT support SQL Server 2005 WITH (ONLINE=ON/OFF) support 64 bit identity support SQL Server 2008 Unique Constraints: Non-Distinct NULL support Firebird New provider option: Force Quote=true to enforce quotes SQLite Foreign key support Streamlined table/index schema quoting Types: DateTime2 support Expression: IfDatabase: Predicate support IfDatabase: Method delegation support Index: Creation with non*key columns Conventions: Default schema name support SetExistingRowsTo supports SystemMethods Insert/Update/Delete: DbNull support Passing arguments to embedded SQL scripts Runner: TaskExecutor: HasMigrationsToApply support Case insensitive arguments support StopOnError flag What did change? DB-specific code moved The database specific code is now in its own assembly (one per database family). This will allow trimming dependencies in the future. MySQL announcing SQL scripts Some other DB processors already do this. Runner improvements Better error messages ListMigrations: showing (not applied) for unapplied migrations Show (BREAKING) for migrations with breaking changes MSBuild task is available as separate package (with custom .targets file) Use provider default command timeout when no global timeout is set Breaking changes DB-specific extensions The extension methods are now in their own assembly and namespace (e.g. for SqlServer - FluentMigrator.Extensions.SqlServer ). .NET Framework 3.5 support removed We now require at least .NET Framework 4.0. NAnt build runner removed NAnt itself isn't a living project anymore."
  },
  "articles/guides/overview.html": {
    "href": "articles/guides/overview.html",
    "title": "FluentMigrator Guides | FluentMigrator documentation",
    "keywords": "This is a collection of guides around FluentMigrator. For beginners Getting Started For contributors How to contribute For upgrades 1.6 to 2.0 2.x to 3.0"
  },
  "articles/guides/contribution.html": {
    "href": "articles/guides/contribution.html",
    "title": "How to contribute | FluentMigrator documentation",
    "keywords": "How to contribute Fork on GitHub Create a branch Code (and add tests) Create a pull request on GitHub Target the develop branch for API-breaking changes Target the master branch for non-API-breaking changes and/or hotfixes Get the pull request merged Done How to build the code Note You must install mono on non-Windows platforms! dotnet build FluentMigrator.sln How to test the code Windows dotnet test test\\FluentMigrator.Tests\\FluentMigrator.Tests.csproj Linux, MacOS dotnet test test/FluentMigrator.Tests/FluentMigrator.Tests.csproj --filter \"TestCategory!=NotWorkingOnMono\" Enabling integration tests Only integration tests for two databases are enabled by default: SQL Server Compact Edition Only runs on Windows due to inability to load the needed DLLs SQLite This requires an installed Mono.Data.Sqlite package on Linux Every database can be configured using the dotnet user-secrets tool. Enabling PostgreSQL integration tests might look like this: Create a user fluentmigrator with password fluentmigrator Add a database FluentMigrator with the owner fluentmigrator Type the following instructions: # change into the test project directory cd test/FluentMigrator.Tests # Set the PostgreSQL connection string dotnet user-secrets set \"TestConnectionStrings:Postgres:ConnectionString\" \"Server=127.0.0.1;Port=5432;Database=FluentMigrator;User Id=fluentmigrator;Password=fluentmigrator\" # Enable the PostgreSQL integration tests dotnet user-secrets set \"TestConnectionStrings:Postgres:IsEnabled\" True When you run the unit tests, the integration tests for PostgreSQL are run as well. How to create NuGet packages dotnet pack ./FluentMigrator.sln --output \"absolute-path-to-output-directory\" ReSharper/Rider specific support There is a new template ctorc which creates a StyleCop-compatible constructor summary. Code style Please use an editor that supports the .editorconfig and/or the ReSharper/Rider settings FluentMigrator.sln.DotSettings . Generic Use spaces for indention Add a \"new line\" character when the last line is not empty Remove trailing whitespace characters For C# Indent size is 4 characters Use var for built-in types Use var when the type is apparent Prefer braces Sort using directives System using directives first Empty line between using directive groups Line break before open brace Add a license header region to every *.cs file #region License // // Copyright (c) 2018, Fluent Migrator Project // // Licensed under the Apache License, Version 2.0 (the \"License\"); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an \"AS IS\" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. // #endregion"
  },
  "articles/extensions/sql-server-extensions.html": {
    "href": "articles/extensions/sql-server-extensions.html",
    "title": "SQL Server specific extensions | FluentMigrator documentation",
    "keywords": "FluentMigrator supports some extra functions that are specific to Sql Server only. Adding the FluentMigrator.Runner assembly as a reference These extension methods are not included in the core dll so to get access them you have to add the FluentMigrator.Extensions.SqlServer package in your migrations project.The final step is to add the following using to your migration class: using FluentMigrator.SqlServer; Constraint Clustering (Clustered or NonClustered) This extension allows you to specify a primary key or unique constraint as clustered or non-clustered. SQL Server tries do the following, unless you specify 'clustered' or 'nonclustered' in sql: Create a primary key with a 'clustered' index Create a unique constraint with a 'nonclustered' index Therefore, the most common usage pattern is likely to be along the lines of: Create a primary key with a 'nonclustered' index Create.PrimaryKey(\"PK\").OnTable(\"TestTable\").Column(\"Id\").NonClustered(); Create a unique constraint with a 'clustered' index Create.UniqueConstraint(\"UQ\").OnTable(\"TestTable\").Column(\"Name\").Clustered(); Note: You have to create the primary key index or unique constraint separately from the Create.Table expression to be able to specify them as clustered or non-clustered. WithIdentityInsert If you want to turn on Identity Insert to be able to insert values into an identity column (see here for more details) then FluentMigrator has an extension method that supports this. Insert.IntoTable(\"Foo\") .WithIdentityInsert() .Row(new { id = 1, name = \"Foo 1\" }); Add Identity Column with Seed and Increment If you want to create an identity column and specify the seed (the id to start with) and an increment (how much the id value should increase when inserting new rows) then use this extension method: Create.Table(\"TestTable\") .WithColumn(\"Id\").AsInt32().Identity(100,1)"
  },
  "articles/version-table-metadata.html": {
    "href": "articles/version-table-metadata.html",
    "title": "Custom metadata for the VersionInfo table | FluentMigrator documentation",
    "keywords": "Custom metadata for the VersionInfo table By implementing the IVersionTableMetaData interface you can change the defaults for the VersionInfo table. The interface exposes six properties: Property Default value Description SchemaName (empty) The schema where the version table is stored TableName \"VersionInfo\" The table where the version information is stored ColumnName \"Version\" The name of the column where the version numbers are stored DescriptionColumnName \"Description\" The name of the last migration applied AppliedOnColumnName \"AppliedOn\" The datetime of when the last migration was applied UniqueIndexName \"UC_Version\" The name of the unique constraint for the version column In the same assembly that your migrations are located, create a new class (it has to be public) that implements the IVersionTableMetaData interface and decorate the class with the VersionTableMetaDataAttribute . FluentMigrator will automatically find this and use it instead of the default settings. Note The custom IVersionTableMetaData is filtered by the values in the TypeFilterOptions . This allows different IVersionTableMetaData for every database. A common use case is changing the default schema so that you can have a migration assembly per schema. using FluentMigrator.VersionTableInfo; namespace Migrations { [VersionTableMetaData] public class VersionTable : IVersionTableMetaData { public string ColumnName { get { return \"Version\"; } } public string SchemaName { get { return \"\"; } } public string TableName { get { return \"Version2\"; } } public string UniqueIndexName { get { return \"UC_Version\"; } } public virtual string AppliedOnColumnName { get { return \"AppliedOn\"; } } public virtual string DescriptionColumnName { get { return \"Description\"; } } } } Overriding the DefaultVersionTableMetaData class If you want to keep most of the default values and just change one or two of the properties. Then you can create a class that inherits from DefaultVersionTableMetaData and override the property to be changed. Don't forget to add the VersionTableMetaData attribute to the class. [VersionTableMetaData] public class VersionTable : DefaultVersionTableMetaData { public override string ColumnName { get { return \"Version\"; } } }"
  },
  "articles/raw-sql.html": {
    "href": "articles/raw-sql.html",
    "title": "Raw SQL helper | FluentMigrator documentation",
    "keywords": "Raw SQL helper When using the Insert.IntoTable expression, or when setting the default column value, all row data that is a string is quoted and saved in the database. If you want to use an sql expression instead then the RawSql helper class is what you need. For example, if I want to use a Microsoft SQL Server function like CURRENT_USER and try to insert like this: Insert.IntoTable(\"Users\").Row(new { Username = \"CURRENT_USER\" }); The result will be that the Username column will get the value CURRENT_USER as a string. To execute the function you can use the RawSql.Insert method like this: Insert.IntoTable(\"User\").Row(new { Username = RawSql.Insert(\"CURRENT_USER\") }); This will result in the Username column being set to the current username. Be aware that by using an sql server specific function like CURRENT_USER that this expression is not portable anymore and will not work against another database (like PostgreSQL)."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Starting with FluentMigrator | FluentMigrator documentation",
    "keywords": "Creating a project mkdir test cd test dotnet new console Adding the NuGet packages # For migration development dotnet add package FluentMigrator # For migration execution dotnet add package FluentMigrator.Runner # For database support dotnet add package FluentMigrator.Runner.SQLite # ADO.NET support for the database dotnet add package Microsoft.Data.Sqlite Creating your first migration Create a file called 20180430_AddLogTable.cs with the following contents: using FluentMigrator; namespace test { [Migration(20180430121800)] public class AddLogTable : Migration { public override void Up() { Create.Table(\"Log\") .WithColumn(\"Id\").AsInt64().PrimaryKey().Identity() .WithColumn(\"Text\").AsString(); } public override void Down() { Delete.Table(\"Log\"); } } } This will create a table named Log with the columns Id , and Text . Running your first migration You have two options to execute your migration: Using an in-process runner (preferred) Using an out-of-process runner (for some corporate requirements) In-Process (preferred) Out-of-process (for some corporate requirements) Change your Program.cs to the following code: using System; using System.Linq; using FluentMigrator.Runner; using FluentMigrator.Runner.Initialization; using Microsoft.Extensions.DependencyInjection; namespace test { class Program { static void Main(string[] args) { var serviceProvider = CreateServices(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { UpdateDatabase(scope.ServiceProvider); } } /// <summary> /// Configure the dependency injection services /// </sumamry> private static IServiceProvider CreateServices() { return new ServiceCollection() // Add common FluentMigrator services .AddFluentMigratorCore() .ConfigureRunner(rb => rb // Add SQLite support to FluentMigrator .AddSQLite() // Set the connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Define the assembly containing the migrations .WithMigrationsIn(typeof(AddLogTable).Assembly)) // Enable logging to console in the FluentMigrator way .AddLogging(lb => lb.AddFluentMigratorConsole()) // Build the service provider .BuildServiceProvider(false); } /// <summary> /// Update the database /// </sumamry> private static void UpdateDatabase(IServiceProvider serviceProvider) { // Instantiate the runner var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } } } As you can see, instantiating the migration runner (in UpdateDatabase ) becomes very simple and updating the database is straight-forward. Important You need at least the .NET Core 2.1 preview 2 SDK for this tool. Install the dotnet-fm tool: dotnet tool install -g FluentMigrator.DotNet.Cli Execute the migration: dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a \".\\bin\\Debug\\netcoreapp2.1\\test.dll\" Tip You probably have to replace netcoreapp2.1 with the correct target framework. You can find it in the csproj file, XML element TargetFramework ."
  },
  "api/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Postgres.PostgresGenerator.html",
    "title": "Class PostgresGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresGenerator Inheritance Object GeneratorBase GenericGenerator PostgresGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source PostgresGenerator() Declaration public PostgresGenerator() | Improve this Doc View Source PostgresGenerator(PostgresQuoter) Declaration public PostgresGenerator([NotNull] PostgresQuoter quoter) Parameters Type Name Description PostgresQuoter quoter | Improve this Doc View Source PostgresGenerator(PostgresQuoter, IOptions<GeneratorOptions>) Declaration public PostgresGenerator([NotNull] PostgresQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description PostgresQuoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(AlterTableExpression) Declaration public override string Generate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterTableExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(UpdateDataExpression) | Improve this Doc View Source GetColumnList(IEnumerable<String>) Declaration protected string GetColumnList(IEnumerable<string> columns) Parameters Type Name Description IEnumerable < String > columns Returns Type Description String | Improve this Doc View Source GetDataList(List<Object>) Declaration protected string GetDataList(List<object> data) Parameters Type Name Description List < Object > data Returns Type Description String Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Postgres.PostgresDescriptionGenerator.html",
    "title": "Class PostgresDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class PostgresDescriptionGenerator almost copied from OracleDescriptionGenerator, modified for escaping table description Inheritance Object GenericDescriptionGenerator PostgresDescriptionGenerator Implements IDescriptionGenerator Inherited Members GenericDescriptionGenerator.GenerateDescriptionStatements(CreateTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterTableExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(CreateColumnExpression) GenericDescriptionGenerator.GenerateDescriptionStatement(AlterColumnExpression) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDescriptionGenerator : GenericDescriptionGenerator, IDescriptionGenerator Constructors | Improve this Doc View Source PostgresDescriptionGenerator() Declaration public PostgresDescriptionGenerator() Properties | Improve this Doc View Source Quoter Declaration protected IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source GenerateColumnDescription(String, String, String, String) Declaration protected override string GenerateColumnDescription(string schemaName, string tableName, string columnName, string columnDescription) Parameters Type Name Description String schemaName String tableName String columnName String columnDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateColumnDescription(String, String, String, String) | Improve this Doc View Source GenerateTableDescription(String, String, String) Declaration protected override string GenerateTableDescription(string schemaName, string tableName, string tableDescription) Parameters Type Name Description String schemaName String tableName String tableDescription Returns Type Description String Overrides GenericDescriptionGenerator.GenerateTableDescription(String, String, String) Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Oracle Classes OracleDescriptionGenerator OracleGenerator OracleQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleTypeMap"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleTypeMap.html",
    "title": "Class OracleTypeMap | FluentMigrator documentation",
    "keywords": "Class OracleTypeMap Inheritance Object TypeMapBase OracleTypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleTypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source BlobCapacity Declaration public const int BlobCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source CharStringCapacity Declaration public const int CharStringCapacity = 2000 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source RawCapacity Declaration public const int RawCapacity = 2000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 2147483647 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoter.html",
    "title": "Class OracleQuoter | FluentMigrator documentation",
    "keywords": "Class OracleQuoter Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleQuoter Implements IQuoter Inherited Members OracleQuoterBase.FormatDateTime(DateTime) OracleQuoterBase.FromTimeSpan(TimeSpan) OracleQuoterBase.FormatGuid(Guid) OracleQuoterBase.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoter : OracleQuoterQuotedIdentifier, IQuoter Methods | Improve this Doc View Source Quote(String) Declaration public override string Quote(string name) Parameters Type Name Description String name Returns Type Description String Overrides GenericQuoter.Quote(String) | Improve this Doc View Source QuoteConstraintName(String, String) Declaration public override string QuoteConstraintName(string constraintName, string schemaName = null) Parameters Type Name Description String constraintName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteConstraintName(String, String) | Improve this Doc View Source QuoteIndexName(String, String) Declaration public override string QuoteIndexName(string indexName, string schemaName) Parameters Type Name Description String indexName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteIndexName(String, String) | Improve this Doc View Source QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) | Improve this Doc View Source QuoteTableName(String, String) Declaration public override string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteTableName(String, String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Jet.JetQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Jet.JetQuoter.html",
    "title": "Class JetQuoter | FluentMigrator documentation",
    "keywords": "Class JetQuoter Inheritance Object GenericQuoter JetQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatSystemMethods(SystemMethods) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetQuoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.IQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.IQuoter.html",
    "title": "Interface IQuoter | FluentMigrator documentation",
    "keywords": "Interface IQuoter The interface to be implemented for handling quotes Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IQuoter Methods | Improve this Doc View Source IsQuoted(String) Returns true is the value starts and ends with a close quote Declaration bool IsQuoted(string value) Parameters Type Name Description String value Returns Type Description Boolean | Improve this Doc View Source Quote(String) Returns a quoted string that has been correctly escaped Declaration string Quote([CanBeNull] string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source QuoteColumnName(String) Quotes a column name Declaration string QuoteColumnName(string columnName) Parameters Type Name Description String columnName Returns Type Description String | Improve this Doc View Source QuoteConstraintName(String, String) Quotes a constraint name Declaration string QuoteConstraintName(string contraintName, string schemaName = null) Parameters Type Name Description String contraintName String schemaName Returns Type Description String | Improve this Doc View Source QuoteIndexName(String, String) Quote an index name Declaration string QuoteIndexName(string indexName, string schemaName = null) Parameters Type Name Description String indexName String schemaName Returns Type Description String | Improve this Doc View Source QuoteSchemaName(String) Quotes a schema name Declaration string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName The schema name to quote Returns Type Description String The quoted schema name | Improve this Doc View Source QuoteSequenceName(String, String) Quotes a Sequence name Declaration string QuoteSequenceName(string sequenceName, string schemaName = null) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String | Improve this Doc View Source QuoteTableName(String, String) Quotes a Table name Declaration string QuoteTableName(string tableName, string schemaName = null) Parameters Type Name Description String tableName String schemaName Returns Type Description String | Improve this Doc View Source QuoteValue(Object) Quotes a value to be embedded into an SQL script/statement Declaration string QuoteValue(object value) Parameters Type Name Description Object value The value to be quoted Returns Type Description String The quoted value | Improve this Doc View Source UnQuote(String) Provides an unquoted, unescaped string Declaration string UnQuote(string value) Parameters Type Name Description String value Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Generators.IGeneratorAccessor.html": {
    "href": "api/FluentMigrator.Runner.Generators.IGeneratorAccessor.html",
    "title": "Interface IGeneratorAccessor | FluentMigrator documentation",
    "keywords": "Interface IGeneratorAccessor Accesses the selected migration generator Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IGeneratorAccessor Remarks This is only different from using IMigrationGenerator as constructor parameter when multiple databases should be supported. Properties | Improve this Doc View Source Generator Gets the selected migration generator Declaration [NotNull] IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.IDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.IDescriptionGenerator.html",
    "title": "Interface IDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Interface IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IDescriptionGenerator Methods | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String >"
  },
  "api/FluentMigrator.Runner.Generators.IColumn.html": {
    "href": "api/FluentMigrator.Runner.Generators.IColumn.html",
    "title": "Interface IColumn | FluentMigrator documentation",
    "keywords": "Interface IColumn Interface for column-oriented SQL fragment generation Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumn Methods | Improve this Doc View Source FormatCascade(String, Rule) Formats the foreign key cascading SQL fragment Declaration [NotNull] string FormatCascade([NotNull] string onWhat, Rule rule) Parameters Type Name Description String onWhat The action this cascade clause applies to (update or delete) Rule rule The cascade rule Returns Type Description String The formatted SQL fragment | Improve this Doc View Source FormatForeignKey(ForeignKeyDefinition, Func<ForeignKeyDefinition, String>) Formats the foreign key SQL fragment optionally using a custom foreign key name generator Declaration [NotNull] string FormatForeignKey([NotNull] ForeignKeyDefinition foreignKey, [NotNull] Func<ForeignKeyDefinition, string> fkNameGeneration) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Func < ForeignKeyDefinition , String > fkNameGeneration The custom foreign key name generator Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(ColumnDefinition) Generates the complete column defintion SQL fragment Declaration [NotNull] string Generate([NotNull] ColumnDefinition column) Parameters Type Name Description ColumnDefinition column The column definition Returns Type Description String The SQL fragment | Improve this Doc View Source Generate(IEnumerable<ColumnDefinition>, String) Generate the SQL fragment for all column definitions Declaration [NotNull] string Generate([NotNull, ItemNotNull] IEnumerable<ColumnDefinition> columns, [NotNull] string tableName) Parameters Type Name Description IEnumerable < ColumnDefinition > columns The column definitions String tableName The table name Returns Type Description String The SQL fragment | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Generates the default foreign key name Declaration [NotNull] string GenerateForeignKeyName([NotNull] ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey The foreign key definition Returns Type Description String The SQL fragment"
  },
  "api/FluentMigrator.Runner.Generators.Hana.html": {
    "href": "api/FluentMigrator.Runner.Generators.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Hana Classes HanaDescriptionGenerator HanaGenerator HanaQuoter"
  },
  "api/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SqlTextEventArgs.html",
    "title": "Class SqlTextEventArgs | FluentMigrator documentation",
    "keywords": "Class SqlTextEventArgs Event arguments for the SQL text collected by the SqlBatchParser Inheritance Object EventArgs SqlTextEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlTextEventArgs : EventArgs Constructors | Improve this Doc View Source SqlTextEventArgs(String) Initializes a new instance of the SqlTextEventArgs class. Declaration public SqlTextEventArgs([NotNull] string sqlText) Parameters Type Name Description String sqlText The collected SQL text Properties | Improve this Doc View Source SqlText Gets the collected SQL text Declaration [NotNull] public string SqlText { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SqlServerBatchParser.html",
    "title": "Class SqlServerBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlServerBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlServerBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , SqlServerIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SqlServerBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlServerBatchParser class. Declaration protected SqlServerBatchParser([NotNull, ItemNotNull] IEnumerable<IRangeSearcher> rangeSearchers, [NotNull, ItemNotNull] IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SqlServerBatchParser(String) Initializes a new instance of the SqlServerBatchParser class. Declaration public SqlServerBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.GoSearcherParameters.html",
    "title": "Class GoSearcher.GoSearcherParameters | FluentMigrator documentation",
    "keywords": "Class GoSearcher.GoSearcherParameters Additional values for the GO token Inheritance Object GoSearcher.GoSearcherParameters Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcherParameters Properties | Improve this Doc View Source Count Gets the number of times the batch should be executed Declaration public int Count { get; } Property Value Type Description Int32"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.CharWithEscapeByDuplication.html",
    "title": "Class CharWithEscapeByDuplication | FluentMigrator documentation",
    "keywords": "Class CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. Inheritance Object CharWithEscapeByDuplication MySqlIdentifier SqlServerIdentifier SqlString Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class CharWithEscapeByDuplication : IRangeSearcher Constructors | Improve this Doc View Source CharWithEscapeByDuplication(Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startAndEndChar, bool isComment = false) Parameters Type Name Description Char startAndEndChar The character used for start and end Boolean isComment Is this a comment | Improve this Doc View Source CharWithEscapeByDuplication(Char, Char, Boolean) Initializes a new instance of the CharWithEscapeByDuplication class. Declaration public CharWithEscapeByDuplication(char startChar, char endChar, bool isComment = false) Parameters Type Name Description Char startChar The start character Char endChar The end character Boolean isComment Is this a comment Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.AnsiSqlIdentifier.html",
    "title": "Class AnsiSqlIdentifier | FluentMigrator documentation",
    "keywords": "Class AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers Inheritance Object StringWithNoEscape AnsiSqlIdentifier Implements IRangeSearcher Inherited Members StringWithNoEscape.StartCodeLength StringWithNoEscape.EndCodeLength StringWithNoEscape.IsComment StringWithNoEscape.FindStartCode(ILineReader) StringWithNoEscape.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class AnsiSqlIdentifier : StringWithNoEscape, IRangeSearcher Constructors | Improve this Doc View Source AnsiSqlIdentifier() Initializes a new instance of the AnsiSqlIdentifier class. Declaration public AnsiSqlIdentifier() Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.ITextSource.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.ITextSource.html",
    "title": "Interface ITextSource | FluentMigrator documentation",
    "keywords": "Interface ITextSource An interface to create a reader that is used to read the SQL script lines Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITextSource Methods | Improve this Doc View Source CreateReader() Creates a reader Declaration [CanBeNull] ILineReader CreateReader() Returns Type Description ILineReader null when no content was available"
  },
  "api/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.ISpecialTokenSearcher.html",
    "title": "Interface ISpecialTokenSearcher | FluentMigrator documentation",
    "keywords": "Interface ISpecialTokenSearcher Searches for special tokens (e.g. GO ) Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ISpecialTokenSearcher Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration [CanBeNull] SpecialTokenInfo Find([NotNull] ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found"
  },
  "api/FluentMigrator.Runner.BatchParser.IRangeSearcher.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.IRangeSearcher.html",
    "title": "Interface IRangeSearcher | FluentMigrator documentation",
    "keywords": "Interface IRangeSearcher Interface to search for content with a given start- and end code Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IRangeSearcher Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration [CanBeNull] EndCodeSearchResult FindEndCode([NotNull] ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration int FindStartCode([NotNull] ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found"
  },
  "api/FluentMigrator.Runner.BatchParser.ILineReader.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.ILineReader.html",
    "title": "Interface ILineReader | FluentMigrator documentation",
    "keywords": "Interface ILineReader Read content from a line and advance the internal index Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ILineReader Properties | Improve this Doc View Source Index Gets the current index into the line Declaration int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source Length Gets the remaining length Declaration int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Line Gets the current line Declaration [NotNull] string Line { get; } Property Value Type Description String Methods | Improve this Doc View Source Advance(Int32) Creates a new ILineReader while moving the internal Index by the given length Declaration [CanBeNull] ILineReader Advance(int length) Parameters Type Name Description Int32 length The number of characters to move the internal Index Returns Type Description ILineReader A new line reader with the new index | Improve this Doc View Source ReadString(Int32) Reads a string with the given length from the Line Declaration [NotNull] string ReadString(int length) Parameters Type Name Description Int32 length The length of the string to read from the Line Returns Type Description String The read string"
  },
  "api/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.ConsoleAnnouncer.html",
    "title": "Class ConsoleAnnouncer | FluentMigrator documentation",
    "keywords": "Class ConsoleAnnouncer Inheritance Object Announcer ConsoleAnnouncer Implements IAnnouncer Inherited Members Announcer.ShowSql Announcer.ShowElapsedTime Announcer.Sql(String) Announcer.Error(Exception) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class ConsoleAnnouncer : Announcer, IAnnouncer Constructors | Improve this Doc View Source ConsoleAnnouncer() Declaration public ConsoleAnnouncer() | Improve this Doc View Source ConsoleAnnouncer(IOptions<AnnouncerOptions>) Declaration public ConsoleAnnouncer(IOptions<AnnouncerOptions> options) Parameters Type Name Description IOptions < AnnouncerOptions > options Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public override void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan Overrides Announcer.ElapsedTime(TimeSpan) | Improve this Doc View Source Emphasize(String) Declaration public override void Emphasize(string message) Parameters Type Name Description String message Overrides Announcer.Emphasize(String) | Improve this Doc View Source Error(String) Declaration public override void Error(string message) Parameters Type Name Description String message Overrides Announcer.Error(String) | Improve this Doc View Source Header() Declaration public void Header() | Improve this Doc View Source Heading(String) Declaration public override void Heading(string message) Parameters Type Name Description String message Overrides Announcer.Heading(String) | Improve this Doc View Source HorizontalRule() Declaration public void HorizontalRule() | Improve this Doc View Source Say(String) Declaration public override void Say(string message) Parameters Type Name Description String message Overrides Announcer.Say(String) | Improve this Doc View Source Write(String, Boolean) Declaration public override void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Overrides Announcer.Write(String, Boolean) Implements IAnnouncer"
  },
  "api/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.CompositeAnnouncer.html",
    "title": "Class CompositeAnnouncer | FluentMigrator documentation",
    "keywords": "Class CompositeAnnouncer Inheritance Object CompositeAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class CompositeAnnouncer : IAnnouncer Constructors | Improve this Doc View Source CompositeAnnouncer(IAnnouncer[]) Declaration public CompositeAnnouncer(params IAnnouncer[] announcers) Parameters Type Name Description IAnnouncer [] announcers Properties | Improve this Doc View Source Announcers Declaration public IEnumerable<IAnnouncer> Announcers { get; } Property Value Type Description IEnumerable < IAnnouncer > Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration [Obsolete] public void Write(string message, bool isNotSql) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer"
  },
  "api/FluentMigrator.Model.InsertionDataDefinition.html": {
    "href": "api/FluentMigrator.Model.InsertionDataDefinition.html",
    "title": "Class InsertionDataDefinition | FluentMigrator documentation",
    "keywords": "Class InsertionDataDefinition A list of column name/value pairs used for INSERT data Inheritance Object List < System.Collections.Generic.KeyValuePair < String , Object >> InsertionDataDefinition Implements IList < System.Collections.Generic.KeyValuePair < String , Object >> ICollection < System.Collections.Generic.KeyValuePair < String , Object >> IReadOnlyList < System.Collections.Generic.KeyValuePair < String , Object >> IReadOnlyCollection < System.Collections.Generic.KeyValuePair < String , Object >> IEnumerable < System.Collections.Generic.KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/FluentMigrator.Model.Direction.html": {
    "href": "api/FluentMigrator.Model.Direction.html",
    "title": "Enum Direction | FluentMigrator documentation",
    "keywords": "Enum Direction The direction for an index column Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum Direction Fields Name Description Ascending The order direction of the index column should be Ascending Descending The order direction of the index column should be Descending"
  },
  "api/FluentMigrator.Model.ConstraintDefinition.html": {
    "href": "api/FluentMigrator.Model.ConstraintDefinition.html",
    "title": "Class ConstraintDefinition | FluentMigrator documentation",
    "keywords": "Class ConstraintDefinition The constraint definition Inheritance Object ConstraintDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ConstraintDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures, IValidatableObject Constructors | Improve this Doc View Source ConstraintDefinition(ConstraintType) Initializes a new instance of the ConstraintDefinition class. Declaration public ConstraintDefinition(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Columns Gets or sets the column names Declaration public virtual ICollection<string> Columns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source ConstraintName Gets or sets the constraint name Declaration public virtual string ConstraintName { get; set; } Property Value Type Description String | Improve this Doc View Source IsPrimaryKeyConstraint Gets a value indicating whether the constraint is a primary key constraint Declaration public bool IsPrimaryKeyConstraint { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUniqueConstraint Gets a value indicating whether the constraint is a unique constraint Declaration public bool IsUniqueConstraint { get; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.MigrationStage.html": {
    "href": "api/FluentMigrator.MigrationStage.html",
    "title": "Enum MigrationStage | FluentMigrator documentation",
    "keywords": "Enum MigrationStage Represents a stage in the migration run. Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationStage Fields Name Description AfterAll Migration will be run after all standard migrations and profiles. AfterEach Migration will be run after each standard migration. BeforeAll Migration will be run before all standard migrations. BeforeEach Migration will be run before each standard migration. BeforeProfiles Migration will be run after all standard migrations, but before profiles."
  },
  "api/FluentMigrator.MigrationDirection.html": {
    "href": "api/FluentMigrator.MigrationDirection.html",
    "title": "Enum MigrationDirection | FluentMigrator documentation",
    "keywords": "Enum MigrationDirection The direction of the migration Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum MigrationDirection Fields Name Description Down Reverts the migration Up Applies the migration"
  },
  "api/FluentMigrator.MigrationBase.html": {
    "href": "api/FluentMigrator.MigrationBase.html",
    "title": "Class MigrationBase | FluentMigrator documentation",
    "keywords": "Class MigrationBase The base migration class Inheritance Object MigrationBase AutoReversingMigration AutoScriptMigration Migration Implements IMigration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class MigrationBase : IMigration Properties | Improve this Doc View Source Alter Gets the starting point for alterations Declaration public IAlterExpressionRoot Alter { get; } Property Value Type Description FluentMigrator.Builders.Alter.IAlterExpressionRoot | Improve this Doc View Source ApplicationContext Gets the arbitrary application context passed to the task runner Declaration public object ApplicationContext { get; protected set; } Property Value Type Description Object | Improve this Doc View Source ConnectionString Gets the connection string passed to the task runner Declaration public string ConnectionString { get; protected set; } Property Value Type Description String | Improve this Doc View Source Create Gets the starting point for creating database objects Declaration public ICreateExpressionRoot Create { get; } Property Value Type Description FluentMigrator.Builders.Create.ICreateExpressionRoot | Improve this Doc View Source Insert Gets the starting point for data insertion Declaration public IInsertExpressionRoot Insert { get; } Property Value Type Description FluentMigrator.Builders.Insert.IInsertExpressionRoot | Improve this Doc View Source Rename Gets the starting point for renaming database objects Declaration public IRenameExpressionRoot Rename { get; } Property Value Type Description FluentMigrator.Builders.Rename.IRenameExpressionRoot | Improve this Doc View Source Schema Gets the starting point for schema-rooted expressions Declaration public ISchemaExpressionRoot Schema { get; } Property Value Type Description FluentMigrator.Builders.Schema.ISchemaExpressionRoot Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public abstract void Down() | Improve this Doc View Source GetDownExpressions(IMigrationContext) Collects all Down migration expressions in the context . Declaration public virtual void GetDownExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Down migration expressions | Improve this Doc View Source GetUpExpressions(IMigrationContext) Collects all Up migration expressions in the context . Declaration public virtual void GetUpExpressions(IMigrationContext context) Parameters Type Name Description IMigrationContext context The context to use while collecting the Up migration expressions | Improve this Doc View Source IfDatabase(Predicate<String>) Gets the starting point for database specific expressions Declaration public IIfDatabaseExpressionRoot IfDatabase(Predicate<string> databaseTypeFunc) Parameters Type Name Description Predicate < String > databaseTypeFunc The lambda that tests if the expression can be applied to the current database Returns Type Description FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot The database specific expression | Improve this Doc View Source IfDatabase(String[]) Gets the starting point for database specific expressions Declaration public IIfDatabaseExpressionRoot IfDatabase(params string[] databaseType) Parameters Type Name Description String [] databaseType The supported database types Returns Type Description FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot The database specific expression | Improve this Doc View Source Up() Collect the UP migration expressions Declaration public abstract void Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005Processor.html",
    "title": "Class SqlServer2005Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2005Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Processor : SqlServerProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2005Processor(ILogger<SqlServer2005Processor>, SqlServer2005Quoter, SqlServer2005Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2005Processor([NotNull] ILogger<SqlServer2005Processor> logger, [NotNull] SqlServer2005Quoter quoter, [NotNull] SqlServer2005Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2005Processor > logger SqlServer2005Quoter quoter SqlServer2005Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000ProcessorFactory.html",
    "title": "Class SqlServer2000ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2000ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2000ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2000ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16Processor.html",
    "title": "Class SqlAnywhere16Processor | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16Processor Inheritance Object ProcessorBase GenericProcessorBase SqlAnywhereProcessor SqlAnywhere16Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlAnywhereProcessor.DatabaseType SqlAnywhereProcessor.DatabaseTypeAliases SqlAnywhereProcessor.SchemaExists(String) SqlAnywhereProcessor.TableExists(String, String) SqlAnywhereProcessor.ColumnExists(String, String, String) SqlAnywhereProcessor.ConstraintExists(String, String, String) SqlAnywhereProcessor.IndexExists(String, String, String) SqlAnywhereProcessor.SequenceExists(String, String) SqlAnywhereProcessor.DefaultValueExists(String, String, String, Object) SqlAnywhereProcessor.Process(CreateSchemaExpression) SqlAnywhereProcessor.Execute(String, Object[]) SqlAnywhereProcessor.Exists(String, Object[]) SqlAnywhereProcessor.ReadTableData(String, String) SqlAnywhereProcessor.Read(String, Object[]) SqlAnywhereProcessor.Process(String) SqlAnywhereProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public sealed class SqlAnywhere16Processor : SqlAnywhereProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlAnywhere16Processor(SqlAnywhereDbFactory, SqlAnywhere16Generator, ILogger<SqlAnywhere16Processor>, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlAnywhere16Processor([NotNull] SqlAnywhereDbFactory factory, [NotNull] SqlAnywhere16Generator generator, [NotNull] ILogger<SqlAnywhere16Processor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description SqlAnywhereDbFactory factory SqlAnywhere16Generator generator ILogger < SqlAnywhere16Processor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SelectingProcessorAccessorOptions.html": {
    "href": "api/FluentMigrator.Runner.Processors.SelectingProcessorAccessorOptions.html",
    "title": "Class SelectingProcessorAccessorOptions | FluentMigrator documentation",
    "keywords": "Class SelectingProcessorAccessorOptions The options for the SelectingProcessorAccessor Inheritance Object SelectingProcessorAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingProcessorAccessorOptions Properties | Improve this Doc View Source ProcessorId The ID of the generator to be returned by the SelectingProcessorAccessor Declaration public string ProcessorId { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Processors.SelectingProcessorAccessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SelectingProcessorAccessor.html",
    "title": "Class SelectingProcessorAccessor | FluentMigrator documentation",
    "keywords": "Class SelectingProcessorAccessor An IProcessorAccessor implementation that selects one generator by name Inheritance Object SelectingProcessorAccessor Implements IProcessorAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingProcessorAccessor : IProcessorAccessor Constructors | Improve this Doc View Source SelectingProcessorAccessor(IEnumerable<IMigrationProcessor>, IOptions<SelectingProcessorAccessorOptions>, IOptions<SelectingGeneratorAccessorOptions>, IServiceProvider) Initializes a new instance of the SelectingProcessorAccessor class. Declaration public SelectingProcessorAccessor([NotNull, ItemNotNull] IEnumerable<IMigrationProcessor> processors, [NotNull] IOptions<SelectingProcessorAccessorOptions> options, [NotNull] IOptions<SelectingGeneratorAccessorOptions> generatorSelectorOptions, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < IMigrationProcessor > processors The processors to select from IOptions < SelectingProcessorAccessorOptions > options The options used to determine the processor to be returned IOptions < SelectingGeneratorAccessorOptions > generatorSelectorOptions The generator selector options IServiceProvider serviceProvider The service provider Properties | Improve this Doc View Source Processor Gets the selected migration processor Declaration public IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor Implements IProcessorAccessor"
  },
  "api/FluentMigrator.Runner.Processors.SQLite.html": {
    "href": "api/FluentMigrator.Runner.Processors.SQLite.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SQLite | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SQLite Classes SQLiteDbFactory SQLiteProcessor SQLiteProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessorFactory.html",
    "title": "Class SQLiteProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessorFactory Inheritance Object MigrationProcessorFactory SQLiteProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax [Obsolete] public class SQLiteProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source SQLiteProcessorFactory() Declaration [Obsolete] public SQLiteProcessorFactory() | Improve this Doc View Source SQLiteProcessorFactory(IServiceProvider) Declaration public SQLiteProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.html",
    "title": "Class ReflectionBasedDbFactory | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory Db2DbFactory Db2ISeriesDbFactory DotConnectOracleDbFactory FirebirdDbFactory HanaDbFactory MySqlDbFactory OracleBaseDbFactory PostgresDbFactory RedshiftDbFactory SqlAnywhereDbFactory SQLiteDbFactory SqlServerCeDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public class ReflectionBasedDbFactory : DbFactoryBase, IDbFactory Constructors | Improve this Doc View Source ReflectionBasedDbFactory(ReflectionBasedDbFactory.TestEntry[]) Declaration [Obsolete] protected ReflectionBasedDbFactory(params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry [] testEntries | Improve this Doc View Source ReflectionBasedDbFactory(IServiceProvider, ReflectionBasedDbFactory.TestEntry[]) Declaration protected ReflectionBasedDbFactory(IServiceProvider serviceProvider, params ReflectionBasedDbFactory.TestEntry[] testEntries) Parameters Type Name Description IServiceProvider serviceProvider ReflectionBasedDbFactory.TestEntry [] testEntries | Improve this Doc View Source ReflectionBasedDbFactory(String, String) Declaration [Obsolete] public ReflectionBasedDbFactory(string assemblyName, string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Methods | Improve this Doc View Source CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() | Improve this Doc View Source TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, out DbProviderFactory) Declaration [Obsolete] protected static bool TryCreateFactory([NotNull, ItemNotNull] IEnumerable<ReflectionBasedDbFactory.TestEntry> entries, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description IEnumerable < ReflectionBasedDbFactory.TestEntry > entries ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFactory([CanBeNull] IServiceProvider serviceProvider, [NotNull, ItemNotNull] IEnumerable<ReflectionBasedDbFactory.TestEntry> entries, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description IServiceProvider serviceProvider IEnumerable < ReflectionBasedDbFactory.TestEntry > entries ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration [Obsolete] protected static bool TryCreateFactoryFromRuntimeHost([NotNull] ReflectionBasedDbFactory.TestEntry entry, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, out DbProviderFactory) Declaration protected static bool TryCreateFactoryFromRuntimeHost([NotNull] ReflectionBasedDbFactory.TestEntry entry, [NotNull, ItemNotNull] ICollection<Exception> exceptions, [CanBeNull] IServiceProvider serviceProvider, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions IServiceProvider serviceProvider DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, out DbProviderFactory) Declaration protected static bool TryCreateFromAppDomainPaths([NotNull] ReflectionBasedDbFactory.TestEntry entry, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out DbProviderFactory factory) Parameters Type Name Description ReflectionBasedDbFactory.TestEntry entry ICollection < Exception > exceptions DbProviderFactory factory Returns Type Description Boolean | Improve this Doc View Source TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromAppDomainDirectories([NotNull] string assemblyName, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean | Improve this Doc View Source TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, out Assembly) Declaration protected static bool TryLoadAssemblyFromDirectories([NotNull, ItemNotNull] IEnumerable<string> directories, [NotNull] string assemblyName, [NotNull, ItemNotNull] ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description IEnumerable < String > directories String assemblyName ICollection < Exception > exceptions Assembly assembly Returns Type Description Boolean Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.IProcessorAccessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.IProcessorAccessor.html",
    "title": "Interface IProcessorAccessor | FluentMigrator documentation",
    "keywords": "Interface IProcessorAccessor Accesses the selected migration processor Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IProcessorAccessor Remarks This is only different from using IMigrationProcessor as constructor parameter when multiple databases should be supported. Properties | Improve this Doc View Source Processor Gets the selected migration processor Declaration [NotNull] IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor"
  },
  "api/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.IMigrationProcessorFactory.html",
    "title": "Interface IMigrationProcessorFactory | FluentMigrator documentation",
    "keywords": "Interface IMigrationProcessorFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IMigrationProcessorFactory Properties | Improve this Doc View Source Name Declaration [NotNull] string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] [NotNull] IMigrationProcessor Create(string connectionString, [NotNull] IAnnouncer announcer, [NotNull] IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor | Improve this Doc View Source IsForProvider(String) Returns a value indicating whether this processor factory can use the given DB provider Declaration [Obsolete] bool IsForProvider([NotNull] string provider) Parameters Type Name Description String provider The DB provider name Returns Type Description Boolean true when this processor factory can use the given DB provider"
  },
  "api/FluentMigrator.Runner.Processors.IDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.IDbFactory.html",
    "title": "Interface IDbFactory | FluentMigrator documentation",
    "keywords": "Interface IDbFactory Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IDbFactory Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand | Improve this Doc View Source CreateConnection(String) Declaration [Obsolete] IDbConnection CreateConnection(string connectionString) Parameters Type Name Description String connectionString Returns Type Description IDbConnection"
  },
  "api/FluentMigrator.Runner.Processors.Hana.html": {
    "href": "api/FluentMigrator.Runner.Processors.Hana.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Hana | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Hana Classes HanaDbFactory HanaProcessor HanaProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Hana.HanaProcessorFactory.html",
    "title": "Class HanaProcessorFactory | FluentMigrator documentation",
    "keywords": "Class HanaProcessorFactory Inheritance Object MigrationProcessorFactory HanaProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax [Obsolete] public class HanaProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source HanaProcessorFactory() Declaration [Obsolete] public HanaProcessorFactory() | Improve this Doc View Source HanaProcessorFactory(IServiceProvider) Declaration public HanaProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.GenericProcessorBase.html": {
    "href": "api/FluentMigrator.Runner.Processors.GenericProcessorBase.html",
    "title": "Class GenericProcessorBase | FluentMigrator documentation",
    "keywords": "Class GenericProcessorBase Inheritance Object ProcessorBase GenericProcessorBase Db2Processor Db2ISeriesProcessor DotConnectOracleProcessor FirebirdProcessor HanaProcessor MySqlProcessor OracleProcessorBase PostgresProcessor RedshiftProcessor SqlAnywhereProcessor SQLiteProcessor SqlServer2000Processor SqlServerCeProcessor SqlServerProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.DatabaseType ProcessorBase.DatabaseTypeAliases ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(PerformDBOperationExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Process(String) ProcessorBase.ReadTableData(String, String) ProcessorBase.Read(String, Object[]) ProcessorBase.Exists(String, Object[]) ProcessorBase.Execute(String) ProcessorBase.Execute(String, Object[]) ProcessorBase.SchemaExists(String) ProcessorBase.TableExists(String, String) ProcessorBase.ColumnExists(String, String, String) ProcessorBase.ConstraintExists(String, String, String) ProcessorBase.IndexExists(String, String, String) ProcessorBase.SequenceExists(String, String) ProcessorBase.DefaultValueExists(String, String, String, Object) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class GenericProcessorBase : ProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source GenericProcessorBase(IDbConnection, IDbFactory, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] protected GenericProcessorBase(IDbConnection connection, IDbFactory factory, IMigrationGenerator generator, IAnnouncer announcer, [NotNull] IMigrationProcessorOptions options) Parameters Type Name Description IDbConnection connection IDbFactory factory IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options | Improve this Doc View Source GenericProcessorBase(Func<DbProviderFactory>, IMigrationGenerator, ILogger, ProcessorOptions, IConnectionStringAccessor) Declaration protected GenericProcessorBase([CanBeNull] Func<DbProviderFactory> factoryAccessor, [NotNull] IMigrationGenerator generator, [NotNull] ILogger logger, [NotNull] ProcessorOptions options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description Func < DbProviderFactory > factoryAccessor IMigrationGenerator generator ILogger logger ProcessorOptions options IConnectionStringAccessor connectionStringAccessor Properties | Improve this Doc View Source Connection Declaration public IDbConnection Connection { get; protected set; } Property Value Type Description IDbConnection | Improve this Doc View Source ConnectionString Declaration [Obsolete(\"Will change from public to protected\")] public override string ConnectionString { get; } Property Value Type Description String Overrides ProcessorBase.ConnectionString | Improve this Doc View Source DbProviderFactory Declaration [CanBeNull] protected DbProviderFactory DbProviderFactory { get; } Property Value Type Description DbProviderFactory | Improve this Doc View Source Factory Declaration [Obsolete] [NotNull] public IDbFactory Factory { get; protected set; } Property Value Type Description IDbFactory | Improve this Doc View Source Transaction Declaration [CanBeNull] public IDbTransaction Transaction { get; protected set; } Property Value Type Description IDbTransaction Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides ProcessorBase.BeginTransaction() | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides ProcessorBase.CommitTransaction() | Improve this Doc View Source CreateCommand(String) Declaration protected virtual IDbCommand CreateCommand(string commandText) Parameters Type Name Description String commandText Returns Type Description IDbCommand | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction) Declaration protected virtual IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction Returns Type Description IDbCommand | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing Overrides ProcessorBase.Dispose(Boolean) | Improve this Doc View Source EnsureConnectionIsClosed() Declaration protected virtual void EnsureConnectionIsClosed() | Improve this Doc View Source EnsureConnectionIsOpen() Declaration protected virtual void EnsureConnectionIsOpen() | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides ProcessorBase.RollbackTransaction() Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Firebird Classes AdoHelper ColumnInfo ConstraintInfo FirebirdDbFactory FirebirdDDLLockTracker Tracks virtual locks caused by DDL statements FirebirdIdentifierComparer A custom IEqualityComparer<T> for Firebird identifiers FirebirdOptions FirebirdProcessor FirebirdProcessorFactory FirebirdSchemaProvider IndexInfo SequenceInfo TableInfo TriggerInfo Enums FirebirdTransactionModel TriggerEvent"
  },
  "api/FluentMigrator.Runner.MigrationScopeHandler.html": {
    "href": "api/FluentMigrator.Runner.MigrationScopeHandler.html",
    "title": "Class MigrationScopeHandler | FluentMigrator documentation",
    "keywords": "Class MigrationScopeHandler Inheritance Object MigrationScopeHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationScopeHandler Constructors | Improve this Doc View Source MigrationScopeHandler(IMigrationProcessor) Declaration public MigrationScopeHandler(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor Properties | Improve this Doc View Source CurrentScope Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope Methods | Improve this Doc View Source BeginScope() Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope | Improve this Doc View Source CreateOrWrapMigrationScope(Boolean) Declaration public IMigrationScope CreateOrWrapMigrationScope(bool transactional = true) Parameters Type Name Description Boolean transactional Returns Type Description IMigrationScope"
  },
  "api/FluentMigrator.Runner.MigrationRunnerConventions.html": {
    "href": "api/FluentMigrator.Runner.MigrationRunnerConventions.html",
    "title": "Class MigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Class MigrationRunnerConventions Inheritance Object MigrationRunnerConventions Implements IMigrationRunnerConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunnerConventions : IMigrationRunnerConventions Constructors | Improve this Doc View Source MigrationRunnerConventions() Declaration public MigrationRunnerConventions() Properties | Improve this Doc View Source GetMaintenanceStage Declaration public Func<Type, MigrationStage? > GetMaintenanceStage { get; set; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] public Func<Type, IMigrationInfo> GetMigrationInfo { get; set; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Create an IMigrationInfo instance for a given IMigration Declaration public Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source TypeHasMatchingTags Declaration public Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; set; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration public Func<Type, bool> TypeHasTags { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration public Func<Type, bool> TypeIsMigration { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration public Func<Type, bool> TypeIsProfile { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration public Func<Type, bool> TypeIsVersionTableMetaData { get; set; } Property Value Type Description Func < Type , Boolean > Implements IMigrationRunnerConventions"
  },
  "api/FluentMigrator.Runner.MigrationRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.MigrationRunnerBuilderExtensions.html",
    "title": "Class MigrationRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class MigrationRunnerBuilderExtensions Extension methods for the IMigrationRunnerBuilder interface Inheritance Object MigrationRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public static class MigrationRunnerBuilderExtensions Methods | Improve this Doc View Source AsGlobalPreview(IMigrationRunnerBuilder, Boolean) Sets the global preview mode Declaration public static IMigrationRunnerBuilder AsGlobalPreview(this IMigrationRunnerBuilder builder, bool preview = true) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Boolean preview The global preview mode Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source ConfigureGlobalProcessorOptions(IMigrationRunnerBuilder, Action<ProcessorOptions>) Sets configuration action for global processor options Declaration public static IMigrationRunnerBuilder ConfigureGlobalProcessorOptions(this IMigrationRunnerBuilder builder, Action<ProcessorOptions> configureAction) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Action < ProcessorOptions > configureAction The configuration action Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithGlobalCommandTimeout(IMigrationRunnerBuilder, TimeSpan) Sets the global command timeout Declaration public static IMigrationRunnerBuilder WithGlobalCommandTimeout(this IMigrationRunnerBuilder builder, TimeSpan commandTimeout) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder TimeSpan commandTimeout The global command timeout Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithGlobalConnectionString(IMigrationRunnerBuilder, String) Sets the global connection string Declaration public static IMigrationRunnerBuilder WithGlobalConnectionString(this IMigrationRunnerBuilder builder, string connectionStringOrName) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder String connectionStringOrName The connection string or name to use Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithMigrationsIn(IMigrationRunnerBuilder, Assembly[]) Adds the migrations Declaration public static IMigrationRunnerBuilder WithMigrationsIn(this IMigrationRunnerBuilder builder, [NotNull, ItemNotNull] params Assembly[] assemblies) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder Assembly [] assemblies The target assemblies Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithRunnerConventions(IMigrationRunnerBuilder, IMigrationRunnerConventions) Sets the migration runner conventions Declaration public static IMigrationRunnerBuilder WithRunnerConventions(this IMigrationRunnerBuilder builder, IMigrationRunnerConventions conventions) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder IMigrationRunnerConventions conventions The migration runner conventions Returns Type Description IMigrationRunnerBuilder The runner builder | Improve this Doc View Source WithVersionTable(IMigrationRunnerBuilder, IVersionTableMetaData) Sets the version table meta data Declaration public static IMigrationRunnerBuilder WithVersionTable(this IMigrationRunnerBuilder builder, IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IMigrationRunnerBuilder builder The runner builder IVersionTableMetaData versionTableMetaData The version table meta data Returns Type Description IMigrationRunnerBuilder The runner builder"
  },
  "api/FluentMigrator.Runner.LoggingUtilities.html": {
    "href": "api/FluentMigrator.Runner.LoggingUtilities.html",
    "title": "Class LoggingUtilities | FluentMigrator documentation",
    "keywords": "Class LoggingUtilities Utility functions around logging Inheritance Object LoggingUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class LoggingUtilities Methods | Improve this Doc View Source LogElapsedTime(ILogger, TimeSpan) Log elapsed time Declaration public static void LogElapsedTime(this ILogger logger, TimeSpan timeSpan) Parameters Type Name Description ILogger logger The logger TimeSpan timeSpan The elapsed time | Improve this Doc View Source LogEmphasized(ILogger, String) Log emphasized message Declaration public static void LogEmphasized(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogHeader(ILogger, String) Log header message Declaration public static void LogHeader(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogSay(ILogger, String) Log an informational message Declaration public static void LogSay(this ILogger logger, string message) Parameters Type Name Description ILogger logger The logger String message The message | Improve this Doc View Source LogSql(ILogger, String) Log SQL code Declaration public static void LogSql(this ILogger logger, string sql) Parameters Type Name Description ILogger logger The logger String sql The SQL code | Improve this Doc View Source WriteException(TextWriter, Exception, Int32) Writes the exception (and all its inner exceptions) to the given writer Declaration public static void WriteException(this TextWriter writer, Exception exception, int level = 0) Parameters Type Name Description TextWriter writer The TextWriter to write the text to Exception exception The exception containing the message Int32 level A value > 0 when this exception is an inner exception | Improve this Doc View Source WriteExceptionMessage(TextWriter, String, Int32) Writes the exception message to the given writer Declaration public static void WriteExceptionMessage(this TextWriter writer, string message, int level = 0) Parameters Type Name Description TextWriter writer The TextWriter to write the text to String message The exception message Int32 level A value > 0 when this exception is an inner exception | Improve this Doc View Source WriteHeader(TextWriter) Writes the header to the given writer Declaration public static void WriteHeader(this TextWriter writer) Parameters Type Name Description TextWriter writer The TextWriter to write the text to | Improve this Doc View Source WriteHorizontalRuler(TextWriter) Writes a horizontal ruler to the given writer Declaration public static void WriteHorizontalRuler(this TextWriter writer) Parameters Type Name Description TextWriter writer The TextWriter to write the text to"
  },
  "api/FluentMigrator.Runner.Logging.html": {
    "href": "api/FluentMigrator.Runner.Logging.html",
    "title": "Namespace FluentMigrator.Runner.Logging | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Logging Classes AnnouncerFluentMigratorLogger A ILogger implementation that redirects all messages to a IAnnouncer FluentMigratorConsoleLogger The default fluent migrator console logger FluentMigratorConsoleLoggerProvider The default FluentMigrator console output FluentMigratorLogger The base class for FluentMigrator-style ILogger implementations FluentMigratorRunnerLogger Logger that provides some default formatting LogFileFluentMigratorLoggerOptions The configuration for a LogFileFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Outputs the SQL statements to a log file SqlScriptFluentMigratorLoggerOptions The configuration for a SqlScriptFluentMigratorLoggerProvider SqlScriptFluentMigratorLoggerProvider The base class for writing SQL scripts produced by the IMigrationGenerator implementations"
  },
  "articles/profiles.html": {
    "href": "articles/profiles.html",
    "title": "Profiles | FluentMigrator documentation",
    "keywords": "Profiles Profiles are used to selectively apply migrations depending on a command line option, or build script attribute. For instance, you may want to run the \"Development\" profile only in your Dev environment, and run the \"Testing\" profile in your Testing environment. Profiles will always be run if you specify them. Normally, these are useful to always put test/sample seed data in when dropping/refreshing development and testing environments. In production you would rarely want to continually insert the same data more than once. [Profile(\"Development\")] public class CreateDevSeedData : Migration { public override void Up() { Insert.IntoTable( \"User\" ).Row( new { Username = \"devuser1\", DisplayName = \"Dev User\" }); } public override void Down() { //empty, not using } } Now that you have migrations and profiles defined, you can use Migration Runners to apply changes to your database."
  },
  "articles/multi-db-support.html": {
    "href": "articles/multi-db-support.html",
    "title": "Dealing with Multiple Database Types | FluentMigrator documentation",
    "keywords": "Dealing with multiple database types FluentMigrator allows you to target multiple database types from the same migration project. Every FluentMigrator project is database agnostic and can be run against any of the supported database types. However, there are times when only some migrations in a project need to be executed against one of the database types. For supporting that scenario FluentMigrator includes the IfDatabase expression. Using IfDatabase Suppose you have a migration that executes a script file to create a view: public class CreateViewsMigration : Migration { public override void Up() { Execute.Script(\"CreateViewsMigrationUp.sql\"); } public override void Down() { Execute.Script(\"CreateViewsMigrationDown.sql\"); } } However the project needs to create some views in an SqlServer database and others in an Oracle database , but you want both tasks to be part of the same migration, sharing the same migration number in both databases. You handle this by creating scripts for each database and specifying which one needs to be executed: public class CreateViewsMigration : Migration { public override void Up() { IfDatabase(\"oracle\").Execute.Script(\"CreateViewsOracleMigrationUp.sql\"); IfDatabase(\"sqlserver\").Execute.Script(\"CreateViewsSqlServerMigrationUp.sql\"); } public override void Down() { IfDatabase(\"oracle\").Execute.Script(\"CreateViewsOracleMigrationDown.sql\"); IfDatabase(\"sqlserver\").Execute.Script(\"CreateViewsSqlServerMigrationDown.sql\"); } } Supported databases Database Identifier Alternative identifier(s) Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition SqlServerCe SqlServer PostgreSQL Postgres MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2"
  },
  "articles/migration-runners.html": {
    "href": "articles/migration-runners.html",
    "title": "Migration runners | FluentMigrator documentation",
    "keywords": "Migration runners We have three migration runners you can choose from. Please use the in-process runner if possible. In-Process This is an example of using the in-process migration runner: using System; using System.Linq; using FluentMigrator.Runner; using FluentMigrator.Runner.Initialization; using Microsoft.Extensions.DependencyInjection; namespace test { class Program { static void Main(string[] args) { var serviceProvider = CreateServices(); // Put the database update into a scope to ensure // that all resources will be disposed. using (var scope = serviceProvider.CreateScope()) { UpdateDatabase(scope.ServiceProvider); } } /// <summary> /// Configure the dependency injection services /// </sumamry> private static IServiceProvider CreateServices() { return new ServiceCollection() // Add common FluentMigrator services .AddFluentMigratorCore() .ConfigureRunner(rb => rb // Add SQLite support to FluentMigrator .AddSQLite() // Set the connection string .WithGlobalConnectionString(\"Data Source=test.db\") // Define the assembly containing the migrations .WithMigrationsIn(typeof(AddLogTable).Assembly)) // Enable logging to console in the FluentMigrator way .AddLogging(lb => lb.AddFluentMigratorConsole()) // Build the service provider .BuildServiceProvider(false); } /// <summary> /// Update the database /// </sumamry> private static void UpdateDatabase(IServiceProvider serviceProvider) { // Instantiate the runner var runner = serviceProvider.GetRequiredService<IMigrationRunner>(); // Execute the migrations runner.MigrateUp(); } } } Migrate.exe (FluentMigrator.Console package) This is a console tool that works also with the .NET Framework outside of the .NET Core ecosystem. Visual Studio: Install with the package manager console NuGet: Install with the nuget.exe tool Install the package with: Install-Package FluentMigrator.Console Install the package with: nuget install FluentMigrator.Console -ExcludeVersion Now, you can find the tool in the path FluentMigrator[package-version]/tools/<target-framework>/[optional-platform/]Migrate.exe . Note The package-verion is only part of the path when the tool was installed using the Visual Studio package manager console. Important Choose the correct target-framework . Otherwise, the tool might not be able to load your assembly. target-framework platform optional-platform exists? path net40 x86 yes tools/net40/x86/Migrate.exe net40 x64 yes tools/net40/x64/Migrate.exe net40 AnyCPU no tools/net40/Migrate.exe net45 x86 yes tools/net45/x86/Migrate.exe net45 x64 yes tools/net45/x64/Migrate.exe net45 AnyCPU no tools/net45/Migrate.exe net452 x86 yes tools/net452/x86/Migrate.exe net452 x64 yes tools/net452/x64/Migrate.exe net452 AnyCPU yes tools/net452/any/Migrate.exe Important On non-Windows platforms, you have to install/use mono. dotnet fm (FluentMigrator.DotNet.Cli tool) Important You need at least the .NET Core 2.1 preview 2 SDK for this tool. Install the dotnet-fm tool: dotnet tool install -g FluentMigrator.DotNet.Cli Execute the migration: dotnet fm migrate -p sqlite -c \"Data Source=test.db\" -a \".\\bin\\Debug\\netcoreapp2.1\\test.dll\" Tip You probably have to replace netcoreapp2.1 with the correct target framework. You can find it in the csproj file, XML element TargetFramework ."
  },
  "articles/migration-example.html": {
    "href": "articles/migration-example.html",
    "title": "Migrations | FluentMigrator documentation",
    "keywords": "Migrations The basic unit of FM is the Migration abstract class. Your migrations will derive from this class and implement two methods. You also need to define the Migration attribute with a unique identifier. Commonly, this identifier is just an incrementing value, although the attribute accepts a Int64, some people use a numbered date format such as yyyyMMdd. The significance of this number is for the ordering of your migrations. Lower numbers execute first and then larger. It also provides a way to target a specific migration. Your migration class that you create is where you define the migrations to execute. Migrations can be run out of sequence if they are checked in out of sequence. For example you may checkin migration 1, 3 and 5 in one build, and migration 2 in a later build. Migration 2 will still get run even though it is not later than the most recent migration because it has not been run before. Since you define both a UP and DOWN for each migration, it's possible to move forward and backwards in migrations at any point in time. The only caveat is that migrating down is destructive as tables and/or rows are being deleted in the process. Be sure to have a backup first if you want to keep the data [Migration(1)] public class CreateUserTable : Migration { public override void Up() { Create.Table(\"Users\"); } public override void Down() { Delete.Table(\"Users\"); } } When you are migrating TO version 1 (if the database is empty for instance), then the migration code in the Up() method will be called creating a table called \"Users\" in the database. When you are migrating to a version BEFORE version 1 (for instance version 0), then the migration code in the Down() method will be called deleting the \"Users\" table from the database. Here's another sample migration that goes a little more in depth [Migration(1)] public class TestCreateAndDropTableMigration: Migration { public override void Up() { Create.Table(\"TestTable\") .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity() .WithColumn(\"Name\").AsString(255).NotNullable().WithDefaultValue(\"Anonymous\"); Create.Table(\"TestTable2\") .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity() .WithColumn(\"Name\").AsString(255).Nullable() .WithColumn(\"TestTableId\").AsInt32().NotNullable(); Create.Index(\"ix_Name\").OnTable(\"TestTable2\").OnColumn(\"Name\").Ascending() .WithOptions().NonClustered(); Create.Column(\"Name2\").OnTable(\"TestTable2\").AsBoolean().Nullable(); Create.ForeignKey(\"fk_TestTable2_TestTableId_TestTable_Id\") .FromTable(\"TestTable2\").ForeignColumn(\"TestTableId\") .ToTable(\"TestTable\").PrimaryColumn(\"Id\"); Insert.IntoTable(\"TestTable\").Row(new { Name = \"Test\" }); } public override void Down() { Delete.Table(\"TestTable2\"); Delete.Table(\"TestTable\"); } } Note that if you use SQL Server identity columns with WithIdentityInsert Diving further into FM, we look at the Fluent Interface to make more useful migrations."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Install from Nuget | FluentMigrator documentation",
    "keywords": "Install from Nuget The project is split into multiple packages: Package Description FluentMigrator The base assembly needed to create migrations FluentMigrator.Runner The runner classes required for in-process execution of migrations FluentMigrator.Console The .NET 4.0/4.5/.NET Core 2.0 executable for out-of-process execution of migrations FluentMigrator.MSBuild The .NET 4.0/4.5/.NET Standard 2.0 task for MSBuild FluentMigrator.DotNet.Cli The .NET Core 2.1 executable that integrates into the .NET Core CLI tooling ( dotnet command) Getting Started Check out the tour of FluentMigrator in our Quickstart Usage details How to create a migration Learn about the fluent interface Profiles can be used to seed test data And then choose one of the migration runners to run your migrations More Features Database functions as default value Microsoft SQL Server specific extensions Advanced Features and Techniques of FluentMigrator Dealing with multiple database types Current Release Release Notes Upgrade guides 2.x to 3.0 Supported databases For the current release these are the supported databases: Database Identifier Alternative identifier(s) Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition SqlServerCe SqlServer PostgreSQL Postgres MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2"
  },
  "articles/glossary.html": {
    "href": "articles/glossary.html",
    "title": "Glossary | FluentMigrator documentation",
    "keywords": "Expression See: Migration Expression Maintenance Those are migrations that should always be executed at a specified stage. Warning Maintenance migrations are always run at the given stage when selected. Note A migration must have: public visibility IMigration as implemented interface (The Migration class already implements it) MaintenanceAttribute Migration A migration is a database modification usually applied within its own transaction. Note A migration must have: public visibility IMigration as implemented interface (The Migration class already implements it) MigrationAttribute Migration Expression An expression created from within a migration that gets used to produce an SQL statement (using a migration generator ) that gets executed by a migration processor . A migration expression always implements IMigrationExpression . Migration Generator Translates an expression created from within a migration to one or more SQL statements. A migration generator always implements IMigrationGenerator . Migration Processor Passes the expressions to a migration generator and then executes the resulting SQL statements. A migration processor always implements IMigrationProcessor . Profile A profile is used to selectively apply migrations. Warning Profiles are always run when selected. Note A profile must have: public visibility IMigration as implemented interface (The Migration class already implements it) ProfileAttribute"
  },
  "articles/fluent-interface.html": {
    "href": "articles/fluent-interface.html",
    "title": "Fluent Interface | FluentMigrator documentation",
    "keywords": "Fluent Interface The FM fluent api allows you to create tables, columns, indexes and (nearly) every construct you need to manipulate your database structure. Behind the scenes, the fluent api populates a semantic model that FM uses to analyze and apply migrations in batch. The fluent api that is available in your Migration class starts with five main root expressions as follows: Create Expression Allows you to create a table, column, index, foreign key and schema. Create.Table(\"Users\") .WithIdColumn() // WithIdColumn is an extension, see below link. .WithColumn(\"Name\").AsString().NotNullable(); Create.ForeignKey() // You can give the FK a name or just let Fluent Migrator default to one .FromTable(\"Users\").ForeignColumn(\"CompanyId\") .ToTable(\"Company\").PrimaryColumn(\"Id\"); Example extensions can be found in the example MigrationExtensions.cs . Otherwise, you can replace WithIdColumn with .WithColumn(\"Id\").AsInt32().NotNullable().PrimaryKey().Identity(); Alter Expression Allows you to alter existing tables and columns. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .Nullable(); Alter.Table(\"Bar\") .AlterColumn(\"SomeDate\") .AsDateTime() .NotNullable(); Alter.Column(\"SomeDate\") .OnTable(\"Bar\") .AsDateTime() .NotNullable(); Delete Expression Allows you to delete a table, column, foreign key and schema. Delete.Table(\"Users\"); Delete Multiple Columns Delete multiple columns from a table using the syntax in this expression: Delete.Column(\"AllowSubscription\").Column(\"SubscriptionDate\").FromTable(\"Users\"); Execute Expression Allows you to execute a block of sql, or a script by name (ie. myscript.sql) or an embedded sql script. To embed an sql script, add the file to your migration project and change the Build Action property to Embedded Resource. Execute.Script(\"myscript.sql\"); Execute.EmbeddedScript(\"UpdateLegacySP.sql\"); Execute.Sql(\"DELETE TABLE Users\"); Rename Expression Allows you to rename a column or table. Rename.Table(\"Users\").To(\"UsersNew\"); Rename.Column(\"LastName\").OnTable(\"Users\").To(\"Surname\"); Data Expressions Allows you to insert a row into a table using an anonymous type for the rows contents Insert.IntoTable(\"Users\").Row(new { FirstName = \"John\", LastName = \"Smith\" }); Delete.FromTable(\"Users\").AllRows(); // delete all rows Delete.FromTable(\"Users\").Row(new { FirstName = \"John\" }); // delete all rows with FirstName==John Delete.FromTable(\"Users\").IsNull(\"Username\"); //Delete all rows where Username is null Update.Table(\"Users\").Set(new { Name = \"John\" }).Where(new { Name = \"Johnanna\" }); Insert data as an non-Unicode string If you want to insert a string as non-Unicode (ANSI) then use the NonUnicodeString class: Insert.IntoTable(\"TestTable\").Row(new { Name = new NonUnicodeString(\"ansi string\") }); AllRows Attribute A common task is to add a non-nullable column without a default value. One way this can be achieved is with the 'AllRows' attribute, via these three steps: Add new nullable column. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .Nullable(); Update all rows to an initial value using the AllRows attribute. Update.Table(\"Bar\") .Set(new { SomeDate = DateTime.Today }) .AllRows(); Change the column to be non-nullable. Alter.Table(\"Bar\") .AlterColumn(\"SomeDate\") .AsDateTime() .NotNullable(); As of version 1.3.0, this can be done with a single statement using the SetExistingRowsTo method. Alter.Table(\"Bar\") .AddColumn(\"SomeDate\") .AsDateTime() .SetExistingRowsTo(DateTime.Today) .NotNullable(); IfDatabase Expression Allows for conditional expressions depending on database type. The current database types supported are: Database Identifier Alternative identifier(s) Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition SqlServerCe SqlServer PostgreSQL Postgres MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 Multiple database types (as specified above) can be passed into the IfDatabase Expression (see Dealing with multiple database types for more details). IfDatabase(\"SqlServer\", \"Postgres\") .Create.Table(\"Users\") .WithIdColumn() .WithColumn(\"Name\").AsString().NotNullable(); IfDatabase(\"Sqlite\") .Create.Table(\"Users\") .WithColumn(\"Id\").AsInt16().PrimaryKey() .WithColumn(\"Name\").AsString().NotNullable(); Schema.Exists Expressions You can write migrations conditional on the preexisting schema, which comes in handy for getting you out of certain jams. For instance, if you need to make a column but aren't sure if it already exists: if (!Schema.Table(\"Users\").Column(\"FirstName\").Exists()) { this.Create.Column(\"FirstName\").OnTable(\"Users\").AsAnsiString(128).Nullable(); } Next up, Profiles are migrations that if specified, will always run regardless of what other migrations run."
  },
  "articles/db-functions.html": {
    "href": "articles/db-functions.html",
    "title": "Database functions | FluentMigrator documentation",
    "keywords": "Database functions It is possible to set the default value when creating or altering a column. To just set a value you can use the following fluent syntax: Create.Table(\"TestTable\").WithColumn(\"Name\").AsString().Nullable().WithDefaultValue(\"test\"); However, you can take advantage of some database functions to set the default value. The SystemMethods enum contains five database functions: Function Description NewGuid Creates a new GUID NewSequentialId Creates a new sequential GUID CurrentDateTime The current (local) timestamp CurrentDateTimeOffset The current (local) timestamp with time zone CurrentUTCDateTime The current (UTC) timestamp CurrentUser The current user name These are specific to each database, for example CurrentDateTime calls the GETDATE() function for Sql Server and the now() function for Postgres. By using WithDefault instead of WithDefaultValue, you can pass in one of the enum values. Create.Table(\"TestTable\").WithColumn(\"Created\").AsDateTime().Nullable().WithDefault(SystemMethods.CurrentDateTime); Function/Database support matrix Server NewGuid NewSequentialId CurrentDateTime CurrentDateTimeOffset CurrentUTCDateTime CurrentUser DB2 ☐ ☐ ☑ ☐ ☑ ☑ Firebird ☑ ☑ 1 ☑ ☐ ☐ ☐ Hana ☐ ☐ ☑ ☐ ☑ ☐ JET ☐ ☐ ☐ ☐ ☐ ☐ MySQL ☑ ☑ 1 ☑ ☐ ☑ ☑ Oracle ☑ ☑ 1 ☑ ☑ ☑ ☑ Postgres ☑ 2 ☑ 2 ☑ ☐ ☑ ☑ Redshift ☐ ☐ ☑ ☑ 3 ☑ ☑ SQLite ☐ ☐ ☑ ☐ ☑ ☐ SQL Anywhere ☑ ☑ 1 ☑ ☑ 3 ☑ ☑ SQL Server 2000 ☑ ☑ ☑ ☑ 4 ☑ ☑ SQL Server 2008 ☑ ☑ ☑ ☑ ☑ ☑ SQL Server CE ☑ ☑ ☑ ☑ 4 ☑ ☑ 1 Is the same as NewGuid 2 uuid-ossp extension is required 3 Implicitly contains the offset 4 Same as CurrentDateTime"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "FluentMigrator API | FluentMigrator documentation",
    "keywords": "FluentMigrator API The most important part of the API is the migration runner . Getting started The starting point for every beginner of FluentMigrator is the Quickstart tutorial ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Fluent migrations framework for .NET | FluentMigrator documentation",
    "keywords": "Fluent migrations framework for .NET Fluent Migrator is a migration framework for .NET much like Ruby on Rails Migrations. Migrations are a structured way to alter your database schema and are an alternative to creating lots of sql scripts that have to be run manually by every developer involved. Migrations solve the problem of evolving a database schema for multiple databases (for example, the developer's local database, the test database and the production database). Database schema changes are described in classes written in C# that can be checked into a version control system. How to use it Quickstart What does it look like? This is an example of a database-agnostic migration: using FluentMigrator; namespace test { [Migration(20180430121800)] public class AddLogTable : Migration { public override void Up() { Create.Table(\"Log\") .WithColumn(\"Id\").AsInt64().PrimaryKey().Identity() .WithColumn(\"Text\").AsString(); } public override void Down() { Delete.Table(\"Log\"); } } } Current Release Release Notes Upgrade guides 2.x to 3.0 Supported databases For the current release these are the supported databases: Database Identifier Alternative identifier(s) Microsoft SQL Server 2016 SqlServer2016 SqlServer Microsoft SQL Server 2014 SqlServer2014 SqlServer Microsoft SQL Server 2012 SqlServer2012 SqlServer Microsoft SQL Server 2008 SqlServer2008 SqlServer Microsoft SQL Server 2005 SqlServer2005 SqlServer Microsoft SQL Server 2000 SqlServer2000 SqlServer Microsoft SQL Server Compact Edition SqlServerCe SqlServer PostgreSQL Postgres MySQL 4 MySql4 MySql MySQL 5 MySql5 MySql Oracle Oracle Oracle (managed ADO.NET) OracleManaged Oracle Oracle (DotConnect ADO.NET) OracleDotConnect Oracle Microsoft JET Engine (Access) Jet SQLite Sqlite Firebird Firebird Amazon Redshift Redshift SAP Hana Hana SAP SQL Anywhere SqlAnywhere16 SqlAnywhere DB2 DB2 DB2 iSeries DB2 iSeries DB2 More Information on FluentMigrator Sean Chambers on the Herding Code podcast"
  },
  "api/FluentMigrator.TagBehavior.html": {
    "href": "api/FluentMigrator.TagBehavior.html",
    "title": "Enum TagBehavior | FluentMigrator documentation",
    "keywords": "Enum TagBehavior The desired tag matching behavior Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum TagBehavior Fields Name Description RequireAll All tags must be matched RequireAny Any tag must be matched"
  },
  "api/FluentMigrator.SystemMethods.html": {
    "href": "api/FluentMigrator.SystemMethods.html",
    "title": "Enum SystemMethods | FluentMigrator documentation",
    "keywords": "Enum SystemMethods The well-known system methods Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum SystemMethods Fields Name Description CurrentDateTime The function to get the current timestamp CurrentDateTimeOffset The function to get the current timestamp with time zone CurrentUser The function to get the current user CurrentUTCDateTime The function to get the current UTC timestamp NewGuid The function to create a new GUID NewSequentialId The function to create a new sequential GUID"
  },
  "api/FluentMigrator.SqlServerConstraintType.html": {
    "href": "api/FluentMigrator.SqlServerConstraintType.html",
    "title": "Enum SqlServerConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlServerConstraintType Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public enum SqlServerConstraintType Fields Name Description Clustered NonClustered"
  },
  "api/FluentMigrator.SqlServer.html": {
    "href": "api/FluentMigrator.SqlServer.html",
    "title": "Namespace FluentMigrator.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlServer Classes SqlServerExtensions"
  },
  "api/FluentMigrator.SqlServer.SqlServerExtensions.html": {
    "href": "api/FluentMigrator.SqlServer.SqlServerExtensions.html",
    "title": "Class SqlServerExtensions | FluentMigrator documentation",
    "keywords": "Class SqlServerExtensions Inheritance Object SqlServerExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlServer Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public static class SqlServerExtensions Fields | Improve this Doc View Source ConstraintType Declaration public const string ConstraintType = \"SqlServerConstraintType\" Field Value Type Description String | Improve this Doc View Source IdentityIncrement Declaration public const string IdentityIncrement = \"SqlServerIdentityIncrement\" Field Value Type Description String | Improve this Doc View Source IdentityInsert Declaration public const string IdentityInsert = \"SqlServerIdentityInsert\" Field Value Type Description String | Improve this Doc View Source IdentitySeed Declaration public const string IdentitySeed = \"SqlServerIdentitySeed\" Field Value Type Description String | Improve this Doc View Source IncludesList Declaration public const string IncludesList = \"SqlServerIncludes\" Field Value Type Description String | Improve this Doc View Source IndexColumnNullsDistinct Declaration public const string IndexColumnNullsDistinct = \"SqlServerIndexColumnNullsDistinct\" Field Value Type Description String | Improve this Doc View Source OnlineIndex Declaration public const string OnlineIndex = \"SqlServerOnlineIndex\" Field Value Type Description String | Improve this Doc View Source RowGuidColumn Declaration public const string RowGuidColumn = \"SqlServerRowGuidColumn\" Field Value Type Description String | Improve this Doc View Source SchemaAuthorization Declaration public const string SchemaAuthorization = \"SqlServerSchemaAuthorization\" Field Value Type Description String Methods | Improve this Doc View Source Authorization(ICreateSchemaOptionsSyntax, String) Sets the schema owner during schema creation Declaration public static ICreateSchemaOptionsSyntax Authorization(this ICreateSchemaOptionsSyntax expression, string owner) Parameters Type Name Description FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax expression The schema creation expression String owner The schema owner Returns Type Description FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax The next step | Improve this Doc View Source Clustered(ICreateConstraintOptionsSyntax) Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax expression | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int32, Int32) Makes a column an Identity column using the specified seed and increment values. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, int seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description FluentMigrator.Builders.IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int32 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Identity<TNext, TNextFk>(IColumnOptionSyntax<TNext, TNextFk>, Int64, Int32) Makes a column an Identity column using the specified seed and increment values with bigint support. Declaration public static TNext Identity<TNext, TNextFk>(this IColumnOptionSyntax<TNext, TNextFk> expression, long seed, int increment) where TNext : IFluentSyntax where TNextFk : IFluentSyntax Parameters Type Name Description FluentMigrator.Builders.IColumnOptionSyntax <TNext, TNextFk> expression Column on which to apply the identity. Int64 seed Starting value of the identity. Int32 increment Increment value of the identity. Returns Type Description TNext Type Parameters Name Description TNext TNextFk | Improve this Doc View Source Include(ICreateIndexOnColumnSyntax, String) Declaration public static ICreateIndexNonKeyColumnSyntax Include(this ICreateIndexOnColumnSyntax expression, string columnName) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax expression String columnName Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax | Improve this Doc View Source Include(ICreateIndexOptionsSyntax, String) Declaration public static ICreateIndexOptionsSyntax Include(this ICreateIndexOptionsSyntax expression, string columnName) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression String columnName Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax | Improve this Doc View Source NonClustered(ICreateConstraintOptionsSyntax) Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax expression | Improve this Doc View Source NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax The expression | Improve this Doc View Source NullsDistinct(ICreateIndexMoreColumnOptionsSyntax, Boolean) Column should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax NullsDistinct(this ICreateIndexMoreColumnOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexColumnUniqueOptionsSyntax NullsNotDistinct(this ICreateIndexColumnUniqueOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax expression The expression to set this option for Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax The expression | Improve this Doc View Source NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax) Column should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax NullsNotDistinct(this ICreateIndexMoreColumnOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax expression The expression to set this option for Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source Online(ICreateConstraintOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateConstraintOptionsSyntax Online(this ICreateConstraintOptionsSyntax expression, bool active = true) Parameters Type Name Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax | Improve this Doc View Source Online(ICreateIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static ICreateIndexOptionsSyntax Online(this ICreateIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax | Improve this Doc View Source Online(IDeleteConstraintInSchemaOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteConstraintInSchemaOptionsSyntax Online(this IDeleteConstraintInSchemaOptionsSyntax expression, bool active = true) Parameters Type Name Description FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax | Improve this Doc View Source Online(IDeleteIndexOptionsSyntax, Boolean) Specifies whether underlying tables and associated indexes are available for queries and data modification during the index operation. The ONLINE option can only be specified in certain situations, please refer to documentation for SQL Server 2005 and newer. Declaration public static IDeleteIndexOptionsSyntax Online(this IDeleteIndexOptionsSyntax expression, bool active = true) Parameters Type Name Description FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax expression The expression to use to set the WITH(ONLINE=) option Boolean active true Long-term table locks are not held. This allows queries or updates to the underlying table to continue. false Table locks are applied and the table is unavailable for the duration of the index operation. Returns Type Description FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax | Improve this Doc View Source RowGuid(ICreateTableColumnOptionOrWithColumnSyntax) Declaration public static ICreateTableColumnOptionOrWithColumnSyntax RowGuid(this ICreateTableColumnOptionOrWithColumnSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax expression Returns Type Description FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax | Improve this Doc View Source UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source WithIdentityInsert(IInsertDataSyntax) Inserts data using Sql Server's IDENTITY INSERT feature. Declaration public static IInsertDataSyntax WithIdentityInsert(this IInsertDataSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Insert.IInsertDataSyntax expression Returns Type Description FluentMigrator.Builders.Insert.IInsertDataSyntax"
  },
  "api/FluentMigrator.SqlScriptTokenReplacer.html": {
    "href": "api/FluentMigrator.SqlScriptTokenReplacer.html",
    "title": "Class SqlScriptTokenReplacer | FluentMigrator documentation",
    "keywords": "Class SqlScriptTokenReplacer Function to replace token in an SQL script Inheritance Object SqlScriptTokenReplacer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public static class SqlScriptTokenReplacer Methods | Improve this Doc View Source ReplaceSqlScriptTokens(String, IDictionary<String, String>) Replace tokens in an SQL script Declaration public static string ReplaceSqlScriptTokens(string sqlText, IDictionary<string, string> parameters) Parameters Type Name Description String sqlText The SQL script where the tokens will be replaced IDictionary < String , String > parameters The tokens to be replaced Returns Type Description String The SQL script with the replaced tokens"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2000Processor.html",
    "title": "Class SqlServer2000Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServer2000Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Processor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2000Processor(ILogger<SqlServer2000Processor>, SqlServer2000Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2000Processor([NotNull] ILogger<SqlServer2000Processor> logger, [NotNull] SqlServer2000Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2000Processor > logger SqlServer2000Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2000Processor(DbProviderFactory, ILogger, SqlServer2000Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServer2000Processor(DbProviderFactory factory, [NotNull] ILogger logger, [NotNull] SqlServer2000Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description DbProviderFactory factory ILogger logger SqlServer2000Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2000Processor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServer2000Processor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlAnywhere.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlAnywhere Classes SqlAnywhere16Processor SqlAnywhere16ProcessorFactory SqlAnywhereDbFactory SqlAnywhereProcessor"
  },
  "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereProcessor.html",
    "title": "Class SqlAnywhereProcessor | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlAnywhereProcessor SqlAnywhere16Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlAnywhereProcessor(String, IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlAnywhereProcessor(string databaseType, IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description String databaseType IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory | Improve this Doc View Source SqlAnywhereProcessor(String, Func<DbProviderFactory>, IMigrationGenerator, ILogger, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlAnywhereProcessor([NotNull] string databaseType, [NotNull] Func<DbProviderFactory> factoryAccessor, [NotNull] IMigrationGenerator generator, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description String databaseType Func < DbProviderFactory > factoryAccessor IMigrationGenerator generator ILogger logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public override void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Overrides ProcessorBase.Process(CreateSchemaExpression) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhereDbFactory.html",
    "title": "Class SqlAnywhereDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SqlAnywhereDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source SqlAnywhereDbFactory() Declaration public SqlAnywhereDbFactory() Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlAnywhere.SqlAnywhere16ProcessorFactory.html",
    "title": "Class SqlAnywhere16ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16ProcessorFactory Inheritance Object MigrationProcessorFactory SqlAnywhere16ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax [Obsolete] public class SqlAnywhere16ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SQLite.SQLiteProcessor.html",
    "title": "Class SQLiteProcessor | FluentMigrator documentation",
    "keywords": "Class SQLiteProcessor Inheritance Object ProcessorBase GenericProcessorBase SQLiteProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SQLiteProcessor(SQLiteDbFactory, SQLiteGenerator, ILogger<SQLiteProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SQLiteProcessor([NotNull] SQLiteDbFactory factory, [NotNull] SQLiteGenerator generator, [NotNull] ILogger<SQLiteProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description SQLiteDbFactory factory SQLiteGenerator generator ILogger < SQLiteProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SQLiteProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SQLiteProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, [NotNull] IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SQLite.SQLiteDbFactory.html",
    "title": "Class SQLiteDbFactory | FluentMigrator documentation",
    "keywords": "Class SQLiteDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SQLiteDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SQLite Assembly : FluentMigrator.Runner.SQLite.dll Syntax public class SQLiteDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source SQLiteDbFactory() Declaration [Obsolete] public SQLiteDbFactory() | Improve this Doc View Source SQLiteDbFactory(IServiceProvider) Declaration public SQLiteDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Hana.HanaProcessor.html",
    "title": "Class HanaProcessor | FluentMigrator documentation",
    "keywords": "Class HanaProcessor Inheritance Object ProcessorBase GenericProcessorBase HanaProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source HanaProcessor(HanaDbFactory, HanaGenerator, ILogger<HanaProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public HanaProcessor([NotNull] HanaDbFactory factory, [NotNull] HanaGenerator generator, [NotNull] ILogger<HanaProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description HanaDbFactory factory HanaGenerator generator ILogger < HanaProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source HanaProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public HanaProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Hana.HanaDbFactory.html",
    "title": "Class HanaDbFactory | FluentMigrator documentation",
    "keywords": "Class HanaDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory HanaDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Hana Assembly : FluentMigrator.Runner.Hana.dll Syntax public class HanaDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source HanaDbFactory() Declaration [Obsolete] public HanaDbFactory() | Improve this Doc View Source HanaDbFactory(IServiceProvider) Declaration public HanaDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.TriggerInfo.html",
    "title": "Class TriggerInfo | FluentMigrator documentation",
    "keywords": "Class TriggerInfo Inheritance Object TriggerInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TriggerInfo Properties | Improve this Doc View Source Before Declaration public bool Before { get; } Property Value Type Description Boolean | Improve this Doc View Source Body Declaration public string Body { get; } Property Value Type Description String | Improve this Doc View Source Event Declaration public TriggerEvent Event { get; } Property Value Type Description TriggerEvent | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source OnDelete Declaration public bool OnDelete { get; } Property Value Type Description Boolean | Improve this Doc View Source OnInsert Declaration public bool OnInsert { get; } Property Value Type Description Boolean | Improve this Doc View Source OnUpdate Declaration public bool OnUpdate { get; } Property Value Type Description Boolean | Improve this Doc View Source Sequence Declaration public int Sequence { get; } Property Value Type Description Int32 | Improve this Doc View Source Type Declaration public int Type { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<TriggerInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < TriggerInfo >"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.TriggerEvent.html",
    "title": "Enum TriggerEvent | FluentMigrator documentation",
    "keywords": "Enum TriggerEvent Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public enum TriggerEvent Fields Name Description Delete Insert Update"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.TableInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.TableInfo.html",
    "title": "Class TableInfo | FluentMigrator documentation",
    "keywords": "Class TableInfo Inheritance Object TableInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class TableInfo Constructors | Improve this Doc View Source TableInfo(DataRow) Declaration public TableInfo(DataRow drMeta) Parameters Type Name Description DataRow drMeta | Improve this Doc View Source TableInfo(String, Boolean) Declaration public TableInfo(string name, bool exists) Parameters Type Name Description String name Boolean exists Properties | Improve this Doc View Source Exists Declaration public bool Exists { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static TableInfo Read(FirebirdProcessor processor, string tableName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String tableName FirebirdQuoter quoter Returns Type Description TableInfo"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.SequenceInfo.html",
    "title": "Class SequenceInfo | FluentMigrator documentation",
    "keywords": "Class SequenceInfo Inheritance Object SequenceInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class SequenceInfo Properties | Improve this Doc View Source CurrentValue Declaration public int CurrentValue { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, String, FirebirdQuoter) Declaration public static SequenceInfo Read(FirebirdProcessor processor, string sequenceName, FirebirdQuoter quoter) Parameters Type Name Description FirebirdProcessor processor String sequenceName FirebirdQuoter quoter Returns Type Description SequenceInfo"
  },
  "api/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html": {
    "href": "api/FluentMigrator.Runner.Processors.Firebird.IndexInfo.html",
    "title": "Class IndexInfo | FluentMigrator documentation",
    "keywords": "Class IndexInfo Inheritance Object IndexInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public sealed class IndexInfo Properties | Improve this Doc View Source Columns Declaration public List<string> Columns { get; } Property Value Type Description List < String > | Improve this Doc View Source IsAscending Declaration public bool IsAscending { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public string TableName { get; } Property Value Type Description String Methods | Improve this Doc View Source Read(FirebirdProcessor, TableInfo) Declaration public static List<IndexInfo> Read(FirebirdProcessor processor, TableInfo table) Parameters Type Name Description FirebirdProcessor processor TableInfo table Returns Type Description List < IndexInfo > | Improve this Doc View Source Read(FirebirdProcessor, String) Declaration public static IndexInfo Read(FirebirdProcessor processor, string indexName) Parameters Type Name Description FirebirdProcessor processor String indexName Returns Type Description IndexInfo"
  },
  "api/FluentMigrator.Runner.MigrationRunner.html": {
    "href": "api/FluentMigrator.Runner.MigrationRunner.html",
    "title": "Class MigrationRunner | FluentMigrator documentation",
    "keywords": "Class MigrationRunner The default IMigrationRunner implementation Inheritance Object MigrationRunner Implements IMigrationRunner IMigrationScopeStarter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MigrationRunner : IMigrationRunner, IMigrationScopeStarter Constructors | Improve this Doc View Source MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner([NotNull] IAssemblyCollection assemblies, [NotNull] IRunnerContext runnerContext, [NotNull] IMigrationProcessor processor, IVersionTableMetaData versionTableMetaData = null, [CanBeNull] IMigrationRunnerConventions migrationRunnerConventions = null) Parameters Type Name Description IAssemblyCollection assemblies The collection of assemblies to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IVersionTableMetaData versionTableMetaData The version table metadata IMigrationRunnerConventions migrationRunnerConventions The custom migration runner conventions | Improve this Doc View Source MigrationRunner(IAssemblyCollection, IRunnerContext, IMigrationProcessor, IVersionTableMetaData, IMigrationRunnerConventions, IConventionSet) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner([NotNull] IAssemblyCollection assemblies, [NotNull] IRunnerContext runnerContext, [NotNull] IMigrationProcessor processor, [CanBeNull] IVersionTableMetaData versionTableMetaData, [CanBeNull] IMigrationRunnerConventions migrationRunnerConventions, [CanBeNull] IConventionSet conventionSet) Parameters Type Name Description IAssemblyCollection assemblies The collection of assemblies to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IVersionTableMetaData versionTableMetaData The version table metadata IMigrationRunnerConventions migrationRunnerConventions The custom migration runner conventions IConventionSet conventionSet The expression convention set | Improve this Doc View Source MigrationRunner(IOptions<RunnerOptions>, IOptions<ProcessorOptions>, IProfileLoader, IProcessorAccessor, IMaintenanceLoader, IMigrationInformationLoader, ILogger<MigrationRunner>, IStopWatch, IMigrationRunnerConventionsAccessor, IAssemblySource, MigrationValidator, IServiceProvider) Initializes a new instance of the MigrationRunner class. Declaration public MigrationRunner([NotNull] IOptions<RunnerOptions> options, [NotNull] IOptions<ProcessorOptions> processorOptions, [NotNull] IProfileLoader profileLoader, [NotNull] IProcessorAccessor processorAccessor, [NotNull] IMaintenanceLoader maintenanceLoader, [NotNull] IMigrationInformationLoader migrationLoader, [NotNull] ILogger<MigrationRunner> logger, [NotNull] IStopWatch stopWatch, [NotNull] IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor, [NotNull] IAssemblySource assemblySource, [NotNull] MigrationValidator migrationValidator, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IOptions < RunnerOptions > options The migration runner options IOptions < ProcessorOptions > processorOptions The migration processor options IProfileLoader profileLoader The profile loader IProcessorAccessor processorAccessor The migration processor accessor IMaintenanceLoader maintenanceLoader The maintenance loader IMigrationInformationLoader migrationLoader The migration loader ILogger < MigrationRunner > logger The logger IStopWatch stopWatch The stopwatch IMigrationRunnerConventionsAccessor migrationRunnerConventionsAccessor The accessor for migration runner conventions IAssemblySource assemblySource The assemblies to scan for migrations, etc... MigrationValidator migrationValidator The validator for migrations IServiceProvider serviceProvider The service provider | Improve this Doc View Source MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner([NotNull] Assembly assembly, [NotNull] IRunnerContext runnerContext, [NotNull] IMigrationProcessor processor) Parameters Type Name Description Assembly assembly The assembly to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor | Improve this Doc View Source MigrationRunner(Assembly, IRunnerContext, IMigrationProcessor, IConventionSet) Initializes a new instance of the MigrationRunner class. Declaration [Obsolete] public MigrationRunner([NotNull] Assembly assembly, [NotNull] IRunnerContext runnerContext, [NotNull] IMigrationProcessor processor, [CanBeNull] IConventionSet conventionSet) Parameters Type Name Description Assembly assembly The assembly to scan for migrations, etc... IRunnerContext runnerContext The runner context IMigrationProcessor processor The migration processor IConventionSet conventionSet The expression convention set Properties | Improve this Doc View Source CaughtExceptions Gets the caught exceptions when SilentlyFail is true Declaration public IReadOnlyList<Exception> CaughtExceptions { get; } Property Value Type Description IReadOnlyList < Exception > | Improve this Doc View Source Conventions Gets the migration runner conventions Declaration public IMigrationRunnerConventions Conventions { get; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source CurrentScope Gets the currently active migration scope Declaration public IMigrationScope CurrentScope { get; set; } Property Value Type Description IMigrationScope | Improve this Doc View Source MaintenanceLoader Gets the maintenance loader Declaration public IMaintenanceLoader MaintenanceLoader { get; } Property Value Type Description IMaintenanceLoader | Improve this Doc View Source MigrationAssemblies Gets the assemblies searched for migrations, profile migrations, etc... Declaration [Obsolete] public IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source MigrationLoader Gets or sets the migration loader to be used by this migration runner Declaration public IMigrationInformationLoader MigrationLoader { get; set; } Property Value Type Description IMigrationInformationLoader | Improve this Doc View Source Processor Gets the migration processor used by this runner Declaration public IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor | Improve this Doc View Source ProfileLoader Gets or sets the profile loader Declaration public IProfileLoader ProfileLoader { get; set; } Property Value Type Description IProfileLoader | Improve this Doc View Source RunnerContext Gets the runner context Declaration [Obsolete] public IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext | Improve this Doc View Source SilentlyFail Gets a value indicating whether exceptions should be caught Declaration public bool SilentlyFail { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TransactionPerSession Gets a value indicating whether a single transaction for the whole session should be used Declaration public bool TransactionPerSession { get; } Property Value Type Description Boolean | Improve this Doc View Source VersionLoader Gets or sets the version loader Declaration public IVersionLoader VersionLoader { get; set; } Property Value Type Description IVersionLoader Methods | Improve this Doc View Source ApplyMaintenance(MigrationStage, Boolean) Apply maintenance changes Declaration public void ApplyMaintenance(MigrationStage stage, bool useAutomaticTransactionManagement) Parameters Type Name Description MigrationStage stage The maintenance stage Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source ApplyMigrationDown(IMigrationInfo, Boolean) Revert the migration using the given migration information Declaration public virtual void ApplyMigrationDown([NotNull] IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo The migration information Boolean useTransaction true when a transaction for this operation should be used | Improve this Doc View Source ApplyMigrationUp(IMigrationInfo, Boolean) Apply the migration using the given migration information Declaration public virtual void ApplyMigrationUp([NotNull] IMigrationInfo migrationInfo, bool useTransaction) Parameters Type Name Description IMigrationInfo migrationInfo The migration information Boolean useTransaction true when a transaction for this migration should be used | Improve this Doc View Source ApplyProfiles() Apply all matching profiles Declaration public void ApplyProfiles() | Improve this Doc View Source BeginScope() Starts a new migration scope Declaration public IMigrationScope BeginScope() Returns Type Description IMigrationScope A new migration scope | Improve this Doc View Source Down(IMigration) Executes an Down migration Declaration public void Down(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ExecuteExpressions(ICollection<IMigrationExpression>) Execute each migration expression in the expression collection Declaration protected void ExecuteExpressions(ICollection<IMigrationExpression> expressions) Parameters Type Name Description ICollection < IMigrationExpression > expressions The expressions to execute | Improve this Doc View Source HasMigrationsToApplyDown(Int64) Returns true when there are migrations to revert Declaration public bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version The target version Returns Type Description Boolean true when there are migrations to revert | Improve this Doc View Source HasMigrationsToApplyRollback() Are there migrations available for a rollback? Declaration public bool HasMigrationsToApplyRollback() Returns Type Description Boolean true when there are migrations available for a rollback | Improve this Doc View Source HasMigrationsToApplyUp(Nullable<Int64>) Returns true when there are migrations to apply Declaration public bool HasMigrationsToApplyUp(long? version = default(long? )) Parameters Type Name Description Nullable < Int64 > version The target version (or null if the last one should be used) Returns Type Description Boolean true when there are migrations to apply | Improve this Doc View Source ListMigrations() List all migrations to the logger Declaration public void ListMigrations() | Improve this Doc View Source MigrateDown(Int64) Migrate down to the given version Declaration public void MigrateDown(long targetVersion) Parameters Type Name Description Int64 targetVersion | Improve this Doc View Source MigrateDown(Int64, Boolean) Revert migrations down to the given targetVersion Declaration public void MigrateDown(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion The target version that should become the last applied migration version Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source MigrateUp() Executes all found (and unapplied) migrations Declaration public void MigrateUp() | Improve this Doc View Source MigrateUp(Boolean) Apply migrations Declaration public void MigrateUp(bool useAutomaticTransactionManagement) Parameters Type Name Description Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source MigrateUp(Int64) Executes all found (and unapplied) migrations up to the given version Declaration public void MigrateUp(long targetVersion) Parameters Type Name Description Int64 targetVersion | Improve this Doc View Source MigrateUp(Int64, Boolean) Apply migrations up to the given targetVersion Declaration public void MigrateUp(long targetVersion, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 targetVersion The target migration version Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source Rollback(Int32) Rollback the given number of steps Declaration public void Rollback(int steps) Parameters Type Name Description Int32 steps The number of steps to rollback | Improve this Doc View Source Rollback(Int32, Boolean) Rollback the last steps Declaration public void Rollback(int steps, bool useAutomaticTransactionManagement) Parameters Type Name Description Int32 steps The number of migrations to rollback Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source RollbackToVersion(Int64) Rollback to a given version Declaration public void RollbackToVersion(long version) Parameters Type Name Description Int64 version The target version to rollback to | Improve this Doc View Source RollbackToVersion(Int64, Boolean) Rollback to a given version Declaration public void RollbackToVersion(long version, bool useAutomaticTransactionManagement) Parameters Type Name Description Int64 version The version to rollback to (exclusive) Boolean useAutomaticTransactionManagement true if automatic transaction management should be used | Improve this Doc View Source Up(IMigration) Executes an Up migration Declaration public void Up(IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ValidateVersionOrder() Validate that there were no missing migration versions Declaration public void ValidateVersionOrder() Remarks Throws an exception if a missing migration was found. Implements IMigrationRunner IMigrationScopeStarter"
  },
  "api/FluentMigrator.Runner.MaintenanceLoader.html": {
    "href": "api/FluentMigrator.Runner.MaintenanceLoader.html",
    "title": "Class MaintenanceLoader | FluentMigrator documentation",
    "keywords": "Class MaintenanceLoader Inheritance Object MaintenanceLoader Implements IMaintenanceLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class MaintenanceLoader : IMaintenanceLoader Constructors | Improve this Doc View Source MaintenanceLoader(IAssemblyCollection, IEnumerable<String>, IMigrationRunnerConventions) Declaration [Obsolete] public MaintenanceLoader(IAssemblyCollection assemblyCollection, IEnumerable<string> tags, IMigrationRunnerConventions conventions) Parameters Type Name Description IAssemblyCollection assemblyCollection IEnumerable < String > tags IMigrationRunnerConventions conventions | Improve this Doc View Source MaintenanceLoader(IAssemblySource, IOptions<RunnerOptions>, IMigrationRunnerConventions, IServiceProvider) Declaration public MaintenanceLoader([NotNull] IAssemblySource assemblySource, [NotNull] IOptions<RunnerOptions> options, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IAssemblySource assemblySource IOptions < RunnerOptions > options IMigrationRunnerConventions conventions IServiceProvider serviceProvider Methods | Improve this Doc View Source LoadMaintenance(MigrationStage) Declaration public IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo > Implements IMaintenanceLoader"
  },
  "api/FluentMigrator.Runner.IMigrationRunnerBuilder.html": {
    "href": "api/FluentMigrator.Runner.IMigrationRunnerBuilder.html",
    "title": "Interface IMigrationRunnerBuilder | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerBuilder An interface for configuring migration runner services Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerBuilder Properties | Improve this Doc View Source Services Gets the IServiceCollection where the migration runner services are configured Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Extension Methods OracleRunnerBuilderExtensions.AddOracle(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddOracleManaged(IMigrationRunnerBuilder) OracleRunnerBuilderExtensions.AddDotConnectOracle(IMigrationRunnerBuilder) PostgresRunnerBuilderExtensions.AddPostgres(IMigrationRunnerBuilder) JetRunnerBuilderExtensions.AddJet(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2000(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2005(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2008(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2012(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2014(IMigrationRunnerBuilder) SqlServerRunnerBuilderExtensions.AddSqlServer2016(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql4(IMigrationRunnerBuilder) MySqlRunnerBuilderExtensions.AddMySql5(IMigrationRunnerBuilder) MigrationRunnerBuilderExtensions.ConfigureGlobalProcessorOptions(IMigrationRunnerBuilder, Action<ProcessorOptions>) MigrationRunnerBuilderExtensions.WithGlobalConnectionString(IMigrationRunnerBuilder, String) MigrationRunnerBuilderExtensions.WithGlobalCommandTimeout(IMigrationRunnerBuilder, TimeSpan) MigrationRunnerBuilderExtensions.AsGlobalPreview(IMigrationRunnerBuilder, Boolean) MigrationRunnerBuilderExtensions.WithVersionTable(IMigrationRunnerBuilder, IVersionTableMetaData) MigrationRunnerBuilderExtensions.WithRunnerConventions(IMigrationRunnerBuilder, IMigrationRunnerConventions) MigrationRunnerBuilderExtensions.WithMigrationsIn(IMigrationRunnerBuilder, Assembly[]) Db2RunnerBuilderExtensions.AddDb2(IMigrationRunnerBuilder) Db2RunnerBuilderExtensions.AddDb2ISeries(IMigrationRunnerBuilder) HanaRunnerBuilderExtensions.AddHana(IMigrationRunnerBuilder) SqlServerCeRunnerBuilderExtensions.AddSqlServerCe(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder) FirebirdRunnerBuilderExtensions.AddFirebird(IMigrationRunnerBuilder, FirebirdOptions) SQLiteRunnerBuilderExtensions.AddSQLite(IMigrationRunnerBuilder) RedshiftRunnerBuilderExtensions.AddRedshift(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere16(IMigrationRunnerBuilder) SqlAnywhereRunnerBuilderExtensions.AddSqlAnywhere(IMigrationRunnerBuilder)"
  },
  "api/FluentMigrator.Runner.IMigrationRunner.html": {
    "href": "api/FluentMigrator.Runner.IMigrationRunner.html",
    "title": "Interface IMigrationRunner | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunner The migration runner Inherited Members IMigrationScopeStarter.BeginScope() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationRunner : IMigrationScopeStarter Properties | Improve this Doc View Source MigrationAssemblies Gets the assemblies searched for migrations, profile migrations, etc... Declaration [Obsolete] [CanBeNull] IAssemblyCollection MigrationAssemblies { get; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source MigrationLoader Gets or sets the migration loader to be used by this migration runner Declaration [NotNull] IMigrationInformationLoader MigrationLoader { get; } Property Value Type Description IMigrationInformationLoader | Improve this Doc View Source Processor Gets the migration processor used by this runner Declaration [NotNull] IMigrationProcessor Processor { get; } Property Value Type Description IMigrationProcessor | Improve this Doc View Source RunnerContext Gets the runner context Declaration [Obsolete] [CanBeNull] IRunnerContext RunnerContext { get; } Property Value Type Description IRunnerContext Methods | Improve this Doc View Source Down(IMigration) Executes an Down migration Declaration void Down([NotNull] IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source HasMigrationsToApplyDown(Int64) Returns true when there are migrations to revert Declaration bool HasMigrationsToApplyDown(long version) Parameters Type Name Description Int64 version The target version Returns Type Description Boolean true when there are migrations to revert | Improve this Doc View Source HasMigrationsToApplyRollback() Are there migrations available for a rollback? Declaration bool HasMigrationsToApplyRollback() Returns Type Description Boolean true when there are migrations available for a rollback | Improve this Doc View Source HasMigrationsToApplyUp(Nullable<Int64>) Returns true when there are migrations to apply Declaration bool HasMigrationsToApplyUp(long? version = default(long? )) Parameters Type Name Description Nullable < Int64 > version The target version (or null if the last one should be used) Returns Type Description Boolean true when there are migrations to apply | Improve this Doc View Source ListMigrations() List all migrations to the logger Declaration void ListMigrations() | Improve this Doc View Source MigrateDown(Int64) Migrate down to the given version Declaration void MigrateDown(long version) Parameters Type Name Description Int64 version The version to migrate down to | Improve this Doc View Source MigrateUp() Executes all found (and unapplied) migrations Declaration void MigrateUp() | Improve this Doc View Source MigrateUp(Int64) Executes all found (and unapplied) migrations up to the given version Declaration void MigrateUp(long version) Parameters Type Name Description Int64 version The target version to migrate to (inclusive) | Improve this Doc View Source Rollback(Int32) Rollback the given number of steps Declaration void Rollback(int steps) Parameters Type Name Description Int32 steps The number of steps to rollback | Improve this Doc View Source RollbackToVersion(Int64) Rollback to a given version Declaration void RollbackToVersion(long version) Parameters Type Name Description Int64 version The target version to rollback to | Improve this Doc View Source Up(IMigration) Executes an Up migration Declaration void Up([NotNull] IMigration migration) Parameters Type Name Description IMigration migration The migration to execute | Improve this Doc View Source ValidateVersionOrder() Validate that there were no missing migration versions Declaration void ValidateVersionOrder() Remarks Throws an exception if a missing migration was found."
  },
  "api/FluentMigrator.Runner.IMigrationInformationLoader.html": {
    "href": "api/FluentMigrator.Runner.IMigrationInformationLoader.html",
    "title": "Interface IMigrationInformationLoader | FluentMigrator documentation",
    "keywords": "Interface IMigrationInformationLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationInformationLoader Methods | Improve this Doc View Source LoadMigrations() Declaration [NotNull] SortedList<long, IMigrationInfo> LoadMigrations() Returns Type Description SortedList < Int64 , IMigrationInfo >"
  },
  "api/FluentMigrator.Runner.IMaintenanceLoader.html": {
    "href": "api/FluentMigrator.Runner.IMaintenanceLoader.html",
    "title": "Interface IMaintenanceLoader | FluentMigrator documentation",
    "keywords": "Interface IMaintenanceLoader Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMaintenanceLoader Methods | Improve this Doc View Source LoadMaintenance(MigrationStage) Declaration IList<IMigrationInfo> LoadMaintenance(MigrationStage stage) Parameters Type Name Description MigrationStage stage Returns Type Description IList < IMigrationInfo >"
  },
  "api/FluentMigrator.Runner.IAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.IAnnouncer.html",
    "title": "Interface IAnnouncer | FluentMigrator documentation",
    "keywords": "Interface IAnnouncer Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IAnnouncer Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration [Obsolete] void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Extension Methods AnnouncerExtensions.Heading(IAnnouncer, String, Object[]) AnnouncerExtensions.Say(IAnnouncer, String, Object[]) AnnouncerExtensions.Error(IAnnouncer, String, Object[])"
  },
  "api/FluentMigrator.Runner.Helpers.html": {
    "href": "api/FluentMigrator.Runner.Helpers.html",
    "title": "Namespace FluentMigrator.Runner.Helpers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Helpers Classes FormatHelper"
  },
  "api/FluentMigrator.Runner.Helpers.FormatHelper.html": {
    "href": "api/FluentMigrator.Runner.Helpers.FormatHelper.html",
    "title": "Class FormatHelper | FluentMigrator documentation",
    "keywords": "Class FormatHelper Inheritance Object FormatHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Helpers Assembly : FluentMigrator.Runner.Core.dll Syntax public class FormatHelper Methods | Improve this Doc View Source FormatSqlEscape(String) Declaration public static string FormatSqlEscape(string sql) Parameters Type Name Description String sql Returns Type Description String"
  },
  "api/FluentMigrator.Runner.HanaRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.HanaRunnerBuilderExtensions.html",
    "title": "Class HanaRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class HanaRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object HanaRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Hana.dll Syntax public static class HanaRunnerBuilderExtensions Methods | Improve this Doc View Source AddHana(IMigrationRunnerBuilder) Adds SAP Hana support Declaration public static IMigrationRunnerBuilder AddHana(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the SAP Hana-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.Generators.html": {
    "href": "api/FluentMigrator.Runner.Generators.html",
    "title": "Namespace FluentMigrator.Runner.Generators | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators Classes CompatabilityModeExtension CompatibilityModeExtension Extension methods for CompatibilityMode EmptyDescriptionGenerator GeneratorOptions Options for IMigrationGenerator implementations MigrationGeneratorFactory SelectingGeneratorAccessor An IGeneratorAccessor implementation that selects one generator by name SelectingGeneratorAccessorOptions The options for the SelectingGeneratorAccessor Interfaces IColumn Interface for column-oriented SQL fragment generation IDescriptionGenerator Generate SQL statements to set descriptions for tables and columns IGeneratorAccessor Accesses the selected migration generator IQuoter The interface to be implemented for handling quotes ITypeMap A map of DbType to an SQL type"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Generators.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.SqlServer Classes SqlServer2000Generator SqlServer2000Quoter SqlServer2000TypeMap SqlServer2005DescriptionGenerator SqlServer2005Generator SqlServer2005Quoter SqlServer2005TypeMap SqlServer2008Generator SqlServer2008Quoter SqlServer2012Generator SqlServer2014Generator SqlServer2016Generator SqlServerCeGenerator SqlServerCeTypeMap"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeTypeMap.html",
    "title": "Class SqlServerCeTypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServerCeTypeMap Inheritance Object TypeMapBase SqlServerCeTypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeTypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source BinaryCapacity Declaration public const int BinaryCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 1073741823 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Firebird.FirebirdTruncator.html",
    "title": "Class FirebirdTruncator | FluentMigrator documentation",
    "keywords": "Class FirebirdTruncator Inheritance Object FirebirdTruncator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdTruncator Constructors | Improve this Doc View Source FirebirdTruncator(Boolean, Boolean) Declaration public FirebirdTruncator(bool enabled, bool packKeyNames) Parameters Type Name Description Boolean enabled Boolean packKeyNames Methods | Improve this Doc View Source Pack(String) Declaration public string Pack(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source Truncate(AlterColumnExpression) Declaration public void Truncate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Truncate(AlterDefaultConstraintExpression) Declaration public void Truncate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Truncate(AlterSchemaExpression) Declaration public void Truncate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Truncate(AlterTableExpression) Declaration public void Truncate(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Truncate(CreateColumnExpression) Declaration public void Truncate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Truncate(CreateConstraintExpression) Declaration public void Truncate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Truncate(CreateForeignKeyExpression) Declaration public void Truncate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Truncate(CreateIndexExpression) Declaration public void Truncate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Truncate(CreateSchemaExpression) Declaration public void Truncate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Truncate(CreateSequenceExpression) Declaration public void Truncate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Truncate(CreateTableExpression) Declaration public void Truncate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Truncate(DeleteColumnExpression) Declaration public void Truncate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Truncate(DeleteConstraintExpression) Declaration public void Truncate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Truncate(DeleteDataExpression) Declaration public void Truncate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Truncate(DeleteDefaultConstraintExpression) Declaration public void Truncate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Truncate(DeleteForeignKeyExpression) Declaration public void Truncate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Truncate(DeleteIndexExpression) Declaration public void Truncate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Truncate(DeleteSchemaExpression) Declaration public void Truncate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Truncate(DeleteSequenceExpression) Declaration public void Truncate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Truncate(DeleteTableExpression) Declaration public void Truncate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Truncate(InsertDataExpression) Declaration public void Truncate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Truncate(RenameColumnExpression) Declaration public void Truncate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Truncate(RenameTableExpression) Declaration public void Truncate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Truncate(UpdateDataExpression) Declaration public void Truncate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Truncate(ColumnDefinition) Declaration public void Truncate(ColumnDefinition column) Parameters Type Name Description ColumnDefinition column | Improve this Doc View Source Truncate(ConstraintDefinition) Declaration public void Truncate(ConstraintDefinition constraint) Parameters Type Name Description ConstraintDefinition constraint | Improve this Doc View Source Truncate(ForeignKeyDefinition) Declaration public void Truncate(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey | Improve this Doc View Source Truncate(IndexDefinition) Declaration public void Truncate(IndexDefinition index) Parameters Type Name Description IndexDefinition index | Improve this Doc View Source Truncate(SequenceDefinition) Declaration public void Truncate(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence | Improve this Doc View Source Truncate(String) Declaration public string Truncate(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source TruncateColumns(ICollection<ColumnDefinition>) Declaration public void TruncateColumns(ICollection<ColumnDefinition> columns) Parameters Type Name Description ICollection < ColumnDefinition > columns | Improve this Doc View Source TruncateNames(ICollection<String>) Declaration public ICollection<string> TruncateNames(ICollection<string> names) Parameters Type Name Description ICollection < String > names Returns Type Description ICollection < String >"
  },
  "api/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Firebird.FirebirdQuoter.html",
    "title": "Class FirebirdQuoter | FluentMigrator documentation",
    "keywords": "Class FirebirdQuoter Inheritance Object GenericQuoter FirebirdQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdQuoter : GenericQuoter, IQuoter Constructors | Improve this Doc View Source FirebirdQuoter(FirebirdOptions) Initializes a new instance of the FirebirdQuoter class. Declaration public FirebirdQuoter(FirebirdOptions options) Parameters Type Name Description FirebirdOptions options The firebird specific options | Improve this Doc View Source FirebirdQuoter(Boolean) Declaration public FirebirdQuoter(bool forceQuote) Parameters Type Name Description Boolean forceQuote Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source ShouldQuote(String) Declaration protected override bool ShouldQuote(string name) Parameters Type Name Description String name Returns Type Description Boolean Overrides GenericQuoter.ShouldQuote(String) | Improve this Doc View Source ToFbObjectName(String) Declaration public string ToFbObjectName(string objName) Parameters Type Name Description String objName Returns Type Description String Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.DefaultAutoNameConvention.html",
    "title": "Class DefaultAutoNameConvention | FluentMigrator documentation",
    "keywords": "Class DefaultAutoNameConvention The default implementation of a IAutoNameConvention Inheritance Object DefaultAutoNameConvention Implements IAutoNameConvention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class DefaultAutoNameConvention : IAutoNameConvention Methods | Improve this Doc View Source Apply(IAutoNameExpression) Applies a convention to a IAutoNameExpression Declaration public IAutoNameExpression Apply(IAutoNameExpression expression) Parameters Type Name Description IAutoNameExpression expression The expression this convention should be applied to Returns Type Description IAutoNameExpression The same or a new expression. The underlying type must stay the same. Implements IAutoNameConvention"
  },
  "api/FluentMigrator.Runner.Conventions.ConventionSet.html": {
    "href": "api/FluentMigrator.Runner.Conventions.ConventionSet.html",
    "title": "Class ConventionSet | FluentMigrator documentation",
    "keywords": "Class ConventionSet A convenience (empty) implementation of IConventionSet Inheritance Object ConventionSet Implements IConventionSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConventionSet : IConventionSet Properties | Improve this Doc View Source AutoNameConventions Gets the conventions to be applied to IAutoNameExpression implementations Declaration public IList<IAutoNameConvention> AutoNameConventions { get; } Property Value Type Description IList < IAutoNameConvention > | Improve this Doc View Source ColumnsConventions Gets the conventions to be applied to IColumnsExpression implementations Declaration public IList<IColumnsConvention> ColumnsConventions { get; } Property Value Type Description IList < IColumnsConvention > | Improve this Doc View Source ConstraintConventions Gets the conventions to be applied to IConstraintExpression implementations Declaration public IList<IConstraintConvention> ConstraintConventions { get; } Property Value Type Description IList < IConstraintConvention > | Improve this Doc View Source ForeignKeyConventions Gets the conventions to be applied to IForeignKeyExpression implementations Declaration public IList<IForeignKeyConvention> ForeignKeyConventions { get; } Property Value Type Description IList < IForeignKeyConvention > | Improve this Doc View Source IndexConventions Gets the conventions to be applied to IIndexExpression implementations Declaration public IList<IIndexConvention> IndexConventions { get; } Property Value Type Description IList < IIndexConvention > | Improve this Doc View Source RootPathConvention Gets or sets the root path convention to be applied to IFileSystemExpression implementations Declaration public IRootPathConvention RootPathConvention { get; set; } Property Value Type Description IRootPathConvention | Improve this Doc View Source SchemaConvention Gets or sets the default schema name convention to be applied to ISchemaExpression implementations Declaration public DefaultSchemaConvention SchemaConvention { get; set; } Property Value Type Description DefaultSchemaConvention Remarks This class cannot be overridden. The IDefaultSchemaNameConvention must be implemented/provided instead. | Improve this Doc View Source SequenceConventions Gets the conventions to be applied to ISequenceExpression implementations Declaration public IList<ISequenceConvention> SequenceConventions { get; } Property Value Type Description IList < ISequenceConvention > Implements IConventionSet"
  },
  "api/FluentMigrator.Runner.ConventionSetExtensions.html": {
    "href": "api/FluentMigrator.Runner.ConventionSetExtensions.html",
    "title": "Class ConventionSetExtensions | FluentMigrator documentation",
    "keywords": "Class ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. Inheritance Object ConventionSetExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class ConventionSetExtensions Methods | Improve this Doc View Source Apply(IEnumerable<IMigrationExpression>, IConventionSet) Applies all conventions in a conventionSet to the given expressions . Declaration public static IEnumerable<IMigrationExpression> Apply(this IEnumerable<IMigrationExpression> expressions, IConventionSet conventionSet) Parameters Type Name Description IEnumerable < IMigrationExpression > expressions The expression to apply the convention set to IConventionSet conventionSet The convention set to apply to the expressions Returns Type Description IEnumerable < IMigrationExpression > A sequence of expressions where the conventions have been applied to | Improve this Doc View Source Apply<T>(T, IConventionSet) Apply all conventions in a conventionSet to the given expression . Declaration public static T Apply<T>(this T expression, IConventionSet conventionSet) where T : IMigrationExpression Parameters Type Name Description T expression The expression to apply the conventionSet to IConventionSet conventionSet The convention set to apply to the expression Returns Type Description T The same or a new instance of the expression. The underlying type of the expression must not be changed. Type Parameters Name Description T The expression type, derived from IMigrationExpression"
  },
  "api/FluentMigrator.Expressions.RenameTableExpression.html": {
    "href": "api/FluentMigrator.Expressions.RenameTableExpression.html",
    "title": "Class RenameTableExpression | FluentMigrator documentation",
    "keywords": "Class RenameTableExpression Expression to rename a table Inheritance Object MigrationExpressionBase RenameTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class RenameTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source NewName Gets or sets the new table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"NewTableNameCannotBeNullOrEmpty\")] public virtual string NewName { get; set; } Property Value Type Description String | Improve this Doc View Source OldName Gets or sets the old table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"OldTableNameCannotBeNullOrEmpty\")] public virtual string OldName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.MigrationExpressionBase.html": {
    "href": "api/FluentMigrator.Expressions.MigrationExpressionBase.html",
    "title": "Class MigrationExpressionBase | FluentMigrator documentation",
    "keywords": "Class MigrationExpressionBase The base class for migration expressions Inheritance Object MigrationExpressionBase AlterColumnExpression AlterDefaultConstraintExpression AlterSchemaExpression AlterTableExpression CreateColumnExpression CreateConstraintExpression CreateForeignKeyExpression CreateIndexExpression CreateSchemaExpression CreateSequenceExpression CreateTableExpression DeleteColumnExpression DeleteConstraintExpression DeleteDefaultConstraintExpression DeleteForeignKeyExpression DeleteIndexExpression DeleteSchemaExpression DeleteSequenceExpression DeleteTableExpression ExecuteSqlScriptExpressionBase ExecuteSqlStatementExpression PerformDBOperationExpression RenameColumnExpression RenameTableExpression UpdateDataExpression Implements IMigrationExpression ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class MigrationExpressionBase : IMigrationExpression, ICanBeValidated Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public abstract void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public virtual IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteSchemaExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteSchemaExpression.html",
    "title": "Class DeleteSchemaExpression | FluentMigrator documentation",
    "keywords": "Class DeleteSchemaExpression Expression to delete a schema Inheritance Object MigrationExpressionBase DeleteSchemaExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source SchemaName Gets or sets a schema name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SchemaNameCannotBeNullOrEmpty\")] public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteIndexExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteIndexExpression.html",
    "title": "Class DeleteIndexExpression | FluentMigrator documentation",
    "keywords": "Class DeleteIndexExpression Expression to delete an index Inheritance Object MigrationExpressionBase DeleteIndexExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteIndexExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IIndexExpression, IValidatableObject Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Index Gets the index definition Declaration public virtual IndexDefinition Index { get; set; } Property Value Type Description IndexDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IIndexExpression System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Expressions.CreateConstraintExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateConstraintExpression.html",
    "title": "Class CreateConstraintExpression | FluentMigrator documentation",
    "keywords": "Class CreateConstraintExpression The expression to create a constraint Inheritance Object MigrationExpressionBase CreateConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression, IValidationChildren Constructors | Improve this Doc View Source CreateConstraintExpression(ConstraintType) Initializes a new instance of the CreateConstraintExpression class. Declaration public CreateConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Constraint Gets the constraint definition Declaration public virtual ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.SqlAnywhereConstraintType.html": {
    "href": "api/FluentMigrator.SqlAnywhereConstraintType.html",
    "title": "Enum SqlAnywhereConstraintType | FluentMigrator documentation",
    "keywords": "Enum SqlAnywhereConstraintType The constraint type as supported by SQL Anywhere Namespace : FluentMigrator Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public enum SqlAnywhereConstraintType Fields Name Description Clustered The index/unique constraint should be clustered NonClustered The index/unique constraint should not be clustered"
  },
  "api/FluentMigrator.SqlAnywhere.html": {
    "href": "api/FluentMigrator.SqlAnywhere.html",
    "title": "Namespace FluentMigrator.SqlAnywhere | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.SqlAnywhere Classes SqlAnywhereExtensions Extension methods for SQL Anywhere"
  },
  "api/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html": {
    "href": "api/FluentMigrator.SqlAnywhere.SqlAnywhereExtensions.html",
    "title": "Class SqlAnywhereExtensions | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereExtensions Extension methods for SQL Anywhere Inheritance Object SqlAnywhereExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.SqlAnywhere Assembly : FluentMigrator.Extensions.SqlAnywhere.dll Syntax public static class SqlAnywhereExtensions Fields | Improve this Doc View Source ConstraintType Declaration public const string ConstraintType = \"SqlAnywhereConstraintType\" Field Value Type Description String | Improve this Doc View Source SchemaPassword Declaration public const string SchemaPassword = \"SqlAnywhereSchemaPassword\" Field Value Type Description String | Improve this Doc View Source WithNullsDistinct Declaration public const string WithNullsDistinct = \"SqlAnywhereNullsDistinct\" Field Value Type Description String Methods | Improve this Doc View Source Clustered(ICreateConstraintOptionsSyntax) Set the unique/index constraint type to Clustered Declaration public static void Clustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax expression The expression | Improve this Doc View Source NonClustered(ICreateConstraintOptionsSyntax) Set the unique/index constraint type to NonClustered Declaration public static void NonClustered(this ICreateConstraintOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax expression The expression | Improve this Doc View Source Password(ICreateSchemaOptionsSyntax, String) Sets the schema password used during schema creation Declaration public static ICreateSchemaOptionsSyntax Password(this ICreateSchemaOptionsSyntax expression, string password) Parameters Type Name Description FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax expression The schema creation expression String password The password to use Returns Type Description FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax The next step | Improve this Doc View Source UniqueNullsDistinct(ICreateIndexOptionsSyntax, Boolean) Index should have unique values. Only one row with null value should be accepted (default for most known database engines). Declaration public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(this ICreateIndexOptionsSyntax expression, bool nullsAreDistinct = true) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression The expression to set this option for Boolean nullsAreDistinct true when nulls should be distinct Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression | Improve this Doc View Source UniqueNullsNotDistinct(ICreateIndexOptionsSyntax) Index should have unique values, but multiple rows with null values should be accepted. Declaration public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(this ICreateIndexOptionsSyntax expression) Parameters Type Name Description FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax expression The expression to set this option for Returns Type Description FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax The expression"
  },
  "api/FluentMigrator.Runner.html": {
    "href": "api/FluentMigrator.Runner.html",
    "title": "Namespace FluentMigrator.Runner | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner Classes AnnouncerExtensions Extension methods for an IAnnouncer ConnectionlessVersionLoader ConsoleUtilities Console helper methods ConventionSetExtensions Extension methods that work in IMigrationExpression and are using IConventionSet implementations. Db2RunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder DefaultConventionSet DefaultMigrationInformationLoader FirebirdRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder FluentMigratorLoggerOptions Options for the FluentMigratorLogger FluentMigratorLoggingExtensions Extension methods for ILoggerFactory and ILoggingBuilder HanaRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder JetRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder LoggingUtilities Utility functions around logging MaintenanceLoader MigrationRunner The default IMigrationRunner implementation MigrationRunnerBuilderExtensions Extension methods for the IMigrationRunnerBuilder interface MigrationRunnerConventions MigrationScopeHandler MigrationValidator MySqlRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder NoOpMigrationScope A \"no-operation\" migration scope OracleRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder PostgresRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder ProfileLoader The default implementation of the IProfileLoader RedshiftRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder RunnerEventIds The default runner event IDs SqlAnywhereRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder SQLiteRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder SqlServerCeRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder SqlServerRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder StopWatch TrackingMigrationScope A migration scope that encapsulates database changes in a transaction TransactionalMigrationScope A migration scope encapsulating migrations in a transaction VersionLoader Interfaces IAnnouncer IMaintenanceLoader IMigrationInformationLoader IMigrationRunner The migration runner IMigrationRunnerBuilder An interface for configuring migration runner services IMigrationRunnerConventions IMigrationScope A migration scope that encapsulates database changes in a transaction IMigrationScopeStarter Manually start a migration scope IProfileLoader Interface to load migrations tagged with a profile name IStopWatch IVersionLoader Manages the version table and the stored versions Enums CompatabilityMode The old compatibility mode CompatibilityMode Sets the compatibility mode"
  },
  "api/FluentMigrator.Runner.Versioning.html": {
    "href": "api/FluentMigrator.Runner.Versioning.html",
    "title": "Namespace FluentMigrator.Runner.Versioning | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Versioning Classes VersionDescriptionMigration VersionInfo VersionMigration VersionSchemaMigration VersionUniqueMigration Interfaces IVersionInfo Interface to query/update migration information"
  },
  "api/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html": {
    "href": "api/FluentMigrator.Runner.Versioning.VersionUniqueMigration.html",
    "title": "Class VersionUniqueMigration | FluentMigrator documentation",
    "keywords": "Class VersionUniqueMigration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration Implements IMigration Inherited Members ForwardOnlyMigration.Down() Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionUniqueMigration : ForwardOnlyMigration, IMigration Constructors | Improve this Doc View Source VersionUniqueMigration(IVersionTableMetaData) Declaration public VersionUniqueMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html": {
    "href": "api/FluentMigrator.Runner.Versioning.VersionSchemaMigration.html",
    "title": "Class VersionSchemaMigration | FluentMigrator documentation",
    "keywords": "Class VersionSchemaMigration Inheritance Object MigrationBase Migration VersionSchemaMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionSchemaMigration : Migration, IMigration Constructors | Improve this Doc View Source VersionSchemaMigration(IVersionTableMetaData) Declaration public VersionSchemaMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Versioning.VersionMigration.html": {
    "href": "api/FluentMigrator.Runner.Versioning.VersionMigration.html",
    "title": "Class VersionMigration | FluentMigrator documentation",
    "keywords": "Class VersionMigration Inheritance Object MigrationBase Migration VersionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionMigration : Migration, IMigration Constructors | Improve this Doc View Source VersionMigration(IVersionTableMetaData) Declaration public VersionMigration(IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IVersionTableMetaData versionTableMetaData Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Versioning.VersionInfo.html": {
    "href": "api/FluentMigrator.Runner.Versioning.VersionInfo.html",
    "title": "Class VersionInfo | FluentMigrator documentation",
    "keywords": "Class VersionInfo Inheritance Object VersionInfo Implements IVersionInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionInfo : IVersionInfo Methods | Improve this Doc View Source AddAppliedMigration(Int64) Declaration public void AddAppliedMigration(long migration) Parameters Type Name Description Int64 migration | Improve this Doc View Source AppliedMigrations() Declaration public IEnumerable<long> AppliedMigrations() Returns Type Description IEnumerable < Int64 > | Improve this Doc View Source HasAppliedMigration(Int64) Declaration public bool HasAppliedMigration(long migration) Parameters Type Name Description Int64 migration Returns Type Description Boolean | Improve this Doc View Source Latest() Declaration public long Latest() Returns Type Description Int64 Implements IVersionInfo"
  },
  "api/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html": {
    "href": "api/FluentMigrator.Runner.Versioning.VersionDescriptionMigration.html",
    "title": "Class VersionDescriptionMigration | FluentMigrator documentation",
    "keywords": "Class VersionDescriptionMigration Inheritance Object MigrationBase Migration VersionDescriptionMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Versioning Assembly : FluentMigrator.Runner.dll Syntax public class VersionDescriptionMigration : Migration, IMigration Constructors | Improve this Doc View Source VersionDescriptionMigration(IVersionTableMetaData) Declaration public VersionDescriptionMigration(IVersionTableMetaData versionTableMeta) Parameters Type Name Description IVersionTableMetaData versionTableMeta Methods | Improve this Doc View Source Down() Declaration public override void Down() Overrides MigrationBase.Down() | Improve this Doc View Source Up() Declaration public override void Up() Overrides MigrationBase.Up() Implements IMigration"
  },
  "api/FluentMigrator.Runner.Processors.html": {
    "href": "api/FluentMigrator.Runner.Processors.html",
    "title": "Namespace FluentMigrator.Runner.Processors | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors Classes ConnectionlessProcessor ConnectionlessProcessorFactory A processor factory to create SQL statements only (without executing them) DataReaderExtensions DbFactoryBase GenericProcessorBase MigrationProcessorFactory MigrationProcessorFactoryProvider ProcessorBase ProcessorOptions Options for an IMigrationProcessor ReflectionBasedDbFactory ReflectionBasedDbFactory.TestEntry SelectingProcessorAccessor An IProcessorAccessor implementation that selects one generator by name SelectingProcessorAccessorOptions The options for the SelectingProcessorAccessor Interfaces IDbFactory IMigrationProcessorFactory IProcessorAccessor Accesses the selected migration processor"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.html",
    "title": "Namespace FluentMigrator.Runner.Processors.SqlServer | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.SqlServer Classes SqlServer2000Processor SqlServer2000ProcessorFactory SqlServer2005Processor SqlServer2005ProcessorFactory SqlServer2008Processor SqlServer2008ProcessorFactory SqlServer2012Processor SqlServer2012ProcessorFactory SqlServer2014Processor SqlServer2014ProcessorFactory SqlServer2016Processor SqlServer2016ProcessorFactory SqlServerCeDbFactory SqlServerCeProcessor SqlServerCeProcessorFactory SqlServerDbFactory SqlServerProcessor SqlServerProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessorFactory.html",
    "title": "Class SqlServerProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessorFactory Inheritance Object MigrationProcessorFactory SqlServerProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServerProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source SqlServerProcessorFactory() Declaration [Obsolete] public SqlServerProcessorFactory() Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) | Improve this Doc View Source IsForProvider(String) Declaration [Obsolete] public override bool IsForProvider(string provider) Parameters Type Name Description String provider Returns Type Description Boolean Overrides MigrationProcessorFactory.IsForProvider(String) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerProcessor.html",
    "title": "Class SqlServerProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2005Processor SqlServer2008Processor SqlServer2012Processor SqlServer2014Processor SqlServer2016Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServerProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, IMigrationGenerator, IQuoter, ILogger, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServerProcessor([NotNull, ItemNotNull] IEnumerable<string> databaseTypes, [NotNull] IMigrationGenerator generator, [NotNull] IQuoter quoter, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < String > databaseTypes IMigrationGenerator generator IQuoter quoter ILogger logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, DbProviderFactory, IMigrationGenerator, IQuoter, ILogger, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServerProcessor([NotNull, ItemNotNull] IEnumerable<string> databaseTypes, [NotNull] DbProviderFactory factory, [NotNull] IMigrationGenerator generator, [NotNull] IQuoter quoter, [NotNull] ILogger logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IEnumerable < String > databaseTypes DbProviderFactory factory IMigrationGenerator generator IQuoter quoter ILogger logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerProcessor(IEnumerable<String>, IDbConnection, GenericGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServerProcessor(IEnumerable<string> databaseTypes, IDbConnection connection, GenericGenerator generator, IAnnouncer announcer, [NotNull] IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IEnumerable < String > databaseTypes IDbConnection connection GenericGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases | Improve this Doc View Source Quoter Declaration public IQuoter Quoter { get; } Property Value Type Description IQuoter Methods | Improve this Doc View Source BeginTransaction() Declaration public override void BeginTransaction() Overrides GenericProcessorBase.BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source CommitTransaction() Declaration public override void CommitTransaction() Overrides GenericProcessorBase.CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source RollbackTransaction() Declaration public override void RollbackTransaction() Overrides GenericProcessorBase.RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerDbFactory.html",
    "title": "Class SqlServerDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerDbFactory Inheritance Object DbFactoryBase SqlServerDbFactory Implements IDbFactory Inherited Members DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServerDbFactory : DbFactoryBase, IDbFactory Constructors | Improve this Doc View Source SqlServerDbFactory() Declaration public SqlServerDbFactory() Methods | Improve this Doc View Source CreateFactory() Declaration protected override DbProviderFactory CreateFactory() Returns Type Description DbProviderFactory Overrides DbFactoryBase.CreateFactory() Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessorFactory.html",
    "title": "Class SqlServerCeProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessorFactory Inheritance Object MigrationProcessorFactory SqlServerCeProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax [Obsolete] public class SqlServerCeProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source SqlServerCeProcessorFactory() Declaration [Obsolete] public SqlServerCeProcessorFactory() | Improve this Doc View Source SqlServerCeProcessorFactory(IServiceProvider) Declaration public SqlServerCeProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Classes GoSearcher Searches for a \"GO n\" or \"GO\" token GoSearcher.GoSearcherParameters Additional values for the GO token SemicolonSearcher Searches for a semicolon"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.SemicolonSearcher.html",
    "title": "Class SemicolonSearcher | FluentMigrator documentation",
    "keywords": "Class SemicolonSearcher Searches for a semicolon Inheritance Object SemicolonSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SemicolonSearcher : ISpecialTokenSearcher Remarks This special token searcher might be used to separate SQL statements in a batch. Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found Implements ISpecialTokenSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SpecialTokenSearchers.GoSearcher.html",
    "title": "Class GoSearcher | FluentMigrator documentation",
    "keywords": "Class GoSearcher Searches for a \"GO n\" or \"GO\" token Inheritance Object GoSearcher Implements ISpecialTokenSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.SpecialTokenSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class GoSearcher : ISpecialTokenSearcher Methods | Improve this Doc View Source Find(ILineReader) Search for the special token in the given reader Declaration public SpecialTokenInfo Find(ILineReader reader) Parameters Type Name Description ILineReader reader The reader used to search the token Returns Type Description SpecialTokenInfo null when the token couldn't be found | Improve this Doc View Source GetGoCount(String) Declaration public static int? GetGoCount(string sql) Parameters Type Name Description String sql Returns Type Description Nullable < Int32 > Implements ISpecialTokenSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.EndCodeSearchResult.html",
    "title": "Class EndCodeSearchResult | FluentMigrator documentation",
    "keywords": "Class EndCodeSearchResult The result of a FindEndCode(ILineReader) operation Inheritance Object EndCodeSearchResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class EndCodeSearchResult Constructors | Improve this Doc View Source EndCodeSearchResult(Int32) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader where the end code was found | Improve this Doc View Source EndCodeSearchResult(Int32, IRangeSearcher) Initializes a new instance of the EndCodeSearchResult class. Declaration public EndCodeSearchResult(int index, [NotNull] IRangeSearcher nestedRangeSearcher) Parameters Type Name Description Int32 index The index into the ILineReader where the nested start code was found IRangeSearcher nestedRangeSearcher The searcher to be used to find the end of the nested range Properties | Improve this Doc View Source Index Gets the index into the previously tested ILineReader of the end code or nested start code Declaration public int Index { get; } Property Value Type Description Int32 | Improve this Doc View Source IsNestedStart Gets a value indicating whether this is a nested range Declaration public bool IsNestedStart { get; } Property Value Type Description Boolean | Improve this Doc View Source NestedRangeSearcher Gets the searcher to be used to find the end of the nested range Declaration [CanBeNull] public IRangeSearcher NestedRangeSearcher { get; } Property Value Type Description IRangeSearcher Operators | Improve this Doc View Source Implicit(Int32 to EndCodeSearchResult) Operator to convert an index of the end code into a EndCodeSearchResult Declaration public static implicit operator EndCodeSearchResult(int index) Parameters Type Name Description Int32 index The index into the ILineReader of the end code Returns Type Description EndCodeSearchResult"
  },
  "api/FluentMigrator.Runner.Announcers.html": {
    "href": "api/FluentMigrator.Runner.Announcers.html",
    "title": "Namespace FluentMigrator.Runner.Announcers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Announcers Classes Announcer AnnouncerOptions Options for the IAnnouncer CompositeAnnouncer ConsoleAnnouncer LoggerAnnouncer Implementation of IAnnouncer that redirects all log messages to an ILogger NullAnnouncer TextWriterAnnouncer TextWriterAnnouncerOptions TextWriterWithGoAnnouncer"
  },
  "api/FluentMigrator.Runner.Announcers.LoggerAnnouncer.html": {
    "href": "api/FluentMigrator.Runner.Announcers.LoggerAnnouncer.html",
    "title": "Class LoggerAnnouncer | FluentMigrator documentation",
    "keywords": "Class LoggerAnnouncer Implementation of IAnnouncer that redirects all log messages to an ILogger Inheritance Object LoggerAnnouncer Implements IAnnouncer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class LoggerAnnouncer : IAnnouncer Constructors | Improve this Doc View Source LoggerAnnouncer(ILogger, AnnouncerOptions) Initializes a new instance of the LoggerAnnouncer class. Declaration public LoggerAnnouncer([NotNull] ILogger logger, [NotNull] AnnouncerOptions options) Parameters Type Name Description ILogger logger AnnouncerOptions options The announcer options | Improve this Doc View Source LoggerAnnouncer(ILoggerFactory, IOptions<AnnouncerOptions>) Initializes a new instance of the LoggerAnnouncer class. Declaration public LoggerAnnouncer([NotNull] ILoggerFactory loggerFactory, [NotNull] IOptions<AnnouncerOptions> options) Parameters Type Name Description ILoggerFactory loggerFactory The logger factory to create the logger from IOptions < AnnouncerOptions > options The announcer options Methods | Improve this Doc View Source ElapsedTime(TimeSpan) Declaration public void ElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan | Improve this Doc View Source Emphasize(String) Declaration public void Emphasize(string message) Parameters Type Name Description String message | Improve this Doc View Source Error(Exception) Declaration public void Error(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source Error(String) Declaration public void Error(string message) Parameters Type Name Description String message | Improve this Doc View Source Heading(String) Declaration public void Heading(string message) Parameters Type Name Description String message | Improve this Doc View Source Say(String) Declaration public void Say(string message) Parameters Type Name Description String message | Improve this Doc View Source Sql(String) Declaration public void Sql(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Write(String, Boolean) Declaration public void Write(string message, bool isNotSql = true) Parameters Type Name Description String message Boolean isNotSql Implements IAnnouncer Extension Methods AnnouncerExtensions.Heading(IAnnouncer, String, Object[]) AnnouncerExtensions.Say(IAnnouncer, String, Object[]) AnnouncerExtensions.Error(IAnnouncer, String, Object[])"
  },
  "api/FluentMigrator.Runner.Announcers.AnnouncerOptions.html": {
    "href": "api/FluentMigrator.Runner.Announcers.AnnouncerOptions.html",
    "title": "Class AnnouncerOptions | FluentMigrator documentation",
    "keywords": "Class AnnouncerOptions Options for the IAnnouncer Inheritance Object AnnouncerOptions TextWriterAnnouncerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Announcers Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class AnnouncerOptions Fields | Improve this Doc View Source AllEnabled Declaration [Obsolete] public static readonly AnnouncerOptions AllEnabled Field Value Type Description AnnouncerOptions Properties | Improve this Doc View Source ShowElapsedTime Gets or sets a value indicating whether the elapsed time should be shown Declaration public bool ShowElapsedTime { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ShowSql Gets or sets a value indicating whether SQL statements should be shown Declaration public bool ShowSql { get; set; } Property Value Type Description Boolean"
  },
  "api/FluentMigrator.NonUnicodeString.html": {
    "href": "api/FluentMigrator.NonUnicodeString.html",
    "title": "Class NonUnicodeString | FluentMigrator documentation",
    "keywords": "Class NonUnicodeString An explicitly non-Unicode string literal ('some string' in T-SQL) Inheritance Object NonUnicodeString Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class NonUnicodeString Constructors | Improve this Doc View Source NonUnicodeString(String) Used for explicitly creating a non-Unicode string literal in Transact SQL Declaration public NonUnicodeString(string value) Parameters Type Name Description String value The value of the non-Unicode string literal Properties | Improve this Doc View Source Value Gets the value of the non-Unicode string literal Declaration public string Value { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Overrides ToString() to return the value. Declaration public override string ToString() Returns Type Description String The value of the non-Unicode string literal. Overrides Object.ToString()"
  },
  "api/FluentMigrator.Model.html": {
    "href": "api/FluentMigrator.Model.html",
    "title": "Namespace FluentMigrator.Model | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Model Classes ColumnDefinition The column definition ColumnDefinition.UndefinedDefaultValue Instances of this class are used to specify an undefined default value ConstraintDefinition The constraint definition DeletionDataDefinition A list of column name/value pairs used for DELETE conditions ForeignKeyDefinition The foreign key definition IndexColumnDefinition Index column definition IndexDefinition The index definition IndexIncludeDefinition InsertionDataDefinition A list of column name/value pairs used for INSERT data SequenceDefinition The sequence definition Enums ColumnModificationType Indicates wheter a column should be created or altered ConstraintType The constraint type Direction The direction for an index column"
  },
  "api/FluentMigrator.Model.SequenceDefinition.html": {
    "href": "api/FluentMigrator.Model.SequenceDefinition.html",
    "title": "Class SequenceDefinition | FluentMigrator documentation",
    "keywords": "Class SequenceDefinition The sequence definition Inheritance Object SequenceDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class SequenceDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Cache Gets or sets the number of cached sequence values Declaration public virtual long? Cache { get; set; } Property Value Type Description Nullable < Int64 > Remarks Normally used together with Increment . | Improve this Doc View Source Cycle Gets or sets a value indicating whether the sequence should start with MinValue for the next value after MaxValue Declaration public virtual bool Cycle { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Increment Gets or sets the increment of the sequence Declaration public virtual long? Increment { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source MaxValue Gets or sets the maximum value of the sequence (inclusive) Declaration public virtual long? MaxValue { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source MinValue Gets or sets the minimum value of the sequence (inclusive) Declaration public virtual long? MinValue { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source Name Gets or sets the sequence name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SequenceNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source StartWith Gets or sets the start value of the sequence Declaration public virtual long? StartWith { get; set; } Property Value Type Description Nullable < Int64 > Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Implements System.ICloneable ICanBeValidated Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Model.DeletionDataDefinition.html": {
    "href": "api/FluentMigrator.Model.DeletionDataDefinition.html",
    "title": "Class DeletionDataDefinition | FluentMigrator documentation",
    "keywords": "Class DeletionDataDefinition A list of column name/value pairs used for DELETE conditions Inheritance Object List < System.Collections.Generic.KeyValuePair < String , Object >> DeletionDataDefinition Implements IList < System.Collections.Generic.KeyValuePair < String , Object >> ICollection < System.Collections.Generic.KeyValuePair < String , Object >> IReadOnlyList < System.Collections.Generic.KeyValuePair < String , Object >> IReadOnlyCollection < System.Collections.Generic.KeyValuePair < String , Object >> IEnumerable < System.Collections.Generic.KeyValuePair < String , Object >> IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.System.Collections.IList.set_Item(System.Int32, System.Object) List<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.AddRange(IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.AsReadOnly() List<KeyValuePair<String, Object>>.BinarySearch(Int32, Int32, KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.BinarySearch(KeyValuePair<String, Object>, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Clear() List<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.ConvertAll<TOutput>(Converter<KeyValuePair<String, Object>, TOutput>) List<KeyValuePair<String, Object>>.CopyTo(Int32, KeyValuePair<String, Object>[], Int32, Int32) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[]) List<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32) List<KeyValuePair<String, Object>>.Exists(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Find(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLast(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Int32, Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.FindLastIndex(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.ForEach(Action<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.GetRange(Int32, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.IndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Insert(Int32, KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.InsertRange(Int32, IEnumerable<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32) List<KeyValuePair<String, Object>>.LastIndexOf(KeyValuePair<String, Object>, Int32, Int32) List<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>) List<KeyValuePair<String, Object>>.RemoveAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.RemoveAt(Int32) List<KeyValuePair<String, Object>>.RemoveRange(Int32, Int32) List<KeyValuePair<String, Object>>.Reverse() List<KeyValuePair<String, Object>>.Reverse(Int32, Int32) List<KeyValuePair<String, Object>>.Sort() List<KeyValuePair<String, Object>>.Sort(IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Comparison<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Sort(Int32, Int32, IComparer<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator() List<KeyValuePair<String, Object>>.ICollection.CopyTo(Array, Int32) List<KeyValuePair<String, Object>>.IEnumerable.GetEnumerator() List<KeyValuePair<String, Object>>.IList.Add(Object) List<KeyValuePair<String, Object>>.IList.Contains(Object) List<KeyValuePair<String, Object>>.IList.IndexOf(Object) List<KeyValuePair<String, Object>>.IList.Insert(Int32, Object) List<KeyValuePair<String, Object>>.IList.Remove(Object) List<KeyValuePair<String, Object>>.ToArray() List<KeyValuePair<String, Object>>.TrimExcess() List<KeyValuePair<String, Object>>.TrueForAll(Predicate<KeyValuePair<String, Object>>) List<KeyValuePair<String, Object>>.Capacity List<KeyValuePair<String, Object>>.Count List<KeyValuePair<String, Object>>.Item[Int32] List<KeyValuePair<String, Object>>.ICollection<KeyValuePair<String, Object>>.IsReadOnly List<KeyValuePair<String, Object>>.ICollection.IsSynchronized List<KeyValuePair<String, Object>>.ICollection.SyncRoot List<KeyValuePair<String, Object>>.IList.IsFixedSize List<KeyValuePair<String, Object>>.IList.IsReadOnly List<KeyValuePair<String, Object>>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class DeletionDataDefinition : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods CloneExtensions.Clone(IEnumerable<KeyValuePair<String, Object>>) CloneExtensions.CloneTo(IEnumerable<KeyValuePair<String, Object>>, IDictionary<String, Object>)"
  },
  "api/FluentMigrator.Model.ConstraintType.html": {
    "href": "api/FluentMigrator.Model.ConstraintType.html",
    "title": "Enum ConstraintType | FluentMigrator documentation",
    "keywords": "Enum ConstraintType The constraint type Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ConstraintType Fields Name Description PrimaryKey A primary key constraint Unique A unique constraint"
  },
  "api/FluentMigrator.MigrationAttribute.html": {
    "href": "api/FluentMigrator.MigrationAttribute.html",
    "title": "Class MigrationAttribute | FluentMigrator documentation",
    "keywords": "Class MigrationAttribute Attribute for a migration Inheritance Object Attribute MigrationAttribute TimestampedMigrationAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class MigrationAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source MigrationAttribute(Int64, TransactionBehavior, String) Initializes a new instance of the MigrationAttribute class. Declaration public MigrationAttribute(long version, TransactionBehavior transactionBehavior = TransactionBehavior.Default, string description = null) Parameters Type Name Description Int64 version The migration version TransactionBehavior transactionBehavior The desired transaction behavior String description The migration description | Improve this Doc View Source MigrationAttribute(Int64, String) Initializes a new instance of the MigrationAttribute class. Declaration public MigrationAttribute(long version, string description) Parameters Type Name Description Int64 version The migration version String description The migration description Properties | Improve this Doc View Source BreakingChange Gets or sets a value indicating whether the transaction is a breaking change Declaration public bool BreakingChange { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Description Gets the description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source TransactionBehavior Gets the desired transaction behavior Declaration public TransactionBehavior TransactionBehavior { get; } Property Value Type Description TransactionBehavior | Improve this Doc View Source Version Gets the migration version Declaration public long Version { get; } Property Value Type Description Int64 Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.Runner.RedshiftRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.RedshiftRunnerBuilderExtensions.html",
    "title": "Class RedshiftRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class RedshiftRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object RedshiftRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Redshift.dll Syntax public static class RedshiftRunnerBuilderExtensions Methods | Improve this Doc View Source AddRedshift(IMigrationRunnerBuilder) Adds Redshift support Declaration public static IMigrationRunnerBuilder AddRedshift(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the Redshift-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.ProfileLoader.html": {
    "href": "api/FluentMigrator.Runner.ProfileLoader.html",
    "title": "Class ProfileLoader | FluentMigrator documentation",
    "keywords": "Class ProfileLoader The default implementation of the IProfileLoader Inheritance Object ProfileLoader Implements IProfileLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ProfileLoader : IProfileLoader Constructors | Improve this Doc View Source ProfileLoader(IRunnerContext, IMigrationRunner, IMigrationRunnerConventions) Initializes a new instance of the ProfileLoader class. Declaration [Obsolete] public ProfileLoader(IRunnerContext runnerContext, IMigrationRunner runner, IMigrationRunnerConventions conventions) Parameters Type Name Description IRunnerContext runnerContext The migration runner context IMigrationRunner runner The migration runner IMigrationRunnerConventions conventions The migration runner conventions | Improve this Doc View Source ProfileLoader(IOptions<RunnerOptions>, IProfileSource, IServiceProvider) Initializes a new instance of the ProfileLoader class. Declaration public ProfileLoader([NotNull] IOptions<RunnerOptions> options, [NotNull] IProfileSource source, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description IOptions < RunnerOptions > options The runner options IProfileSource source The profile source IServiceProvider serviceProvider The service provider Properties | Improve this Doc View Source Profiles Gets all found profiles Declaration public IEnumerable<IMigration> Profiles { get; } Property Value Type Description IEnumerable < IMigration > | Improve this Doc View Source SupportsParameterlessApplyProfile Gets a value indicating whether this instance allows a call to ApplyProfiles() Declaration [Obsolete] public bool SupportsParameterlessApplyProfile { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ApplyProfiles() Apply all loaded profiles Declaration [Obsolete] public void ApplyProfiles() | Improve this Doc View Source ApplyProfiles(IMigrationRunner) Apply all loaded profiles with the given runner Declaration public void ApplyProfiles(IMigrationRunner runner) Parameters Type Name Description IMigrationRunner runner The migration ruinner | Improve this Doc View Source FindProfilesIn(IAssemblyCollection, String) Find all profile name tagged migrations in the given assembly collection Declaration [Obsolete] public IEnumerable<IMigration> FindProfilesIn(IAssemblyCollection assemblies, string profile) Parameters Type Name Description IAssemblyCollection assemblies The assemblies to load the profile tagged migrations from String profile The profile name to search the migrations for Returns Type Description IEnumerable < IMigration > The found migrations Implements IProfileLoader"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2005ProcessorFactory.html",
    "title": "Class SqlServer2005ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2005ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2005ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2005ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerProvider.html": {
    "href": "api/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerProvider.html",
    "title": "Class SqlScriptFluentMigratorLoggerProvider | FluentMigrator documentation",
    "keywords": "Class SqlScriptFluentMigratorLoggerProvider The base class for writing SQL scripts produced by the IMigrationGenerator implementations Inheritance Object SqlScriptFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Implements ILoggerProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlScriptFluentMigratorLoggerProvider : ILoggerProvider, IDisposable Constructors | Improve this Doc View Source SqlScriptFluentMigratorLoggerProvider(TextWriter, SqlScriptFluentMigratorLoggerOptions, Boolean) Initializes a new instance of the SqlScriptFluentMigratorLoggerProvider class. Declaration public SqlScriptFluentMigratorLoggerProvider(TextWriter output, SqlScriptFluentMigratorLoggerOptions options = null, bool disposeWriter = true) Parameters Type Name Description TextWriter output The writer to write the SQL script to SqlScriptFluentMigratorLoggerOptions options The log file logger options Boolean disposeWriter A value indicating whether the output writer should be disposed by this logger provider Methods | Improve this Doc View Source CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Returns Type Description ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements Microsoft.Extensions.Logging.ILoggerProvider System.IDisposable"
  },
  "api/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerOptions.html": {
    "href": "api/FluentMigrator.Runner.Logging.SqlScriptFluentMigratorLoggerOptions.html",
    "title": "Class SqlScriptFluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class SqlScriptFluentMigratorLoggerOptions The configuration for a SqlScriptFluentMigratorLoggerProvider Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions LogFileFluentMigratorLoggerOptions Inherited Members FluentMigratorLoggerOptions.ShowSql FluentMigratorLoggerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlScriptFluentMigratorLoggerOptions : FluentMigratorLoggerOptions Constructors | Improve this Doc View Source SqlScriptFluentMigratorLoggerOptions() Initializes a new instance of the SqlScriptFluentMigratorLoggerOptions class. Declaration public SqlScriptFluentMigratorLoggerOptions() Properties | Improve this Doc View Source OutputGoBetweenStatements Gets or sets a value indicating whether a GO statement should be output between the SQL statements Declaration public bool OutputGoBetweenStatements { get; set; } Property Value Type Description Boolean"
  },
  "api/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerProvider.html": {
    "href": "api/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerProvider.html",
    "title": "Class LogFileFluentMigratorLoggerProvider | FluentMigrator documentation",
    "keywords": "Class LogFileFluentMigratorLoggerProvider Outputs the SQL statements to a log file Inheritance Object SqlScriptFluentMigratorLoggerProvider LogFileFluentMigratorLoggerProvider Implements ILoggerProvider IDisposable Inherited Members SqlScriptFluentMigratorLoggerProvider.CreateLogger(String) SqlScriptFluentMigratorLoggerProvider.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class LogFileFluentMigratorLoggerProvider : SqlScriptFluentMigratorLoggerProvider, ILoggerProvider, IDisposable Constructors | Improve this Doc View Source LogFileFluentMigratorLoggerProvider(IAssemblySource, IOptions<LogFileFluentMigratorLoggerOptions>) Initializes a new instance of the LogFileFluentMigratorLoggerProvider class. Declaration public LogFileFluentMigratorLoggerProvider(IAssemblySource assemblySource, IOptions<LogFileFluentMigratorLoggerOptions> options) Parameters Type Name Description IAssemblySource assemblySource The assembly source IOptions < LogFileFluentMigratorLoggerOptions > options The log file logger options Implements Microsoft.Extensions.Logging.ILoggerProvider System.IDisposable"
  },
  "api/FluentMigrator.Runner.Logging.FluentMigratorLogger.html": {
    "href": "api/FluentMigrator.Runner.Logging.FluentMigratorLogger.html",
    "title": "Class FluentMigratorLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorLogger The base class for FluentMigrator-style ILogger implementations Inheritance Object FluentMigratorLogger AnnouncerFluentMigratorLogger FluentMigratorRunnerLogger Implements ILogger Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class FluentMigratorLogger : ILogger Constructors | Improve this Doc View Source FluentMigratorLogger(FluentMigratorLoggerOptions) Initializes a new instance of the FluentMigratorLogger class. Declaration protected FluentMigratorLogger(FluentMigratorLoggerOptions options) Parameters Type Name Description FluentMigratorLoggerOptions options The logger options Methods | Improve this Doc View Source BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState | Improve this Doc View Source IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel Returns Type Description Boolean | Improve this Doc View Source Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description LogLevel logLevel EventId eventId TState state Exception exception Func <TState, Exception , String > formatter Type Parameters Name Description TState | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected abstract void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected abstract void WriteEmphasize(string message) Parameters Type Name Description String message The message to write | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected abstract void WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected abstract void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected abstract void WriteError(string message) Parameters Type Name Description String message The error message | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected abstract void WriteHeading(string message) Parameters Type Name Description String message The heading message | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected abstract void WriteSay(string message) Parameters Type Name Description String message The message | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected abstract void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Implements Microsoft.Extensions.Logging.ILogger Extension Methods LoggingUtilities.LogElapsedTime(ILogger, TimeSpan) LoggingUtilities.LogEmphasized(ILogger, String) LoggingUtilities.LogHeader(ILogger, String) LoggingUtilities.LogSql(ILogger, String) LoggingUtilities.LogSay(ILogger, String)"
  },
  "api/FluentMigrator.Runner.Logging.FluentMigratorConsoleLoggerProvider.html": {
    "href": "api/FluentMigrator.Runner.Logging.FluentMigratorConsoleLoggerProvider.html",
    "title": "Class FluentMigratorConsoleLoggerProvider | FluentMigrator documentation",
    "keywords": "Class FluentMigratorConsoleLoggerProvider The default FluentMigrator console output Inheritance Object FluentMigratorConsoleLoggerProvider Implements ILoggerProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public class FluentMigratorConsoleLoggerProvider : ILoggerProvider, IDisposable Constructors | Improve this Doc View Source FluentMigratorConsoleLoggerProvider(IOptions<FluentMigratorLoggerOptions>) Initializes a new instance of the FluentMigratorConsoleLoggerProvider class. Declaration public FluentMigratorConsoleLoggerProvider(IOptions<FluentMigratorLoggerOptions> options) Parameters Type Name Description IOptions < FluentMigratorLoggerOptions > options The logger options Methods | Improve this Doc View Source CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Returns Type Description ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements Microsoft.Extensions.Logging.ILoggerProvider System.IDisposable"
  },
  "api/FluentMigrator.Runner.Logging.FluentMigratorConsoleLogger.html": {
    "href": "api/FluentMigrator.Runner.Logging.FluentMigratorConsoleLogger.html",
    "title": "Class FluentMigratorConsoleLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorConsoleLogger The default fluent migrator console logger Inheritance Object FluentMigratorLogger FluentMigratorRunnerLogger FluentMigratorConsoleLogger Implements ILogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.dll Syntax public class FluentMigratorConsoleLogger : FluentMigratorRunnerLogger, ILogger Constructors | Improve this Doc View Source FluentMigratorConsoleLogger(FluentMigratorLoggerOptions) Initializes a new instance of the FluentMigratorConsoleLogger class. Declaration public FluentMigratorConsoleLogger(FluentMigratorLoggerOptions options) Parameters Type Name Description FluentMigratorLoggerOptions options The logger options Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorRunnerLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorRunnerLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorRunnerLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorRunnerLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorRunnerLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorRunnerLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorRunnerLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorRunnerLogger.WriteSql(String) Implements Microsoft.Extensions.Logging.ILogger Extension Methods LoggingUtilities.LogElapsedTime(ILogger, TimeSpan) LoggingUtilities.LogEmphasized(ILogger, String) LoggingUtilities.LogHeader(ILogger, String) LoggingUtilities.LogSql(ILogger, String) LoggingUtilities.LogSay(ILogger, String)"
  },
  "api/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html": {
    "href": "api/FluentMigrator.Runner.Initialization.DefaultConnectionStringProvider.html",
    "title": "Class DefaultConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Class DefaultConnectionStringProvider Inheritance Object DefaultConnectionStringProvider Implements IConnectionStringProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class DefaultConnectionStringProvider : IConnectionStringProvider Constructors | Improve this Doc View Source DefaultConnectionStringProvider() Declaration [Obsolete] public DefaultConnectionStringProvider() | Improve this Doc View Source DefaultConnectionStringProvider(IEnumerable<IConnectionStringReader>) Declaration public DefaultConnectionStringProvider([NotNull, ItemNotNull] IEnumerable<IConnectionStringReader> accessors) Parameters Type Name Description IEnumerable < IConnectionStringReader > accessors Methods | Improve this Doc View Source GetConnectionString(IAnnouncer, String, String, String, String) Declaration public string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String Implements IConnectionStringProvider"
  },
  "api/FluentMigrator.Runner.Initialization.ConnectionStringAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.ConnectionStringAccessor.html",
    "title": "Class ConnectionStringAccessor | FluentMigrator documentation",
    "keywords": "Class ConnectionStringAccessor Default implementation of IConnectionStringAccessor Inheritance Object ConnectionStringAccessor Implements IConnectionStringAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConnectionStringAccessor : IConnectionStringAccessor Constructors | Improve this Doc View Source ConnectionStringAccessor(IOptions<ProcessorOptions>, IEnumerable<IConnectionStringReader>) Declaration public ConnectionStringAccessor(IOptions<ProcessorOptions> processorOptions, IEnumerable<IConnectionStringReader> readers) Parameters Type Name Description IOptions < ProcessorOptions > processorOptions IEnumerable < IConnectionStringReader > readers Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration public string ConnectionString { get; } Property Value Type Description String Implements IConnectionStringAccessor"
  },
  "api/FluentMigrator.Runner.Initialization.ConfigurationConnectionStringReader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.ConfigurationConnectionStringReader.html",
    "title": "Class ConfigurationConnectionStringReader | FluentMigrator documentation",
    "keywords": "Class ConfigurationConnectionStringReader Inheritance Object ConfigurationConnectionStringReader Implements IConnectionStringReader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class ConfigurationConnectionStringReader : IConnectionStringReader Constructors | Improve this Doc View Source ConfigurationConnectionStringReader(IServiceProvider) Initializes a new instance of the ConfigurationConnectionStringReader class. Declaration public ConfigurationConnectionStringReader(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider to get the configuration interface from Properties | Improve this Doc View Source Priority Gets the priority Declaration public int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration public string GetConnectionString(string connectionStringName) Parameters Type Name Description String connectionStringName Returns Type Description String Implements IConnectionStringReader"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblySourceItem.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblySourceItem.html",
    "title": "Class AssemblySourceItem | FluentMigrator documentation",
    "keywords": "Class AssemblySourceItem The default implementation of an IAssemblySourceItem Inheritance Object AssemblySourceItem Implements IAssemblySourceItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceItem : IAssemblySourceItem Constructors | Improve this Doc View Source AssemblySourceItem(Assembly[]) Initializes a new instance of the AssemblySourceItem class. Declaration public AssemblySourceItem(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to be returned by Assemblies Properties | Improve this Doc View Source Assemblies Gets all assemblies covered by this item Declaration public IEnumerable<Assembly> Assemblies { get; } Property Value Type Description IEnumerable < Assembly > Implements IAssemblySourceItem"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblySource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblySource.html",
    "title": "Class AssemblySource | FluentMigrator documentation",
    "keywords": "Class AssemblySource Provides access to delay-loaded assemblies Inheritance Object AssemblySource Implements IAssemblySource Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySource : IAssemblySource Constructors | Improve this Doc View Source AssemblySource(IOptions<AssemblySourceOptions>, IEnumerable<IAssemblyLoadEngine>, IEnumerable<IAssemblySourceItem>) Initializes a new instance of the AssemblySource class. Declaration public AssemblySource(IOptions<AssemblySourceOptions> options, IEnumerable<IAssemblyLoadEngine> loadEngines, IEnumerable<IAssemblySourceItem> sourceItems) Parameters Type Name Description IOptions < AssemblySourceOptions > options The options IEnumerable < IAssemblyLoadEngine > loadEngines The assembly load engines IEnumerable < IAssemblySourceItem > sourceItems The additional source items | Improve this Doc View Source AssemblySource(Func<IAssemblyCollection>) Initializes a new instance of the AssemblySource class. Declaration [Obsolete] public AssemblySource(Func<IAssemblyCollection> assemblyCollectionFunc) Parameters Type Name Description Func < IAssemblyCollection > assemblyCollectionFunc Function to get the assembly collection Properties | Improve this Doc View Source Assemblies Gets the assemblies Declaration public IReadOnlyCollection<Assembly> Assemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > Implements IAssemblySource"
  },
  "api/FluentMigrator.Runner.IMigrationScope.html": {
    "href": "api/FluentMigrator.Runner.IMigrationScope.html",
    "title": "Interface IMigrationScope | FluentMigrator documentation",
    "keywords": "Interface IMigrationScope A migration scope that encapsulates database changes in a transaction Inherited Members IDisposable.Dispose() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public interface IMigrationScope : IDisposable Properties | Improve this Doc View Source IsActive Gets a value indicating whether the migration scope is active? Declaration bool IsActive { get; } Property Value Type Description Boolean Remarks A migration scope is considered active when it is the outmost scope. Methods | Improve this Doc View Source Cancel() Marks the scope as cancelled. Declaration void Cancel() Remarks This usually involves the rollback of a transaction. | Improve this Doc View Source Complete() Marks the scope as complete. Declaration void Complete() Remarks This usually involves the commit a transaction."
  },
  "api/FluentMigrator.Runner.IMigrationRunnerConventions.html": {
    "href": "api/FluentMigrator.Runner.IMigrationRunnerConventions.html",
    "title": "Interface IMigrationRunnerConventions | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerConventions Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerConventions Properties | Improve this Doc View Source GetMaintenanceStage Declaration Func<Type, MigrationStage? > GetMaintenanceStage { get; } Property Value Type Description Func < Type , Nullable < MigrationStage >> | Improve this Doc View Source GetMigrationInfo Declaration [Obsolete] Func<Type, IMigrationInfo> GetMigrationInfo { get; } Property Value Type Description Func < Type , IMigrationInfo > | Improve this Doc View Source GetMigrationInfoForMigration Create an IMigrationInfo instance for a given IMigration Declaration Func<IMigration, IMigrationInfo> GetMigrationInfoForMigration { get; } Property Value Type Description Func < IMigration , IMigrationInfo > | Improve this Doc View Source TypeHasMatchingTags Declaration Func<Type, IEnumerable<string>, bool> TypeHasMatchingTags { get; } Property Value Type Description Func < Type , IEnumerable < String >, Boolean > | Improve this Doc View Source TypeHasTags Declaration Func<Type, bool> TypeHasTags { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsMigration Declaration Func<Type, bool> TypeIsMigration { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsProfile Declaration Func<Type, bool> TypeIsProfile { get; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source TypeIsVersionTableMetaData Declaration Func<Type, bool> TypeIsVersionTableMetaData { get; } Property Value Type Description Func < Type , Boolean >"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServerCeGenerator.html",
    "title": "Class SqlServerCeGenerator | FluentMigrator documentation",
    "keywords": "Class SqlServerCeGenerator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServerCeGenerator Implements IMigrationGenerator Inherited Members SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.DropIndex SqlServer2000Generator.AddColumn SqlServer2000Generator.IdentityInsert SqlServer2000Generator.CreateConstraint SqlServer2000Generator.Generate(CreateConstraintExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) SqlServer2000Generator.IsAdditionalFeatureSupported(String) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeGenerator : SqlServer2000Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServerCeGenerator() Declaration public SqlServerCeGenerator() | Improve this Doc View Source SqlServerCeGenerator(SqlServer2000Quoter) Declaration public SqlServerCeGenerator(SqlServer2000Quoter quoter) Parameters Type Name Description SqlServer2000Quoter quoter | Improve this Doc View Source SqlServerCeGenerator(SqlServer2000Quoter, IOptions<GeneratorOptions>) Declaration public SqlServerCeGenerator([NotNull] SqlServer2000Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2000Quoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source InsertData Declaration public override string InsertData { get; } Property Value Type Description String Overrides GenericGenerator.InsertData Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides SqlServer2000Generator.Generate(RenameTableExpression) | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String Overrides SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected override string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String Overrides SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html": {
    "href": "api/FluentMigrator.Runner.Generators.MigrationGeneratorFactory.html",
    "title": "Class MigrationGeneratorFactory | FluentMigrator documentation",
    "keywords": "Class MigrationGeneratorFactory Inheritance Object MigrationGeneratorFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.dll Syntax [Obsolete] public class MigrationGeneratorFactory Constructors | Improve this Doc View Source MigrationGeneratorFactory() Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public MigrationGeneratorFactory() Properties | Improve this Doc View Source RegisteredGenerators Declaration public static IEnumerable<IMigrationGenerator> RegisteredGenerators { get; } Property Value Type Description IEnumerable < IMigrationGenerator > Methods | Improve this Doc View Source GetGenerator(String) Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public virtual IMigrationGenerator GetGenerator(string name) Parameters Type Name Description String name Returns Type Description IMigrationGenerator | Improve this Doc View Source ListAvailableGeneratorTypes() Declaration [Obsolete(\"Ony the statically provided generators are accessed\")] public string ListAvailableGeneratorTypes() Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Generators.Jet.html": {
    "href": "api/FluentMigrator.Runner.Generators.Jet.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Jet | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Jet Classes JetGenerator JetQuoter"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeProcessor.html",
    "title": "Class SqlServerCeProcessor | FluentMigrator documentation",
    "keywords": "Class SqlServerCeProcessor Inheritance Object ProcessorBase GenericProcessorBase SqlServerCeProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public sealed class SqlServerCeProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServerCeProcessor(SqlServerCeDbFactory, SqlServerCeGenerator, ILogger<SqlServerCeProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServerCeProcessor([NotNull] SqlServerCeDbFactory factory, [NotNull] SqlServerCeGenerator generator, [NotNull] ILogger<SqlServerCeProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description SqlServerCeDbFactory factory SqlServerCeGenerator generator ILogger < SqlServerCeProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServerCeProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public SqlServerCeProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction) Declaration protected override IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction Returns Type Description IDbCommand Overrides GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServerCeDbFactory.html",
    "title": "Class SqlServerCeDbFactory | FluentMigrator documentation",
    "keywords": "Class SqlServerCeDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory SqlServerCeDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServerCe.dll Syntax public class SqlServerCeDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source SqlServerCeDbFactory() Declaration [Obsolete] public SqlServerCeDbFactory() | Improve this Doc View Source SqlServerCeDbFactory(IServiceProvider) Declaration public SqlServerCeDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Declaration [Obsolete] public override IDbCommand CreateCommand(string commandText, IDbConnection connection, IDbTransaction transaction, IMigrationProcessorOptions options) Parameters Type Name Description String commandText IDbConnection connection IDbTransaction transaction IMigrationProcessorOptions options Returns Type Description IDbCommand Overrides DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016ProcessorFactory.html",
    "title": "Class SqlServer2016ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2016ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2016ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2016ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2014Processor.html",
    "title": "Class SqlServer2014Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2014Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2014Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2014Processor : SqlServerProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2014Processor(ILogger<SqlServer2014Processor>, SqlServer2008Quoter, SqlServer2014Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2014Processor([NotNull] ILogger<SqlServer2014Processor> logger, [NotNull] SqlServer2008Quoter quoter, [NotNull] SqlServer2014Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2014Processor > logger SqlServer2008Quoter quoter SqlServer2014Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2012ProcessorFactory.html",
    "title": "Class SqlServer2012ProcessorFactory | FluentMigrator documentation",
    "keywords": "Class SqlServer2012ProcessorFactory Inheritance Object MigrationProcessorFactory SqlServer2012ProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax [Obsolete] public class SqlServer2012ProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2008Processor.html",
    "title": "Class SqlServer2008Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2008Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Processor : SqlServerProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2008Processor(ILogger<SqlServer2008Processor>, SqlServer2008Quoter, SqlServer2008Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2008Processor([NotNull] ILogger<SqlServer2008Processor> logger, [NotNull] SqlServer2008Quoter quoter, [NotNull] SqlServer2008Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2008Processor > logger SqlServer2008Quoter quoter SqlServer2008Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html": {
    "href": "api/FluentMigrator.Runner.Processors.ReflectionBasedDbFactory.TestEntry.html",
    "title": "Class ReflectionBasedDbFactory.TestEntry | FluentMigrator documentation",
    "keywords": "Class ReflectionBasedDbFactory.TestEntry Inheritance Object ReflectionBasedDbFactory.TestEntry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax protected class TestEntry Constructors | Improve this Doc View Source TestEntry(String, String) Declaration public TestEntry([NotNull] string assemblyName, [NotNull] string dbProviderFactoryTypeName) Parameters Type Name Description String assemblyName String dbProviderFactoryTypeName Properties | Improve this Doc View Source AssemblyName Declaration [NotNull] public string AssemblyName { get; } Property Value Type Description String | Improve this Doc View Source DBProviderFactoryTypeName Declaration [NotNull] public string DBProviderFactoryTypeName { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Processors.Redshift.html": {
    "href": "api/FluentMigrator.Runner.Processors.Redshift.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Redshift | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Redshift Classes RedshiftDbFactory RedshiftProcessor RedshiftProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Redshift.RedshiftProcessorFactory.html",
    "title": "Class RedshiftProcessorFactory | FluentMigrator documentation",
    "keywords": "Class RedshiftProcessorFactory Inheritance Object MigrationProcessorFactory RedshiftProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Redshift Assembly : FluentMigrator.Runner.Redshift.dll Syntax [Obsolete] public class RedshiftProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source RedshiftProcessorFactory() Declaration [Obsolete] public RedshiftProcessorFactory() | Improve this Doc View Source RedshiftProcessorFactory(IServiceProvider) Declaration public RedshiftProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.ProcessorBase.html": {
    "href": "api/FluentMigrator.Runner.Processors.ProcessorBase.html",
    "title": "Class ProcessorBase | FluentMigrator documentation",
    "keywords": "Class ProcessorBase Inheritance Object ProcessorBase GenericProcessorBase JetProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors Assembly : FluentMigrator.Runner.Core.dll Syntax public abstract class ProcessorBase : IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source ProcessorBase(IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] protected ProcessorBase(IMigrationGenerator generator, IAnnouncer announcer, [NotNull] IMigrationProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options | Improve this Doc View Source ProcessorBase(IMigrationGenerator, IAnnouncer, ProcessorOptions) Declaration [Obsolete] protected ProcessorBase([NotNull] IMigrationGenerator generator, [NotNull] IAnnouncer announcer, [NotNull] ProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator IAnnouncer announcer ProcessorOptions options | Improve this Doc View Source ProcessorBase(IMigrationGenerator, ILogger, ProcessorOptions) Declaration protected ProcessorBase([NotNull] IMigrationGenerator generator, [NotNull] ILogger logger, [NotNull] ProcessorOptions options) Parameters Type Name Description IMigrationGenerator generator ILogger logger ProcessorOptions options Fields | Improve this Doc View Source Announcer Declaration [Obsolete] protected readonly IAnnouncer Announcer Field Value Type Description IAnnouncer | Improve this Doc View Source Generator Declaration protected readonly IMigrationGenerator Generator Field Value Type Description IMigrationGenerator Properties | Improve this Doc View Source ConnectionString Declaration [Obsolete] public abstract string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source DatabaseType Declaration public abstract string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Declaration public abstract IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > | Improve this Doc View Source Logger Declaration protected ILogger Logger { get; } Property Value Type Description ILogger | Improve this Doc View Source Options Declaration [NotNull] protected ProcessorOptions Options { get; } Property Value Type Description ProcessorOptions | Improve this Doc View Source WasCommitted Declaration public bool WasCommitted { get; protected set; } Property Value Type Description Boolean Methods | Improve this Doc View Source BeginTransaction() Declaration public virtual void BeginTransaction() | Improve this Doc View Source ColumnExists(String, String, String) Declaration public abstract bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean | Improve this Doc View Source CommitTransaction() Declaration public virtual void CommitTransaction() | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public abstract bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public abstract bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected abstract void Dispose(bool isDisposing) Parameters Type Name Description Boolean isDisposing | Improve this Doc View Source Execute(String) Execute an SQL statement (escaping not needed) Declaration public virtual void Execute(string sql) Parameters Type Name Description String sql The SQL statement | Improve this Doc View Source Execute(String, Object[]) Declaration public abstract void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args | Improve this Doc View Source Exists(String, Object[]) Declaration public abstract bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean | Improve this Doc View Source IndexExists(String, String, String) Declaration public abstract bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean | Improve this Doc View Source Process(AlterColumnExpression) Declaration public virtual void Process(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression | Improve this Doc View Source Process(AlterDefaultConstraintExpression) Declaration public virtual void Process(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression | Improve this Doc View Source Process(AlterSchemaExpression) Declaration public virtual void Process(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression | Improve this Doc View Source Process(AlterTableExpression) Declaration public virtual void Process(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression | Improve this Doc View Source Process(CreateColumnExpression) Declaration public virtual void Process(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression | Improve this Doc View Source Process(CreateConstraintExpression) Declaration public virtual void Process(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression | Improve this Doc View Source Process(CreateForeignKeyExpression) Declaration public virtual void Process(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression | Improve this Doc View Source Process(CreateIndexExpression) Declaration public virtual void Process(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression | Improve this Doc View Source Process(CreateSchemaExpression) Declaration public virtual void Process(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression | Improve this Doc View Source Process(CreateSequenceExpression) Declaration public virtual void Process(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression | Improve this Doc View Source Process(CreateTableExpression) Declaration public virtual void Process(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression | Improve this Doc View Source Process(DeleteColumnExpression) Declaration public virtual void Process(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression | Improve this Doc View Source Process(DeleteConstraintExpression) Declaration public virtual void Process(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression | Improve this Doc View Source Process(DeleteDataExpression) Declaration public virtual void Process(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression | Improve this Doc View Source Process(DeleteDefaultConstraintExpression) Declaration public virtual void Process(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression | Improve this Doc View Source Process(DeleteForeignKeyExpression) Declaration public virtual void Process(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression | Improve this Doc View Source Process(DeleteIndexExpression) Declaration public virtual void Process(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression | Improve this Doc View Source Process(DeleteSchemaExpression) Declaration public virtual void Process(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression | Improve this Doc View Source Process(DeleteSequenceExpression) Declaration public virtual void Process(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression | Improve this Doc View Source Process(DeleteTableExpression) Declaration public virtual void Process(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression | Improve this Doc View Source Process(InsertDataExpression) Declaration public virtual void Process(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public abstract void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression | Improve this Doc View Source Process(RenameColumnExpression) Declaration public virtual void Process(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression | Improve this Doc View Source Process(RenameTableExpression) Declaration public virtual void Process(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression | Improve this Doc View Source Process(UpdateDataExpression) Declaration public virtual void Process(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression | Improve this Doc View Source Process(String) Declaration protected abstract void Process(string sql) Parameters Type Name Description String sql | Improve this Doc View Source Read(String, Object[]) Declaration public abstract DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet | Improve this Doc View Source ReadTableData(String, String) Declaration public abstract DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet | Improve this Doc View Source RollbackTransaction() Declaration public virtual void RollbackTransaction() | Improve this Doc View Source SchemaExists(String) Declaration public abstract bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean | Improve this Doc View Source SequenceExists(String, String) Declaration public abstract bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean | Improve this Doc View Source TableExists(String, String) Declaration public abstract bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IMigrationProcessor.Options Declaration [Obsolete] IMigrationProcessorOptions IMigrationProcessor.Options { get; } Returns Type Description IMigrationProcessorOptions Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Postgres.html": {
    "href": "api/FluentMigrator.Runner.Processors.Postgres.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Postgres | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Postgres Classes PostgresDbFactory PostgresProcessor PostgresProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Postgres.PostgresProcessorFactory.html",
    "title": "Class PostgresProcessorFactory | FluentMigrator documentation",
    "keywords": "Class PostgresProcessorFactory Inheritance Object MigrationProcessorFactory PostgresProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax [Obsolete] public class PostgresProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source PostgresProcessorFactory() Declaration [Obsolete] public PostgresProcessorFactory() | Improve this Doc View Source PostgresProcessorFactory(IServiceProvider) Declaration public PostgresProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html": {
    "href": "api/FluentMigrator.Runner.Processors.Postgres.PostgresProcessor.html",
    "title": "Class PostgresProcessor | FluentMigrator documentation",
    "keywords": "Class PostgresProcessor Inheritance Object ProcessorBase GenericProcessorBase PostgresProcessor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.BeginTransaction() GenericProcessorBase.RollbackTransaction() GenericProcessorBase.CommitTransaction() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresProcessor : GenericProcessorBase, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source PostgresProcessor(PostgresDbFactory, PostgresGenerator, ILogger<PostgresProcessor>, IOptions<ProcessorOptions>, IConnectionStringAccessor) Declaration public PostgresProcessor([NotNull] PostgresDbFactory factory, [NotNull] PostgresGenerator generator, [NotNull] ILogger<PostgresProcessor> logger, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor) Parameters Type Name Description PostgresDbFactory factory PostgresGenerator generator ILogger < PostgresProcessor > logger IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor | Improve this Doc View Source PostgresProcessor(IDbConnection, IMigrationGenerator, IAnnouncer, IMigrationProcessorOptions, IDbFactory) Declaration [Obsolete] public PostgresProcessor(IDbConnection connection, IMigrationGenerator generator, IAnnouncer announcer, IMigrationProcessorOptions options, IDbFactory factory) Parameters Type Name Description IDbConnection connection IMigrationGenerator generator IAnnouncer announcer IMigrationProcessorOptions options IDbFactory factory Properties | Improve this Doc View Source DatabaseType Declaration public override string DatabaseType { get; } Property Value Type Description String Overrides ProcessorBase.DatabaseType | Improve this Doc View Source DatabaseTypeAliases Declaration public override IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Overrides ProcessorBase.DatabaseTypeAliases Methods | Improve this Doc View Source ColumnExists(String, String, String) Declaration public override bool ColumnExists(string schemaName, string tableName, string columnName) Parameters Type Name Description String schemaName String tableName String columnName Returns Type Description Boolean Overrides ProcessorBase.ColumnExists(String, String, String) | Improve this Doc View Source ConstraintExists(String, String, String) Declaration public override bool ConstraintExists(string schemaName, string tableName, string constraintName) Parameters Type Name Description String schemaName String tableName String constraintName Returns Type Description Boolean Overrides ProcessorBase.ConstraintExists(String, String, String) | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Declaration public override bool DefaultValueExists(string schemaName, string tableName, string columnName, object defaultValue) Parameters Type Name Description String schemaName String tableName String columnName Object defaultValue Returns Type Description Boolean Overrides ProcessorBase.DefaultValueExists(String, String, String, Object) | Improve this Doc View Source Execute(String, Object[]) Declaration public override void Execute(string template, params object[] args) Parameters Type Name Description String template Object [] args Overrides ProcessorBase.Execute(String, Object[]) | Improve this Doc View Source Exists(String, Object[]) Declaration public override bool Exists(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description Boolean Overrides ProcessorBase.Exists(String, Object[]) | Improve this Doc View Source IndexExists(String, String, String) Declaration public override bool IndexExists(string schemaName, string tableName, string indexName) Parameters Type Name Description String schemaName String tableName String indexName Returns Type Description Boolean Overrides ProcessorBase.IndexExists(String, String, String) | Improve this Doc View Source Process(PerformDBOperationExpression) Declaration public override void Process(PerformDBOperationExpression expression) Parameters Type Name Description PerformDBOperationExpression expression Overrides ProcessorBase.Process(PerformDBOperationExpression) | Improve this Doc View Source Process(String) Declaration protected override void Process(string sql) Parameters Type Name Description String sql Overrides ProcessorBase.Process(String) | Improve this Doc View Source Read(String, Object[]) Declaration public override DataSet Read(string template, params object[] args) Parameters Type Name Description String template Object [] args Returns Type Description DataSet Overrides ProcessorBase.Read(String, Object[]) | Improve this Doc View Source ReadTableData(String, String) Declaration public override DataSet ReadTableData(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description DataSet Overrides ProcessorBase.ReadTableData(String, String) | Improve this Doc View Source SchemaExists(String) Declaration public override bool SchemaExists(string schemaName) Parameters Type Name Description String schemaName Returns Type Description Boolean Overrides ProcessorBase.SchemaExists(String) | Improve this Doc View Source SequenceExists(String, String) Declaration public override bool SequenceExists(string schemaName, string sequenceName) Parameters Type Name Description String schemaName String sequenceName Returns Type Description Boolean Overrides ProcessorBase.SequenceExists(String, String) | Improve this Doc View Source TableExists(String, String) Declaration public override bool TableExists(string schemaName, string tableName) Parameters Type Name Description String schemaName String tableName Returns Type Description Boolean Overrides ProcessorBase.TableExists(String, String) Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Postgres.PostgresDbFactory.html",
    "title": "Class PostgresDbFactory | FluentMigrator documentation",
    "keywords": "Class PostgresDbFactory Inheritance Object DbFactoryBase ReflectionBasedDbFactory PostgresDbFactory Implements IDbFactory Inherited Members ReflectionBasedDbFactory.CreateFactory() ReflectionBasedDbFactory.TryCreateFactory(IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactory(IServiceProvider, IEnumerable<ReflectionBasedDbFactory.TestEntry>, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFromAppDomainPaths(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, DbProviderFactory) ReflectionBasedDbFactory.TryCreateFactoryFromRuntimeHost(ReflectionBasedDbFactory.TestEntry, ICollection<Exception>, IServiceProvider, DbProviderFactory) ReflectionBasedDbFactory.TryLoadAssemblyFromAppDomainDirectories(String, ICollection<Exception>, Assembly) ReflectionBasedDbFactory.TryLoadAssemblyFromDirectories(IEnumerable<String>, String, ICollection<Exception>, Assembly) DbFactoryBase.Factory DbFactoryBase.CreateConnection(String) DbFactoryBase.CreateCommand(String, IDbConnection, IDbTransaction, IMigrationProcessorOptions) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresDbFactory : ReflectionBasedDbFactory, IDbFactory Constructors | Improve this Doc View Source PostgresDbFactory() Declaration [Obsolete] public PostgresDbFactory() | Improve this Doc View Source PostgresDbFactory(IServiceProvider) Declaration public PostgresDbFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IDbFactory"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.html",
    "title": "Namespace FluentMigrator.Runner.Processors.Oracle | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Processors.Oracle Classes OracleBaseDbFactory OracleDbFactory OracleManagedDbFactory OracleManagedProcessor OracleManagedProcessorFactory OracleProcessor OracleProcessorBase OracleProcessorFactory"
  },
  "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html": {
    "href": "api/FluentMigrator.Runner.Processors.Oracle.OracleProcessorFactory.html",
    "title": "Class OracleProcessorFactory | FluentMigrator documentation",
    "keywords": "Class OracleProcessorFactory Inheritance Object MigrationProcessorFactory OracleProcessorFactory Implements IMigrationProcessorFactory Inherited Members MigrationProcessorFactory.Name MigrationProcessorFactory.IsForProvider(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax [Obsolete] public class OracleProcessorFactory : MigrationProcessorFactory, IMigrationProcessorFactory Constructors | Improve this Doc View Source OracleProcessorFactory() Declaration [Obsolete] public OracleProcessorFactory() | Improve this Doc View Source OracleProcessorFactory(IServiceProvider) Declaration public OracleProcessorFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Create(String, IAnnouncer, IMigrationProcessorOptions) Declaration [Obsolete] public override IMigrationProcessor Create(string connectionString, IAnnouncer announcer, IMigrationProcessorOptions options) Parameters Type Name Description String connectionString IAnnouncer announcer IMigrationProcessorOptions options Returns Type Description IMigrationProcessor Overrides MigrationProcessorFactory.Create(String, IAnnouncer, IMigrationProcessorOptions) Implements IMigrationProcessorFactory"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2008Generator.html",
    "title": "Class SqlServer2008Generator | FluentMigrator documentation",
    "keywords": "Class SqlServer2008Generator Inheritance Object GeneratorBase GenericGenerator SqlServer2000Generator SqlServer2005Generator SqlServer2008Generator SqlServer2012Generator Implements IMigrationGenerator Inherited Members SqlServer2005Generator.AddColumn SqlServer2005Generator.CreateSchema SqlServer2005Generator.CreateIndex SqlServer2005Generator.DropIndex SqlServer2005Generator.IdentityInsert SqlServer2005Generator.CreateForeignKeyConstraint SqlServer2005Generator.GetIncludeString(CreateIndexExpression) SqlServer2005Generator.GetWithOptions(ISupportAdditionalFeatures) SqlServer2005Generator.Generate(CreateTableExpression) SqlServer2005Generator.Generate(AlterTableExpression) SqlServer2005Generator.Generate(CreateColumnExpression) SqlServer2005Generator.Generate(AlterColumnExpression) SqlServer2005Generator.Generate(CreateForeignKeyExpression) SqlServer2005Generator.Generate(DeleteIndexExpression) SqlServer2005Generator.Generate(CreateConstraintExpression) SqlServer2005Generator.Generate(DeleteDefaultConstraintExpression) SqlServer2005Generator.Generate(DeleteConstraintExpression) SqlServer2005Generator.Generate(CreateSchemaExpression) SqlServer2005Generator.Generate(DeleteSchemaExpression) SqlServer2005Generator.Generate(AlterSchemaExpression) SqlServer2000Generator.RenameTable SqlServer2000Generator.RenameColumn SqlServer2000Generator.CreateConstraint SqlServer2000Generator.GetClusterTypeString(CreateIndexExpression) SqlServer2000Generator.GetConstraintClusteringString(CreateConstraintExpression) SqlServer2000Generator.Generate(RenameTableExpression) SqlServer2000Generator.Generate(RenameColumnExpression) SqlServer2000Generator.Generate(DeleteColumnExpression) SqlServer2000Generator.BuildDelete(DeleteColumnExpression, String, StringBuilder) SqlServer2000Generator.Generate(AlterDefaultConstraintExpression) SqlServer2000Generator.Generate(InsertDataExpression) SqlServer2000Generator.IsUsingIdentityInsert(InsertDataExpression) SqlServer2000Generator.Generate(CreateSequenceExpression) SqlServer2000Generator.Generate(DeleteSequenceExpression) GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2008Generator : SqlServer2005Generator, IMigrationGenerator Constructors | Improve this Doc View Source SqlServer2008Generator() Declaration public SqlServer2008Generator() | Improve this Doc View Source SqlServer2008Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlServer2008Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlServer2008Generator(SqlServer2008Quoter) Declaration public SqlServer2008Generator([NotNull] SqlServer2008Quoter quoter) Parameters Type Name Description SqlServer2008Quoter quoter | Improve this Doc View Source SqlServer2008Generator(SqlServer2008Quoter, IOptions<GeneratorOptions>) Declaration public SqlServer2008Generator([NotNull] SqlServer2008Quoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlServer2008Quoter quoter IOptions < GeneratorOptions > generatorOptions Methods | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides SqlServer2005Generator.Generate(CreateIndexExpression) | Improve this Doc View Source GetWithNullsDistinctString(IndexDefinition) Declaration public virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides SqlServer2005Generator.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005TypeMap.html",
    "title": "Class SqlServer2005TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2005TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members SqlServer2000TypeMap.AnsiStringCapacity SqlServer2000TypeMap.AnsiTextCapacity SqlServer2000TypeMap.UnicodeStringCapacity SqlServer2000TypeMap.UnicodeTextCapacity SqlServer2000TypeMap.ImageCapacity SqlServer2000TypeMap.DecimalCapacity TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005TypeMap : SqlServer2000TypeMap, ITypeMap Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides SqlServer2000TypeMap.SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2005Quoter.html",
    "title": "Class SqlServer2005Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2005Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter SqlServer2008Quoter Implements IQuoter Inherited Members SqlServer2000Quoter.OpenQuote SqlServer2000Quoter.CloseQuote SqlServer2000Quoter.CloseQuoteEscapeString SqlServer2000Quoter.OpenQuoteEscapeString SqlServer2000Quoter.FormatNationalString(String) SqlServer2000Quoter.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2005Quoter : SqlServer2000Quoter, IQuoter Methods | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides SqlServer2000Quoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000TypeMap.html",
    "title": "Class SqlServer2000TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlServer2000TypeMap Inheritance Object TypeMapBase SqlServer2000TypeMap SqlServer2005TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000TypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlServer.SqlServer2000Quoter.html",
    "title": "Class SqlServer2000Quoter | FluentMigrator documentation",
    "keywords": "Class SqlServer2000Quoter Inheritance Object GenericQuoter SqlServer2000Quoter SqlServer2005Quoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2000Quoter : GenericQuoter, IQuoter Properties | Improve this Doc View Source CloseQuote Declaration public override string CloseQuote { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuote | Improve this Doc View Source CloseQuoteEscapeString Declaration public override string CloseQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.CloseQuoteEscapeString | Improve this Doc View Source OpenQuote Declaration public override string OpenQuote { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuote | Improve this Doc View Source OpenQuoteEscapeString Declaration public override string OpenQuoteEscapeString { get; } Property Value Type Description String Overrides GenericQuoter.OpenQuoteEscapeString Methods | Improve this Doc View Source FormatNationalString(String) Declaration public override string FormatNationalString(string value) Parameters Type Name Description String value Returns Type Description String Overrides GenericQuoter.FormatNationalString(String) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16TypeMap.html",
    "title": "Class SqlAnywhere16TypeMap | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16TypeMap Inheritance Object TypeMapBase SqlAnywhere16TypeMap Implements ITypeMap Inherited Members TypeMapBase.PrecisionPlaceholder TypeMapBase.SetTypeMap(DbType, String) TypeMapBase.SetTypeMap(DbType, String, Int32) TypeMapBase.GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) TypeMapBase.GetTypeMap(DbType, Int32, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16TypeMap : TypeMapBase, ITypeMap Fields | Improve this Doc View Source AnsiStringCapacity Declaration public const int AnsiStringCapacity = 8000 Field Value Type Description Int32 | Improve this Doc View Source AnsiTextCapacity Declaration public const int AnsiTextCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source DecimalCapacity Declaration public const int DecimalCapacity = 38 Field Value Type Description Int32 | Improve this Doc View Source ImageCapacity Declaration public const int ImageCapacity = 2147483647 Field Value Type Description Int32 | Improve this Doc View Source UnicodeStringCapacity Declaration public const int UnicodeStringCapacity = 4000 Field Value Type Description Int32 | Improve this Doc View Source UnicodeTextCapacity Declaration public const int UnicodeTextCapacity = 1073741823 Field Value Type Description Int32 Methods | Improve this Doc View Source SetupTypeMaps() Declaration protected override void SetupTypeMaps() Overrides TypeMapBase.SetupTypeMaps() Implements ITypeMap"
  },
  "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html": {
    "href": "api/FluentMigrator.Runner.Generators.SqlAnywhere.SqlAnywhere16Generator.html",
    "title": "Class SqlAnywhere16Generator | FluentMigrator documentation",
    "keywords": "Class SqlAnywhere16Generator Inheritance Object GeneratorBase GenericGenerator SqlAnywhere16Generator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterSchema GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.DeleteConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(RenameTableExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(RenameColumnExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.SqlAnywhere Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhere16Generator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source SqlAnywhere16Generator() Declaration public SqlAnywhere16Generator() | Improve this Doc View Source SqlAnywhere16Generator(IColumn, IQuoter, IDescriptionGenerator, IOptions<GeneratorOptions>) Declaration protected SqlAnywhere16Generator([NotNull] IColumn column, [NotNull] IQuoter quoter, [NotNull] IDescriptionGenerator descriptionGenerator, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description IColumn column IQuoter quoter IDescriptionGenerator descriptionGenerator IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source SqlAnywhere16Generator(SqlAnywhereQuoter) Declaration public SqlAnywhere16Generator([NotNull] SqlAnywhereQuoter quoter) Parameters Type Name Description SqlAnywhereQuoter quoter | Improve this Doc View Source SqlAnywhere16Generator(SqlAnywhereQuoter, IOptions<GeneratorOptions>) Declaration public SqlAnywhere16Generator([NotNull] SqlAnywhereQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description SqlAnywhereQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumn Declaration public override string AlterColumn { get; } Property Value Type Description String Overrides GenericGenerator.AlterColumn | Improve this Doc View Source CreateConstraint Declaration public override string CreateConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateConstraint | Improve this Doc View Source CreateForeignKeyConstraint Declaration public override string CreateForeignKeyConstraint { get; } Property Value Type Description String Overrides GenericGenerator.CreateForeignKeyConstraint | Improve this Doc View Source CreateIndex Declaration public override string CreateIndex { get; } Property Value Type Description String Overrides GenericGenerator.CreateIndex | Improve this Doc View Source CreateSchema Declaration public override string CreateSchema { get; } Property Value Type Description String Overrides GenericGenerator.CreateSchema | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex | Improve this Doc View Source DropSchema Declaration public override string DropSchema { get; } Property Value Type Description String Overrides GenericGenerator.DropSchema | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source RenameTable Declaration public override string RenameTable { get; } Property Value Type Description String Overrides GenericGenerator.RenameTable Methods | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(AlterSchemaExpression) Declaration public override string Generate(AlterSchemaExpression expression) Parameters Type Name Description AlterSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterSchemaExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSchemaExpression) Declaration public override string Generate(CreateSchemaExpression expression) Parameters Type Name Description CreateSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSchemaExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSchemaExpression) Declaration public override string Generate(DeleteSchemaExpression expression) Parameters Type Name Description DeleteSchemaExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSchemaExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source GetClusterTypeString(CreateIndexExpression) Declaration public override string GetClusterTypeString(CreateIndexExpression column) Parameters Type Name Description CreateIndexExpression column Returns Type Description String Overrides GenericGenerator.GetClusterTypeString(CreateIndexExpression) | Improve this Doc View Source GetConstraintClusteringString(CreateConstraintExpression) Declaration protected string GetConstraintClusteringString(CreateConstraintExpression constraint) Parameters Type Name Description CreateConstraintExpression constraint Returns Type Description String | Improve this Doc View Source GetWithNullsDistinctString(IndexDefinition) Declaration protected virtual string GetWithNullsDistinctString(IndexDefinition index) Parameters Type Name Description IndexDefinition index Returns Type Description String | Improve this Doc View Source IsAdditionalFeatureSupported(String) Declaration public override bool IsAdditionalFeatureSupported(string feature) Parameters Type Name Description String feature Returns Type Description Boolean Overrides GeneratorBase.IsAdditionalFeatureSupported(String) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.SelectingGeneratorAccessorOptions.html": {
    "href": "api/FluentMigrator.Runner.Generators.SelectingGeneratorAccessorOptions.html",
    "title": "Class SelectingGeneratorAccessorOptions | FluentMigrator documentation",
    "keywords": "Class SelectingGeneratorAccessorOptions The options for the SelectingGeneratorAccessor Inheritance Object SelectingGeneratorAccessorOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingGeneratorAccessorOptions Properties | Improve this Doc View Source GeneratorId The ID of the generator to be returned by the SelectingGeneratorAccessor Declaration public string GeneratorId { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Generators.SelectingGeneratorAccessor.html": {
    "href": "api/FluentMigrator.Runner.Generators.SelectingGeneratorAccessor.html",
    "title": "Class SelectingGeneratorAccessor | FluentMigrator documentation",
    "keywords": "Class SelectingGeneratorAccessor An IGeneratorAccessor implementation that selects one generator by name Inheritance Object SelectingGeneratorAccessor Implements IGeneratorAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class SelectingGeneratorAccessor : IGeneratorAccessor Constructors | Improve this Doc View Source SelectingGeneratorAccessor(IEnumerable<IMigrationGenerator>, IOptions<SelectingGeneratorAccessorOptions>, IOptions<SelectingProcessorAccessorOptions>) Initializes a new instance of the SelectingGeneratorAccessor class. Declaration public SelectingGeneratorAccessor([NotNull, ItemNotNull] IEnumerable<IMigrationGenerator> generators, [NotNull] IOptions<SelectingGeneratorAccessorOptions> options, [NotNull] IOptions<SelectingProcessorAccessorOptions> processorSelectorOptions) Parameters Type Name Description IEnumerable < IMigrationGenerator > generators The generators to select from IOptions < SelectingGeneratorAccessorOptions > options The options used to determine the generator to be returned IOptions < SelectingProcessorAccessorOptions > processorSelectorOptions The processor selector options Properties | Improve this Doc View Source Generator Gets the selected migration generator Declaration public IMigrationGenerator Generator { get; } Property Value Type Description IMigrationGenerator Implements IGeneratorAccessor"
  },
  "api/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html": {
    "href": "api/FluentMigrator.Runner.Generators.Postgres.PostgresQuoter.html",
    "title": "Class PostgresQuoter | FluentMigrator documentation",
    "keywords": "Class PostgresQuoter Inheritance Object GenericQuoter PostgresQuoter Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FromTimeSpan(TimeSpan) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatGuid(Guid) GenericQuoter.FormatDateTime(DateTime) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Postgres Assembly : FluentMigrator.Runner.Postgres.dll Syntax public class PostgresQuoter : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatBool(Boolean) Declaration public override string FormatBool(bool value) Parameters Type Name Description Boolean value Returns Type Description String Overrides GenericQuoter.FormatBool(Boolean) | Improve this Doc View Source FormatByteArray(Byte[]) Declaration protected override string FormatByteArray(byte[] array) Parameters Type Name Description System.Byte [] array Returns Type Description String Overrides GenericQuoter.FormatByteArray(Byte[]) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source QuoteSchemaName(String) Declaration public override string QuoteSchemaName(string schemaName) Parameters Type Name Description String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSchemaName(String) | Improve this Doc View Source QuoteSequenceName(String, String) Declaration public override string QuoteSequenceName(string sequenceName, string schemaName) Parameters Type Name Description String sequenceName String schemaName Returns Type Description String Overrides GenericQuoter.QuoteSequenceName(String, String) | Improve this Doc View Source UnQuoteSchemaName(String) Declaration public string UnQuoteSchemaName(string quoted) Parameters Type Name Description String quoted Returns Type Description String Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoterQuotedIdentifier.html",
    "title": "Class OracleQuoterQuotedIdentifier | FluentMigrator documentation",
    "keywords": "Class OracleQuoterQuotedIdentifier Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier OracleQuoter Implements IQuoter Inherited Members OracleQuoterBase.FormatDateTime(DateTime) OracleQuoterBase.FromTimeSpan(TimeSpan) OracleQuoterBase.FormatGuid(Guid) OracleQuoterBase.FormatSystemMethods(SystemMethods) GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoterQuotedIdentifier : OracleQuoterBase, IQuoter Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoterBase.html": {
    "href": "api/FluentMigrator.Runner.Generators.Oracle.OracleQuoterBase.html",
    "title": "Class OracleQuoterBase | FluentMigrator documentation",
    "keywords": "Class OracleQuoterBase Inheritance Object GenericQuoter OracleQuoterBase OracleQuoterQuotedIdentifier Implements IQuoter Inherited Members GenericQuoter.QuoteValue(Object) GenericQuoter.FormatByteArray(Byte[]) GenericQuoter.FormatNull() GenericQuoter.FormatAnsiString(String) GenericQuoter.FormatNationalString(String) GenericQuoter.FormatChar(Char) GenericQuoter.FormatBool(Boolean) GenericQuoter.FormatDateTimeOffset(DateTimeOffset) GenericQuoter.FormatEnum(Object) GenericQuoter.ValueQuote GenericQuoter.EscapeValueQuote GenericQuoter.IdentifierSeparator GenericQuoter.OpenQuote GenericQuoter.CloseQuote GenericQuoter.OpenQuoteEscapeString GenericQuoter.CloseQuoteEscapeString GenericQuoter.IsQuoted(String) GenericQuoter.ShouldQuote(String) GenericQuoter.Quote(String) GenericQuoter.QuoteColumnName(String) GenericQuoter.QuoteConstraintName(String, String) GenericQuoter.QuoteIndexName(String, String) GenericQuoter.QuoteTableName(String, String) GenericQuoter.QuoteSequenceName(String, String) GenericQuoter.QuoteSchemaName(String) GenericQuoter.UnQuote(String) GenericQuoter.CreateSchemaPrefixedQuotedIdentifier(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Oracle Assembly : FluentMigrator.Runner.Oracle.dll Syntax public class OracleQuoterBase : GenericQuoter, IQuoter Methods | Improve this Doc View Source FormatDateTime(DateTime) Declaration public override string FormatDateTime(DateTime value) Parameters Type Name Description DateTime value Returns Type Description String Overrides GenericQuoter.FormatDateTime(DateTime) | Improve this Doc View Source FormatGuid(Guid) Declaration public override string FormatGuid(Guid value) Parameters Type Name Description Guid value Returns Type Description String Overrides GenericQuoter.FormatGuid(Guid) | Improve this Doc View Source FormatSystemMethods(SystemMethods) Declaration public override string FormatSystemMethods(SystemMethods value) Parameters Type Name Description SystemMethods value Returns Type Description String Overrides GenericQuoter.FormatSystemMethods(SystemMethods) | Improve this Doc View Source FromTimeSpan(TimeSpan) Declaration public override string FromTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value Returns Type Description String Overrides GenericQuoter.FromTimeSpan(TimeSpan) Implements IQuoter"
  },
  "api/FluentMigrator.Runner.Generators.Jet.JetGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Jet.JetGenerator.html",
    "title": "Class JetGenerator | FluentMigrator documentation",
    "keywords": "Class JetGenerator Inheritance Object GeneratorBase GenericGenerator JetGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AddColumn GenericGenerator.DropColumn GenericGenerator.AlterColumn GenericGenerator.RenameColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.Generate(CreateTableExpression) GenericGenerator.Generate(DeleteTableExpression) GenericGenerator.Generate(CreateColumnExpression) GenericGenerator.Generate(AlterColumnExpression) GenericGenerator.Generate(DeleteColumnExpression) GenericGenerator.Generate(CreateIndexExpression) GenericGenerator.Generate(DeleteIndexExpression) GenericGenerator.Generate(CreateForeignKeyExpression) GenericGenerator.Generate(CreateConstraintExpression) GenericGenerator.Generate(DeleteConstraintExpression) GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) GenericGenerator.Generate(DeleteForeignKeyExpression) GenericGenerator.Generate(InsertDataExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(UpdateDataExpression) GenericGenerator.Generate(DeleteDataExpression) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Jet Assembly : FluentMigrator.Runner.Jet.dll Syntax public class JetGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source JetGenerator() Declaration public JetGenerator() | Improve this Doc View Source JetGenerator(JetQuoter) Declaration public JetGenerator([NotNull] JetQuoter quoter) Parameters Type Name Description JetQuoter quoter | Improve this Doc View Source JetGenerator(JetQuoter, IOptions<GeneratorOptions>) Declaration public JetGenerator([NotNull] JetQuoter quoter, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description JetQuoter quoter IOptions < GeneratorOptions > generatorOptions Properties | Improve this Doc View Source DropIndex Declaration public override string DropIndex { get; } Property Value Type Description String Overrides GenericGenerator.DropIndex Methods | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.ITypeMap.html": {
    "href": "api/FluentMigrator.Runner.Generators.ITypeMap.html",
    "title": "Interface ITypeMap | FluentMigrator documentation",
    "keywords": "Interface ITypeMap A map of DbType to an SQL type Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public interface ITypeMap Methods | Improve this Doc View Source GetTypeMap(DbType, Int32, Int32) Get the SQL type for a DbType Declaration [NotNull] [Obsolete] string GetTypeMap(DbType type, int size, int precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Int32 size The requested size (in DB lingua: precision) Int32 precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type | Improve this Doc View Source GetTypeMap(DbType, Nullable<Int32>, Nullable<Int32>) Get the SQL type for a DbType Declaration [NotNull] string GetTypeMap(DbType type, int? size, int? precision) Parameters Type Name Description DbType type The DbType to get the SQL type for Nullable < Int32 > size The requested size (in DB lingua: precision) Nullable < Int32 > precision The requested precision (in DB lingua: scale) Returns Type Description String The SQL type"
  },
  "api/FluentMigrator.Runner.BatchParser.SqlBatchParser.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SqlBatchParser.html",
    "title": "Class SqlBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlBatchParser This is the base implementation of the SQL batch parser Inheritance Object SqlBatchParser SqlAnywhereBatchParser SQLiteBatchParser SqlServerBatchParser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.Core.dll Syntax public class SqlBatchParser Constructors | Improve this Doc View Source SqlBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlBatchParser class. Declaration public SqlBatchParser([NotNull, ItemNotNull] IEnumerable<IRangeSearcher> rangeSearchers, [NotNull, ItemNotNull] IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output Methods | Improve this Doc View Source OnSpecialToken(SpecialTokenEventArgs) Invokes the SpecialToken event Declaration protected virtual void OnSpecialToken(SpecialTokenEventArgs e) Parameters Type Name Description SpecialTokenEventArgs e The event arguments | Improve this Doc View Source OnSqlText(SqlTextEventArgs) Invokes the SqlText event Declaration protected virtual void OnSqlText(SqlTextEventArgs e) Parameters Type Name Description SqlTextEventArgs e The event arguments | Improve this Doc View Source Process(ITextSource, Boolean) Process the source Declaration public void Process(ITextSource source, bool stripComments = false) Parameters Type Name Description ITextSource source The source to process/parse for SQL statement batches Boolean stripComments true when the comments should be stripped Events | Improve this Doc View Source SpecialToken An event handler that is called when a special token was found Declaration public event EventHandler<SpecialTokenEventArgs> SpecialToken Event Type Type Description EventHandler < SpecialTokenEventArgs > | Improve this Doc View Source SqlText An event handler that is called when an SQL text was collected and is considered complete Declaration public event EventHandler<SqlTextEventArgs> SqlText Event Type Type Description EventHandler < SqlTextEventArgs >"
  },
  "api/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.SqlAnywhereBatchParser.html",
    "title": "Class SqlAnywhereBatchParser | FluentMigrator documentation",
    "keywords": "Class SqlAnywhereBatchParser A specialization of the SqlBatchParser for the Microsoft SQL Server Inheritance Object SqlBatchParser SqlAnywhereBatchParser Inherited Members SqlBatchParser.SpecialToken SqlBatchParser.SqlText SqlBatchParser.Process(ITextSource, Boolean) SqlBatchParser.OnSpecialToken(SpecialTokenEventArgs) SqlBatchParser.OnSqlText(SqlTextEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser Assembly : FluentMigrator.Runner.SqlAnywhere.dll Syntax public class SqlAnywhereBatchParser : SqlBatchParser Remarks It uses the following range searchers: MultiLineComment , DoubleDashSingleLineComment , PoundSignSingleLineComment , AnsiSqlIdentifier , SqlString and the following token searchers: GoSearcher . Constructors | Improve this Doc View Source SqlAnywhereBatchParser(IEnumerable<IRangeSearcher>, IEnumerable<ISpecialTokenSearcher>, String) Initializes a new instance of the SqlAnywhereBatchParser class. Declaration protected SqlAnywhereBatchParser([NotNull, ItemNotNull] IEnumerable<IRangeSearcher> rangeSearchers, [NotNull, ItemNotNull] IEnumerable<ISpecialTokenSearcher> specialTokenSearchers, string newLine = null) Parameters Type Name Description IEnumerable < IRangeSearcher > rangeSearchers The range searchers to be used IEnumerable < ISpecialTokenSearcher > specialTokenSearchers The special token searchers to be used String newLine The new line sequence to be used for the output | Improve this Doc View Source SqlAnywhereBatchParser(String) Initializes a new instance of the SqlAnywhereBatchParser class. Declaration public SqlAnywhereBatchParser(string newLine = null) Parameters Type Name Description String newLine The string used to write a new line sequence"
  },
  "api/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerOptions.html": {
    "href": "api/FluentMigrator.Runner.Logging.LogFileFluentMigratorLoggerOptions.html",
    "title": "Class LogFileFluentMigratorLoggerOptions | FluentMigrator documentation",
    "keywords": "Class LogFileFluentMigratorLoggerOptions The configuration for a LogFileFluentMigratorLoggerProvider Inheritance Object FluentMigratorLoggerOptions SqlScriptFluentMigratorLoggerOptions LogFileFluentMigratorLoggerOptions Inherited Members SqlScriptFluentMigratorLoggerOptions.OutputGoBetweenStatements FluentMigratorLoggerOptions.ShowSql FluentMigratorLoggerOptions.ShowElapsedTime Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class LogFileFluentMigratorLoggerOptions : SqlScriptFluentMigratorLoggerOptions Properties | Improve this Doc View Source OutputFileName Gets or sets the full path to the output file name Declaration [CanBeNull] public string OutputFileName { get; set; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Logging.FluentMigratorRunnerLogger.html": {
    "href": "api/FluentMigrator.Runner.Logging.FluentMigratorRunnerLogger.html",
    "title": "Class FluentMigratorRunnerLogger | FluentMigrator documentation",
    "keywords": "Class FluentMigratorRunnerLogger Logger that provides some default formatting Inheritance Object FluentMigratorLogger FluentMigratorRunnerLogger FluentMigratorConsoleLogger Implements ILogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax public class FluentMigratorRunnerLogger : FluentMigratorLogger, ILogger Constructors | Improve this Doc View Source FluentMigratorRunnerLogger(TextWriter, TextWriter, FluentMigratorLoggerOptions) Declaration public FluentMigratorRunnerLogger(TextWriter output, TextWriter error, FluentMigratorLoggerOptions options) Parameters Type Name Description TextWriter output TextWriter error FluentMigratorLoggerOptions options Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorLogger.WriteSql(String) Implements Microsoft.Extensions.Logging.ILogger Extension Methods LoggingUtilities.LogElapsedTime(ILogger, TimeSpan) LoggingUtilities.LogEmphasized(ILogger, String) LoggingUtilities.LogHeader(ILogger, String) LoggingUtilities.LogSql(ILogger, String) LoggingUtilities.LogSay(ILogger, String)"
  },
  "api/FluentMigrator.Runner.Logging.AnnouncerFluentMigratorLogger.html": {
    "href": "api/FluentMigrator.Runner.Logging.AnnouncerFluentMigratorLogger.html",
    "title": "Class AnnouncerFluentMigratorLogger | FluentMigrator documentation",
    "keywords": "Class AnnouncerFluentMigratorLogger A ILogger implementation that redirects all messages to a IAnnouncer Inheritance Object FluentMigratorLogger AnnouncerFluentMigratorLogger Implements ILogger Inherited Members FluentMigratorLogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) FluentMigratorLogger.IsEnabled(LogLevel) FluentMigratorLogger.BeginScope<TState>(TState) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Logging Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public class AnnouncerFluentMigratorLogger : FluentMigratorLogger, ILogger Constructors | Improve this Doc View Source AnnouncerFluentMigratorLogger(IAnnouncer) Initializes a new instance of the AnnouncerFluentMigratorLogger class. Declaration public AnnouncerFluentMigratorLogger(IAnnouncer announcer) Parameters Type Name Description IAnnouncer announcer The announcer to send all messages to Methods | Improve this Doc View Source WriteElapsedTime(TimeSpan) Writes the elapsed time Declaration protected override void WriteElapsedTime(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The elapsed time Overrides FluentMigratorLogger.WriteElapsedTime(TimeSpan) | Improve this Doc View Source WriteEmphasize(String) Writes an emphasized text Declaration protected override void WriteEmphasize(string message) Parameters Type Name Description String message The message to write Overrides FluentMigratorLogger.WriteEmphasize(String) | Improve this Doc View Source WriteEmptySql() Called when an attempt was made to write an empty SQL statement Declaration protected override void WriteEmptySql() Overrides FluentMigratorLogger.WriteEmptySql() | Improve this Doc View Source WriteError(Exception) Writes an exception message Declaration protected override void WriteError(Exception exception) Parameters Type Name Description Exception exception The exception containing the message Overrides FluentMigratorLogger.WriteError(Exception) | Improve this Doc View Source WriteError(String) Writes an error message Declaration protected override void WriteError(string message) Parameters Type Name Description String message The error message Overrides FluentMigratorLogger.WriteError(String) | Improve this Doc View Source WriteHeading(String) Writes a heading Declaration protected override void WriteHeading(string message) Parameters Type Name Description String message The heading message Overrides FluentMigratorLogger.WriteHeading(String) | Improve this Doc View Source WriteSay(String) Writes a message Declaration protected override void WriteSay(string message) Parameters Type Name Description String message The message Overrides FluentMigratorLogger.WriteSay(String) | Improve this Doc View Source WriteSql(String) Writes an SQL statement Declaration protected override void WriteSql(string sql) Parameters Type Name Description String sql The SQL statement Overrides FluentMigratorLogger.WriteSql(String) Implements Microsoft.Extensions.Logging.ILogger Extension Methods LoggingUtilities.LogElapsedTime(ILogger, TimeSpan) LoggingUtilities.LogEmphasized(ILogger, String) LoggingUtilities.LogHeader(ILogger, String) LoggingUtilities.LogSql(ILogger, String) LoggingUtilities.LogSay(ILogger, String)"
  },
  "api/FluentMigrator.Runner.JetRunnerBuilderExtensions.html": {
    "href": "api/FluentMigrator.Runner.JetRunnerBuilderExtensions.html",
    "title": "Class JetRunnerBuilderExtensions | FluentMigrator documentation",
    "keywords": "Class JetRunnerBuilderExtensions Extension methods for IMigrationRunnerBuilder Inheritance Object JetRunnerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Jet.dll Syntax public static class JetRunnerBuilderExtensions Methods | Improve this Doc View Source AddJet(IMigrationRunnerBuilder) Adds JET engine (Access) support Declaration public static IMigrationRunnerBuilder AddJet(this IMigrationRunnerBuilder builder) Parameters Type Name Description IMigrationRunnerBuilder builder The builder to add the JET engine (Access)-specific services to Returns Type Description IMigrationRunnerBuilder The migration runner builder"
  },
  "api/FluentMigrator.Runner.Initialization.html": {
    "href": "api/FluentMigrator.Runner.Initialization.html",
    "title": "Namespace FluentMigrator.Runner.Initialization | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Initialization Classes AssemblyCollectionService A compatibility service to get the assembly collection from the found migrations AssemblyFileLoadEngine Tries to load the assembly from a file AssemblyNameLoadEngine Tries to load the assembly by name AssemblySource Provides access to delay-loaded assemblies AssemblySourceItem The default implementation of an IAssemblySourceItem AssemblySourceMigrationRunnerConventionsAccessor Searches for a IMigrationRunnerConventions implementation in the given assemblies AssemblySourceOptions Options for the assembly loader AssemblySourceVersionTableMetaDataAccessor Scans the given source assemblies and returns a found IVersionTableMetaData implementation ConfigurationConnectionStringReader ConnectionStringAccessor Default implementation of IConnectionStringAccessor DefaultConnectionStringProvider MigrationSource PassThroughConnectionStringReader A connection string provider that just passes through the given connection string PassThroughMigrationRunnerConventionsAccessor Implementation of IMigrationRunnerConventionsAccessor that just passes through the given IMigrationRunnerConventions PassThroughVersionTableMetaDataAccessor Passes through the given version table metadata ProfileSource The default implementation of IProfileSource RunnerContext RunnerOptions The options for a migration runner TaskExecutor TypeFilterOptions Type filtering options Interfaces IAssemblyLoadEngine Assembly loader engine IAssemblySource Interface for an assembly provider IAssemblySourceItem Represents an item for the AssemblySource IConnectionStringAccessor Interface to get the connection string IConnectionStringProvider IConnectionStringReader Interface to access the connection string IMigrationRunnerConventionsAccessor Access to the IMigrationRunnerConventions IMigrationSource IProfileSource Gets all types IRunnerContext IVersionTableMetaDataAccessor Accessor for the IVersionTableMetaData"
  },
  "api/FluentMigrator.Runner.Initialization.IMigrationSource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IMigrationSource.html",
    "title": "Interface IMigrationSource | FluentMigrator documentation",
    "keywords": "Interface IMigrationSource Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationSource Methods | Improve this Doc View Source GetMigrations() Declaration [NotNull] [ItemNotNull] IEnumerable<IMigration> GetMigrations() Returns Type Description IEnumerable < IMigration >"
  },
  "api/FluentMigrator.Runner.Initialization.IMigrationRunnerConventionsAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IMigrationRunnerConventionsAccessor.html",
    "title": "Interface IMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Interface IMigrationRunnerConventionsAccessor Access to the IMigrationRunnerConventions Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IMigrationRunnerConventionsAccessor Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration [NotNull] IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions"
  },
  "api/FluentMigrator.Runner.Initialization.IConnectionStringReader.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IConnectionStringReader.html",
    "title": "Interface IConnectionStringReader | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringReader Interface to access the connection string Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConnectionStringReader Properties | Improve this Doc View Source Priority Gets the priority Declaration int Priority { get; } Property Value Type Description Int32 Remarks Higher value means that it gets processed first Methods | Improve this Doc View Source GetConnectionString(String) Gets the connection string Declaration [CanBeNull] string GetConnectionString([CanBeNull] string connectionStringOrName) Parameters Type Name Description String connectionStringOrName The name of the connection string Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IConnectionStringProvider.html",
    "title": "Interface IConnectionStringProvider | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringProvider Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax [Obsolete] public interface IConnectionStringProvider Methods | Improve this Doc View Source GetConnectionString(IAnnouncer, String, String, String, String) Declaration [CanBeNull] string GetConnectionString(IAnnouncer announcer, string connection, string configPath, string assemblyLocation, string database) Parameters Type Name Description IAnnouncer announcer String connection String configPath String assemblyLocation String database Returns Type Description String"
  },
  "api/FluentMigrator.Runner.Initialization.IConnectionStringAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IConnectionStringAccessor.html",
    "title": "Interface IConnectionStringAccessor | FluentMigrator documentation",
    "keywords": "Interface IConnectionStringAccessor Interface to get the connection string Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConnectionStringAccessor Properties | Improve this Doc View Source ConnectionString Gets the connection string Declaration [CanBeNull] string ConnectionString { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Runner.Initialization.IAssemblySourceItem.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IAssemblySourceItem.html",
    "title": "Interface IAssemblySourceItem | FluentMigrator documentation",
    "keywords": "Interface IAssemblySourceItem Represents an item for the AssemblySource Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblySourceItem Properties | Improve this Doc View Source Assemblies Gets all assemblies covered by this item Declaration IEnumerable<Assembly> Assemblies { get; } Property Value Type Description IEnumerable < Assembly >"
  },
  "api/FluentMigrator.Runner.Initialization.IAssemblySource.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IAssemblySource.html",
    "title": "Interface IAssemblySource | FluentMigrator documentation",
    "keywords": "Interface IAssemblySource Interface for an assembly provider Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblySource Remarks This will be used to find some user-defined interface implementations of out-of-process runners Properties | Improve this Doc View Source Assemblies Gets the assemblies Declaration IReadOnlyCollection<Assembly> Assemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly >"
  },
  "api/FluentMigrator.Runner.Initialization.IAssemblyLoadEngine.html": {
    "href": "api/FluentMigrator.Runner.Initialization.IAssemblyLoadEngine.html",
    "title": "Interface IAssemblyLoadEngine | FluentMigrator documentation",
    "keywords": "Interface IAssemblyLoadEngine Assembly loader engine Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IAssemblyLoadEngine Methods | Improve this Doc View Source TryLoad(String, ICollection<Exception>, out Assembly) Try loading an assembly with the given name Declaration bool TryLoad(string name, ICollection<Exception> exceptions, out Assembly assembly) Parameters Type Name Description String name The assembly name ICollection < Exception > exceptions The collected exceptions Assembly assembly The loaded assembly Returns Type Description Boolean true if the assembly could be loaded"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblySourceVersionTableMetaDataAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblySourceVersionTableMetaDataAccessor.html",
    "title": "Class AssemblySourceVersionTableMetaDataAccessor | FluentMigrator documentation",
    "keywords": "Class AssemblySourceVersionTableMetaDataAccessor Scans the given source assemblies and returns a found IVersionTableMetaData implementation Inheritance Object AssemblySourceVersionTableMetaDataAccessor Implements IVersionTableMetaDataAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceVersionTableMetaDataAccessor : IVersionTableMetaDataAccessor Constructors | Improve this Doc View Source AssemblySourceVersionTableMetaDataAccessor(IOptions<TypeFilterOptions>, IServiceProvider, IAssemblySource) Initializes a new instance of the AssemblySourceVersionTableMetaDataAccessor class. Declaration public AssemblySourceVersionTableMetaDataAccessor([NotNull] IOptions<TypeFilterOptions> typeFilterOptions, [CanBeNull] IServiceProvider serviceProvider, [CanBeNull] IAssemblySource assemblySource = null) Parameters Type Name Description IOptions < TypeFilterOptions > typeFilterOptions The type filter options IServiceProvider serviceProvider The service provider used to instantiate the found IVersionTableMetaData implementation IAssemblySource assemblySource The assemblies used to search for the IVersionTableMetaData implementation Properties | Improve this Doc View Source VersionTableMetaData Gets the version table metadata Declaration public IVersionTableMetaData VersionTableMetaData { get; } Property Value Type Description IVersionTableMetaData Implements IVersionTableMetaDataAccessor"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblySourceOptions.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblySourceOptions.html",
    "title": "Class AssemblySourceOptions | FluentMigrator documentation",
    "keywords": "Class AssemblySourceOptions Options for the assembly loader Inheritance Object AssemblySourceOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceOptions Properties | Improve this Doc View Source AssemblyNames Gets or sets the assembly names Declaration [CanBeNull] [ItemNotNull] public string[] AssemblyNames { get; set; } Property Value Type Description String []"
  },
  "api/FluentMigrator.Runner.Initialization.AssemblySourceMigrationRunnerConventionsAccessor.html": {
    "href": "api/FluentMigrator.Runner.Initialization.AssemblySourceMigrationRunnerConventionsAccessor.html",
    "title": "Class AssemblySourceMigrationRunnerConventionsAccessor | FluentMigrator documentation",
    "keywords": "Class AssemblySourceMigrationRunnerConventionsAccessor Searches for a IMigrationRunnerConventions implementation in the given assemblies Inheritance Object AssemblySourceMigrationRunnerConventionsAccessor Implements IMigrationRunnerConventionsAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Initialization Assembly : FluentMigrator.Runner.Core.dll Syntax public class AssemblySourceMigrationRunnerConventionsAccessor : IMigrationRunnerConventionsAccessor Constructors | Improve this Doc View Source AssemblySourceMigrationRunnerConventionsAccessor(IServiceProvider, IAssemblySource) Initializes a new instance of the AssemblySourceMigrationRunnerConventionsAccessor class. Declaration public AssemblySourceMigrationRunnerConventionsAccessor([CanBeNull] IServiceProvider serviceProvider, [CanBeNull] IAssemblySource assemblySource = null) Parameters Type Name Description IServiceProvider serviceProvider The service provider used to instantiate the found IMigrationRunnerConventions implementation IAssemblySource assemblySource The assemblies used to search for the IMigrationRunnerConventions implementation Properties | Improve this Doc View Source MigrationRunnerConventions Get the migration runner conventions Declaration public IMigrationRunnerConventions MigrationRunnerConventions { get; } Property Value Type Description IMigrationRunnerConventions Implements IMigrationRunnerConventionsAccessor"
  },
  "api/FluentMigrator.Runner.ConsoleUtilities.html": {
    "href": "api/FluentMigrator.Runner.ConsoleUtilities.html",
    "title": "Class ConsoleUtilities | FluentMigrator documentation",
    "keywords": "Class ConsoleUtilities Console helper methods Inheritance Object ConsoleUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public static class ConsoleUtilities Methods | Improve this Doc View Source AsEmphasize(Action) Changes the console color and calls the action Declaration public static void AsEmphasize(Action action) Parameters Type Name Description Action action Called after the console color has been set | Improve this Doc View Source AsError(Action) Changes the console color and calls the action Declaration public static void AsError(Action action) Parameters Type Name Description Action action Called after the console color has been set"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SingleLineComment.html",
    "title": "Class SingleLineComment | FluentMigrator documentation",
    "keywords": "Class SingleLineComment A single line comment starting with the specified start code Inheritance Object SingleLineComment DoubleDashSingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class SingleLineComment : IRangeSearcher Constructors | Improve this Doc View Source SingleLineComment(String) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode) Parameters Type Name Description String startCode The start code for the single line comment | Improve this Doc View Source SingleLineComment(String, Boolean) Initializes a new instance of the SingleLineComment class. Declaration public SingleLineComment(string startCode, bool onlyAtBeginningOfLine) Parameters Type Name Description String startCode The start code for the single line comment Boolean onlyAtBeginningOfLine Find the start code only at the beginning of the line Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.PoundSignSingleLineComment.html",
    "title": "Class PoundSignSingleLineComment | FluentMigrator documentation",
    "keywords": "Class PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) Inheritance Object SingleLineComment PoundSignSingleLineComment Implements IRangeSearcher Inherited Members SingleLineComment.StartCodeLength SingleLineComment.EndCodeLength SingleLineComment.IsComment SingleLineComment.FindStartCode(ILineReader) SingleLineComment.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class PoundSignSingleLineComment : SingleLineComment, IRangeSearcher Constructors | Improve this Doc View Source PoundSignSingleLineComment() Initializes a new instance of the PoundSignSingleLineComment class. Declaration public PoundSignSingleLineComment() Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.NestingMultiLineComment.html",
    "title": "Class NestingMultiLineComment | FluentMigrator documentation",
    "keywords": "Class NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) Inheritance Object NestingMultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class NestingMultiLineComment : IRangeSearcher Constructors | Improve this Doc View Source NestingMultiLineComment() Initializes a new instance of the NestingMultiLineComment class. Declaration public NestingMultiLineComment() Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.MySqlIdentifier.html",
    "title": "Class MySqlIdentifier | FluentMigrator documentation",
    "keywords": "Class MySqlIdentifier The MySQL identifier quotes using backticks Inheritance Object CharWithEscapeByDuplication MySqlIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class MySqlIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source MySqlIdentifier() Initializes a new instance of the MySqlIdentifier class. Declaration public MySqlIdentifier() Implements IRangeSearcher"
  },
  "api/FluentMigrator.RawSql.html": {
    "href": "api/FluentMigrator.RawSql.html",
    "title": "Class RawSql | FluentMigrator documentation",
    "keywords": "Class RawSql A wrapper class for a SQL value Inheritance Object RawSql Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public class RawSql Remarks This raw SQL value is normally used when a custom default value was specified Properties | Improve this Doc View Source Value Gets the underlying SQL value Declaration public string Value { get; } Property Value Type Description String Methods | Improve this Doc View Source Insert(String) Creates a new RawSql instance using a given SQL value Declaration public static RawSql Insert(string sqlToRun) Parameters Type Name Description String sqlToRun The SQL value Returns Type Description RawSql The new RawSql instance"
  },
  "api/FluentMigrator.Model.IndexIncludeDefinition.html": {
    "href": "api/FluentMigrator.Model.IndexIncludeDefinition.html",
    "title": "Class IndexIncludeDefinition | FluentMigrator documentation",
    "keywords": "Class IndexIncludeDefinition Inheritance Object IndexIncludeDefinition Implements ICloneable ICanBeValidated Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Extensions.SqlServer.dll Syntax public class IndexIncludeDefinition : ICloneable, ICanBeValidated Properties | Improve this Doc View Source Name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ColumnNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors Implements System.ICloneable ICanBeValidated"
  },
  "api/FluentMigrator.Model.IndexDefinition.html": {
    "href": "api/FluentMigrator.Model.IndexDefinition.html",
    "title": "Class IndexDefinition | FluentMigrator documentation",
    "keywords": "Class IndexDefinition The index definition Inheritance Object IndexDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject IValidationChildren Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures, IValidatableObject, IValidationChildren Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Columns Gets or sets a collection of index column definitions Declaration public virtual ICollection<IndexColumnDefinition> Columns { get; set; } Property Value Type Description ICollection < IndexColumnDefinition > | Improve this Doc View Source IsClustered Gets or sets a value indicating whether the index is clustered Declaration public bool IsClustered { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Gets or sets a value indicating whteher the index only allows unique values Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets or sets the index name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"IndexNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures System.ComponentModel.DataAnnotations.IValidatableObject IValidationChildren Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Model.ColumnDefinition.html": {
    "href": "api/FluentMigrator.Model.ColumnDefinition.html",
    "title": "Class ColumnDefinition | FluentMigrator documentation",
    "keywords": "Class ColumnDefinition The column definition Inheritance Object ColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures, IValidatableObject Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source CollationName Gets or sets the collation name if the column has a string or ansi string type Declaration public virtual string CollationName { get; set; } Property Value Type Description String | Improve this Doc View Source ColumnDescription Gets or sets the column description Declaration public virtual string ColumnDescription { get; set; } Property Value Type Description String | Improve this Doc View Source CustomType Gets or sets a database specific custom column type Declaration public virtual string CustomType { get; set; } Property Value Type Description String | Improve this Doc View Source DefaultValue Gets or sets the columns default value Declaration public virtual object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source ForeignKey Gets or sets the foreign key definition Declaration public virtual ForeignKeyDefinition ForeignKey { get; set; } Property Value Type Description ForeignKeyDefinition Remarks A column might be marked as IsForeignKey , but ForeignKey might still be null . This happens when ForeignKey() without arguments gets called on a column. | Improve this Doc View Source IsForeignKey Gets or sets a value indicating whether this column is a foreign key Declaration public virtual bool IsForeignKey { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsIdentity Gets or sets a value indicating whether this column gets its value using an identity definition Declaration public virtual bool IsIdentity { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsIndexed Gets or sets a value indicating that this column is indexed Declaration public virtual bool IsIndexed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsNullable Gets or sets a value indicating whether this column is nullable Declaration public virtual bool? IsNullable { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source IsPrimaryKey Gets or sets a value indicating whether this column is a primary key Declaration public virtual bool IsPrimaryKey { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsUnique Gets or sets a value indicating whether this column must be unique Declaration public virtual bool IsUnique { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ModificationType Gets or sets if the column definition results in a CREATE or an ALTER SQL statement Declaration public virtual ColumnModificationType ModificationType { get; set; } Property Value Type Description ColumnModificationType | Improve this Doc View Source Name Gets or sets the column definition name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ColumnNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Precision Gets or sets the column type precision (read: scale) Declaration public virtual int? Precision { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source PrimaryKeyName Gets or sets the primary key constraint name Declaration public virtual string PrimaryKeyName { get; set; } Property Value Type Description String | Improve this Doc View Source Size Gets or sets the column type size (read: precision or length) Declaration public virtual int? Size { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source TableName Gets or sets the columns table name Declaration public virtual string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source Type Gets or sets the column type Declaration public virtual DbType? Type { get; set; } Property Value Type Description Nullable < DbType > Methods | Improve this Doc View Source Clone() Declaration public virtual object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Expressions.UpdateDataExpression.html": {
    "href": "api/FluentMigrator.Expressions.UpdateDataExpression.html",
    "title": "Class UpdateDataExpression | FluentMigrator documentation",
    "keywords": "Class UpdateDataExpression Expression to update data Inheritance Object MigrationExpressionBase UpdateDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class UpdateDataExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IValidatableObject Properties | Improve this Doc View Source IsAllRows Gets or sets a value indicating whether all rows should be updated Declaration public bool IsAllRows { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source Set Gets or sets the values to be set Declaration public List<KeyValuePair<string, object>> Set { get; set; } Property Value Type Description List < System.Collections.Generic.KeyValuePair < String , Object >> | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source Where Gets or sets the condition column/value pairs Declaration public List<KeyValuePair<string, object>> Where { get; set; } Property Value Type Description List < System.Collections.Generic.KeyValuePair < String , Object >> Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements IMigrationExpression ICanBeValidated ISchemaExpression System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.InsertDataExpression.html": {
    "href": "api/FluentMigrator.Expressions.InsertDataExpression.html",
    "title": "Class InsertDataExpression | FluentMigrator documentation",
    "keywords": "Class InsertDataExpression Expression to insert data Inheritance Object InsertDataExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class InsertDataExpression : IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, ISchemaExpression Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Rows Gets the rows to be inserted Declaration public List<InsertionDataDefinition> Rows { get; } Property Value Type Description List < InsertionDataDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required] public string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Expressions.IAutoNameExpression.html": {
    "href": "api/FluentMigrator.Expressions.IAutoNameExpression.html",
    "title": "Interface IAutoNameExpression | FluentMigrator documentation",
    "keywords": "Interface IAutoNameExpression The expression requires an automatically generated name Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IAutoNameExpression Properties | Improve this Doc View Source AutoNameContext Gets or sets the context in which the automatically generated name gets used Declaration AutoNameContext AutoNameContext { get; } Property Value Type Description AutoNameContext | Improve this Doc View Source AutoNames Gets or sets the automatically generated names Declaration IList<string> AutoNames { get; set; } Property Value Type Description IList < String > | Improve this Doc View Source DatabaseNames Gets the database names Declaration IList<string> DatabaseNames { get; } Property Value Type Description IList < String > | Improve this Doc View Source Direction Gets the direction of the migration Declaration MigrationDirection Direction { get; } Property Value Type Description MigrationDirection | Improve this Doc View Source MigrationType Gets the type of the migration object Declaration Type MigrationType { get; } Property Value Type Description Type"
  },
  "api/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html": {
    "href": "api/FluentMigrator.Expressions.ExecuteSqlStatementExpression.html",
    "title": "Class ExecuteSqlStatementExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteSqlStatementExpression Expression to execute an SQL statement Inheritance Object MigrationExpressionBase ExecuteSqlStatementExpression Implements IMigrationExpression ICanBeValidated Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class ExecuteSqlStatementExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated Properties | Improve this Doc View Source SqlStatement Gets or sets the SQL statement to be executed Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SqlStatementCannotBeNullOrEmpty\")] public virtual string SqlStatement { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.CreateSequenceExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateSequenceExpression.html",
    "title": "Class CreateSequenceExpression | FluentMigrator documentation",
    "keywords": "Class CreateSequenceExpression Expression to crate a sequence Inheritance Object MigrationExpressionBase CreateSequenceExpression Implements IMigrationExpression ICanBeValidated ISequenceExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSequenceExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISequenceExpression, IValidationChildren Properties | Improve this Doc View Source Children Gets the child objects Declaration public IEnumerable<object> Children { get; } Property Value Type Description IEnumerable < Object > | Improve this Doc View Source Sequence Gets the sequence definition Declaration public virtual SequenceDefinition Sequence { get; set; } Property Value Type Description SequenceDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISequenceExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.CreateSchemaExpression.html": {
    "href": "api/FluentMigrator.Expressions.CreateSchemaExpression.html",
    "title": "Class CreateSchemaExpression | FluentMigrator documentation",
    "keywords": "Class CreateSchemaExpression Expression to create a schema Inheritance Object MigrationExpressionBase CreateSchemaExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class CreateSchemaExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SchemaNameCannotBeNullOrEmpty\")] public virtual string SchemaName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public override IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Overrides MigrationExpressionBase.Reverse() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016Processor.html": {
    "href": "api/FluentMigrator.Runner.Processors.SqlServer.SqlServer2016Processor.html",
    "title": "Class SqlServer2016Processor | FluentMigrator documentation",
    "keywords": "Class SqlServer2016Processor Inheritance Object ProcessorBase GenericProcessorBase SqlServerProcessor SqlServer2016Processor Implements IMigrationProcessor IQuerySchema IDisposable Inherited Members SqlServerProcessor.DatabaseType SqlServerProcessor.DatabaseTypeAliases SqlServerProcessor.Quoter SqlServerProcessor.BeginTransaction() SqlServerProcessor.CommitTransaction() SqlServerProcessor.RollbackTransaction() SqlServerProcessor.SchemaExists(String) SqlServerProcessor.TableExists(String, String) SqlServerProcessor.ColumnExists(String, String, String) SqlServerProcessor.ConstraintExists(String, String, String) SqlServerProcessor.IndexExists(String, String, String) SqlServerProcessor.SequenceExists(String, String) SqlServerProcessor.DefaultValueExists(String, String, String, Object) SqlServerProcessor.Execute(String, Object[]) SqlServerProcessor.Exists(String, Object[]) SqlServerProcessor.ReadTableData(String, String) SqlServerProcessor.Read(String, Object[]) SqlServerProcessor.Process(String) SqlServerProcessor.Process(PerformDBOperationExpression) GenericProcessorBase.ConnectionString GenericProcessorBase.Connection GenericProcessorBase.Factory GenericProcessorBase.Transaction GenericProcessorBase.DbProviderFactory GenericProcessorBase.EnsureConnectionIsOpen() GenericProcessorBase.EnsureConnectionIsClosed() GenericProcessorBase.Dispose(Boolean) GenericProcessorBase.CreateCommand(String) GenericProcessorBase.CreateCommand(String, IDbConnection, IDbTransaction) ProcessorBase.Generator ProcessorBase.Announcer ProcessorBase.IMigrationProcessor.Options ProcessorBase.WasCommitted ProcessorBase.Logger ProcessorBase.Options ProcessorBase.Process(CreateSchemaExpression) ProcessorBase.Process(DeleteSchemaExpression) ProcessorBase.Process(CreateTableExpression) ProcessorBase.Process(AlterTableExpression) ProcessorBase.Process(AlterColumnExpression) ProcessorBase.Process(CreateColumnExpression) ProcessorBase.Process(DeleteTableExpression) ProcessorBase.Process(DeleteColumnExpression) ProcessorBase.Process(CreateForeignKeyExpression) ProcessorBase.Process(DeleteForeignKeyExpression) ProcessorBase.Process(CreateIndexExpression) ProcessorBase.Process(DeleteIndexExpression) ProcessorBase.Process(RenameTableExpression) ProcessorBase.Process(RenameColumnExpression) ProcessorBase.Process(InsertDataExpression) ProcessorBase.Process(DeleteDataExpression) ProcessorBase.Process(AlterDefaultConstraintExpression) ProcessorBase.Process(UpdateDataExpression) ProcessorBase.Process(AlterSchemaExpression) ProcessorBase.Process(CreateSequenceExpression) ProcessorBase.Process(DeleteSequenceExpression) ProcessorBase.Process(CreateConstraintExpression) ProcessorBase.Process(DeleteConstraintExpression) ProcessorBase.Process(DeleteDefaultConstraintExpression) ProcessorBase.Execute(String) ProcessorBase.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Processors.SqlServer Assembly : FluentMigrator.Runner.SqlServer.dll Syntax public class SqlServer2016Processor : SqlServerProcessor, IMigrationProcessor, IQuerySchema, IDisposable Constructors | Improve this Doc View Source SqlServer2016Processor(ILogger<SqlServer2016Processor>, SqlServer2008Quoter, SqlServer2016Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration public SqlServer2016Processor([NotNull] ILogger<SqlServer2016Processor> logger, [NotNull] SqlServer2008Quoter quoter, [NotNull] SqlServer2016Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description ILogger < SqlServer2016Processor > logger SqlServer2008Quoter quoter SqlServer2016Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider | Improve this Doc View Source SqlServer2016Processor(DbProviderFactory, ILogger, SqlServer2008Quoter, SqlServer2016Generator, IOptions<ProcessorOptions>, IConnectionStringAccessor, IServiceProvider) Declaration protected SqlServer2016Processor([NotNull] DbProviderFactory factory, [NotNull] ILogger logger, [NotNull] SqlServer2008Quoter quoter, [NotNull] SqlServer2016Generator generator, [NotNull] IOptions<ProcessorOptions> options, [NotNull] IConnectionStringAccessor connectionStringAccessor, [NotNull] IServiceProvider serviceProvider) Parameters Type Name Description DbProviderFactory factory ILogger logger SqlServer2008Quoter quoter SqlServer2016Generator generator IOptions < ProcessorOptions > options IConnectionStringAccessor connectionStringAccessor IServiceProvider serviceProvider Implements IMigrationProcessor IQuerySchema System.IDisposable"
  },
  "api/FluentMigrator.Runner.Generators.Firebird.html": {
    "href": "api/FluentMigrator.Runner.Generators.Firebird.html",
    "title": "Namespace FluentMigrator.Runner.Generators.Firebird | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.Firebird Classes FirebirdGenerator FirebirdQuoter FirebirdTruncator"
  },
  "api/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.Firebird.FirebirdGenerator.html",
    "title": "Class FirebirdGenerator | FluentMigrator documentation",
    "keywords": "Class FirebirdGenerator Inheritance Object GeneratorBase GenericGenerator FirebirdGenerator Implements IMigrationGenerator Inherited Members GenericGenerator.compatabilityMode GenericGenerator.CompatibilityMode GenericGenerator.CreateTable GenericGenerator.DropTable GenericGenerator.AlterColumn GenericGenerator.RenameTable GenericGenerator.CreateSchema GenericGenerator.AlterSchema GenericGenerator.DropSchema GenericGenerator.CreateIndex GenericGenerator.DropIndex GenericGenerator.InsertData GenericGenerator.UpdateData GenericGenerator.DeleteData GenericGenerator.CreateConstraint GenericGenerator.DeleteConstraint GenericGenerator.CreateForeignKeyConstraint GenericGenerator.GetUniqueString(CreateIndexExpression) GenericGenerator.GetClusterTypeString(CreateIndexExpression) GenericGenerator.AppendSqlStatementEndToken(StringBuilder) GenericGenerator.GenerateColumnNamesAndValues(InsertDataExpression) GenericGenerator.ValidateAdditionalFeatureCompatibility(IEnumerable<KeyValuePair<String, Object>>) GenericGenerator.Generate(CreateSchemaExpression) GenericGenerator.Generate(DeleteSchemaExpression) GenericGenerator.Generate(AlterSchemaExpression) GeneratorBase.IsAdditionalFeatureSupported(String) GeneratorBase.Generate(AlterTableExpression) GeneratorBase.Column GeneratorBase.Quoter GeneratorBase.DescriptionGenerator Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators.Firebird Assembly : FluentMigrator.Runner.Firebird.dll Syntax public class FirebirdGenerator : GenericGenerator, IMigrationGenerator Constructors | Improve this Doc View Source FirebirdGenerator(FirebirdQuoter, FirebirdOptions, IOptions<GeneratorOptions>) Declaration public FirebirdGenerator([NotNull] FirebirdQuoter quoter, [NotNull] FirebirdOptions fbOptions, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description FirebirdQuoter quoter FirebirdOptions fbOptions IOptions < GeneratorOptions > generatorOptions | Improve this Doc View Source FirebirdGenerator(FirebirdOptions) Declaration public FirebirdGenerator([NotNull] FirebirdOptions fbOptions) Parameters Type Name Description FirebirdOptions fbOptions | Improve this Doc View Source FirebirdGenerator(FirebirdOptions, IOptions<GeneratorOptions>) Declaration public FirebirdGenerator([NotNull] FirebirdOptions fbOptions, [NotNull] IOptions<GeneratorOptions> generatorOptions) Parameters Type Name Description FirebirdOptions fbOptions IOptions < GeneratorOptions > generatorOptions Fields | Improve this Doc View Source truncator Declaration [Obsolete(\"Use the Truncator property\")] protected readonly FirebirdTruncator truncator Field Value Type Description FirebirdTruncator Properties | Improve this Doc View Source AddColumn Declaration public override string AddColumn { get; } Property Value Type Description String Overrides GenericGenerator.AddColumn | Improve this Doc View Source AlterColumnSetNullable3 ALTER TABLE table_name ALTER column_name { DROP | SET } [NOT] NULL Declaration public string AlterColumnSetNullable3 { get; } Property Value Type Description String | Improve this Doc View Source AlterColumnSetNullablePre3 Declaration public string AlterColumnSetNullablePre3 { get; } Property Value Type Description String | Improve this Doc View Source AlterColumnSetType Declaration public string AlterColumnSetType { get; } Property Value Type Description String | Improve this Doc View Source DropColumn Declaration public override string DropColumn { get; } Property Value Type Description String Overrides GenericGenerator.DropColumn | Improve this Doc View Source FBOptions Declaration protected FirebirdOptions FBOptions { get; } Property Value Type Description FirebirdOptions | Improve this Doc View Source RenameColumn Declaration public override string RenameColumn { get; } Property Value Type Description String Overrides GenericGenerator.RenameColumn | Improve this Doc View Source Truncator Declaration public FirebirdTruncator Truncator { get; } Property Value Type Description FirebirdTruncator Methods | Improve this Doc View Source ColumnTypesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool ColumnTypesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean | Improve this Doc View Source DefaultValuesMatch(ColumnDefinition, ColumnDefinition) Declaration public static bool DefaultValuesMatch(ColumnDefinition col1, ColumnDefinition col2) Parameters Type Name Description ColumnDefinition col1 ColumnDefinition col2 Returns Type Description Boolean | Improve this Doc View Source Generate(AlterColumnExpression) Declaration public override string Generate(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(AlterColumnExpression) | Improve this Doc View Source Generate(AlterDefaultConstraintExpression) Declaration public override string Generate(AlterDefaultConstraintExpression expression) Parameters Type Name Description AlterDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(AlterDefaultConstraintExpression) | Improve this Doc View Source Generate(CreateColumnExpression) Declaration public override string Generate(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateColumnExpression) | Improve this Doc View Source Generate(CreateConstraintExpression) Declaration public override string Generate(CreateConstraintExpression expression) Parameters Type Name Description CreateConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateConstraintExpression) | Improve this Doc View Source Generate(CreateForeignKeyExpression) Declaration public override string Generate(CreateForeignKeyExpression expression) Parameters Type Name Description CreateForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateForeignKeyExpression) | Improve this Doc View Source Generate(CreateIndexExpression) Declaration public override string Generate(CreateIndexExpression expression) Parameters Type Name Description CreateIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateIndexExpression) | Improve this Doc View Source Generate(CreateSequenceExpression) Declaration public override string Generate(CreateSequenceExpression expression) Parameters Type Name Description CreateSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateSequenceExpression) | Improve this Doc View Source Generate(CreateTableExpression) Declaration public override string Generate(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(CreateTableExpression) | Improve this Doc View Source Generate(DeleteColumnExpression) Declaration public override string Generate(DeleteColumnExpression expression) Parameters Type Name Description DeleteColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteColumnExpression) | Improve this Doc View Source Generate(DeleteConstraintExpression) Declaration public override string Generate(DeleteConstraintExpression expression) Parameters Type Name Description DeleteConstraintExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteConstraintExpression) | Improve this Doc View Source Generate(DeleteDataExpression) Declaration public override string Generate(DeleteDataExpression expression) Parameters Type Name Description DeleteDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteDataExpression) | Improve this Doc View Source Generate(DeleteDefaultConstraintExpression) Declaration public override string Generate(DeleteDefaultConstraintExpression expression) Parameters Type Name Description DeleteDefaultConstraintExpression expression Returns Type Description String Overrides GeneratorBase.Generate(DeleteDefaultConstraintExpression) | Improve this Doc View Source Generate(DeleteForeignKeyExpression) Declaration public override string Generate(DeleteForeignKeyExpression expression) Parameters Type Name Description DeleteForeignKeyExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteForeignKeyExpression) | Improve this Doc View Source Generate(DeleteIndexExpression) Declaration public override string Generate(DeleteIndexExpression expression) Parameters Type Name Description DeleteIndexExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteIndexExpression) | Improve this Doc View Source Generate(DeleteSequenceExpression) Declaration public override string Generate(DeleteSequenceExpression expression) Parameters Type Name Description DeleteSequenceExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteSequenceExpression) | Improve this Doc View Source Generate(DeleteTableExpression) Declaration public override string Generate(DeleteTableExpression expression) Parameters Type Name Description DeleteTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(DeleteTableExpression) | Improve this Doc View Source Generate(InsertDataExpression) Declaration public override string Generate(InsertDataExpression expression) Parameters Type Name Description InsertDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(InsertDataExpression) | Improve this Doc View Source Generate(RenameColumnExpression) Declaration public override string Generate(RenameColumnExpression expression) Parameters Type Name Description RenameColumnExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameColumnExpression) | Improve this Doc View Source Generate(RenameTableExpression) Declaration public override string Generate(RenameTableExpression expression) Parameters Type Name Description RenameTableExpression expression Returns Type Description String Overrides GenericGenerator.Generate(RenameTableExpression) | Improve this Doc View Source Generate(UpdateDataExpression) Declaration public override string Generate(UpdateDataExpression expression) Parameters Type Name Description UpdateDataExpression expression Returns Type Description String Overrides GenericGenerator.Generate(UpdateDataExpression) | Improve this Doc View Source GenerateAlterSequence(SequenceDefinition) Declaration public string GenerateAlterSequence(SequenceDefinition sequence) Parameters Type Name Description SequenceDefinition sequence Returns Type Description String | Improve this Doc View Source GenerateForeignKeyName(ForeignKeyDefinition) Declaration public override string GenerateForeignKeyName(ForeignKeyDefinition foreignKey) Parameters Type Name Description ForeignKeyDefinition foreignKey Returns Type Description String Overrides GenericGenerator.GenerateForeignKeyName(ForeignKeyDefinition) | Improve this Doc View Source GenerateSetNull3(String, ColumnDefinition) Declaration public virtual string GenerateSetNull3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String | Improve this Doc View Source GenerateSetNullPre3(String, ColumnDefinition) Declaration public virtual string GenerateSetNullPre3(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String | Improve this Doc View Source GenerateSetType(String, ColumnDefinition) Declaration public virtual string GenerateSetType(string tableName, ColumnDefinition column) Parameters Type Name Description String tableName ColumnDefinition column Returns Type Description String Implements IMigrationGenerator"
  },
  "api/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html": {
    "href": "api/FluentMigrator.Runner.Generators.EmptyDescriptionGenerator.html",
    "title": "Class EmptyDescriptionGenerator | FluentMigrator documentation",
    "keywords": "Class EmptyDescriptionGenerator Inheritance Object EmptyDescriptionGenerator Implements IDescriptionGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.Generators Assembly : FluentMigrator.Runner.Core.dll Syntax public class EmptyDescriptionGenerator : IDescriptionGenerator Methods | Improve this Doc View Source GenerateDescriptionStatement(AlterColumnExpression) Declaration public string GenerateDescriptionStatement(AlterColumnExpression expression) Parameters Type Name Description AlterColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(AlterTableExpression) Declaration public string GenerateDescriptionStatement(AlterTableExpression expression) Parameters Type Name Description AlterTableExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatement(CreateColumnExpression) Declaration public string GenerateDescriptionStatement(CreateColumnExpression expression) Parameters Type Name Description CreateColumnExpression expression Returns Type Description String | Improve this Doc View Source GenerateDescriptionStatements(CreateTableExpression) Declaration public IEnumerable<string> GenerateDescriptionStatements(CreateTableExpression expression) Parameters Type Name Description CreateTableExpression expression Returns Type Description IEnumerable < String > Implements IDescriptionGenerator"
  },
  "api/FluentMigrator.Runner.Generators.DB2.html": {
    "href": "api/FluentMigrator.Runner.Generators.DB2.html",
    "title": "Namespace FluentMigrator.Runner.Generators.DB2 | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.Generators.DB2 Classes Db2Generator Db2Quoter"
  },
  "api/FluentMigrator.Runner.Conventions.IConstraintConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IConstraintConvention.html",
    "title": "Interface IConstraintConvention | FluentMigrator documentation",
    "keywords": "Interface IConstraintConvention A convention working on IConstraintExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IConstraintConvention Methods | Improve this Doc View Source Apply(IConstraintExpression) Applies a convention to a IConstraintExpression Declaration IConstraintExpression Apply(IConstraintExpression expression) Parameters Type Name Description IConstraintExpression expression The expression this convention should be applied to Returns Type Description IConstraintExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.Conventions.IColumnsConvention.html": {
    "href": "api/FluentMigrator.Runner.Conventions.IColumnsConvention.html",
    "title": "Interface IColumnsConvention | FluentMigrator documentation",
    "keywords": "Interface IColumnsConvention A convention working on IColumnsExpression implementations Namespace : FluentMigrator.Runner.Conventions Assembly : FluentMigrator.Runner.Core.dll Syntax public interface IColumnsConvention Methods | Improve this Doc View Source Apply(IColumnsExpression) Applies a convention to a IColumnsExpression Declaration IColumnsExpression Apply(IColumnsExpression expression) Parameters Type Name Description IColumnsExpression expression The expression this convention should be applied to Returns Type Description IColumnsExpression The same or a new expression. The underlying type must stay the same."
  },
  "api/FluentMigrator.Runner.ConnectionlessVersionLoader.html": {
    "href": "api/FluentMigrator.Runner.ConnectionlessVersionLoader.html",
    "title": "Class ConnectionlessVersionLoader | FluentMigrator documentation",
    "keywords": "Class ConnectionlessVersionLoader Inheritance Object ConnectionlessVersionLoader Implements IVersionLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.dll Syntax public class ConnectionlessVersionLoader : IVersionLoader Constructors | Improve this Doc View Source ConnectionlessVersionLoader(IProcessorAccessor, IMigrationRunnerConventions, IOptions<RunnerOptions>, IMigrationInformationLoader, IVersionTableMetaData) Declaration public ConnectionlessVersionLoader([NotNull] IProcessorAccessor processorAccessor, [NotNull] IMigrationRunnerConventions conventions, [NotNull] IOptions<RunnerOptions> runnerOptions, [NotNull] IMigrationInformationLoader migrationInformationLoader, [NotNull] IVersionTableMetaData versionTableMetaData) Parameters Type Name Description IProcessorAccessor processorAccessor IMigrationRunnerConventions conventions IOptions < RunnerOptions > runnerOptions IMigrationInformationLoader migrationInformationLoader IVersionTableMetaData versionTableMetaData Properties | Improve this Doc View Source AlreadyCreatedVersionSchema Declaration public bool AlreadyCreatedVersionSchema { get; } Property Value Type Description Boolean | Improve this Doc View Source AlreadyCreatedVersionTable Declaration public bool AlreadyCreatedVersionTable { get; } Property Value Type Description Boolean | Improve this Doc View Source Assemblies Declaration [Obsolete] [CanBeNull] protected IAssemblyCollection Assemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source Conventions Declaration public IMigrationRunnerConventions Conventions { get; set; } Property Value Type Description IMigrationRunnerConventions | Improve this Doc View Source Runner Declaration [Obsolete] [CanBeNull] public IMigrationRunner Runner { get; set; } Property Value Type Description IMigrationRunner | Improve this Doc View Source StartVersion Declaration public long StartVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source TargetVersion Declaration public long TargetVersion { get; set; } Property Value Type Description Int64 | Improve this Doc View Source VersionDescriptionMigration Declaration public IMigration VersionDescriptionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionInfo Declaration public IVersionInfo VersionInfo { get; set; } Property Value Type Description IVersionInfo | Improve this Doc View Source VersionMigration Declaration public IMigration VersionMigration { get; } Property Value Type Description IMigration | Improve this Doc View Source VersionSchemaMigration Declaration public VersionSchemaMigration VersionSchemaMigration { get; } Property Value Type Description VersionSchemaMigration | Improve this Doc View Source VersionTableMetaData Declaration public IVersionTableMetaData VersionTableMetaData { get; set; } Property Value Type Description IVersionTableMetaData | Improve this Doc View Source VersionUniqueMigration Declaration public IMigration VersionUniqueMigration { get; } Property Value Type Description IMigration Methods | Improve this Doc View Source CreateVersionInfoInsertionData(Int64, String) Declaration protected virtual InsertionDataDefinition CreateVersionInfoInsertionData(long version, string description) Parameters Type Name Description Int64 version String description Returns Type Description InsertionDataDefinition | Improve this Doc View Source DeleteVersion(Int64) Declaration public void DeleteVersion(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source GetVersionTableMetaData() Declaration public IVersionTableMetaData GetVersionTableMetaData() Returns Type Description IVersionTableMetaData | Improve this Doc View Source LoadVersionInfo() Declaration public void LoadVersionInfo() | Improve this Doc View Source RemoveVersionTable() Declaration public void RemoveVersionTable() | Improve this Doc View Source UpdateVersionInfo(Int64) Declaration public void UpdateVersionInfo(long version) Parameters Type Name Description Int64 version | Improve this Doc View Source UpdateVersionInfo(Int64, String) Declaration public void UpdateVersionInfo(long version, string description) Parameters Type Name Description Int64 version String description Implements IVersionLoader"
  },
  "api/FluentMigrator.Runner.CompatibilityMode.html": {
    "href": "api/FluentMigrator.Runner.CompatibilityMode.html",
    "title": "Enum CompatibilityMode | FluentMigrator documentation",
    "keywords": "Enum CompatibilityMode Sets the compatibility mode Namespace : FluentMigrator.Runner Assembly : FluentMigrator.Runner.Core.dll Syntax public enum CompatibilityMode Fields Name Description LOOSE Unsupported processor features are ignored STRICT Ensuare that an exception gets thrown when a processor doesn't support a specific feature Extension Methods CompatibilityModeExtension.HandleCompatibilty(String)"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.html",
    "title": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Runner.BatchParser.RangeSearchers Classes AnsiSqlIdentifier A range searcher for ANSI-style SQL identifiers CharWithEscapeByDuplication Utility class that handles single-character ranges (e.g. 'text' ) where the end characters might be duplicated to escape it. DoubleDashSingleLineComment A single line comment starting with two dashes ( -- comment ) MultiLineComment The default multi-line comment ( /* comment */ ) MySqlIdentifier The MySQL identifier quotes using backticks NestingMultiLineComment An example implementation of a nested multi-line comment (e.g. /* comment /* nested */ */ ) PoundSignSingleLineComment A single line comment starting with a pound sign ( # comment ) SingleLineComment A single line comment starting with the specified start code SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) SqlString A ANSI SQL string ( 'string' ) StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ )"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.StringWithNoEscape.html",
    "title": "Class StringWithNoEscape | FluentMigrator documentation",
    "keywords": "Class StringWithNoEscape Ranges with multi-character start and end tokens (e.g. /* */ ) Inheritance Object StringWithNoEscape AnsiSqlIdentifier MultiLineComment Implements IRangeSearcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public class StringWithNoEscape : IRangeSearcher Remarks Escaping is not supported. Constructors | Improve this Doc View Source StringWithNoEscape(String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startAndEndCode, bool isComment = false) Parameters Type Name Description String startAndEndCode The start- and end code string Boolean isComment Is this range a comment? | Improve this Doc View Source StringWithNoEscape(String, String, Boolean) Initializes a new instance of the StringWithNoEscape class. Declaration public StringWithNoEscape(string startCode, string endCode, bool isComment = false) Parameters Type Name Description String startCode The start code String endCode The end code Boolean isComment Is this range a comment? Properties | Improve this Doc View Source EndCodeLength Gets the length of the end code Declaration public int EndCodeLength { get; } Property Value Type Description Int32 | Improve this Doc View Source IsComment Is this range a comment? Declaration public bool IsComment { get; } Property Value Type Description Boolean | Improve this Doc View Source StartCodeLength Gets the length of the start code Declaration public int StartCodeLength { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindEndCode(ILineReader) Search for an end code Declaration public EndCodeSearchResult FindEndCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the end code is searched Returns Type Description EndCodeSearchResult null when the end code couldn't be found (or a nested start code) | Improve this Doc View Source FindStartCode(ILineReader) Gets the index into the reader where the start code was found Declaration public int FindStartCode(ILineReader reader) Parameters Type Name Description ILineReader reader The reader where the start code is searched Returns Type Description Int32 -1 when the start code couldn't be found Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlString.html",
    "title": "Class SqlString | FluentMigrator documentation",
    "keywords": "Class SqlString A ANSI SQL string ( 'string' ) Inheritance Object CharWithEscapeByDuplication SqlString Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlString : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source SqlString() Initializes a new instance of the SqlString class. Declaration public SqlString() Implements IRangeSearcher"
  },
  "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html": {
    "href": "api/FluentMigrator.Runner.BatchParser.RangeSearchers.SqlServerIdentifier.html",
    "title": "Class SqlServerIdentifier | FluentMigrator documentation",
    "keywords": "Class SqlServerIdentifier An SQL server style quoted identifer ( [identifier] ) Inheritance Object CharWithEscapeByDuplication SqlServerIdentifier Implements IRangeSearcher Inherited Members CharWithEscapeByDuplication.StartCodeLength CharWithEscapeByDuplication.EndCodeLength CharWithEscapeByDuplication.IsComment CharWithEscapeByDuplication.FindStartCode(ILineReader) CharWithEscapeByDuplication.FindEndCode(ILineReader) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Runner.BatchParser.RangeSearchers Assembly : FluentMigrator.Runner.Core.dll Syntax public sealed class SqlServerIdentifier : CharWithEscapeByDuplication, IRangeSearcher Constructors | Improve this Doc View Source SqlServerIdentifier() Initializes a new instance of the SqlServerIdentifier class. Declaration public SqlServerIdentifier() Implements IRangeSearcher"
  },
  "api/FluentMigrator.ProfileAttribute.html": {
    "href": "api/FluentMigrator.ProfileAttribute.html",
    "title": "Class ProfileAttribute | FluentMigrator documentation",
    "keywords": "Class ProfileAttribute Defines a profile for a migration Inheritance Object Attribute ProfileAttribute Implements _Attribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class ProfileAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ProfileAttribute(String) Initializes a new instance of the ProfileAttribute class. Declaration public ProfileAttribute(string profileName) Parameters Type Name Description String profileName The profile name Properties | Improve this Doc View Source ProfileName Gets the profile name Declaration public string ProfileName { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/FluentMigrator.Model.IndexColumnDefinition.html": {
    "href": "api/FluentMigrator.Model.IndexColumnDefinition.html",
    "title": "Class IndexColumnDefinition | FluentMigrator documentation",
    "keywords": "Class IndexColumnDefinition Index column definition Inheritance Object IndexColumnDefinition Implements ICloneable ICanBeValidated ISupportAdditionalFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class IndexColumnDefinition : ICloneable, ICanBeValidated, ISupportAdditionalFeatures Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public virtual IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Direction Gets or sets the sort direction of the index column Declaration public virtual Direction Direction { get; set; } Property Value Type Description Direction | Improve this Doc View Source Name Gets or sets the column name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ColumnNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages Implements System.ICloneable ICanBeValidated ISupportAdditionalFeatures Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Model.ForeignKeyDefinition.html": {
    "href": "api/FluentMigrator.Model.ForeignKeyDefinition.html",
    "title": "Class ForeignKeyDefinition | FluentMigrator documentation",
    "keywords": "Class ForeignKeyDefinition The foreign key definition Inheritance Object ForeignKeyDefinition Implements ICloneable ICanBeValidated IValidatableObject Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public class ForeignKeyDefinition : ICloneable, ICanBeValidated, IValidatableObject Properties | Improve this Doc View Source ForeignColumns GEts or sets the foreign key column names Declaration public virtual ICollection<string> ForeignColumns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source ForeignTable Gets or sets the foreign key table Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ForeignTableNameCannotBeNullOrEmpty\")] public virtual string ForeignTable { get; set; } Property Value Type Description String | Improve this Doc View Source ForeignTableSchema Gets or sets the foreign keys table schema Declaration public virtual string ForeignTableSchema { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets a foreign key name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"ForeignKeyNameCannotBeNullOrEmpty\")] public virtual string Name { get; set; } Property Value Type Description String | Improve this Doc View Source OnDelete Gets or sets the rule for a cascading DELETE Declaration public virtual Rule OnDelete { get; set; } Property Value Type Description Rule | Improve this Doc View Source OnUpdate Gets or sets the rule for a cascading UPDATE Declaration public virtual Rule OnUpdate { get; set; } Property Value Type Description Rule | Improve this Doc View Source PrimaryColumns Gets or sets the primary key column names Declaration public virtual ICollection<string> PrimaryColumns { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source PrimaryTable Gets or sets the primary table Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"PrimaryTableNameCannotBeNullOrEmpty\")] public virtual string PrimaryTable { get; set; } Property Value Type Description String | Improve this Doc View Source PrimaryTableSchema Gets or sets the primary table schema Declaration public virtual string PrimaryTableSchema { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public virtual void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source HasForeignAndPrimaryColumnsDefined() Gets a value indicating whether primary and foreign key columns are defined Declaration public bool HasForeignAndPrimaryColumnsDefined() Returns Type Description Boolean | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements System.ICloneable ICanBeValidated System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Model.ColumnModificationType.html": {
    "href": "api/FluentMigrator.Model.ColumnModificationType.html",
    "title": "Enum ColumnModificationType | FluentMigrator documentation",
    "keywords": "Enum ColumnModificationType Indicates wheter a column should be created or altered Namespace : FluentMigrator.Model Assembly : FluentMigrator.Abstractions.dll Syntax public enum ColumnModificationType Fields Name Description Alter The column in question should be altered Create The column in question should be created"
  },
  "api/FluentMigrator.IQuerySchema.html": {
    "href": "api/FluentMigrator.IQuerySchema.html",
    "title": "Interface IQuerySchema | FluentMigrator documentation",
    "keywords": "Interface IQuerySchema Gets the interface to query a database Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public interface IQuerySchema Properties | Improve this Doc View Source DatabaseType Gets the database type Declaration [NotNull] string DatabaseType { get; } Property Value Type Description String | Improve this Doc View Source DatabaseTypeAliases Gets the database type aliases Declaration [NotNull] [ItemNotNull] IList<string> DatabaseTypeAliases { get; } Property Value Type Description IList < String > Methods | Improve this Doc View Source ColumnExists(String, String, String) Tests if a column exists Declaration bool ColumnExists([CanBeNull] string schemaName, [NotNull] string tableName, [NotNull] string columnName) Parameters Type Name Description String schemaName The schema name String tableName The table name String columnName The column name Returns Type Description Boolean true when it exists | Improve this Doc View Source ConstraintExists(String, String, String) Tests if a constraint exists Declaration bool ConstraintExists([CanBeNull] string schemaName, [NotNull] string tableName, [NotNull] string constraintName) Parameters Type Name Description String schemaName The schema name String tableName The table name String constraintName The constraint name Returns Type Description Boolean true when it exists | Improve this Doc View Source DefaultValueExists(String, String, String, Object) Tests if a default value for a column exists Declaration bool DefaultValueExists([CanBeNull] string schemaName, [NotNull] string tableName, [NotNull] string columnName, object defaultValue) Parameters Type Name Description String schemaName The schema name String tableName The table name String columnName The column name Object defaultValue The default value Returns Type Description Boolean true when it exists | Improve this Doc View Source IndexExists(String, String, String) Tests if an index exists Declaration bool IndexExists([CanBeNull] string schemaName, [NotNull] string tableName, [NotNull] string indexName) Parameters Type Name Description String schemaName The schema name String tableName The table name String indexName The index name Returns Type Description Boolean true when it exists | Improve this Doc View Source SchemaExists(String) Tests if the schema exists Declaration bool SchemaExists([NotNull] string schemaName) Parameters Type Name Description String schemaName The schema name Returns Type Description Boolean true when it exists | Improve this Doc View Source SequenceExists(String, String) Tests if a sequence exists Declaration bool SequenceExists([CanBeNull] string schemaName, [NotNull] string sequenceName) Parameters Type Name Description String schemaName The schema name String sequenceName The sequence name Returns Type Description Boolean true when it exists | Improve this Doc View Source TableExists(String, String) Tests if the table exists Declaration bool TableExists([CanBeNull] string schemaName, [NotNull] string tableName) Parameters Type Name Description String schemaName The schema name String tableName The table name Returns Type Description Boolean true when it exists"
  },
  "api/FluentMigrator.ForwardOnlyMigration.html": {
    "href": "api/FluentMigrator.ForwardOnlyMigration.html",
    "title": "Class ForwardOnlyMigration | FluentMigrator documentation",
    "keywords": "Class ForwardOnlyMigration A forward-only migration Inheritance Object MigrationBase Migration ForwardOnlyMigration VersionUniqueMigration Implements IMigration Inherited Members Migration.Delete Migration.Execute Migration.Update MigrationBase.ApplicationContext MigrationBase.ConnectionString MigrationBase.Up() MigrationBase.GetUpExpressions(IMigrationContext) MigrationBase.GetDownExpressions(IMigrationContext) MigrationBase.Alter MigrationBase.Create MigrationBase.Rename MigrationBase.Insert MigrationBase.Schema MigrationBase.IfDatabase(String[]) MigrationBase.IfDatabase(Predicate<String>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator Assembly : FluentMigrator.dll Syntax public abstract class ForwardOnlyMigration : Migration, IMigration Remarks A try to collect the Down expressions will result in an exception Methods | Improve this Doc View Source Down() Collects the DOWN migration expressions Declaration public override sealed void Down() Overrides MigrationBase.Down() Implements IMigration"
  },
  "api/FluentMigrator.Expressions.html": {
    "href": "api/FluentMigrator.Expressions.html",
    "title": "Namespace FluentMigrator.Expressions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Expressions Classes AlterColumnExpression The implementation of interfaces to alter a column AlterDefaultConstraintExpression Expression to alter default constraints AlterSchemaExpression Expression to move a table from one schema to another AlterTableExpression Expression to alter the table description CreateColumnExpression Expression to create a table CreateConstraintExpression The expression to create a constraint CreateForeignKeyExpression Expression to create a foreign key CreateIndexExpression Expression to create an index CreateSchemaExpression Expression to create a schema CreateSequenceExpression Expression to crate a sequence CreateTableExpression Expression to create a table DeleteColumnExpression Expression to delete a column DeleteConstraintExpression Expression to delete a constraint DeleteDataExpression Expression to delete the data DeleteDefaultConstraintExpression Expression to delete constraints DeleteForeignKeyExpression Expression to delete a foreign key DeleteIndexExpression Expression to delete an index DeleteSchemaExpression Expression to delete a schema DeleteSequenceExpression Expression to delete a sequence DeleteTableExpression Expression to delete a table ExecuteEmbeddedSqlScriptExpression Expression to execute an embedded SQL script ExecuteEmbeddedSqlScriptExpressionBase Base class that handles execution of scripts stored as embedded resource ExecuteSqlScriptExpression Expression to execute SQL scripts ExecuteSqlScriptExpressionBase The base class for SQL script execution ExecuteSqlStatementExpression Expression to execute an SQL statement InsertDataExpression Expression to insert data MigrationExpressionBase The base class for migration expressions PerformDBOperationExpression Expression that allows the execution of DB operations RenameColumnExpression Expression to rename a column RenameTableExpression Expression to rename a table UpdateDataExpression Expression to update data Interfaces IAutoNameExpression The expression requires an automatically generated name IColumnsExpression Opt-in into columns conventions IConstraintExpression Opt-in into constraint expression conventions IFileSystemExpression Opt-in into the file system convention IForeignKeyExpression Opt-in into the foreign key expressions conventions IIndexExpression Opt-in into the index expression conventions IMigrationExpression The interface for a migration expression ISchemaExpression Opt-in into the schema expression convention ISequenceExpression Opt-in into the sequence expression conventions"
  },
  "api/FluentMigrator.Expressions.IMigrationExpression.html": {
    "href": "api/FluentMigrator.Expressions.IMigrationExpression.html",
    "title": "Interface IMigrationExpression | FluentMigrator documentation",
    "keywords": "Interface IMigrationExpression The interface for a migration expression Inherited Members ICanBeValidated.CollectValidationErrors(ICollection<String>) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IMigrationExpression : ICanBeValidated Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.IIndexExpression.html": {
    "href": "api/FluentMigrator.Expressions.IIndexExpression.html",
    "title": "Interface IIndexExpression | FluentMigrator documentation",
    "keywords": "Interface IIndexExpression Opt-in into the index expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IIndexExpression Properties | Improve this Doc View Source Index Gets the index definition Declaration IndexDefinition Index { get; } Property Value Type Description IndexDefinition"
  },
  "api/FluentMigrator.Expressions.IConstraintExpression.html": {
    "href": "api/FluentMigrator.Expressions.IConstraintExpression.html",
    "title": "Interface IConstraintExpression | FluentMigrator documentation",
    "keywords": "Interface IConstraintExpression Opt-in into constraint expression conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IConstraintExpression Properties | Improve this Doc View Source Constraint Gets the constraint definition Declaration ConstraintDefinition Constraint { get; } Property Value Type Description ConstraintDefinition"
  },
  "api/FluentMigrator.Expressions.IColumnsExpression.html": {
    "href": "api/FluentMigrator.Expressions.IColumnsExpression.html",
    "title": "Interface IColumnsExpression | FluentMigrator documentation",
    "keywords": "Interface IColumnsExpression Opt-in into columns conventions Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public interface IColumnsExpression Properties | Improve this Doc View Source Columns Gets the list of columns Declaration IEnumerable<ColumnDefinition> Columns { get; } Property Value Type Description IEnumerable < ColumnDefinition > | Improve this Doc View Source TableName Gets the table name Declaration string TableName { get; } Property Value Type Description String"
  },
  "api/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.html": {
    "href": "api/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.html",
    "title": "Class ExecuteEmbeddedSqlScriptExpressionBase | FluentMigrator documentation",
    "keywords": "Class ExecuteEmbeddedSqlScriptExpressionBase Base class that handles execution of scripts stored as embedded resource Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.ExecuteWith(IMigrationProcessor) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() MigrationExpressionBase.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public abstract class ExecuteEmbeddedSqlScriptExpressionBase : ExecuteSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated Methods | Improve this Doc View Source GetQualifiedResourcePath(IReadOnlyCollection<>, String[]) Gets the fully qualified ressource name and assembly Declaration protected static GetQualifiedResourcePath([NotNull] IReadOnlyCollection<> resourceNames, [NotNull, ItemNotNull] params string[] sqlScriptNames) Parameters Type Name Description IReadOnlyCollection < System. > resourceNames The resource names where the sqlScriptNames should be found String [] sqlScriptNames The names of the SQL script ressources to be found Returns Type Description System. the fully qualified ressource name and assembly Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html": {
    "href": "api/FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.html",
    "title": "Class ExecuteEmbeddedSqlScriptExpression | FluentMigrator documentation",
    "keywords": "Class ExecuteEmbeddedSqlScriptExpression Expression to execute an embedded SQL script Inheritance Object MigrationExpressionBase ExecuteSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpressionBase ExecuteEmbeddedSqlScriptExpression Implements IMigrationExpression ICanBeValidated Inherited Members ExecuteEmbeddedSqlScriptExpressionBase.GetQualifiedResourcePath(IReadOnlyCollection<>, String[]) ExecuteSqlScriptExpressionBase.Parameters ExecuteSqlScriptExpressionBase.Execute(IMigrationProcessor, String) MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public sealed class ExecuteEmbeddedSqlScriptExpression : ExecuteEmbeddedSqlScriptExpressionBase, IMigrationExpression, ICanBeValidated Constructors | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression() Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration [Obsolete] public ExecuteEmbeddedSqlScriptExpression() | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression(IAssemblyCollection) Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration [Obsolete] public ExecuteEmbeddedSqlScriptExpression([NotNull] IAssemblyCollection assemblyCollection) Parameters Type Name Description IAssemblyCollection assemblyCollection The collection of assemblies to be searched for the resources | Improve this Doc View Source ExecuteEmbeddedSqlScriptExpression(IEmbeddedResourceProvider) Initializes a new instance of the ExecuteEmbeddedSqlScriptExpression class. Declaration public ExecuteEmbeddedSqlScriptExpression([NotNull] IEmbeddedResourceProvider embeddedResourceProvider) Parameters Type Name Description IEmbeddedResourceProvider embeddedResourceProvider The embedded resource provider Properties | Improve this Doc View Source MigrationAssemblies Gets or sets the migration assemblies Declaration [Obsolete] [CanBeNull] public IAssemblyCollection MigrationAssemblies { get; set; } Property Value Type Description IAssemblyCollection | Improve this Doc View Source SqlScript Gets or sets the SQL script name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"SqlScriptCannotBeNullOrEmpty\")] public string SqlScript { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteDataExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteDataExpression.html",
    "title": "Class DeleteDataExpression | FluentMigrator documentation",
    "keywords": "Class DeleteDataExpression Expression to delete the data Inheritance Object DeleteDataExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteDataExpression : IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source IsAllRows Gets or sets a value indicating whether all rows should be deleted Declaration public virtual bool IsAllRows { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rows Gets the list of row definitions Declaration public List<DeletionDataDefinition> Rows { get; } Property Value Type Description List < DeletionDataDefinition > | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required] public string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CollectValidationErrors(ICollection<String>) Collect validation errors Declaration [Obsolete(\"Use the System.ComponentModel.DataAnnotations.Validator instead\")] public void CollectValidationErrors(ICollection<string> errors) Parameters Type Name Description ICollection < String > errors The collection of error messages | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with | Improve this Doc View Source Reverse() Create a reversing migration expression Declaration public IMigrationExpression Reverse() Returns Type Description IMigrationExpression The reversing migration expression Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.DeleteConstraintExpression.html": {
    "href": "api/FluentMigrator.Expressions.DeleteConstraintExpression.html",
    "title": "Class DeleteConstraintExpression | FluentMigrator documentation",
    "keywords": "Class DeleteConstraintExpression Expression to delete a constraint Inheritance Object MigrationExpressionBase DeleteConstraintExpression Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression IValidatableObject Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class DeleteConstraintExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISupportAdditionalFeatures, IConstraintExpression, IValidatableObject Constructors | Improve this Doc View Source DeleteConstraintExpression(ConstraintType) Initializes a new instance of the DeleteConstraintExpression class. Declaration public DeleteConstraintExpression(ConstraintType type) Parameters Type Name Description ConstraintType type Properties | Improve this Doc View Source AdditionalFeatures Gets the dictionary to store the values for additional features Declaration public IDictionary<string, object> AdditionalFeatures { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Constraint Gets or sets the constraint definition Declaration public ConstraintDefinition Constraint { get; set; } Property Value Type Description ConstraintDefinition Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() | Improve this Doc View Source Validate(ValidationContext) Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Implements IMigrationExpression ICanBeValidated ISupportAdditionalFeatures IConstraintExpression System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T) AdditionalFeaturesExtensions.GetAdditionalFeature<T>(ISupportAdditionalFeatures, String, Func<T>) AdditionalFeaturesExtensions.SetAdditionalFeature<T>(ISupportAdditionalFeatures, String, T)"
  },
  "api/FluentMigrator.Expressions.AlterTableExpression.html": {
    "href": "api/FluentMigrator.Expressions.AlterTableExpression.html",
    "title": "Class AlterTableExpression | FluentMigrator documentation",
    "keywords": "Class AlterTableExpression Expression to alter the table description Inheritance Object MigrationExpressionBase AlterTableExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterTableExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression Properties | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableDescription Gets or sets the table description Declaration public virtual string TableDescription { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Implements IMigrationExpression ICanBeValidated ISchemaExpression Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Expressions.AlterColumnExpression.html": {
    "href": "api/FluentMigrator.Expressions.AlterColumnExpression.html",
    "title": "Class AlterColumnExpression | FluentMigrator documentation",
    "keywords": "Class AlterColumnExpression The implementation of interfaces to alter a column Inheritance Object MigrationExpressionBase AlterColumnExpression Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidationChildren Inherited Members MigrationExpressionBase.CollectValidationErrors(ICollection<String>) MigrationExpressionBase.Reverse() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Expressions Assembly : FluentMigrator.Abstractions.dll Syntax public class AlterColumnExpression : MigrationExpressionBase, IMigrationExpression, ICanBeValidated, ISchemaExpression, IValidationChildren Properties | Improve this Doc View Source Column Gets or sets the column definition Declaration public virtual ColumnDefinition Column { get; set; } Property Value Type Description ColumnDefinition | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public virtual string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Gets or sets the table name Declaration [Required(ErrorMessageResourceType = typeof(ErrorMessages), ErrorMessageResourceName = \"TableNameCannotBeNullOrEmpty\")] public virtual string TableName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteWith(IMigrationProcessor) Execute the expression with the given processor Declaration public override void ExecuteWith(IMigrationProcessor processor) Parameters Type Name Description IMigrationProcessor processor The processor to execute the expression with Overrides MigrationExpressionBase.ExecuteWith(IMigrationProcessor) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides MigrationExpressionBase.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidationChildren.Children Gets the child objects Declaration IEnumerable<object> IValidationChildren.Children { get; } Returns Type Description IEnumerable < Object > Implements IMigrationExpression ICanBeValidated ISchemaExpression IValidationChildren Extension Methods ConventionSetExtensions.Apply<T>(T, IConventionSet) LegacyValidationExtensions.CollectErrors(ICanBeValidated, ICollection<String>, IServiceProvider) LegacyValidationExtensions.TryCollectResults(ICanBeValidated, ICollection<ValidationResult>, IServiceProvider, IDictionary<Object, Object>)"
  },
  "api/FluentMigrator.Exceptions.html": {
    "href": "api/FluentMigrator.Exceptions.html",
    "title": "Namespace FluentMigrator.Exceptions | FluentMigrator documentation",
    "keywords": "Namespace FluentMigrator.Exceptions Classes DatabaseOperationNotSupportedException Exception to be thrown when a database operation is not supported DuplicateMigrationException An exception that is thrown when more than one migration with the same version was found FluentMigratorException The base exception class for FluentMigrator exceptions ProcessorFactoryNotFoundException Exception that gets thrown when a processor factory couldn't be found UndeterminableConnectionException Exception that gets thrown when no connection string could be found"
  },
  "api/FluentMigrator.Exceptions.DuplicateMigrationException.html": {
    "href": "api/FluentMigrator.Exceptions.DuplicateMigrationException.html",
    "title": "Class DuplicateMigrationException | FluentMigrator documentation",
    "keywords": "Class DuplicateMigrationException An exception that is thrown when more than one migration with the same version was found Inheritance Object Exception FluentMigratorException DuplicateMigrationException Implements _Exception ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FluentMigrator.Exceptions Assembly : FluentMigrator.Abstractions.dll Syntax [Serializable] public class DuplicateMigrationException : FluentMigratorException, _Exception, ISerializable Constructors | Improve this Doc View Source DuplicateMigrationException() Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException() | Improve this Doc View Source DuplicateMigrationException(SerializationInfo, StreamingContext) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization information StreamingContext context The streaming context | Improve this Doc View Source DuplicateMigrationException(String) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(string message) Parameters Type Name Description String message The exception message | Improve this Doc View Source DuplicateMigrationException(String, Exception) Initializes a new instance of the DuplicateMigrationException class. Declaration public DuplicateMigrationException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable"
  },
  "api/FluentMigrator.AutoNameContext.html": {
    "href": "api/FluentMigrator.AutoNameContext.html",
    "title": "Enum AutoNameContext | FluentMigrator documentation",
    "keywords": "Enum AutoNameContext Sets the context for the automatic name generation Namespace : FluentMigrator Assembly : FluentMigrator.Abstractions.dll Syntax public enum AutoNameContext Fields Name Description EmbeddedResource The automatic name generation is for an embedded resource"
  }
}